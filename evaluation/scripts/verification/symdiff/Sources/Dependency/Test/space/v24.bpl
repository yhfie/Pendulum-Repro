type {:extern} name;

type {:extern} byte;

function {:extern} OneByteToInt(byte) : int;

function {:extern} TwoBytesToInt(byte, byte) : int;

function {:extern} FourBytesToInt(byte, byte, byte, byte) : int;

axiom (forall b0: byte, c0: byte :: { OneByteToInt(b0), OneByteToInt(c0) } OneByteToInt(b0) == OneByteToInt(c0) ==> b0 == c0);

axiom (forall b0: byte, b1: byte, c0: byte, c1: byte :: { TwoBytesToInt(b0, b1), TwoBytesToInt(c0, c1) } TwoBytesToInt(b0, b1) == TwoBytesToInt(c0, c1) ==> b0 == c0 && b1 == c1);

axiom (forall b0: byte, b1: byte, b2: byte, b3: byte, c0: byte, c1: byte, c2: byte, c3: byte :: { FourBytesToInt(b0, b1, b2, b3), FourBytesToInt(c0, c1, c2, c3) } FourBytesToInt(b0, b1, b2, b3) == FourBytesToInt(c0, c1, c2, c3) ==> b0 == c0 && b1 == c1 && b2 == c2 && b3 == c3);

var {:extern} Mem: [name][int]int;

var {:extern} alloc: int;

function {:extern} Field(int) : name;

function {:extern} Base(int) : int;

axiom (forall x: int :: { Base(x) } INT_LEQ(Base(x), x));

function {:extern} DT(int) : name;

var {:extern} Mem_T.A101A101CHAR: [int]int;

var {:extern} Mem_T.A101CHAR: [int]int;

var {:extern} Mem_T.A10CHAR: [int]int;

var {:extern} Mem_T.A11CHAR: [int]int;

var {:extern} Mem_T.A126A21CHAR: [int]int;

var {:extern} Mem_T.A12CHAR: [int]int;

var {:extern} Mem_T.A13CHAR: [int]int;

var {:extern} Mem_T.A14CHAR: [int]int;

var {:extern} Mem_T.A15CHAR: [int]int;

var {:extern} Mem_T.A16CHAR: [int]int;

var {:extern} Mem_T.A17CHAR: [int]int;

var {:extern} Mem_T.A1CHAR: [int]int;

var {:extern} Mem_T.A21A101CHAR: [int]int;

var {:extern} Mem_T.A21A31CHAR: [int]int;

var {:extern} Mem_T.A21CHAR: [int]int;

var {:extern} Mem_T.A22CHAR: [int]int;

var {:extern} Mem_T.A23CHAR: [int]int;

var {:extern} Mem_T.A24CHAR: [int]int;

var {:extern} Mem_T.A26CHAR: [int]int;

var {:extern} Mem_T.A27CHAR: [int]int;

var {:extern} Mem_T.A28CHAR: [int]int;

var {:extern} Mem_T.A29CHAR: [int]int;

var {:extern} Mem_T.A2CHAR: [int]int;

var {:extern} Mem_T.A31CHAR: [int]int;

var {:extern} Mem_T.A32CHAR: [int]int;

var {:extern} Mem_T.A33CHAR: [int]int;

var {:extern} Mem_T.A34CHAR: [int]int;

var {:extern} Mem_T.A35CHAR: [int]int;

var {:extern} Mem_T.A36CHAR: [int]int;

var {:extern} Mem_T.A37CHAR: [int]int;

var {:extern} Mem_T.A38CHAR: [int]int;

var {:extern} Mem_T.A39CHAR: [int]int;

var {:extern} Mem_T.A3CHAR: [int]int;

var {:extern} Mem_T.A40CHAR: [int]int;

var {:extern} Mem_T.A41CHAR: [int]int;

var {:extern} Mem_T.A42CHAR: [int]int;

var {:extern} Mem_T.A43CHAR: [int]int;

var {:extern} Mem_T.A44CHAR: [int]int;

var {:extern} Mem_T.A45CHAR: [int]int;

var {:extern} Mem_T.A46CHAR: [int]int;

var {:extern} Mem_T.A47CHAR: [int]int;

var {:extern} Mem_T.A48CHAR: [int]int;

var {:extern} Mem_T.A49CHAR: [int]int;

var {:extern} Mem_T.A4CHAR: [int]int;

var {:extern} Mem_T.A50CHAR: [int]int;

var {:extern} Mem_T.A51CHAR: [int]int;

var {:extern} Mem_T.A52CHAR: [int]int;

var {:extern} Mem_T.A53CHAR: [int]int;

var {:extern} Mem_T.A54CHAR: [int]int;

var {:extern} Mem_T.A55CHAR: [int]int;

var {:extern} Mem_T.A56CHAR: [int]int;

var {:extern} Mem_T.A57CHAR: [int]int;

var {:extern} Mem_T.A58CHAR: [int]int;

var {:extern} Mem_T.A59CHAR: [int]int;

var {:extern} Mem_T.A5CHAR: [int]int;

var {:extern} Mem_T.A60CHAR: [int]int;

var {:extern} Mem_T.A61CHAR: [int]int;

var {:extern} Mem_T.A62CHAR: [int]int;

var {:extern} Mem_T.A63CHAR: [int]int;

var {:extern} Mem_T.A64CHAR: [int]int;

var {:extern} Mem_T.A65CHAR: [int]int;

var {:extern} Mem_T.A69CHAR: [int]int;

var {:extern} Mem_T.A6CHAR: [int]int;

var {:extern} Mem_T.A71CHAR: [int]int;

var {:extern} Mem_T.A72CHAR: [int]int;

var {:extern} Mem_T.A74CHAR: [int]int;

var {:extern} Mem_T.A75CHAR: [int]int;

var {:extern} Mem_T.A7CHAR: [int]int;

var {:extern} Mem_T.A81CHAR: [int]int;

var {:extern} Mem_T.A8CHAR: [int]int;

var {:extern} Mem_T.A8FLOAT: [int]int;

var {:extern} Mem_T.A8INT4: [int]int;

var {:extern} Mem_T.A9CHAR: [int]int;

var {:extern} Mem_T.ADDREM_PTR_Group: [int]int;

var {:extern} Mem_T.ADDREM_TYPE_AddRem: [int]int;

var {:extern} Mem_T.AMP_Geomport: [int]int;

var {:extern} Mem_T.AMP_Port: [int]int;

var {:extern} Mem_T.AMP_UNIT_GrAmpExc: [int]int;

var {:extern} Mem_T.AMP_UNIT_Port: [int]int;

var {:extern} Mem_T.ANGLEE_Elem: [int]int;

var {:extern} Mem_T.ANGLEH_Elem: [int]int;

var {:extern} Mem_T.ANGLE_Grid: [int]int;

var {:extern} Mem_T.ANGLE_START_GrPhaExc: [int]int;

var {:extern} Mem_T.ANGLE_STEP_GrPhaExc: [int]int;

var {:extern} Mem_T.ANGLE_UNIT_Elem: [int]int;

var {:extern} Mem_T.ANGLE_UNIT_GrPhaExc: [int]int;

var {:extern} Mem_T.ANGLE_UNIT_Grid: [int]int;

var {:extern} Mem_T.ANGLE_UNIT_Node: [int]int;

var {:extern} Mem_T.BLOCK_TYPE_AddRem: [int]int;

var {:extern} Mem_T.BUILT_Group: [int]int;

var {:extern} Mem_T.CENTRE_GrAmpExc: [int]int;

var {:extern} Mem_T.CENTRE_GrPhaExc: [int]int;

var {:extern} Mem_T.CHAR: [int]int;

var {:extern} Mem_T.DIRECTION_Elem: [int]int;

var {:extern} Mem_T.DIRECTION_GrPhaExc: [int]int;

var {:extern} Mem_T.ELEM_PTR_Group: [int]int;

var {:extern} Mem_T.ERR_PTR_Group: [int]int;

var {:extern} Mem_T.EXP_Elem: [int]int;

var {:extern} Mem_T.FAIL_PTR_Group: [int]int;

var {:extern} Mem_T.FLOAT: [int]int;

var {:extern} Mem_T.GAIN_Elem: [int]int;

var {:extern} Mem_T.GAIN_UNIT_Elem: [int]int;

var {:extern} Mem_T.GEOMETRY_Elem: [int]int;

var {:extern} Mem_T.GEOMNODE_PTR_Group: [int]int;

var {:extern} Mem_T.GEOMPORT_PTR_Geomnode: [int]int;

var {:extern} Mem_T.GRAMPEXC_PTR_Group: [int]int;

var {:extern} Mem_T.GRID_PTR_Group: [int]int;

var {:extern} Mem_T.GRPHAEXC_PTR_Group: [int]int;

var {:extern} Mem_T.INT4: [int]int;

var {:extern} Mem_T.LEVEL_Elem: [int]int;

var {:extern} Mem_T.LEVEL_Grid: [int]int;

var {:extern} Mem_T.LINE_NUM_charac: [int]int;

var {:extern} Mem_T.LOC_P_Geomnode: [int]int;

var {:extern} Mem_T.LOC_Q_Geomnode: [int]int;

var {:extern} Mem_T.MODEL_Elem: [int]int;

var {:extern} Mem_T.NAME_Elem: [int]int;

var {:extern} Mem_T.NAME_Group: [int]int;

var {:extern} Mem_T.NEXT_AddRem: [int]int;

var {:extern} Mem_T.NEXT_Geomnode: [int]int;

var {:extern} Mem_T.NEXT_Geomport: [int]int;

var {:extern} Mem_T.NEXT_Node: [int]int;

var {:extern} Mem_T.NEXT_Port: [int]int;

var {:extern} Mem_T.NEXT_charac: [int]int;

var {:extern} Mem_T.NODE_PTR_AddRem: [int]int;

var {:extern} Mem_T.NPORTS_Elem: [int]int;

var {:extern} Mem_T.NUM_OF_NODES_Group: [int]int;

var {:extern} Mem_T.OMIT_ANGLE_GrPhaExc: [int]int;

var {:extern} Mem_T.OMIT_ORIENT_Node: [int]int;

var {:extern} Mem_T.OMIT_PHASE_GrPhaExc: [int]int;

var {:extern} Mem_T.OMIT_POL_Port: [int]int;

var {:extern} Mem_T.ORIENT_Grid: [int]int;

var {:extern} Mem_T.P1_EP_GrPhaExc: [int]int;

var {:extern} Mem_T.P1_ET_GrAmpExc: [int]int;

var {:extern} Mem_T.P2_EP_GrPhaExc: [int]int;

var {:extern} Mem_T.P2_ET_GrAmpExc: [int]int;

var {:extern} Mem_T.PA101CHAR: [int]int;

var {:extern} Mem_T.PA21CHAR: [int]int;

var {:extern} Mem_T.PA31CHAR: [int]int;

var {:extern} Mem_T.PAddRem: [int]int;

var {:extern} Mem_T.PCHAR: [int]int;

var {:extern} Mem_T.PCOORD_Node: [int]int;

var {:extern} Mem_T.PDIM_Elem: [int]int;

var {:extern} Mem_T.PElem: [int]int;

var {:extern} Mem_T.PErr: [int]int;

var {:extern} Mem_T.PFLOAT: [int]int;

var {:extern} Mem_T.PFail: [int]int;

var {:extern} Mem_T.PGeomnode: [int]int;

var {:extern} Mem_T.PGeomport: [int]int;

var {:extern} Mem_T.PGrAmpExc: [int]int;

var {:extern} Mem_T.PGrPhaExc: [int]int;

var {:extern} Mem_T.PGrid: [int]int;

var {:extern} Mem_T.PGroup: [int]int;

var {:extern} Mem_T.PHASE_START_GrPhaExc: [int]int;

var {:extern} Mem_T.PHASE_STEP_GrPhaExc: [int]int;

var {:extern} Mem_T.PHASE_UNIT_GrPhaExc: [int]int;

var {:extern} Mem_T.PHEA_Geomnode: [int]int;

var {:extern} Mem_T.PHEA_Node: [int]int;

var {:extern} Mem_T.PHEPOL_Elem: [int]int;

var {:extern} Mem_T.PHEPOL_Geomport: [int]int;

var {:extern} Mem_T.PHEPOL_Port: [int]int;

var {:extern} Mem_T.PHEPOL_UNIT_Elem: [int]int;

var {:extern} Mem_T.PHEPOL_UNIT_Port: [int]int;

var {:extern} Mem_T.PHI_GrPhaExc: [int]int;

var {:extern} Mem_T.PINT4: [int]int;

var {:extern} Mem_T.PNode: [int]int;

var {:extern} Mem_T.POLARIZATION_Elem: [int]int;

var {:extern} Mem_T.PORTNUM_Port: [int]int;

var {:extern} Mem_T.PORT_PTR_Elem: [int]int;

var {:extern} Mem_T.PPA_Geomport: [int]int;

var {:extern} Mem_T.PPA_Port: [int]int;

var {:extern} Mem_T.PPA_UNIT_Port: [int]int;

var {:extern} Mem_T.PPAddRem: [int]int;

var {:extern} Mem_T.PPElem: [int]int;

var {:extern} Mem_T.PPErr: [int]int;

var {:extern} Mem_T.PPFail: [int]int;

var {:extern} Mem_T.PPGeomnode: [int]int;

var {:extern} Mem_T.PPGrAmpExc: [int]int;

var {:extern} Mem_T.PPGrPhaExc: [int]int;

var {:extern} Mem_T.PPGrid: [int]int;

var {:extern} Mem_T.PPGroup: [int]int;

var {:extern} Mem_T.PPNode: [int]int;

var {:extern} Mem_T.PPPort: [int]int;

var {:extern} Mem_T.PPQExp: [int]int;

var {:extern} Mem_T.PPcharac: [int]int;

var {:extern} Mem_T.PPort: [int]int;

var {:extern} Mem_T.PQDIM_UNIT_Elem: [int]int;

var {:extern} Mem_T.PQEXP_PTR_GrAmpExc: [int]int;

var {:extern} Mem_T.PQEXP_PTR_GrPhaExc: [int]int;

var {:extern} Mem_T.PQSTEP_UNIT_Grid: [int]int;

var {:extern} Mem_T.PQXY_UNIT_Grid: [int]int;

var {:extern} Mem_T.PREV_charac: [int]int;

var {:extern} Mem_T.PSC_Geomport: [int]int;

var {:extern} Mem_T.PSC_Port: [int]int;

var {:extern} Mem_T.PSC_UNIT_Port: [int]int;

var {:extern} Mem_T.PSEA_Geomnode: [int]int;

var {:extern} Mem_T.PSEA_Node: [int]int;

var {:extern} Mem_T.PSH_Geomport: [int]int;

var {:extern} Mem_T.PSH_Port: [int]int;

var {:extern} Mem_T.PSH_UNIT_Port: [int]int;

var {:extern} Mem_T.PSIZE_Geomnode: [int]int;

var {:extern} Mem_T.PSIZE_Group: [int]int;

var {:extern} Mem_T.PSTEP_Grid: [int]int;

var {:extern} Mem_T.PVOID: [int]int;

var {:extern} Mem_T.PX_Grid: [int]int;

var {:extern} Mem_T.PY_Grid: [int]int;

var {:extern} Mem_T.P_iobuf: [int]int;

var {:extern} Mem_T.Pcharac: [int]int;

var {:extern} Mem_T.Q1_EP_GrPhaExc: [int]int;

var {:extern} Mem_T.Q1_ET_GrAmpExc: [int]int;

var {:extern} Mem_T.Q2_EP_GrPhaExc: [int]int;

var {:extern} Mem_T.Q2_ET_GrAmpExc: [int]int;

var {:extern} Mem_T.QCOORD_Node: [int]int;

var {:extern} Mem_T.QDIM_Elem: [int]int;

var {:extern} Mem_T.QSIZE_Geomnode: [int]int;

var {:extern} Mem_T.QSIZE_Group: [int]int;

var {:extern} Mem_T.QSTEP_Grid: [int]int;

var {:extern} Mem_T.QX_Grid: [int]int;

var {:extern} Mem_T.QY_Grid: [int]int;

var {:extern} Mem_T.RADIUS_Elem: [int]int;

var {:extern} Mem_T.RADIUS_UNIT_Elem: [int]int;

var {:extern} Mem_T.ROT_ANGLE_Grid: [int]int;

var {:extern} Mem_T.SHAPE_Geomnode: [int]int;

var {:extern} Mem_T.SHAPE_Group: [int]int;

var {:extern} Mem_T.SUBGROUP_PTR_Geomnode: [int]int;

var {:extern} Mem_T.SUPER_GROUP_PTR_Group: [int]int;

var {:extern} Mem_T.TAPERE_Elem: [int]int;

var {:extern} Mem_T.TAPERH_Elem: [int]int;

var {:extern} Mem_T.TAPER_UNIT_Elem: [int]int;

var {:extern} Mem_T.THEA_Geomnode: [int]int;

var {:extern} Mem_T.THEA_Node: [int]int;

var {:extern} Mem_T.THETA_GrPhaExc: [int]int;

var {:extern} Mem_T.TYPE_Elem: [int]int;

var {:extern} Mem_T.TYPE_GrAmpExc: [int]int;

var {:extern} Mem_T.TYPE_GrPhaExc: [int]int;

var {:extern} Mem_T.TYPE_Grid: [int]int;

var {:extern} Mem_T.UINT4: [int]int;

var {:extern} Mem_T.UNIF_VAL_GrAmpExc: [int]int;

var {:extern} Mem_T.UNIF_VAL_GrPhaExc: [int]int;

var {:extern} Mem_T.U_GrPhaExc: [int]int;

var {:extern} Mem_T.V_GrPhaExc: [int]int;

var {:extern} Mem_T.XA_Geomnode: [int]int;

var {:extern} Mem_T.YA_Geomnode: [int]int;

var {:extern} Mem_T.ZA_Geomnode: [int]int;

var {:extern} Mem_T.info_charac: [int]int;

function {:extern} Match(a: int, t: name) : bool;

function {:extern} MatchBase(b: int, a: int, t: name) : bool;

function {:extern} HasType(v: int, t: name) : bool;

function {:extern} T.Ptr(t: name) : name;

axiom (forall a: int, t: name :: { Match(a, T.Ptr(t)) } Match(a, T.Ptr(t)) <==> Field(a) == T.Ptr(t));

axiom (forall b: int, a: int, t: name :: { MatchBase(b, a, T.Ptr(t)) } MatchBase(b, a, T.Ptr(t)) <==> Base(a) == b);

axiom (forall v: int, t: name :: { HasType(v, T.Ptr(t)) } HasType(v, T.Ptr(t)) <==> v == 0 || (INT_GT(v, 0) && Match(v, t) && MatchBase(Base(v), v, t)));

const {:extern} unique T.ADDREM_PTR_Group: name;

const {:extern} unique T.ADDREM_TYPE_AddRem: name;

const {:extern} unique T.AMP_Geomport: name;

const {:extern} unique T.AMP_Port: name;

const {:extern} unique T.AMP_UNIT_GrAmpExc: name;

const {:extern} unique T.AMP_UNIT_Port: name;

const {:extern} unique T.ANGLEE_Elem: name;

const {:extern} unique T.ANGLEH_Elem: name;

const {:extern} unique T.ANGLE_Grid: name;

const {:extern} unique T.ANGLE_START_GrPhaExc: name;

const {:extern} unique T.ANGLE_STEP_GrPhaExc: name;

const {:extern} unique T.ANGLE_UNIT_Elem: name;

const {:extern} unique T.ANGLE_UNIT_GrPhaExc: name;

const {:extern} unique T.ANGLE_UNIT_Grid: name;

const {:extern} unique T.ANGLE_UNIT_Node: name;

const {:extern} unique T.BLOCK_TYPE_AddRem: name;

const {:extern} unique T.BUILT_Group: name;

const {:extern} unique T.CENTRE_GrAmpExc: name;

const {:extern} unique T.CENTRE_GrPhaExc: name;

const {:extern} unique T.DIRECTION_Elem: name;

const {:extern} unique T.DIRECTION_GrPhaExc: name;

const {:extern} unique T.ELEM_PTR_Group: name;

const {:extern} unique T.ERR_PTR_Group: name;

const {:extern} unique T.EXP_Elem: name;

const {:extern} unique T.FAIL_PTR_Group: name;

const {:extern} unique T.GAIN_Elem: name;

const {:extern} unique T.GAIN_UNIT_Elem: name;

const {:extern} unique T.GEOMETRY_Elem: name;

const {:extern} unique T.GEOMNODE_PTR_Group: name;

const {:extern} unique T.GEOMPORT_PTR_Geomnode: name;

const {:extern} unique T.GRAMPEXC_PTR_Group: name;

const {:extern} unique T.GRID_PTR_Group: name;

const {:extern} unique T.GRPHAEXC_PTR_Group: name;

const {:extern} unique T.LEVEL_Elem: name;

const {:extern} unique T.LEVEL_Grid: name;

const {:extern} unique T.LINE_NUM_charac: name;

const {:extern} unique T.LOC_P_Geomnode: name;

const {:extern} unique T.LOC_Q_Geomnode: name;

const {:extern} unique T.MODEL_Elem: name;

const {:extern} unique T.NAME_Elem: name;

const {:extern} unique T.NAME_Group: name;

const {:extern} unique T.NEXT_AddRem: name;

const {:extern} unique T.NEXT_Geomnode: name;

const {:extern} unique T.NEXT_Geomport: name;

const {:extern} unique T.NEXT_Node: name;

const {:extern} unique T.NEXT_Port: name;

const {:extern} unique T.NEXT_charac: name;

const {:extern} unique T.NODE_PTR_AddRem: name;

const {:extern} unique T.NPORTS_Elem: name;

const {:extern} unique T.NUM_OF_NODES_Group: name;

const {:extern} unique T.OMIT_ANGLE_GrPhaExc: name;

const {:extern} unique T.OMIT_ORIENT_Node: name;

const {:extern} unique T.OMIT_PHASE_GrPhaExc: name;

const {:extern} unique T.OMIT_POL_Port: name;

const {:extern} unique T.ORIENT_Grid: name;

const {:extern} unique T.P1_EP_GrPhaExc: name;

const {:extern} unique T.P1_ET_GrAmpExc: name;

const {:extern} unique T.P2_EP_GrPhaExc: name;

const {:extern} unique T.P2_ET_GrAmpExc: name;

const {:extern} unique T.PCOORD_Node: name;

const {:extern} unique T.PDIM_Elem: name;

const {:extern} unique T.PHASE_START_GrPhaExc: name;

const {:extern} unique T.PHASE_STEP_GrPhaExc: name;

const {:extern} unique T.PHASE_UNIT_GrPhaExc: name;

const {:extern} unique T.PHEA_Geomnode: name;

const {:extern} unique T.PHEA_Node: name;

const {:extern} unique T.PHEPOL_Elem: name;

const {:extern} unique T.PHEPOL_Geomport: name;

const {:extern} unique T.PHEPOL_Port: name;

const {:extern} unique T.PHEPOL_UNIT_Elem: name;

const {:extern} unique T.PHEPOL_UNIT_Port: name;

const {:extern} unique T.PHI_GrPhaExc: name;

const {:extern} unique T.POLARIZATION_Elem: name;

const {:extern} unique T.PORTNUM_Port: name;

const {:extern} unique T.PORT_PTR_Elem: name;

const {:extern} unique T.PPA_Geomport: name;

const {:extern} unique T.PPA_Port: name;

const {:extern} unique T.PPA_UNIT_Port: name;

const {:extern} unique T.PQDIM_UNIT_Elem: name;

const {:extern} unique T.PQEXP_PTR_GrAmpExc: name;

const {:extern} unique T.PQEXP_PTR_GrPhaExc: name;

const {:extern} unique T.PQSTEP_UNIT_Grid: name;

const {:extern} unique T.PQXY_UNIT_Grid: name;

const {:extern} unique T.PREV_charac: name;

const {:extern} unique T.PSC_Geomport: name;

const {:extern} unique T.PSC_Port: name;

const {:extern} unique T.PSC_UNIT_Port: name;

const {:extern} unique T.PSEA_Geomnode: name;

const {:extern} unique T.PSEA_Node: name;

const {:extern} unique T.PSH_Geomport: name;

const {:extern} unique T.PSH_Port: name;

const {:extern} unique T.PSH_UNIT_Port: name;

const {:extern} unique T.PSIZE_Geomnode: name;

const {:extern} unique T.PSIZE_Group: name;

const {:extern} unique T.PSTEP_Grid: name;

const {:extern} unique T.PX_Grid: name;

const {:extern} unique T.PY_Grid: name;

const {:extern} unique T.Q1_EP_GrPhaExc: name;

const {:extern} unique T.Q1_ET_GrAmpExc: name;

const {:extern} unique T.Q2_EP_GrPhaExc: name;

const {:extern} unique T.Q2_ET_GrAmpExc: name;

const {:extern} unique T.QCOORD_Node: name;

const {:extern} unique T.QDIM_Elem: name;

const {:extern} unique T.QSIZE_Geomnode: name;

const {:extern} unique T.QSIZE_Group: name;

const {:extern} unique T.QSTEP_Grid: name;

const {:extern} unique T.QX_Grid: name;

const {:extern} unique T.QY_Grid: name;

const {:extern} unique T.RADIUS_Elem: name;

const {:extern} unique T.RADIUS_UNIT_Elem: name;

const {:extern} unique T.ROT_ANGLE_Grid: name;

const {:extern} unique T.SHAPE_Geomnode: name;

const {:extern} unique T.SHAPE_Group: name;

const {:extern} unique T.SUBGROUP_PTR_Geomnode: name;

const {:extern} unique T.SUPER_GROUP_PTR_Group: name;

const {:extern} unique T.TAPERE_Elem: name;

const {:extern} unique T.TAPERH_Elem: name;

const {:extern} unique T.TAPER_UNIT_Elem: name;

const {:extern} unique T.THEA_Geomnode: name;

const {:extern} unique T.THEA_Node: name;

const {:extern} unique T.THETA_GrPhaExc: name;

const {:extern} unique T.TYPE_Elem: name;

const {:extern} unique T.TYPE_GrAmpExc: name;

const {:extern} unique T.TYPE_GrPhaExc: name;

const {:extern} unique T.TYPE_Grid: name;

const {:extern} unique T.UNIF_VAL_GrAmpExc: name;

const {:extern} unique T.UNIF_VAL_GrPhaExc: name;

const {:extern} unique T.U_GrPhaExc: name;

const {:extern} unique T.V_GrPhaExc: name;

const {:extern} unique T.XA_Geomnode: name;

const {:extern} unique T.YA_Geomnode: name;

const {:extern} unique T.ZA_Geomnode: name;

const {:extern} unique T.info_charac: name;

const {:extern} unique T.A101A101CHAR: name;

const {:extern} unique T.A101CHAR: name;

const {:extern} unique T.A10CHAR: name;

const {:extern} unique T.A11CHAR: name;

const {:extern} unique T.A126A21CHAR: name;

const {:extern} unique T.A12CHAR: name;

const {:extern} unique T.A13CHAR: name;

const {:extern} unique T.A14CHAR: name;

const {:extern} unique T.A15CHAR: name;

const {:extern} unique T.A16CHAR: name;

const {:extern} unique T.A17CHAR: name;

const {:extern} unique T.A1CHAR: name;

const {:extern} unique T.A21A101CHAR: name;

const {:extern} unique T.A21A31CHAR: name;

const {:extern} unique T.A21CHAR: name;

const {:extern} unique T.A22CHAR: name;

const {:extern} unique T.A23CHAR: name;

const {:extern} unique T.A24CHAR: name;

const {:extern} unique T.A26CHAR: name;

const {:extern} unique T.A27CHAR: name;

const {:extern} unique T.A28CHAR: name;

const {:extern} unique T.A29CHAR: name;

const {:extern} unique T.A2CHAR: name;

const {:extern} unique T.A31CHAR: name;

const {:extern} unique T.A32CHAR: name;

const {:extern} unique T.A33CHAR: name;

const {:extern} unique T.A34CHAR: name;

const {:extern} unique T.A35CHAR: name;

const {:extern} unique T.A36CHAR: name;

const {:extern} unique T.A37CHAR: name;

const {:extern} unique T.A38CHAR: name;

const {:extern} unique T.A39CHAR: name;

const {:extern} unique T.A3CHAR: name;

const {:extern} unique T.A40CHAR: name;

const {:extern} unique T.A41CHAR: name;

const {:extern} unique T.A42CHAR: name;

const {:extern} unique T.A43CHAR: name;

const {:extern} unique T.A44CHAR: name;

const {:extern} unique T.A45CHAR: name;

const {:extern} unique T.A46CHAR: name;

const {:extern} unique T.A47CHAR: name;

const {:extern} unique T.A48CHAR: name;

const {:extern} unique T.A49CHAR: name;

const {:extern} unique T.A4CHAR: name;

const {:extern} unique T.A50CHAR: name;

const {:extern} unique T.A51CHAR: name;

const {:extern} unique T.A52CHAR: name;

const {:extern} unique T.A53CHAR: name;

const {:extern} unique T.A54CHAR: name;

const {:extern} unique T.A55CHAR: name;

const {:extern} unique T.A56CHAR: name;

const {:extern} unique T.A57CHAR: name;

const {:extern} unique T.A58CHAR: name;

const {:extern} unique T.A59CHAR: name;

const {:extern} unique T.A5CHAR: name;

const {:extern} unique T.A5PGroup: name;

const {:extern} unique T.A60CHAR: name;

const {:extern} unique T.A61CHAR: name;

const {:extern} unique T.A62CHAR: name;

const {:extern} unique T.A63CHAR: name;

const {:extern} unique T.A64CHAR: name;

const {:extern} unique T.A65CHAR: name;

const {:extern} unique T.A69CHAR: name;

const {:extern} unique T.A6CHAR: name;

const {:extern} unique T.A71CHAR: name;

const {:extern} unique T.A72CHAR: name;

const {:extern} unique T.A74CHAR: name;

const {:extern} unique T.A75CHAR: name;

const {:extern} unique T.A7CHAR: name;

const {:extern} unique T.A81CHAR: name;

const {:extern} unique T.A8CHAR: name;

const {:extern} unique T.A8FLOAT: name;

const {:extern} unique T.A8INT4: name;

const {:extern} unique T.A9CHAR: name;

const {:extern} unique T.AddRem: name;

const {:extern} unique T.CHAR: name;

const {:extern} unique T.Elem: name;

const {:extern} unique T.Err: name;

const {:extern} unique T.FLOAT: name;

const {:extern} unique T.Fail: name;

const {:extern} unique T.Geomnode: name;

const {:extern} unique T.Geomport: name;

const {:extern} unique T.GrAmpExc: name;

const {:extern} unique T.GrPhaExc: name;

const {:extern} unique T.Grid: name;

const {:extern} unique T.Group: name;

const {:extern} unique T.INT4: name;

const {:extern} unique T.Node: name;

const {:extern} unique T.PA101A101CHAR: name;

const {:extern} unique T.PA101CHAR: name;

const {:extern} unique T.PA10CHAR: name;

const {:extern} unique T.PA11CHAR: name;

const {:extern} unique T.PA126A21CHAR: name;

const {:extern} unique T.PA12CHAR: name;

const {:extern} unique T.PA13CHAR: name;

const {:extern} unique T.PA14CHAR: name;

const {:extern} unique T.PA15CHAR: name;

const {:extern} unique T.PA16CHAR: name;

const {:extern} unique T.PA17CHAR: name;

const {:extern} unique T.PA1CHAR: name;

const {:extern} unique T.PA21A101CHAR: name;

const {:extern} unique T.PA21A31CHAR: name;

const {:extern} unique T.PA21CHAR: name;

const {:extern} unique T.PA22CHAR: name;

const {:extern} unique T.PA23CHAR: name;

const {:extern} unique T.PA24CHAR: name;

const {:extern} unique T.PA26CHAR: name;

const {:extern} unique T.PA27CHAR: name;

const {:extern} unique T.PA28CHAR: name;

const {:extern} unique T.PA29CHAR: name;

const {:extern} unique T.PA2CHAR: name;

const {:extern} unique T.PA31CHAR: name;

const {:extern} unique T.PA32CHAR: name;

const {:extern} unique T.PA33CHAR: name;

const {:extern} unique T.PA34CHAR: name;

const {:extern} unique T.PA35CHAR: name;

const {:extern} unique T.PA36CHAR: name;

const {:extern} unique T.PA37CHAR: name;

const {:extern} unique T.PA38CHAR: name;

const {:extern} unique T.PA39CHAR: name;

const {:extern} unique T.PA3CHAR: name;

const {:extern} unique T.PA40CHAR: name;

const {:extern} unique T.PA41CHAR: name;

const {:extern} unique T.PA42CHAR: name;

const {:extern} unique T.PA43CHAR: name;

const {:extern} unique T.PA44CHAR: name;

const {:extern} unique T.PA45CHAR: name;

const {:extern} unique T.PA46CHAR: name;

const {:extern} unique T.PA47CHAR: name;

const {:extern} unique T.PA48CHAR: name;

const {:extern} unique T.PA49CHAR: name;

const {:extern} unique T.PA4CHAR: name;

const {:extern} unique T.PA50CHAR: name;

const {:extern} unique T.PA51CHAR: name;

const {:extern} unique T.PA52CHAR: name;

const {:extern} unique T.PA53CHAR: name;

const {:extern} unique T.PA54CHAR: name;

const {:extern} unique T.PA55CHAR: name;

const {:extern} unique T.PA56CHAR: name;

const {:extern} unique T.PA57CHAR: name;

const {:extern} unique T.PA58CHAR: name;

const {:extern} unique T.PA59CHAR: name;

const {:extern} unique T.PA5CHAR: name;

const {:extern} unique T.PA60CHAR: name;

const {:extern} unique T.PA61CHAR: name;

const {:extern} unique T.PA62CHAR: name;

const {:extern} unique T.PA63CHAR: name;

const {:extern} unique T.PA64CHAR: name;

const {:extern} unique T.PA65CHAR: name;

const {:extern} unique T.PA69CHAR: name;

const {:extern} unique T.PA6CHAR: name;

const {:extern} unique T.PA71CHAR: name;

const {:extern} unique T.PA72CHAR: name;

const {:extern} unique T.PA74CHAR: name;

const {:extern} unique T.PA75CHAR: name;

const {:extern} unique T.PA7CHAR: name;

const {:extern} unique T.PA81CHAR: name;

const {:extern} unique T.PA8CHAR: name;

const {:extern} unique T.PA8FLOAT: name;

const {:extern} unique T.PA8INT4: name;

const {:extern} unique T.PA9CHAR: name;

const {:extern} unique T.PAddRem: name;

const {:extern} unique T.PCHAR: name;

const {:extern} unique T.PElem: name;

const {:extern} unique T.PErr: name;

const {:extern} unique T.PFLOAT: name;

const {:extern} unique T.PFail: name;

const {:extern} unique T.PGeomnode: name;

const {:extern} unique T.PGeomport: name;

const {:extern} unique T.PGrAmpExc: name;

const {:extern} unique T.PGrPhaExc: name;

const {:extern} unique T.PGrid: name;

const {:extern} unique T.PGroup: name;

const {:extern} unique T.PINT4: name;

const {:extern} unique T.PNode: name;

const {:extern} unique T.PPAddRem: name;

const {:extern} unique T.PPCHAR: name;

const {:extern} unique T.PPElem: name;

const {:extern} unique T.PPErr: name;

const {:extern} unique T.PPFLOAT: name;

const {:extern} unique T.PPFail: name;

const {:extern} unique T.PPGeomnode: name;

const {:extern} unique T.PPGeomport: name;

const {:extern} unique T.PPGrAmpExc: name;

const {:extern} unique T.PPGrPhaExc: name;

const {:extern} unique T.PPGrid: name;

const {:extern} unique T.PPGroup: name;

const {:extern} unique T.PPINT4: name;

const {:extern} unique T.PPNode: name;

const {:extern} unique T.PPPAddRem: name;

const {:extern} unique T.PPPCHAR: name;

const {:extern} unique T.PPPElem: name;

const {:extern} unique T.PPPErr: name;

const {:extern} unique T.PPPFail: name;

const {:extern} unique T.PPPGeomnode: name;

const {:extern} unique T.PPPGrAmpExc: name;

const {:extern} unique T.PPPGrPhaExc: name;

const {:extern} unique T.PPPGrid: name;

const {:extern} unique T.PPPGroup: name;

const {:extern} unique T.PPPNode: name;

const {:extern} unique T.PPPPort: name;

const {:extern} unique T.PPPcharac: name;

const {:extern} unique T.PPPort: name;

const {:extern} unique T.PPQExp: name;

const {:extern} unique T.PPVOID: name;

const {:extern} unique T.PP_iobuf: name;

const {:extern} unique T.PPcharac: name;

const {:extern} unique T.PPort: name;

const {:extern} unique T.PQExp: name;

const {:extern} unique T.PUINT4: name;

const {:extern} unique T.PVOID: name;

const {:extern} unique T.P_iobuf: name;

const {:extern} unique T.Pcharac: name;

const {:extern} unique T.Port: name;

const {:extern} unique T.UINT4: name;

const {:extern} unique T.VOID: name;

const {:extern} unique T._iobuf: name;

const {:extern} unique T.charac: name;

function {:extern} ADDREM_PTR_Group(int) : int;

axiom (forall x: int :: { ADDREM_PTR_Group(x) } ADDREM_PTR_Group(x) == INT_ADD(x, 40));

axiom (forall x: int :: { ADDREM_PTR_Group(x) } ADDREM_PTR_Group(x) == PLUS(x, 1, 40));

function {:extern} ADDREM_TYPE_AddRem(int) : int;

axiom (forall x: int :: { ADDREM_TYPE_AddRem(x) } ADDREM_TYPE_AddRem(x) == INT_ADD(x, 0));

axiom (forall x: int :: { ADDREM_TYPE_AddRem(x) } ADDREM_TYPE_AddRem(x) == PLUS(x, 1, 0));

function {:extern} AMP_Geomport(int) : int;

axiom (forall x: int :: { AMP_Geomport(x) } AMP_Geomport(x) == INT_ADD(x, 0));

axiom (forall x: int :: { AMP_Geomport(x) } AMP_Geomport(x) == PLUS(x, 1, 0));

function {:extern} AMP_Port(int) : int;

axiom (forall x: int :: { AMP_Port(x) } AMP_Port(x) == INT_ADD(x, 8));

axiom (forall x: int :: { AMP_Port(x) } AMP_Port(x) == PLUS(x, 1, 8));

function {:extern} AMP_UNIT_GrAmpExc(int) : int;

axiom (forall x: int :: { AMP_UNIT_GrAmpExc(x) } AMP_UNIT_GrAmpExc(x) == INT_ADD(x, 56));

axiom (forall x: int :: { AMP_UNIT_GrAmpExc(x) } AMP_UNIT_GrAmpExc(x) == PLUS(x, 1, 56));

function {:extern} AMP_UNIT_Port(int) : int;

axiom (forall x: int :: { AMP_UNIT_Port(x) } AMP_UNIT_Port(x) == INT_ADD(x, 16));

axiom (forall x: int :: { AMP_UNIT_Port(x) } AMP_UNIT_Port(x) == PLUS(x, 1, 16));

function {:extern} ANGLEE_Elem(int) : int;

axiom (forall x: int :: { ANGLEE_Elem(x) } ANGLEE_Elem(x) == INT_ADD(x, 96));

axiom (forall x: int :: { ANGLEE_Elem(x) } ANGLEE_Elem(x) == PLUS(x, 1, 96));

function {:extern} ANGLEH_Elem(int) : int;

axiom (forall x: int :: { ANGLEH_Elem(x) } ANGLEH_Elem(x) == INT_ADD(x, 104));

axiom (forall x: int :: { ANGLEH_Elem(x) } ANGLEH_Elem(x) == PLUS(x, 1, 104));

function {:extern} ANGLE_Grid(int) : int;

axiom (forall x: int :: { ANGLE_Grid(x) } ANGLE_Grid(x) == INT_ADD(x, 48));

axiom (forall x: int :: { ANGLE_Grid(x) } ANGLE_Grid(x) == PLUS(x, 1, 48));

function {:extern} ANGLE_START_GrPhaExc(int) : int;

axiom (forall x: int :: { ANGLE_START_GrPhaExc(x) } ANGLE_START_GrPhaExc(x) == INT_ADD(x, 64));

axiom (forall x: int :: { ANGLE_START_GrPhaExc(x) } ANGLE_START_GrPhaExc(x) == PLUS(x, 1, 64));

function {:extern} ANGLE_STEP_GrPhaExc(int) : int;

axiom (forall x: int :: { ANGLE_STEP_GrPhaExc(x) } ANGLE_STEP_GrPhaExc(x) == INT_ADD(x, 72));

axiom (forall x: int :: { ANGLE_STEP_GrPhaExc(x) } ANGLE_STEP_GrPhaExc(x) == PLUS(x, 1, 72));

function {:extern} ANGLE_UNIT_Elem(int) : int;

axiom (forall x: int :: { ANGLE_UNIT_Elem(x) } ANGLE_UNIT_Elem(x) == INT_ADD(x, 112));

axiom (forall x: int :: { ANGLE_UNIT_Elem(x) } ANGLE_UNIT_Elem(x) == PLUS(x, 1, 112));

function {:extern} ANGLE_UNIT_GrPhaExc(int) : int;

axiom (forall x: int :: { ANGLE_UNIT_GrPhaExc(x) } ANGLE_UNIT_GrPhaExc(x) == INT_ADD(x, 140));

axiom (forall x: int :: { ANGLE_UNIT_GrPhaExc(x) } ANGLE_UNIT_GrPhaExc(x) == PLUS(x, 1, 140));

function {:extern} ANGLE_UNIT_Grid(int) : int;

axiom (forall x: int :: { ANGLE_UNIT_Grid(x) } ANGLE_UNIT_Grid(x) == INT_ADD(x, 56));

axiom (forall x: int :: { ANGLE_UNIT_Grid(x) } ANGLE_UNIT_Grid(x) == PLUS(x, 1, 56));

function {:extern} ANGLE_UNIT_Node(int) : int;

axiom (forall x: int :: { ANGLE_UNIT_Node(x) } ANGLE_UNIT_Node(x) == INT_ADD(x, 40));

axiom (forall x: int :: { ANGLE_UNIT_Node(x) } ANGLE_UNIT_Node(x) == PLUS(x, 1, 40));

function {:extern} BLOCK_TYPE_AddRem(int) : int;

axiom (forall x: int :: { BLOCK_TYPE_AddRem(x) } BLOCK_TYPE_AddRem(x) == INT_ADD(x, 4));

axiom (forall x: int :: { BLOCK_TYPE_AddRem(x) } BLOCK_TYPE_AddRem(x) == PLUS(x, 1, 4));

function {:extern} BUILT_Group(int) : int;

axiom (forall x: int :: { BUILT_Group(x) } BUILT_Group(x) == INT_ADD(x, 92));

axiom (forall x: int :: { BUILT_Group(x) } BUILT_Group(x) == PLUS(x, 1, 92));

function {:extern} CENTRE_GrAmpExc(int) : int;

axiom (forall x: int :: { CENTRE_GrAmpExc(x) } CENTRE_GrAmpExc(x) == INT_ADD(x, 16));

axiom (forall x: int :: { CENTRE_GrAmpExc(x) } CENTRE_GrAmpExc(x) == PLUS(x, 1, 16));

function {:extern} CENTRE_GrPhaExc(int) : int;

axiom (forall x: int :: { CENTRE_GrPhaExc(x) } CENTRE_GrPhaExc(x) == INT_ADD(x, 16));

axiom (forall x: int :: { CENTRE_GrPhaExc(x) } CENTRE_GrPhaExc(x) == PLUS(x, 1, 16));

function {:extern} DIRECTION_Elem(int) : int;

axiom (forall x: int :: { DIRECTION_Elem(x) } DIRECTION_Elem(x) == INT_ADD(x, 156));

axiom (forall x: int :: { DIRECTION_Elem(x) } DIRECTION_Elem(x) == PLUS(x, 1, 156));

function {:extern} DIRECTION_GrPhaExc(int) : int;

axiom (forall x: int :: { DIRECTION_GrPhaExc(x) } DIRECTION_GrPhaExc(x) == INT_ADD(x, 56));

axiom (forall x: int :: { DIRECTION_GrPhaExc(x) } DIRECTION_GrPhaExc(x) == PLUS(x, 1, 56));

function {:extern} ELEM_PTR_Group(int) : int;

axiom (forall x: int :: { ELEM_PTR_Group(x) } ELEM_PTR_Group(x) == INT_ADD(x, 36));

axiom (forall x: int :: { ELEM_PTR_Group(x) } ELEM_PTR_Group(x) == PLUS(x, 1, 36));

function {:extern} ERR_PTR_Group(int) : int;

axiom (forall x: int :: { ERR_PTR_Group(x) } ERR_PTR_Group(x) == INT_ADD(x, 52));

axiom (forall x: int :: { ERR_PTR_Group(x) } ERR_PTR_Group(x) == PLUS(x, 1, 52));

function {:extern} EXP_Elem(int) : int;

axiom (forall x: int :: { EXP_Elem(x) } EXP_Elem(x) == INT_ADD(x, 88));

axiom (forall x: int :: { EXP_Elem(x) } EXP_Elem(x) == PLUS(x, 1, 88));

function {:extern} FAIL_PTR_Group(int) : int;

axiom (forall x: int :: { FAIL_PTR_Group(x) } FAIL_PTR_Group(x) == INT_ADD(x, 56));

axiom (forall x: int :: { FAIL_PTR_Group(x) } FAIL_PTR_Group(x) == PLUS(x, 1, 56));

function {:extern} GAIN_Elem(int) : int;

axiom (forall x: int :: { GAIN_Elem(x) } GAIN_Elem(x) == INT_ADD(x, 160));

axiom (forall x: int :: { GAIN_Elem(x) } GAIN_Elem(x) == PLUS(x, 1, 160));

function {:extern} GAIN_UNIT_Elem(int) : int;

axiom (forall x: int :: { GAIN_UNIT_Elem(x) } GAIN_UNIT_Elem(x) == INT_ADD(x, 168));

axiom (forall x: int :: { GAIN_UNIT_Elem(x) } GAIN_UNIT_Elem(x) == PLUS(x, 1, 168));

function {:extern} GEOMETRY_Elem(int) : int;

axiom (forall x: int :: { GEOMETRY_Elem(x) } GEOMETRY_Elem(x) == INT_ADD(x, 40));

axiom (forall x: int :: { GEOMETRY_Elem(x) } GEOMETRY_Elem(x) == PLUS(x, 1, 40));

function {:extern} GEOMNODE_PTR_Group(int) : int;

axiom (forall x: int :: { GEOMNODE_PTR_Group(x) } GEOMNODE_PTR_Group(x) == INT_ADD(x, 88));

axiom (forall x: int :: { GEOMNODE_PTR_Group(x) } GEOMNODE_PTR_Group(x) == PLUS(x, 1, 88));

function {:extern} GEOMPORT_PTR_Geomnode(int) : int;

axiom (forall x: int :: { GEOMPORT_PTR_Geomnode(x) } GEOMPORT_PTR_Geomnode(x) == INT_ADD(x, 56));

axiom (forall x: int :: { GEOMPORT_PTR_Geomnode(x) } GEOMPORT_PTR_Geomnode(x) == PLUS(x, 1, 56));

function {:extern} GRAMPEXC_PTR_Group(int) : int;

axiom (forall x: int :: { GRAMPEXC_PTR_Group(x) } GRAMPEXC_PTR_Group(x) == INT_ADD(x, 44));

axiom (forall x: int :: { GRAMPEXC_PTR_Group(x) } GRAMPEXC_PTR_Group(x) == PLUS(x, 1, 44));

function {:extern} GRID_PTR_Group(int) : int;

axiom (forall x: int :: { GRID_PTR_Group(x) } GRID_PTR_Group(x) == INT_ADD(x, 32));

axiom (forall x: int :: { GRID_PTR_Group(x) } GRID_PTR_Group(x) == PLUS(x, 1, 32));

function {:extern} GRPHAEXC_PTR_Group(int) : int;

axiom (forall x: int :: { GRPHAEXC_PTR_Group(x) } GRPHAEXC_PTR_Group(x) == INT_ADD(x, 48));

axiom (forall x: int :: { GRPHAEXC_PTR_Group(x) } GRPHAEXC_PTR_Group(x) == PLUS(x, 1, 48));

function {:extern} LEVEL_Elem(int) : int;

axiom (forall x: int :: { LEVEL_Elem(x) } LEVEL_Elem(x) == INT_ADD(x, 36));

axiom (forall x: int :: { LEVEL_Elem(x) } LEVEL_Elem(x) == PLUS(x, 1, 36));

function {:extern} LEVEL_Grid(int) : int;

axiom (forall x: int :: { LEVEL_Grid(x) } LEVEL_Grid(x) == INT_ADD(x, 32));

axiom (forall x: int :: { LEVEL_Grid(x) } LEVEL_Grid(x) == PLUS(x, 1, 32));

function {:extern} LINE_NUM_charac(int) : int;

axiom (forall x: int :: { LINE_NUM_charac(x) } LINE_NUM_charac(x) == INT_ADD(x, 4));

axiom (forall x: int :: { LINE_NUM_charac(x) } LINE_NUM_charac(x) == PLUS(x, 1, 4));

function {:extern} LOC_P_Geomnode(int) : int;

axiom (forall x: int :: { LOC_P_Geomnode(x) } LOC_P_Geomnode(x) == INT_ADD(x, 0));

axiom (forall x: int :: { LOC_P_Geomnode(x) } LOC_P_Geomnode(x) == PLUS(x, 1, 0));

function {:extern} LOC_Q_Geomnode(int) : int;

axiom (forall x: int :: { LOC_Q_Geomnode(x) } LOC_Q_Geomnode(x) == INT_ADD(x, 4));

axiom (forall x: int :: { LOC_Q_Geomnode(x) } LOC_Q_Geomnode(x) == PLUS(x, 1, 4));

function {:extern} MODEL_Elem(int) : int;

axiom (forall x: int :: { MODEL_Elem(x) } MODEL_Elem(x) == INT_ADD(x, 84));

axiom (forall x: int :: { MODEL_Elem(x) } MODEL_Elem(x) == PLUS(x, 1, 84));

function {:extern} NAME_Elem(int) : int;

axiom (forall x: int :: { NAME_Elem(x) } NAME_Elem(x) == INT_ADD(x, 4));

axiom (forall x: int :: { NAME_Elem(x) } NAME_Elem(x) == PLUS(x, 1, 4));

function {:extern} NAME_Group(int) : int;

axiom (forall x: int :: { NAME_Group(x) } NAME_Group(x) == INT_ADD(x, 0));

axiom (forall x: int :: { NAME_Group(x) } NAME_Group(x) == PLUS(x, 1, 0));

function {:extern} NEXT_AddRem(int) : int;

axiom (forall x: int :: { NEXT_AddRem(x) } NEXT_AddRem(x) == INT_ADD(x, 12));

axiom (forall x: int :: { NEXT_AddRem(x) } NEXT_AddRem(x) == PLUS(x, 1, 12));

function {:extern} NEXT_Geomnode(int) : int;

axiom (forall x: int :: { NEXT_Geomnode(x) } NEXT_Geomnode(x) == INT_ADD(x, 60));

axiom (forall x: int :: { NEXT_Geomnode(x) } NEXT_Geomnode(x) == PLUS(x, 1, 60));

function {:extern} NEXT_Geomport(int) : int;

axiom (forall x: int :: { NEXT_Geomport(x) } NEXT_Geomport(x) == INT_ADD(x, 40));

axiom (forall x: int :: { NEXT_Geomport(x) } NEXT_Geomport(x) == PLUS(x, 1, 40));

function {:extern} NEXT_Node(int) : int;

axiom (forall x: int :: { NEXT_Node(x) } NEXT_Node(x) == INT_ADD(x, 44));

axiom (forall x: int :: { NEXT_Node(x) } NEXT_Node(x) == PLUS(x, 1, 44));

function {:extern} NEXT_Port(int) : int;

axiom (forall x: int :: { NEXT_Port(x) } NEXT_Port(x) == INT_ADD(x, 88));

axiom (forall x: int :: { NEXT_Port(x) } NEXT_Port(x) == PLUS(x, 1, 88));

function {:extern} NEXT_charac(int) : int;

axiom (forall x: int :: { NEXT_charac(x) } NEXT_charac(x) == INT_ADD(x, 12));

axiom (forall x: int :: { NEXT_charac(x) } NEXT_charac(x) == PLUS(x, 1, 12));

function {:extern} NODE_PTR_AddRem(int) : int;

axiom (forall x: int :: { NODE_PTR_AddRem(x) } NODE_PTR_AddRem(x) == INT_ADD(x, 8));

axiom (forall x: int :: { NODE_PTR_AddRem(x) } NODE_PTR_AddRem(x) == PLUS(x, 1, 8));

function {:extern} NPORTS_Elem(int) : int;

axiom (forall x: int :: { NPORTS_Elem(x) } NPORTS_Elem(x) == INT_ADD(x, 172));

axiom (forall x: int :: { NPORTS_Elem(x) } NPORTS_Elem(x) == PLUS(x, 1, 172));

function {:extern} NUM_OF_NODES_Group(int) : int;

axiom (forall x: int :: { NUM_OF_NODES_Group(x) } NUM_OF_NODES_Group(x) == INT_ADD(x, 64));

axiom (forall x: int :: { NUM_OF_NODES_Group(x) } NUM_OF_NODES_Group(x) == PLUS(x, 1, 64));

function {:extern} OMIT_ANGLE_GrPhaExc(int) : int;

axiom (forall x: int :: { OMIT_ANGLE_GrPhaExc(x) } OMIT_ANGLE_GrPhaExc(x) == INT_ADD(x, 60));

axiom (forall x: int :: { OMIT_ANGLE_GrPhaExc(x) } OMIT_ANGLE_GrPhaExc(x) == PLUS(x, 1, 60));

function {:extern} OMIT_ORIENT_Node(int) : int;

axiom (forall x: int :: { OMIT_ORIENT_Node(x) } OMIT_ORIENT_Node(x) == INT_ADD(x, 0));

axiom (forall x: int :: { OMIT_ORIENT_Node(x) } OMIT_ORIENT_Node(x) == PLUS(x, 1, 0));

function {:extern} OMIT_PHASE_GrPhaExc(int) : int;

axiom (forall x: int :: { OMIT_PHASE_GrPhaExc(x) } OMIT_PHASE_GrPhaExc(x) == INT_ADD(x, 80));

axiom (forall x: int :: { OMIT_PHASE_GrPhaExc(x) } OMIT_PHASE_GrPhaExc(x) == PLUS(x, 1, 80));

function {:extern} OMIT_POL_Port(int) : int;

axiom (forall x: int :: { OMIT_POL_Port(x) } OMIT_POL_Port(x) == INT_ADD(x, 84));

axiom (forall x: int :: { OMIT_POL_Port(x) } OMIT_POL_Port(x) == PLUS(x, 1, 84));

function {:extern} ORIENT_Grid(int) : int;

axiom (forall x: int :: { ORIENT_Grid(x) } ORIENT_Grid(x) == INT_ADD(x, 40));

axiom (forall x: int :: { ORIENT_Grid(x) } ORIENT_Grid(x) == PLUS(x, 1, 40));

function {:extern} P1_EP_GrPhaExc(int) : int;

axiom (forall x: int :: { P1_EP_GrPhaExc(x) } P1_EP_GrPhaExc(x) == INT_ADD(x, 24));

axiom (forall x: int :: { P1_EP_GrPhaExc(x) } P1_EP_GrPhaExc(x) == PLUS(x, 1, 24));

function {:extern} P1_ET_GrAmpExc(int) : int;

axiom (forall x: int :: { P1_ET_GrAmpExc(x) } P1_ET_GrAmpExc(x) == INT_ADD(x, 24));

axiom (forall x: int :: { P1_ET_GrAmpExc(x) } P1_ET_GrAmpExc(x) == PLUS(x, 1, 24));

function {:extern} P2_EP_GrPhaExc(int) : int;

axiom (forall x: int :: { P2_EP_GrPhaExc(x) } P2_EP_GrPhaExc(x) == INT_ADD(x, 32));

axiom (forall x: int :: { P2_EP_GrPhaExc(x) } P2_EP_GrPhaExc(x) == PLUS(x, 1, 32));

function {:extern} P2_ET_GrAmpExc(int) : int;

axiom (forall x: int :: { P2_ET_GrAmpExc(x) } P2_ET_GrAmpExc(x) == INT_ADD(x, 32));

axiom (forall x: int :: { P2_ET_GrAmpExc(x) } P2_ET_GrAmpExc(x) == PLUS(x, 1, 32));

function {:extern} PCOORD_Node(int) : int;

axiom (forall x: int :: { PCOORD_Node(x) } PCOORD_Node(x) == INT_ADD(x, 4));

axiom (forall x: int :: { PCOORD_Node(x) } PCOORD_Node(x) == PLUS(x, 1, 4));

function {:extern} PDIM_Elem(int) : int;

axiom (forall x: int :: { PDIM_Elem(x) } PDIM_Elem(x) == INT_ADD(x, 64));

axiom (forall x: int :: { PDIM_Elem(x) } PDIM_Elem(x) == PLUS(x, 1, 64));

function {:extern} PHASE_START_GrPhaExc(int) : int;

axiom (forall x: int :: { PHASE_START_GrPhaExc(x) } PHASE_START_GrPhaExc(x) == INT_ADD(x, 88));

axiom (forall x: int :: { PHASE_START_GrPhaExc(x) } PHASE_START_GrPhaExc(x) == PLUS(x, 1, 88));

function {:extern} PHASE_STEP_GrPhaExc(int) : int;

axiom (forall x: int :: { PHASE_STEP_GrPhaExc(x) } PHASE_STEP_GrPhaExc(x) == INT_ADD(x, 96));

axiom (forall x: int :: { PHASE_STEP_GrPhaExc(x) } PHASE_STEP_GrPhaExc(x) == PLUS(x, 1, 96));

function {:extern} PHASE_UNIT_GrPhaExc(int) : int;

axiom (forall x: int :: { PHASE_UNIT_GrPhaExc(x) } PHASE_UNIT_GrPhaExc(x) == INT_ADD(x, 144));

axiom (forall x: int :: { PHASE_UNIT_GrPhaExc(x) } PHASE_UNIT_GrPhaExc(x) == PLUS(x, 1, 144));

function {:extern} PHEA_Geomnode(int) : int;

axiom (forall x: int :: { PHEA_Geomnode(x) } PHEA_Geomnode(x) == INT_ADD(x, 40));

axiom (forall x: int :: { PHEA_Geomnode(x) } PHEA_Geomnode(x) == PLUS(x, 1, 40));

function {:extern} PHEA_Node(int) : int;

axiom (forall x: int :: { PHEA_Node(x) } PHEA_Node(x) == INT_ADD(x, 24));

axiom (forall x: int :: { PHEA_Node(x) } PHEA_Node(x) == PLUS(x, 1, 24));

function {:extern} PHEPOL_Elem(int) : int;

axiom (forall x: int :: { PHEPOL_Elem(x) } PHEPOL_Elem(x) == INT_ADD(x, 144));

axiom (forall x: int :: { PHEPOL_Elem(x) } PHEPOL_Elem(x) == PLUS(x, 1, 144));

function {:extern} PHEPOL_Geomport(int) : int;

axiom (forall x: int :: { PHEPOL_Geomport(x) } PHEPOL_Geomport(x) == INT_ADD(x, 32));

axiom (forall x: int :: { PHEPOL_Geomport(x) } PHEPOL_Geomport(x) == PLUS(x, 1, 32));

function {:extern} PHEPOL_Port(int) : int;

axiom (forall x: int :: { PHEPOL_Port(x) } PHEPOL_Port(x) == INT_ADD(x, 72));

axiom (forall x: int :: { PHEPOL_Port(x) } PHEPOL_Port(x) == PLUS(x, 1, 72));

function {:extern} PHEPOL_UNIT_Elem(int) : int;

axiom (forall x: int :: { PHEPOL_UNIT_Elem(x) } PHEPOL_UNIT_Elem(x) == INT_ADD(x, 152));

axiom (forall x: int :: { PHEPOL_UNIT_Elem(x) } PHEPOL_UNIT_Elem(x) == PLUS(x, 1, 152));

function {:extern} PHEPOL_UNIT_Port(int) : int;

axiom (forall x: int :: { PHEPOL_UNIT_Port(x) } PHEPOL_UNIT_Port(x) == INT_ADD(x, 80));

axiom (forall x: int :: { PHEPOL_UNIT_Port(x) } PHEPOL_UNIT_Port(x) == PLUS(x, 1, 80));

function {:extern} PHI_GrPhaExc(int) : int;

axiom (forall x: int :: { PHI_GrPhaExc(x) } PHI_GrPhaExc(x) == INT_ADD(x, 128));

axiom (forall x: int :: { PHI_GrPhaExc(x) } PHI_GrPhaExc(x) == PLUS(x, 1, 128));

function {:extern} POLARIZATION_Elem(int) : int;

axiom (forall x: int :: { POLARIZATION_Elem(x) } POLARIZATION_Elem(x) == INT_ADD(x, 140));

axiom (forall x: int :: { POLARIZATION_Elem(x) } POLARIZATION_Elem(x) == PLUS(x, 1, 140));

function {:extern} PORTNUM_Port(int) : int;

axiom (forall x: int :: { PORTNUM_Port(x) } PORTNUM_Port(x) == INT_ADD(x, 0));

axiom (forall x: int :: { PORTNUM_Port(x) } PORTNUM_Port(x) == PLUS(x, 1, 0));

function {:extern} PORT_PTR_Elem(int) : int;

axiom (forall x: int :: { PORT_PTR_Elem(x) } PORT_PTR_Elem(x) == INT_ADD(x, 176));

axiom (forall x: int :: { PORT_PTR_Elem(x) } PORT_PTR_Elem(x) == PLUS(x, 1, 176));

function {:extern} PPA_Geomport(int) : int;

axiom (forall x: int :: { PPA_Geomport(x) } PPA_Geomport(x) == INT_ADD(x, 24));

axiom (forall x: int :: { PPA_Geomport(x) } PPA_Geomport(x) == PLUS(x, 1, 24));

function {:extern} PPA_Port(int) : int;

axiom (forall x: int :: { PPA_Port(x) } PPA_Port(x) == INT_ADD(x, 56));

axiom (forall x: int :: { PPA_Port(x) } PPA_Port(x) == PLUS(x, 1, 56));

function {:extern} PPA_UNIT_Port(int) : int;

axiom (forall x: int :: { PPA_UNIT_Port(x) } PPA_UNIT_Port(x) == INT_ADD(x, 64));

axiom (forall x: int :: { PPA_UNIT_Port(x) } PPA_UNIT_Port(x) == PLUS(x, 1, 64));

function {:extern} PQDIM_UNIT_Elem(int) : int;

axiom (forall x: int :: { PQDIM_UNIT_Elem(x) } PQDIM_UNIT_Elem(x) == INT_ADD(x, 80));

axiom (forall x: int :: { PQDIM_UNIT_Elem(x) } PQDIM_UNIT_Elem(x) == PLUS(x, 1, 80));

function {:extern} PQEXP_PTR_GrAmpExc(int) : int;

axiom (forall x: int :: { PQEXP_PTR_GrAmpExc(x) } PQEXP_PTR_GrAmpExc(x) == INT_ADD(x, 60));

axiom (forall x: int :: { PQEXP_PTR_GrAmpExc(x) } PQEXP_PTR_GrAmpExc(x) == PLUS(x, 1, 60));

function {:extern} PQEXP_PTR_GrPhaExc(int) : int;

axiom (forall x: int :: { PQEXP_PTR_GrPhaExc(x) } PQEXP_PTR_GrPhaExc(x) == INT_ADD(x, 136));

axiom (forall x: int :: { PQEXP_PTR_GrPhaExc(x) } PQEXP_PTR_GrPhaExc(x) == PLUS(x, 1, 136));

function {:extern} PQSTEP_UNIT_Grid(int) : int;

axiom (forall x: int :: { PQSTEP_UNIT_Grid(x) } PQSTEP_UNIT_Grid(x) == INT_ADD(x, 80));

axiom (forall x: int :: { PQSTEP_UNIT_Grid(x) } PQSTEP_UNIT_Grid(x) == PLUS(x, 1, 80));

function {:extern} PQXY_UNIT_Grid(int) : int;

axiom (forall x: int :: { PQXY_UNIT_Grid(x) } PQXY_UNIT_Grid(x) == INT_ADD(x, 120));

axiom (forall x: int :: { PQXY_UNIT_Grid(x) } PQXY_UNIT_Grid(x) == PLUS(x, 1, 120));

function {:extern} PREV_charac(int) : int;

axiom (forall x: int :: { PREV_charac(x) } PREV_charac(x) == INT_ADD(x, 8));

axiom (forall x: int :: { PREV_charac(x) } PREV_charac(x) == PLUS(x, 1, 8));

function {:extern} PSC_Geomport(int) : int;

axiom (forall x: int :: { PSC_Geomport(x) } PSC_Geomport(x) == INT_ADD(x, 16));

axiom (forall x: int :: { PSC_Geomport(x) } PSC_Geomport(x) == PLUS(x, 1, 16));

function {:extern} PSC_Port(int) : int;

axiom (forall x: int :: { PSC_Port(x) } PSC_Port(x) == INT_ADD(x, 24));

axiom (forall x: int :: { PSC_Port(x) } PSC_Port(x) == PLUS(x, 1, 24));

function {:extern} PSC_UNIT_Port(int) : int;

axiom (forall x: int :: { PSC_UNIT_Port(x) } PSC_UNIT_Port(x) == INT_ADD(x, 32));

axiom (forall x: int :: { PSC_UNIT_Port(x) } PSC_UNIT_Port(x) == PLUS(x, 1, 32));

function {:extern} PSEA_Geomnode(int) : int;

axiom (forall x: int :: { PSEA_Geomnode(x) } PSEA_Geomnode(x) == INT_ADD(x, 48));

axiom (forall x: int :: { PSEA_Geomnode(x) } PSEA_Geomnode(x) == PLUS(x, 1, 48));

function {:extern} PSEA_Node(int) : int;

axiom (forall x: int :: { PSEA_Node(x) } PSEA_Node(x) == INT_ADD(x, 32));

axiom (forall x: int :: { PSEA_Node(x) } PSEA_Node(x) == PLUS(x, 1, 32));

function {:extern} PSH_Geomport(int) : int;

axiom (forall x: int :: { PSH_Geomport(x) } PSH_Geomport(x) == INT_ADD(x, 8));

axiom (forall x: int :: { PSH_Geomport(x) } PSH_Geomport(x) == PLUS(x, 1, 8));

function {:extern} PSH_Port(int) : int;

axiom (forall x: int :: { PSH_Port(x) } PSH_Port(x) == INT_ADD(x, 40));

axiom (forall x: int :: { PSH_Port(x) } PSH_Port(x) == PLUS(x, 1, 40));

function {:extern} PSH_UNIT_Port(int) : int;

axiom (forall x: int :: { PSH_UNIT_Port(x) } PSH_UNIT_Port(x) == INT_ADD(x, 48));

axiom (forall x: int :: { PSH_UNIT_Port(x) } PSH_UNIT_Port(x) == PLUS(x, 1, 48));

function {:extern} PSIZE_Geomnode(int) : int;

axiom (forall x: int :: { PSIZE_Geomnode(x) } PSIZE_Geomnode(x) == INT_ADD(x, 72));

axiom (forall x: int :: { PSIZE_Geomnode(x) } PSIZE_Geomnode(x) == PLUS(x, 1, 72));

function {:extern} PSIZE_Group(int) : int;

axiom (forall x: int :: { PSIZE_Group(x) } PSIZE_Group(x) == INT_ADD(x, 72));

axiom (forall x: int :: { PSIZE_Group(x) } PSIZE_Group(x) == PLUS(x, 1, 72));

function {:extern} PSTEP_Grid(int) : int;

axiom (forall x: int :: { PSTEP_Grid(x) } PSTEP_Grid(x) == INT_ADD(x, 64));

axiom (forall x: int :: { PSTEP_Grid(x) } PSTEP_Grid(x) == PLUS(x, 1, 64));

function {:extern} PX_Grid(int) : int;

axiom (forall x: int :: { PX_Grid(x) } PX_Grid(x) == INT_ADD(x, 88));

axiom (forall x: int :: { PX_Grid(x) } PX_Grid(x) == PLUS(x, 1, 88));

function {:extern} PY_Grid(int) : int;

axiom (forall x: int :: { PY_Grid(x) } PY_Grid(x) == INT_ADD(x, 96));

axiom (forall x: int :: { PY_Grid(x) } PY_Grid(x) == PLUS(x, 1, 96));

function {:extern} Q1_EP_GrPhaExc(int) : int;

axiom (forall x: int :: { Q1_EP_GrPhaExc(x) } Q1_EP_GrPhaExc(x) == INT_ADD(x, 40));

axiom (forall x: int :: { Q1_EP_GrPhaExc(x) } Q1_EP_GrPhaExc(x) == PLUS(x, 1, 40));

function {:extern} Q1_ET_GrAmpExc(int) : int;

axiom (forall x: int :: { Q1_ET_GrAmpExc(x) } Q1_ET_GrAmpExc(x) == INT_ADD(x, 40));

axiom (forall x: int :: { Q1_ET_GrAmpExc(x) } Q1_ET_GrAmpExc(x) == PLUS(x, 1, 40));

function {:extern} Q2_EP_GrPhaExc(int) : int;

axiom (forall x: int :: { Q2_EP_GrPhaExc(x) } Q2_EP_GrPhaExc(x) == INT_ADD(x, 48));

axiom (forall x: int :: { Q2_EP_GrPhaExc(x) } Q2_EP_GrPhaExc(x) == PLUS(x, 1, 48));

function {:extern} Q2_ET_GrAmpExc(int) : int;

axiom (forall x: int :: { Q2_ET_GrAmpExc(x) } Q2_ET_GrAmpExc(x) == INT_ADD(x, 48));

axiom (forall x: int :: { Q2_ET_GrAmpExc(x) } Q2_ET_GrAmpExc(x) == PLUS(x, 1, 48));

function {:extern} QCOORD_Node(int) : int;

axiom (forall x: int :: { QCOORD_Node(x) } QCOORD_Node(x) == INT_ADD(x, 8));

axiom (forall x: int :: { QCOORD_Node(x) } QCOORD_Node(x) == PLUS(x, 1, 8));

function {:extern} QDIM_Elem(int) : int;

axiom (forall x: int :: { QDIM_Elem(x) } QDIM_Elem(x) == INT_ADD(x, 72));

axiom (forall x: int :: { QDIM_Elem(x) } QDIM_Elem(x) == PLUS(x, 1, 72));

function {:extern} QSIZE_Geomnode(int) : int;

axiom (forall x: int :: { QSIZE_Geomnode(x) } QSIZE_Geomnode(x) == INT_ADD(x, 80));

axiom (forall x: int :: { QSIZE_Geomnode(x) } QSIZE_Geomnode(x) == PLUS(x, 1, 80));

function {:extern} QSIZE_Group(int) : int;

axiom (forall x: int :: { QSIZE_Group(x) } QSIZE_Group(x) == INT_ADD(x, 80));

axiom (forall x: int :: { QSIZE_Group(x) } QSIZE_Group(x) == PLUS(x, 1, 80));

function {:extern} QSTEP_Grid(int) : int;

axiom (forall x: int :: { QSTEP_Grid(x) } QSTEP_Grid(x) == INT_ADD(x, 72));

axiom (forall x: int :: { QSTEP_Grid(x) } QSTEP_Grid(x) == PLUS(x, 1, 72));

function {:extern} QX_Grid(int) : int;

axiom (forall x: int :: { QX_Grid(x) } QX_Grid(x) == INT_ADD(x, 104));

axiom (forall x: int :: { QX_Grid(x) } QX_Grid(x) == PLUS(x, 1, 104));

function {:extern} QY_Grid(int) : int;

axiom (forall x: int :: { QY_Grid(x) } QY_Grid(x) == INT_ADD(x, 112));

axiom (forall x: int :: { QY_Grid(x) } QY_Grid(x) == PLUS(x, 1, 112));

function {:extern} RADIUS_Elem(int) : int;

axiom (forall x: int :: { RADIUS_Elem(x) } RADIUS_Elem(x) == INT_ADD(x, 48));

axiom (forall x: int :: { RADIUS_Elem(x) } RADIUS_Elem(x) == PLUS(x, 1, 48));

function {:extern} RADIUS_UNIT_Elem(int) : int;

axiom (forall x: int :: { RADIUS_UNIT_Elem(x) } RADIUS_UNIT_Elem(x) == INT_ADD(x, 56));

axiom (forall x: int :: { RADIUS_UNIT_Elem(x) } RADIUS_UNIT_Elem(x) == PLUS(x, 1, 56));

function {:extern} ROT_ANGLE_Grid(int) : int;

axiom (forall x: int :: { ROT_ANGLE_Grid(x) } ROT_ANGLE_Grid(x) == INT_ADD(x, 128));

axiom (forall x: int :: { ROT_ANGLE_Grid(x) } ROT_ANGLE_Grid(x) == PLUS(x, 1, 128));

function {:extern} SHAPE_Geomnode(int) : int;

axiom (forall x: int :: { SHAPE_Geomnode(x) } SHAPE_Geomnode(x) == INT_ADD(x, 68));

axiom (forall x: int :: { SHAPE_Geomnode(x) } SHAPE_Geomnode(x) == PLUS(x, 1, 68));

function {:extern} SHAPE_Group(int) : int;

axiom (forall x: int :: { SHAPE_Group(x) } SHAPE_Group(x) == INT_ADD(x, 68));

axiom (forall x: int :: { SHAPE_Group(x) } SHAPE_Group(x) == PLUS(x, 1, 68));

function {:extern} SUBGROUP_PTR_Geomnode(int) : int;

axiom (forall x: int :: { SUBGROUP_PTR_Geomnode(x) } SUBGROUP_PTR_Geomnode(x) == INT_ADD(x, 64));

axiom (forall x: int :: { SUBGROUP_PTR_Geomnode(x) } SUBGROUP_PTR_Geomnode(x) == PLUS(x, 1, 64));

function {:extern} SUPER_GROUP_PTR_Group(int) : int;

axiom (forall x: int :: { SUPER_GROUP_PTR_Group(x) } SUPER_GROUP_PTR_Group(x) == INT_ADD(x, 96));

axiom (forall x: int :: { SUPER_GROUP_PTR_Group(x) } SUPER_GROUP_PTR_Group(x) == PLUS(x, 1, 96));

function {:extern} TAPERE_Elem(int) : int;

axiom (forall x: int :: { TAPERE_Elem(x) } TAPERE_Elem(x) == INT_ADD(x, 120));

axiom (forall x: int :: { TAPERE_Elem(x) } TAPERE_Elem(x) == PLUS(x, 1, 120));

function {:extern} TAPERH_Elem(int) : int;

axiom (forall x: int :: { TAPERH_Elem(x) } TAPERH_Elem(x) == INT_ADD(x, 128));

axiom (forall x: int :: { TAPERH_Elem(x) } TAPERH_Elem(x) == PLUS(x, 1, 128));

function {:extern} TAPER_UNIT_Elem(int) : int;

axiom (forall x: int :: { TAPER_UNIT_Elem(x) } TAPER_UNIT_Elem(x) == INT_ADD(x, 136));

axiom (forall x: int :: { TAPER_UNIT_Elem(x) } TAPER_UNIT_Elem(x) == PLUS(x, 1, 136));

function {:extern} THEA_Geomnode(int) : int;

axiom (forall x: int :: { THEA_Geomnode(x) } THEA_Geomnode(x) == INT_ADD(x, 32));

axiom (forall x: int :: { THEA_Geomnode(x) } THEA_Geomnode(x) == PLUS(x, 1, 32));

function {:extern} THEA_Node(int) : int;

axiom (forall x: int :: { THEA_Node(x) } THEA_Node(x) == INT_ADD(x, 16));

axiom (forall x: int :: { THEA_Node(x) } THEA_Node(x) == PLUS(x, 1, 16));

function {:extern} THETA_GrPhaExc(int) : int;

axiom (forall x: int :: { THETA_GrPhaExc(x) } THETA_GrPhaExc(x) == INT_ADD(x, 120));

axiom (forall x: int :: { THETA_GrPhaExc(x) } THETA_GrPhaExc(x) == PLUS(x, 1, 120));

function {:extern} TYPE_Elem(int) : int;

axiom (forall x: int :: { TYPE_Elem(x) } TYPE_Elem(x) == INT_ADD(x, 0));

axiom (forall x: int :: { TYPE_Elem(x) } TYPE_Elem(x) == PLUS(x, 1, 0));

function {:extern} TYPE_GrAmpExc(int) : int;

axiom (forall x: int :: { TYPE_GrAmpExc(x) } TYPE_GrAmpExc(x) == INT_ADD(x, 0));

axiom (forall x: int :: { TYPE_GrAmpExc(x) } TYPE_GrAmpExc(x) == PLUS(x, 1, 0));

function {:extern} TYPE_GrPhaExc(int) : int;

axiom (forall x: int :: { TYPE_GrPhaExc(x) } TYPE_GrPhaExc(x) == INT_ADD(x, 0));

axiom (forall x: int :: { TYPE_GrPhaExc(x) } TYPE_GrPhaExc(x) == PLUS(x, 1, 0));

function {:extern} TYPE_Grid(int) : int;

axiom (forall x: int :: { TYPE_Grid(x) } TYPE_Grid(x) == INT_ADD(x, 36));

axiom (forall x: int :: { TYPE_Grid(x) } TYPE_Grid(x) == PLUS(x, 1, 36));

function {:extern} UNIF_VAL_GrAmpExc(int) : int;

axiom (forall x: int :: { UNIF_VAL_GrAmpExc(x) } UNIF_VAL_GrAmpExc(x) == INT_ADD(x, 8));

axiom (forall x: int :: { UNIF_VAL_GrAmpExc(x) } UNIF_VAL_GrAmpExc(x) == PLUS(x, 1, 8));

function {:extern} UNIF_VAL_GrPhaExc(int) : int;

axiom (forall x: int :: { UNIF_VAL_GrPhaExc(x) } UNIF_VAL_GrPhaExc(x) == INT_ADD(x, 8));

axiom (forall x: int :: { UNIF_VAL_GrPhaExc(x) } UNIF_VAL_GrPhaExc(x) == PLUS(x, 1, 8));

function {:extern} U_GrPhaExc(int) : int;

axiom (forall x: int :: { U_GrPhaExc(x) } U_GrPhaExc(x) == INT_ADD(x, 104));

axiom (forall x: int :: { U_GrPhaExc(x) } U_GrPhaExc(x) == PLUS(x, 1, 104));

function {:extern} V_GrPhaExc(int) : int;

axiom (forall x: int :: { V_GrPhaExc(x) } V_GrPhaExc(x) == INT_ADD(x, 112));

axiom (forall x: int :: { V_GrPhaExc(x) } V_GrPhaExc(x) == PLUS(x, 1, 112));

function {:extern} XA_Geomnode(int) : int;

axiom (forall x: int :: { XA_Geomnode(x) } XA_Geomnode(x) == INT_ADD(x, 8));

axiom (forall x: int :: { XA_Geomnode(x) } XA_Geomnode(x) == PLUS(x, 1, 8));

function {:extern} YA_Geomnode(int) : int;

axiom (forall x: int :: { YA_Geomnode(x) } YA_Geomnode(x) == INT_ADD(x, 16));

axiom (forall x: int :: { YA_Geomnode(x) } YA_Geomnode(x) == PLUS(x, 1, 16));

function {:extern} ZA_Geomnode(int) : int;

axiom (forall x: int :: { ZA_Geomnode(x) } ZA_Geomnode(x) == INT_ADD(x, 24));

axiom (forall x: int :: { ZA_Geomnode(x) } ZA_Geomnode(x) == PLUS(x, 1, 24));

function {:extern} info_charac(int) : int;

axiom (forall x: int :: { info_charac(x) } info_charac(x) == INT_ADD(x, 0));

axiom (forall x: int :: { info_charac(x) } info_charac(x) == PLUS(x, 1, 0));

function {:extern}  INT_EQ(x: int, y: int) : bool
{
  x == y
}

function {:extern}  INT_NEQ(x: int, y: int) : bool
{
  x != y
}

function {:extern}  INT_ADD(x: int, y: int) : int
{
  x + y
}

function {:extern}  INT_SUB(x: int, y: int) : int
{
  x - y
}

function {:extern}  INT_MULT(x: int, y: int) : int
{
  x * y
}

function {:extern}  INT_LT(x: int, y: int) : bool
{
  x < y
}

function {:extern}  INT_ULT(x: int, y: int) : bool
{
  x < y
}

function {:extern}  INT_LEQ(x: int, y: int) : bool
{
  x <= y
}

function {:extern}  INT_ULEQ(x: int, y: int) : bool
{
  x <= y
}

function {:extern}  INT_GT(x: int, y: int) : bool
{
  x > y
}

function {:extern}  INT_UGT(x: int, y: int) : bool
{
  x > y
}

function {:extern}  INT_GEQ(x: int, y: int) : bool
{
  x >= y
}

function {:extern}  INT_UGEQ(x: int, y: int) : bool
{
  x >= y
}

function {:extern}  BV32_EQ(x: bv32, y: bv32) : bool
{
  x == y
}

function {:extern}  BV32_NEQ(x: bv32, y: bv32) : bool
{
  x != y
}

function {:extern} {:bvbuiltin "bvadd"} BV32_ADD(x: bv32, y: bv32) : bv32;

function {:extern} {:bvbuiltin "bvsub"} BV32_SUB(x: bv32, y: bv32) : bv32;

function {:extern} {:bvbuiltin "bvmul"} BV32_MULT(x: bv32, y: bv32) : bv32;

function {:extern} {:bvbuiltin "bvudiv"} BV32_DIV(x: bv32, y: bv32) : bv32;

function {:extern} {:bvbuiltin "bvult"} BV32_ULT(x: bv32, y: bv32) : bool;

function {:extern} {:bvbuiltin "bvslt"} BV32_LT(x: bv32, y: bv32) : bool;

function {:extern} {:bvbuiltin "bvule"} BV32_ULEQ(x: bv32, y: bv32) : bool;

function {:extern} {:bvbuiltin "bvsle"} BV32_LEQ(x: bv32, y: bv32) : bool;

function {:extern} {:bvbuiltin "bvugt"} BV32_UGT(x: bv32, y: bv32) : bool;

function {:extern} {:bvbuiltin "bvsgt"} BV32_GT(x: bv32, y: bv32) : bool;

function {:extern} {:bvbuiltin "bvuge"} BV32_UGEQ(x: bv32, y: bv32) : bool;

function {:extern} {:bvbuiltin "bvsge"} BV32_GEQ(x: bv32, y: bv32) : bool;

function {:extern} MINUS_BOTH_PTR_OR_BOTH_INT(a: int, b: int, size: int) : int;

axiom (forall a: int, b: int, size: int :: { MINUS_BOTH_PTR_OR_BOTH_INT(a, b, size) } INT_LEQ(INT_MULT(size, MINUS_BOTH_PTR_OR_BOTH_INT(a, b, size)), INT_SUB(a, b)) && INT_LT(INT_SUB(a, b), INT_MULT(size, INT_ADD(MINUS_BOTH_PTR_OR_BOTH_INT(a, b, size), 1))));

axiom (forall a: int, b: int, size: int :: { MINUS_BOTH_PTR_OR_BOTH_INT(a, b, size) } MINUS_BOTH_PTR_OR_BOTH_INT(a, b, 1) == INT_SUB(a, b));

function {:extern} MINUS_LEFT_PTR(a: int, a_size: int, b: int) : int;

axiom (forall a: int, a_size: int, b: int :: { MINUS_LEFT_PTR(a, a_size, b) } MINUS_LEFT_PTR(a, a_size, b) == INT_SUB(a, INT_MULT(a_size, b)));

function {:extern} PLUS(a: int, a_size: int, b: int) : int;

axiom (forall a: int, a_size: int, b: int :: { PLUS(a, a_size, b) } PLUS(a, a_size, b) == INT_ADD(a, INT_MULT(a_size, b)));

function {:extern} MULT(a: int, b: int) : int;

axiom (forall a: int, b: int :: { MULT(a, b) } MULT(a, b) == INT_MULT(a, b));

function {:extern} DIV(a: int, b: int) : int;

function {:extern} BINARY_UNKNOWN(a: int, b: int) : int;

axiom (forall a: int, b: int :: { DIV(a, b) } a >= 0 && b > 0 ==> b * DIV(a, b) <= a && a < b * (DIV(a, b) + 1));

axiom (forall a: int, b: int :: { DIV(a, b) } a >= 0 && b < 0 ==> b * DIV(a, b) <= a && a < b * (DIV(a, b) - 1));

axiom (forall a: int, b: int :: { DIV(a, b) } a < 0 && b > 0 ==> b * DIV(a, b) >= a && a > b * (DIV(a, b) - 1));

axiom (forall a: int, b: int :: { DIV(a, b) } a < 0 && b < 0 ==> b * DIV(a, b) >= a && a > b * (DIV(a, b) + 1));

function {:extern} BINARY_BOTH_INT(a: int, b: int) : int;

function {:extern} POW2(a: int) : bool;

axiom POW2(1);

axiom POW2(2);

axiom POW2(4);

axiom POW2(8);

axiom POW2(16);

axiom POW2(32);

axiom POW2(64);

axiom POW2(128);

axiom POW2(256);

axiom POW2(512);

axiom POW2(1024);

axiom POW2(2048);

axiom POW2(4096);

axiom POW2(8192);

axiom POW2(16384);

axiom POW2(32768);

axiom POW2(65536);

axiom POW2(131072);

axiom POW2(262144);

axiom POW2(524288);

axiom POW2(1048576);

axiom POW2(2097152);

axiom POW2(4194304);

axiom POW2(8388608);

axiom POW2(16777216);

axiom POW2(33554432);

function {:extern} BIT_BAND(a: int, b: int) : int;

axiom (forall a: int, b: int :: { BIT_BAND(a, b) } a == b ==> BIT_BAND(a, b) == a);

axiom (forall a: int, b: int :: { BIT_BAND(a, b) } POW2(a) && POW2(b) && a != b ==> BIT_BAND(a, b) == 0);

axiom (forall a: int, b: int :: { BIT_BAND(a, b) } a == 0 || b == 0 ==> BIT_BAND(a, b) == 0);

function {:extern} BIT_BOR(a: int, b: int) : int;

function {:extern} BIT_BXOR(a: int, b: int) : int;

function {:extern} BIT_BNOT(a: int) : int;

function {:extern} choose(a: bool, b: int, c: int) : int;

axiom (forall a: bool, b: int, c: int :: { choose(a, b, c) } a ==> choose(a, b, c) == b);

axiom (forall a: bool, b: int, c: int :: { choose(a, b, c) } !a ==> choose(a, b, c) == c);

function {:extern} LIFT(a: bool) : int;

axiom (forall a: bool :: { LIFT(a) } a <==> LIFT(a) != 0);

function {:extern} PTR_NOT(a: int) : int;

axiom (forall a: int :: { PTR_NOT(a) } a == 0 ==> PTR_NOT(a) != 0);

axiom (forall a: int :: { PTR_NOT(a) } a != 0 ==> PTR_NOT(a) == 0);

function {:extern} NULL_CHECK(a: int) : int;

axiom (forall a: int :: { NULL_CHECK(a) } a == 0 ==> NULL_CHECK(a) != 0);

axiom (forall a: int :: { NULL_CHECK(a) } a != 0 ==> NULL_CHECK(a) == 0);

procedure {:extern} havoc_assert(i: int);
  requires i != 0;



procedure {:extern} havoc_assume(i: int);
  ensures i != 0;



procedure {:extern} __HAVOC_free(a: int);



function {:extern} NewAlloc(x: int, y: int) : int;

procedure {:extern} __HAVOC_malloc(obj_size: int) returns (new: int);
  free requires INT_GEQ(obj_size, 0);
  modifies alloc;
  ensures new == old(alloc);
  ensures INT_GT(alloc, INT_ADD(new, obj_size));
  ensures Base(new) == new;



procedure {:extern} __HAVOC_det_malloc(obj_size: int) returns (new: int);
  free requires INT_GEQ(obj_size, 0);
  modifies alloc;
  ensures new == old(alloc);
  ensures INT_GT(alloc, INT_ADD(new, obj_size));
  ensures Base(new) == new;
  ensures alloc == NewAlloc(old(alloc), obj_size);



procedure {:extern} __HAVOC_memset_split_1(A: [int]int, p: int, c: int, n: int) returns (ret: [int]int);
  ensures Subset(Empty(), Array(p, 1, n)) && (forall i: int :: { ret[i] } Array(p, 1, n)[i] || ret[i] == A[i]);
  ensures Subset(Empty(), Array(p, 1, n)) && (forall i: int :: { ret[i] } Array(p, 1, n)[i] ==> ret[i] == c);



procedure {:extern} __HAVOC_memset_split_2(A: [int]int, p: int, c: int, n: int) returns (ret: [int]int);
  ensures Subset(Empty(), Array(p, 2, n)) && (forall i: int :: { ret[i] } Array(p, 2, n)[i] || ret[i] == A[i]);
  ensures Subset(Empty(), Array(p, 2, n)) && (forall i: int :: { ret[i] } Array(p, 2, n)[i] ==> ret[i] == c);



procedure {:extern} __HAVOC_memset_split_4(A: [int]int, p: int, c: int, n: int) returns (ret: [int]int);
  ensures Subset(Empty(), Array(p, 4, n)) && (forall i: int :: { ret[i] } Array(p, 4, n)[i] || ret[i] == A[i]);
  ensures Subset(Empty(), Array(p, 4, n)) && (forall i: int :: { ret[i] } Array(p, 4, n)[i] ==> ret[i] == c);



procedure {:extern} nondet_intrinsic() returns (x: int);



procedure {:extern} nondet_choice() returns (x: int);



var {:extern} detChoiceCnt: int;

function {:extern} DetChoiceFunc(a: int) : int;

procedure {:extern} det_choice() returns (x: int);
  modifies detChoiceCnt;
  ensures detChoiceCnt == INT_ADD(old(detChoiceCnt), 1);
  ensures x == DetChoiceFunc(old(detChoiceCnt));



procedure {:extern} _strdup(str: int) returns (new: int);



procedure {:extern} _xstrcasecmp(a0: int, a1: int) returns (ret: int);



procedure {:extern} _xstrcmp(a0: int, a1: int) returns (ret: int);



function {:extern} Equal([int]bool, [int]bool) : bool;

function {:extern} Subset([int]bool, [int]bool) : bool;

function {:extern} Disjoint([int]bool, [int]bool) : bool;

function {:extern} Empty() : [int]bool;

function {:extern} SetTrue() : [int]bool;

function {:extern} Singleton(int) : [int]bool;

function {:extern} Reachable([int,int]bool, int) : [int]bool;

function {:extern} Union([int]bool, [int]bool) : [int]bool;

function {:extern} Intersection([int]bool, [int]bool) : [int]bool;

function {:extern} Difference([int]bool, [int]bool) : [int]bool;

function {:extern} Dereference([int]bool, [int]int) : [int]bool;

function {:extern} Inverse(f: [int]int, x: int) : [int]bool;

function {:extern} AtLeast(int, int) : [int]bool;

function {:extern} Rep(int, int) : int;

axiom (forall n: int, x: int, y: int :: { AtLeast(n, x)[y] } AtLeast(n, x)[y] ==> INT_LEQ(x, y) && Rep(n, x) == Rep(n, y));

axiom (forall n: int, x: int, y: int :: { AtLeast(n, x), Rep(n, x), Rep(n, y) } INT_LEQ(x, y) && Rep(n, x) == Rep(n, y) ==> AtLeast(n, x)[y]);

axiom (forall n: int, x: int :: { AtLeast(n, x) } AtLeast(n, x)[x]);

axiom (forall n: int, x: int, z: int :: { PLUS(x, n, z) } Rep(n, x) == Rep(n, PLUS(x, n, z)));

axiom (forall n: int, x: int :: { Rep(n, x) } (exists k: int :: INT_SUB(Rep(n, x), x) == INT_MULT(n, k)));

function {:extern} Array(int, int, int) : [int]bool;

axiom (forall x: int, n: int, z: int :: { Array(x, n, z) } INT_LEQ(z, 0) ==> Equal(Array(x, n, z), Empty()));

axiom (forall x: int, n: int, z: int :: { Array(x, n, z) } INT_GT(z, 0) ==> Equal(Array(x, n, z), Difference(AtLeast(n, x), AtLeast(n, PLUS(x, n, z)))));

axiom (forall x: int :: !Empty()[x]);

axiom (forall x: int :: SetTrue()[x]);

axiom (forall x: int, y: int :: { Singleton(y)[x] } Singleton(y)[x] <==> x == y);

axiom (forall y: int :: { Singleton(y) } Singleton(y)[y]);

axiom (forall x: int, S: [int]bool, T: [int]bool :: { Union(S, T)[x] } { Union(S, T), S[x] } { Union(S, T), T[x] } Union(S, T)[x] <==> S[x] || T[x]);

axiom (forall x: int, S: [int]bool, T: [int]bool :: { Intersection(S, T)[x] } { Intersection(S, T), S[x] } { Intersection(S, T), T[x] } Intersection(S, T)[x] <==> S[x] && T[x]);

axiom (forall x: int, S: [int]bool, T: [int]bool :: { Difference(S, T)[x] } { Difference(S, T), S[x] } { Difference(S, T), T[x] } Difference(S, T)[x] <==> S[x] && !T[x]);

axiom (forall S: [int]bool, T: [int]bool :: { Equal(S, T) } Equal(S, T) <==> Subset(S, T) && Subset(T, S));

axiom (forall x: int, S: [int]bool, T: [int]bool :: { S[x], Subset(S, T) } { T[x], Subset(S, T) } S[x] && Subset(S, T) ==> T[x]);

axiom (forall S: [int]bool, T: [int]bool :: { Subset(S, T) } Subset(S, T) || (exists x: int :: S[x] && !T[x]));

axiom (forall x: int, S: [int]bool, T: [int]bool :: { S[x], Disjoint(S, T) } { T[x], Disjoint(S, T) } !(S[x] && Disjoint(S, T) && T[x]));

axiom (forall S: [int]bool, T: [int]bool :: { Disjoint(S, T) } Disjoint(S, T) || (exists x: int :: S[x] && T[x]));

axiom (forall f: [int]int, x: int :: { Inverse(f, f[x]) } Inverse(f, f[x])[x]);

axiom (forall f: [int]int, x: int, y: int :: { Inverse(f, y), f[x] } Inverse(f, y)[x] ==> f[x] == y);

axiom (forall f: [int]int, x: int, y: int :: { Inverse(f[x := y], y) } Equal(Inverse(f[x := y], y), Union(Inverse(f, y), Singleton(x))));

axiom (forall f: [int]int, x: int, y: int, z: int :: { Inverse(f[x := y], z) } y == z || Equal(Inverse(f[x := y], z), Difference(Inverse(f, z), Singleton(x))));

axiom (forall x: int, S: [int]bool, M: [int]int :: { Dereference(S, M)[x] } Dereference(S, M)[x] ==> (exists y: int :: x == M[y] && S[y]));

axiom (forall x: int, S: [int]bool, M: [int]int :: { M[x], S[x], Dereference(S, M) } S[x] ==> Dereference(S, M)[M[x]]);

axiom (forall x: int, y: int, S: [int]bool, M: [int]int :: { Dereference(S, M[x := y]) } !S[x] ==> Equal(Dereference(S, M[x := y]), Dereference(S, M)));

axiom (forall x: int, y: int, S: [int]bool, M: [int]int :: { Dereference(S, M[x := y]) } S[x] && Equal(Intersection(Inverse(M, M[x]), S), Singleton(x)) ==> Equal(Dereference(S, M[x := y]), Union(Difference(Dereference(S, M), Singleton(M[x])), Singleton(y))));

axiom (forall x: int, y: int, S: [int]bool, M: [int]int :: { Dereference(S, M[x := y]) } S[x] && !Equal(Intersection(Inverse(M, M[x]), S), Singleton(x)) ==> Equal(Dereference(S, M[x := y]), Union(Dereference(S, M), Singleton(y))));

function {:extern} Unified([name][int]int) : [int]int;

axiom (forall M: [name][int]int, x: int :: { Unified(M)[x] } Unified(M)[x] == M[Field(x)][x]);

axiom (forall M: [name][int]int, x: int, y: int :: { Unified(M[Field(x) := M[Field(x)][x := y]]) } Unified(M[Field(x) := M[Field(x)][x := y]]) == Unified(M)[x := y]);

var {:extern} errline_printed: int;

const {:extern} unique ErrorMessages: int;

axiom ErrorMessages != 0;

axiom Base(ErrorMessages) == ErrorMessages;

const {:extern} unique GLOBLE_FILENAME: int;

axiom GLOBLE_FILENAME != 0;

axiom Base(GLOBLE_FILENAME) == GLOBLE_FILENAME;

const {:extern} unique Keywords: int;

axiom Keywords != 0;

axiom Base(Keywords) == Keywords;

const {:extern} unique MOSErrors: int;

axiom MOSErrors != 0;

axiom Base(MOSErrors) == MOSErrors;

const {:extern} unique UserNames: int;

axiom UserNames != 0;

axiom Base(UserNames) == UserNames;

const {:extern} unique BOOGIE_LARGE_INT_NEG_2147483648: int;

const {:extern} unique BOOGIE_FLOAT_CONST___1: int;

const {:extern} unique BOOGIE_FLOAT_CONST_0: int;

const {:extern} unique BOOGIE_FLOAT_CONST_2.22507e__308: int;

const {:extern} unique BOOGIE_FLOAT_CONST_1: int;

const {:extern} unique BOOGIE_FLOAT_CONST_2: int;

const {:extern} unique BOOGIE_FLOAT_CONST_3.14159: int;

const {:extern} unique BOOGIE_FLOAT_CONST_4: int;

const {:extern} unique BOOGIE_FLOAT_CONST_10: int;

const {:extern} unique BOOGIE_FLOAT_CONST_20: int;

const {:extern} unique BOOGIE_FLOAT_CONST_45: int;

const {:extern} unique BOOGIE_FLOAT_CONST_57.2958: int;

const {:extern} unique BOOGIE_FLOAT_CONST_60: int;

const {:extern} unique BOOGIE_FLOAT_CONST_90: int;

const {:extern} unique BOOGIE_FLOAT_CONST_100: int;

const {:extern} unique BOOGIE_FLOAT_CONST_180: int;

const {:extern} unique BOOGIE_FLOAT_CONST_360: int;

const {:extern} unique BOOGIE_FLOAT_CONST_1000: int;

const {:extern} unique BOOGIE_FLOAT_CONST_1.79769e__308: int;

function {:extern} value_is(c: int, e: int) : bool;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3342} unique __ctobpl_const_101: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3326} unique __ctobpl_const_107: int;

const {:extern} {:model_const "result.strcmp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3341} unique __ctobpl_const_99: int;

const {:extern} {:model_const "word[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3322} unique __ctobpl_const_105: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3321} unique __ctobpl_const_91: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3327} unique __ctobpl_const_112: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3405} unique __ctobpl_const_147: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3322} unique __ctobpl_const_106: int;

const {:extern} {:model_const "result.isalnum"} {:sourceFile ".\v24\space.c"} {:sourceLine 3321} unique __ctobpl_const_90: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3358} unique __ctobpl_const_114: int;

const {:extern} {:model_const "kw"} {:sourceFile ".\v24\space.c"} {:sourceLine 3341} unique __ctobpl_const_98: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3322} unique __ctobpl_const_104: int;

const {:extern} {:model_const "kw"} {:sourceFile ".\v24\space.c"} {:sourceLine 3341} unique __ctobpl_const_97: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3321} unique __ctobpl_const_94: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3327} unique __ctobpl_const_111: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3360} unique __ctobpl_const_115: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3342} unique __ctobpl_const_100: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3358} unique __ctobpl_const_113: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3334} unique __ctobpl_const_95: int;

const {:extern} {:model_const "isalnum.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3321} unique __ctobpl_const_89: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3342} unique __ctobpl_const_103: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3326} unique __ctobpl_const_108: int;

const {:extern} {:model_const "isalnum.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3321} unique __ctobpl_const_86: int;

const {:extern} {:model_const "isalnum.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3321} unique __ctobpl_const_88: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3321} unique __ctobpl_const_93: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3321} unique __ctobpl_const_87: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3342} unique __ctobpl_const_102: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3327} unique __ctobpl_const_109: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3327} unique __ctobpl_const_110: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3321} unique __ctobpl_const_92: int;

const {:extern} {:model_const "word[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3334} unique __ctobpl_const_96: int;

const {:extern} {:model_const "ureal_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3186} unique __ctobpl_const_6: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3215} unique __ctobpl_const_19: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3186} unique __ctobpl_const_7: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3215} unique __ctobpl_const_20: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3221} unique __ctobpl_const_22: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3202} unique __ctobpl_const_18: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3177} unique __ctobpl_const_1: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3177} unique __ctobpl_const_2: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3182} unique __ctobpl_const_4: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3182} unique __ctobpl_const_5: int;

const {:extern} {:model_const "ureal_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3186} unique __ctobpl_const_8: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3186} unique __ctobpl_const_10: int;

const {:extern} {:model_const "* ureal_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3196} unique __ctobpl_const_14: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3202} unique __ctobpl_const_15: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3216} unique __ctobpl_const_21: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3182} unique __ctobpl_const_3: int;

const {:extern} {:model_const "ureal_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3196} unique __ctobpl_const_13: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3202} unique __ctobpl_const_16: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 3186} unique __ctobpl_const_11: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3186} unique __ctobpl_const_9: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3187} unique __ctobpl_const_12: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3202} unique __ctobpl_const_17: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3315} unique __ctobpl_const_85: int;

const {:extern} {:model_const "num[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3238} unique __ctobpl_const_37: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3245} unique __ctobpl_const_41: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3266} unique __ctobpl_const_52: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3234} unique __ctobpl_const_34: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3245} unique __ctobpl_const_43: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3230} unique __ctobpl_const_27: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3245} unique __ctobpl_const_42: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3230} unique __ctobpl_const_26: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3230} unique __ctobpl_const_25: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3230} unique __ctobpl_const_28: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3234} unique __ctobpl_const_35: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3271} unique __ctobpl_const_53: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3245} unique __ctobpl_const_44: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3251} unique __ctobpl_const_46: int;

const {:extern} {:model_const "result.isdigit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3234} unique __ctobpl_const_33: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3251} unique __ctobpl_const_45: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3234} unique __ctobpl_const_32: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3251} unique __ctobpl_const_48: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3251} unique __ctobpl_const_50: int;

const {:extern} {:model_const "num[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3271} unique __ctobpl_const_54: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3234} unique __ctobpl_const_30: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3234} unique __ctobpl_const_31: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3221} unique __ctobpl_const_24: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3251} unique __ctobpl_const_47: int;

const {:extern} {:model_const "result.isdigit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3251} unique __ctobpl_const_49: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3238} unique __ctobpl_const_36: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3244} unique __ctobpl_const_40: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3234} unique __ctobpl_const_29: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3238} unique __ctobpl_const_38: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3244} unique __ctobpl_const_39: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3251} unique __ctobpl_const_51: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3221} unique __ctobpl_const_23: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3311} unique __ctobpl_const_78: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3311} unique __ctobpl_const_80: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3253} unique __ctobpl_const_66: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3268} unique __ctobpl_const_64: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3311} unique __ctobpl_const_81: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3315} unique __ctobpl_const_82: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3315} unique __ctobpl_const_83: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3268} unique __ctobpl_const_63: int;

const {:extern} {:model_const "intero"} {:sourceFile ".\v24\space.c"} {:sourceLine 3279} unique __ctobpl_const_55: int;

const {:extern} {:model_const "result.atoi"} {:sourceFile ".\v24\space.c"} {:sourceLine 3279} unique __ctobpl_const_57: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3259} unique __ctobpl_const_71: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3259} unique __ctobpl_const_74: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3315} unique __ctobpl_const_84: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3310} unique __ctobpl_const_77: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3311} unique __ctobpl_const_79: int;

const {:extern} {:model_const "num[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3253} unique __ctobpl_const_67: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3285} unique __ctobpl_const_61: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3252} unique __ctobpl_const_65: int;

const {:extern} {:model_const "* intero"} {:sourceFile ".\v24\space.c"} {:sourceLine 3279} unique __ctobpl_const_56: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3285} unique __ctobpl_const_59: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3258} unique __ctobpl_const_70: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3285} unique __ctobpl_const_58: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3259} unique __ctobpl_const_72: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3253} unique __ctobpl_const_68: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3299} unique __ctobpl_const_75: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3285} unique __ctobpl_const_60: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3258} unique __ctobpl_const_69: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3259} unique __ctobpl_const_73: int;

const {:extern} {:model_const "num[5]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3267} unique __ctobpl_const_62: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3310} unique __ctobpl_const_76: int;

const {:extern} {:model_const "val"} {:sourceFile ".\v24\space.c"} {:sourceLine 3360} unique __ctobpl_const_116: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4756} unique __ctobpl_const_301: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3481} unique __ctobpl_const_203: int;

const {:extern} {:model_const "num[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3436} unique __ctobpl_const_195: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3484} unique __ctobpl_const_204: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3440} unique __ctobpl_const_198: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_181: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3466} unique __ctobpl_const_189: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3441} unique __ctobpl_const_200: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3447} unique __ctobpl_const_182: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3441} unique __ctobpl_const_201: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3484} unique __ctobpl_const_205: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3485} unique __ctobpl_const_206: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3485} unique __ctobpl_const_207: int;

const {:extern} {:model_const "reale"} {:sourceFile ".\v24\space.c"} {:sourceLine 3458} unique __ctobpl_const_186: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3485} unique __ctobpl_const_208: int;

const {:extern} {:model_const "result.atof"} {:sourceFile ".\v24\space.c"} {:sourceLine 3458} unique __ctobpl_const_188: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_180: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3466} unique __ctobpl_const_191: int;

const {:extern} {:model_const "num[100]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3448} unique __ctobpl_const_185: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3436} unique __ctobpl_const_194: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3435} unique __ctobpl_const_193: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3450} unique __ctobpl_const_183: int;

const {:extern} {:model_const "* reale"} {:sourceFile ".\v24\space.c"} {:sourceLine 3458} unique __ctobpl_const_187: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3466} unique __ctobpl_const_190: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3440} unique __ctobpl_const_197: int;

const {:extern} {:model_const "num[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3450} unique __ctobpl_const_184: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3436} unique __ctobpl_const_196: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3441} unique __ctobpl_const_199: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3466} unique __ctobpl_const_192: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_179: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3441} unique __ctobpl_const_202: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1041} unique __ctobpl_const_856: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1046} unique __ctobpl_const_860: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1063} unique __ctobpl_const_868: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1041} unique __ctobpl_const_855: int;

const {:extern} {:model_const "result.ampunit"} {:sourceFile ".\v24\space.c"} {:sourceLine 1041} unique __ctobpl_const_858: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1031} unique __ctobpl_const_844: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1031} unique __ctobpl_const_842: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1009} unique __ctobpl_const_839: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1023} unique __ctobpl_const_840: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1023} unique __ctobpl_const_841: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1035} unique __ctobpl_const_846: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1041} unique __ctobpl_const_857: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1035} unique __ctobpl_const_849: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1035} unique __ctobpl_const_848: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1035} unique __ctobpl_const_847: int;

const {:extern} {:model_const "* amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1046} unique __ctobpl_const_861: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1049} unique __ctobpl_const_862: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1009} unique __ctobpl_const_838: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1045} unique __ctobpl_const_859: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1049} unique __ctobpl_const_863: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1049} unique __ctobpl_const_864: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 1035} unique __ctobpl_const_851: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1032} unique __ctobpl_const_845: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1035} unique __ctobpl_const_850: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1031} unique __ctobpl_const_843: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1049} unique __ctobpl_const_865: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 1200} unique __ctobpl_const_998: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1059} unique __ctobpl_const_866: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1036} unique __ctobpl_const_852: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1059} unique __ctobpl_const_867: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1041} unique __ctobpl_const_853: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1041} unique __ctobpl_const_854: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1002} unique __ctobpl_const_829: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1002} unique __ctobpl_const_832: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1000} unique __ctobpl_const_822: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 994} unique __ctobpl_const_807: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 994} unique __ctobpl_const_809: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 998} unique __ctobpl_const_813: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1000} unique __ctobpl_const_825: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 998} unique __ctobpl_const_817: int;

const {:extern} {:model_const "* unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 997} unique __ctobpl_const_811: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 998} unique __ctobpl_const_814: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 998} unique __ctobpl_const_812: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 998} unique __ctobpl_const_815: int;

const {:extern} {:model_const "* unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 999} unique __ctobpl_const_819: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1000} unique __ctobpl_const_823: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 998} unique __ctobpl_const_816: int;

const {:extern} {:model_const "unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 999} unique __ctobpl_const_818: int;

const {:extern} {:model_const "unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1001} unique __ctobpl_const_826: int;

const {:extern} {:model_const "* unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1001} unique __ctobpl_const_827: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1002} unique __ctobpl_const_828: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1002} unique __ctobpl_const_833: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 1009} unique __ctobpl_const_836: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1002} unique __ctobpl_const_830: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1000} unique __ctobpl_const_824: int;

const {:extern} {:model_const "unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 997} unique __ctobpl_const_810: int;

const {:extern} {:model_const "unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1003} unique __ctobpl_const_834: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1000} unique __ctobpl_const_820: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1002} unique __ctobpl_const_831: int;

const {:extern} {:model_const "* unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1003} unique __ctobpl_const_835: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 1009} unique __ctobpl_const_837: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1000} unique __ctobpl_const_821: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 994} unique __ctobpl_const_808: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 654} unique __ctobpl_const_420: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_402: int;

const {:extern} {:model_const "(* addrem_ptr)->ADDREM_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 654} unique __ctobpl_const_422: int;

const {:extern} {:model_const "(* addrem_ptr)->BLOCK_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 655} unique __ctobpl_const_425: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 655} unique __ctobpl_const_423: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 656} unique __ctobpl_const_426: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 654} unique __ctobpl_const_421: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 646} unique __ctobpl_const_412: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 636} unique __ctobpl_const_409: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 655} unique __ctobpl_const_424: int;

const {:extern} {:model_const "(* addrem_ptr)->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 656} unique __ctobpl_const_428: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 648} unique __ctobpl_const_415: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 656} unique __ctobpl_const_429: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 656} unique __ctobpl_const_427: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_406: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 648} unique __ctobpl_const_414: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 624} unique __ctobpl_const_398: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 646} unique __ctobpl_const_411: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 649} unique __ctobpl_const_418: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_405: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_403: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 644} unique __ctobpl_const_410: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 649} unique __ctobpl_const_416: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_400: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_401: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_404: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_407: int;

const {:extern} {:model_const "result.blockdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_408: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 646} unique __ctobpl_const_413: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 634} unique __ctobpl_const_399: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 649} unique __ctobpl_const_417: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 649} unique __ctobpl_const_419: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 622} unique __ctobpl_const_392: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 614} unique __ctobpl_const_378: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 624} unique __ctobpl_const_397: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 609} unique __ctobpl_const_371: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 611} unique __ctobpl_const_373: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 611} unique __ctobpl_const_374: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 613} unique __ctobpl_const_375: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 614} unique __ctobpl_const_377: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 619} unique __ctobpl_const_382: int;

const {:extern} {:model_const "(* addrem_ptr)->BLOCK_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 620} unique __ctobpl_const_386: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 601} unique __ctobpl_const_370: int;

const {:extern} {:model_const "(* addrem_ptr)->ADDREM_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 619} unique __ctobpl_const_383: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 621} unique __ctobpl_const_388: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 611} unique __ctobpl_const_372: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 613} unique __ctobpl_const_376: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 614} unique __ctobpl_const_380: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 619} unique __ctobpl_const_381: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 621} unique __ctobpl_const_387: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_368: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 614} unique __ctobpl_const_379: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 620} unique __ctobpl_const_385: int;

const {:extern} {:model_const "result.nodedef"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_369: int;

const {:extern} {:model_const "(* addrem_ptr)->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 621} unique __ctobpl_const_389: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_367: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 621} unique __ctobpl_const_391: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 622} unique __ctobpl_const_393: int;

const {:extern} {:model_const "(* addrem_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 622} unique __ctobpl_const_394: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 624} unique __ctobpl_const_395: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 620} unique __ctobpl_const_384: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 624} unique __ctobpl_const_396: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 621} unique __ctobpl_const_390: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3405} unique __ctobpl_const_148: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3421} unique __ctobpl_const_162: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3428} unique __ctobpl_const_167: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3418} unique __ctobpl_const_156: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3428} unique __ctobpl_const_168: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_172: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3414} unique __ctobpl_const_151: int;

const {:extern} {:model_const "result.isdigit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3418} unique __ctobpl_const_158: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3414} unique __ctobpl_const_152: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_171: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_174: int;

const {:extern} {:model_const "result.isdigit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_175: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3427} unique __ctobpl_const_166: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_176: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_178: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3418} unique __ctobpl_const_161: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3418} unique __ctobpl_const_155: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3418} unique __ctobpl_const_159: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3405} unique __ctobpl_const_149: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_173: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3421} unique __ctobpl_const_164: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3427} unique __ctobpl_const_165: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3418} unique __ctobpl_const_160: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3434} unique __ctobpl_const_177: int;

const {:extern} {:model_const "num[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3421} unique __ctobpl_const_163: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3414} unique __ctobpl_const_153: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3428} unique __ctobpl_const_170: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3414} unique __ctobpl_const_150: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3428} unique __ctobpl_const_169: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3418} unique __ctobpl_const_157: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3418} unique __ctobpl_const_154: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 900} unique __ctobpl_const_649: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 901} unique __ctobpl_const_650: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 892} unique __ctobpl_const_633: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_619: int;

const {:extern} {:model_const "group_qsize"} {:sourceFile ".\v24\space.c"} {:sourceLine 893} unique __ctobpl_const_634: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 890} unique __ctobpl_const_623: int;

const {:extern} {:model_const "pnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 890} unique __ctobpl_const_627: int;

const {:extern} {:model_const "* pnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 892} unique __ctobpl_const_631: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_620: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 890} unique __ctobpl_const_626: int;

const {:extern} {:model_const "qnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 893} unique __ctobpl_const_635: int;

const {:extern} {:model_const "group_psize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_621: int;

const {:extern} {:model_const "group_psize"} {:sourceFile ".\v24\space.c"} {:sourceLine 886} unique __ctobpl_const_639: int;

const {:extern} {:model_const "group_qsize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_622: int;

const {:extern} {:model_const "pnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 890} unique __ctobpl_const_624: int;

const {:extern} {:model_const "qnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 890} unique __ctobpl_const_628: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 892} unique __ctobpl_const_632: int;

const {:extern} {:model_const "pnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 892} unique __ctobpl_const_630: int;

const {:extern} {:model_const "* qnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 893} unique __ctobpl_const_636: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 893} unique __ctobpl_const_637: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 893} unique __ctobpl_const_638: int;

const {:extern} {:model_const "group_psize"} {:sourceFile ".\v24\space.c"} {:sourceLine 892} unique __ctobpl_const_629: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 886} unique __ctobpl_const_641: int;

const {:extern} {:model_const "group_qsize"} {:sourceFile ".\v24\space.c"} {:sourceLine 887} unique __ctobpl_const_642: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 886} unique __ctobpl_const_640: int;

const {:extern} {:model_const "group_psize"} {:sourceFile ".\v24\space.c"} {:sourceLine 887} unique __ctobpl_const_643: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 899} unique __ctobpl_const_644: int;

const {:extern} {:model_const "group_ptr->NUM_OF_NODES"} {:sourceFile ".\v24\space.c"} {:sourceLine 899} unique __ctobpl_const_645: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 899} unique __ctobpl_const_646: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 900} unique __ctobpl_const_647: int;

const {:extern} {:model_const "qnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 890} unique __ctobpl_const_625: int;

const {:extern} {:model_const "group_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 900} unique __ctobpl_const_648: int;

const {:extern} {:model_const "group_psize"} {:sourceFile ".\v24\space.c"} {:sourceLine 901} unique __ctobpl_const_652: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_666: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_667: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_681: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 807} unique __ctobpl_const_661: int;

const {:extern} {:model_const "app2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_665: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 902} unique __ctobpl_const_653: int;

const {:extern} {:model_const "group_qsize"} {:sourceFile ".\v24\space.c"} {:sourceLine 902} unique __ctobpl_const_655: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 903} unique __ctobpl_const_657: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_671: int;

const {:extern} {:model_const "new_nodes_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_679: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 793} unique __ctobpl_const_659: int;

const {:extern} {:model_const "app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_664: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_680: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_670: int;

const {:extern} {:model_const "group_ptr->PSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 901} unique __ctobpl_const_651: int;

const {:extern} {:model_const "group_ptr->QSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 902} unique __ctobpl_const_654: int;

const {:extern} {:model_const "add_ptr->ADDREM_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 793} unique __ctobpl_const_660: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 903} unique __ctobpl_const_658: int;

const {:extern} {:model_const "add_ptr->BLOCK_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 807} unique __ctobpl_const_662: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_663: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_668: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_672: int;

const {:extern} {:model_const "app2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_675: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_676: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 903} unique __ctobpl_const_656: int;

const {:extern} {:model_const "new_nodes_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_669: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_673: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_677: int;

const {:extern} {:model_const "app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_674: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_678: int;

const {:extern} {:model_const "result.strlen"} {:sourceFile ".\v24\space.c"} {:sourceLine 4694} unique __ctobpl_const_323: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4695} unique __ctobpl_const_324: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4695} unique __ctobpl_const_328: int;

const {:extern} {:model_const "strcmp.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4764} unique __ctobpl_const_306: int;

const {:extern} {:model_const "result.strcmp"} {:sourceFile ".\v24\space.c"} {:sourceLine 4764} unique __ctobpl_const_312: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4695} unique __ctobpl_const_325: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4760} unique __ctobpl_const_305: int;

const {:extern} {:model_const "strlen.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4694} unique __ctobpl_const_321: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4695} unique __ctobpl_const_326: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4695} unique __ctobpl_const_329: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4764} unique __ctobpl_const_307: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4693} unique __ctobpl_const_317: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4694} unique __ctobpl_const_320: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4764} unique __ctobpl_const_308: int;

const {:extern} {:model_const "strcmp.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4764} unique __ctobpl_const_309: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4688} unique __ctobpl_const_315: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4695} unique __ctobpl_const_327: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4760} unique __ctobpl_const_304: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8666} unique __ctobpl_const_330: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4693} unique __ctobpl_const_318: int;

const {:extern} {:model_const "strcmp.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4764} unique __ctobpl_const_311: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 747} unique __ctobpl_const_555: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8666} unique __ctobpl_const_331: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 8667} unique __ctobpl_const_332: int;

const {:extern} {:model_const "strlen.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4694} unique __ctobpl_const_322: int;

const {:extern} {:model_const "result.strlen"} {:sourceFile ".\v24\space.c"} {:sourceLine 4688} unique __ctobpl_const_316: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 8669} unique __ctobpl_const_333: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4688} unique __ctobpl_const_314: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8669} unique __ctobpl_const_334: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4764} unique __ctobpl_const_310: int;

const {:extern} {:model_const "strlen.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4694} unique __ctobpl_const_319: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4760} unique __ctobpl_const_313: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8670} unique __ctobpl_const_340: int;

const {:extern} {:model_const "no_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 575} unique __ctobpl_const_345: int;

const {:extern} {:model_const "no_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 575} unique __ctobpl_const_347: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_360: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 587} unique __ctobpl_const_356: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8670} unique __ctobpl_const_337: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 583} unique __ctobpl_const_348: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 587} unique __ctobpl_const_357: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8669} unique __ctobpl_const_335: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 572} unique __ctobpl_const_343: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8670} unique __ctobpl_const_339: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_363: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_364: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_365: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 587} unique __ctobpl_const_355: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 8672} unique __ctobpl_const_342: int;

const {:extern} {:model_const "(* tp)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8670} unique __ctobpl_const_341: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 583} unique __ctobpl_const_350: int;

const {:extern} {:model_const "(* tp)->info"} {:sourceFile ".\v24\space.c"} {:sourceLine 8669} unique __ctobpl_const_336: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 572} unique __ctobpl_const_344: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 583} unique __ctobpl_const_349: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8670} unique __ctobpl_const_338: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 587} unique __ctobpl_const_352: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 587} unique __ctobpl_const_358: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 588} unique __ctobpl_const_359: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 584} unique __ctobpl_const_351: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 587} unique __ctobpl_const_353: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 587} unique __ctobpl_const_354: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 575} unique __ctobpl_const_346: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_361: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_362: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 770} unique __ctobpl_const_587: int;

const {:extern} {:model_const "rot_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 879} unique __ctobpl_const_607: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 782} unique __ctobpl_const_602: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 771} unique __ctobpl_const_592: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 771} unique __ctobpl_const_591: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 879} unique __ctobpl_const_606: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 773} unique __ctobpl_const_595: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 774} unique __ctobpl_const_597: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 879} unique __ctobpl_const_608: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 888} unique __ctobpl_const_612: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_613: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_614: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_615: int;

const {:extern} {:model_const "group_psize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_616: int;

const {:extern} {:model_const "group_qsize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_617: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 895} unique __ctobpl_const_618: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 776} unique __ctobpl_const_598: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 779} unique __ctobpl_const_600: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 786} unique __ctobpl_const_604: int;

const {:extern} {:model_const "rot_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 878} unique __ctobpl_const_605: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 880} unique __ctobpl_const_610: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 773} unique __ctobpl_const_594: int;

const {:extern} {:model_const "group_ptr->ADDREM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 779} unique __ctobpl_const_601: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 771} unique __ctobpl_const_593: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 779} unique __ctobpl_const_599: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 771} unique __ctobpl_const_590: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->GEOMETRY"} {:sourceFile ".\v24\space.c"} {:sourceLine 773} unique __ctobpl_const_596: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 783} unique __ctobpl_const_603: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 770} unique __ctobpl_const_588: int;

const {:extern} {:model_const "rot_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 879} unique __ctobpl_const_609: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 885} unique __ctobpl_const_611: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 770} unique __ctobpl_const_589: int;

const {:extern} {:model_const "new_nodes"} {:sourceFile ".\v24\space.c"} {:sourceLine 749} unique __ctobpl_const_559: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 770} unique __ctobpl_const_586: int;

const {:extern} {:model_const "new_nodes_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 749} unique __ctobpl_const_558: int;

const {:extern} {:model_const "qnum"} {:sourceFile ".\v24\space.c"} {:sourceLine 750} unique __ctobpl_const_563: int;

const {:extern} {:model_const "group_qsize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 759} unique __ctobpl_const_568: int;

const {:extern} {:model_const "group_psize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 759} unique __ctobpl_const_566: int;

const {:extern} {:model_const "pnum"} {:sourceFile ".\v24\space.c"} {:sourceLine 750} unique __ctobpl_const_562: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 766} unique __ctobpl_const_570: int;

const {:extern} {:model_const "group_psize"} {:sourceFile ".\v24\space.c"} {:sourceLine 759} unique __ctobpl_const_567: int;

const {:extern} {:model_const "new_nodes"} {:sourceFile ".\v24\space.c"} {:sourceLine 749} unique __ctobpl_const_557: int;

const {:extern} {:model_const "group_ptr->GRID_PTR->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 766} unique __ctobpl_const_573: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 767} unique __ctobpl_const_574: int;

const {:extern} {:model_const "group_qsize"} {:sourceFile ".\v24\space.c"} {:sourceLine 759} unique __ctobpl_const_569: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 766} unique __ctobpl_const_571: int;

const {:extern} {:model_const "group_ptr->GRID_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 766} unique __ctobpl_const_572: int;

const {:extern} {:model_const "group_ptr->GRID_PTR->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 767} unique __ctobpl_const_577: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 768} unique __ctobpl_const_578: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 768} unique __ctobpl_const_579: int;

const {:extern} {:model_const "group_ptr->GRID_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 768} unique __ctobpl_const_580: int;

const {:extern} {:model_const "group_ptr->GRID_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 767} unique __ctobpl_const_576: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 747} unique __ctobpl_const_556: int;

const {:extern} {:model_const "pnum"} {:sourceFile ".\v24\space.c"} {:sourceLine 750} unique __ctobpl_const_560: int;

const {:extern} {:model_const "pnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 750} unique __ctobpl_const_561: int;

const {:extern} {:model_const "qnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 750} unique __ctobpl_const_564: int;

const {:extern} {:model_const "qnum"} {:sourceFile ".\v24\space.c"} {:sourceLine 750} unique __ctobpl_const_565: int;

const {:extern} {:model_const "group_ptr->GRID_PTR->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 768} unique __ctobpl_const_581: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 769} unique __ctobpl_const_583: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 767} unique __ctobpl_const_575: int;

const {:extern} {:model_const "rot_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 769} unique __ctobpl_const_582: int;

const {:extern} {:model_const "group_ptr->GRID_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 769} unique __ctobpl_const_584: int;

const {:extern} {:model_const "group_ptr->GRID_PTR->ROT_ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 769} unique __ctobpl_const_585: int;

const {:extern} {:model_const "* x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4991} unique __ctobpl_const_4692: int;

const {:extern} {:model_const "* x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4995} unique __ctobpl_const_4696: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4965} unique __ctobpl_const_4668: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 4965} unique __ctobpl_const_4671: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4965} unique __ctobpl_const_4666: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4965} unique __ctobpl_const_4669: int;

const {:extern} {:model_const "* unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4964} unique __ctobpl_const_4665: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4967} unique __ctobpl_const_4674: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4967} unique __ctobpl_const_4675: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 4967} unique __ctobpl_const_4679: int;

const {:extern} {:model_const "unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4968} unique __ctobpl_const_4680: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4967} unique __ctobpl_const_4678: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4967} unique __ctobpl_const_4677: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 4974} unique __ctobpl_const_4683: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4974} unique __ctobpl_const_4684: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4974} unique __ctobpl_const_4685: int;

const {:extern} {:model_const "unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4984} unique __ctobpl_const_4686: int;

const {:extern} {:model_const "x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4991} unique __ctobpl_const_4689: int;

const {:extern} {:model_const "* x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4991} unique __ctobpl_const_4688: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4965} unique __ctobpl_const_4670: int;

const {:extern} {:model_const "x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4991} unique __ctobpl_const_4691: int;

const {:extern} {:model_const "unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4966} unique __ctobpl_const_4672: int;

const {:extern} {:model_const "result.sqrt"} {:sourceFile ".\v24\space.c"} {:sourceLine 4991} unique __ctobpl_const_4693: int;

const {:extern} {:model_const "pow.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4995} unique __ctobpl_const_4694: int;

const {:extern} {:model_const "x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4995} unique __ctobpl_const_4695: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4967} unique __ctobpl_const_4676: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4965} unique __ctobpl_const_4667: int;

const {:extern} {:model_const "* unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4966} unique __ctobpl_const_4673: int;

const {:extern} {:model_const "x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4991} unique __ctobpl_const_4687: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 4974} unique __ctobpl_const_4682: int;

const {:extern} {:model_const "* x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4991} unique __ctobpl_const_4690: int;

const {:extern} {:model_const "* unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4968} unique __ctobpl_const_4681: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4725: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4726: int;

const {:extern} {:model_const "result.polor"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4727: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5036} unique __ctobpl_const_4728: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5025} unique __ctobpl_const_4705: int;

const {:extern} {:model_const "result.pow"} {:sourceFile ".\v24\space.c"} {:sourceLine 4995} unique __ctobpl_const_4701: int;

const {:extern} {:model_const "x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4995} unique __ctobpl_const_4699: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5029} unique __ctobpl_const_4709: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5029} unique __ctobpl_const_4712: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5025} unique __ctobpl_const_4704: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5029} unique __ctobpl_const_4710: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5029} unique __ctobpl_const_4713: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5030} unique __ctobpl_const_4715: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4716: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4720: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5029} unique __ctobpl_const_4714: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4717: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5025} unique __ctobpl_const_4706: int;

const {:extern} {:model_const "* x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4995} unique __ctobpl_const_4700: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5026} unique __ctobpl_const_4707: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5029} unique __ctobpl_const_4711: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5029} unique __ctobpl_const_4708: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4719: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4721: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4722: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4723: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5017} unique __ctobpl_const_4703: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4724: int;

const {:extern} {:model_const "pow.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4995} unique __ctobpl_const_4697: int;

const {:extern} {:model_const "pow.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4995} unique __ctobpl_const_4698: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5017} unique __ctobpl_const_4702: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5035} unique __ctobpl_const_4718: int;

const {:extern} {:model_const "first"} {:sourceFile ".\v24\space.c"} {:sourceLine 518} unique __ctobpl_const_4753: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 502} unique __ctobpl_const_4745: int;

const {:extern} {:model_const "last"} {:sourceFile ".\v24\space.c"} {:sourceLine 518} unique __ctobpl_const_4754: int;

const {:extern} {:model_const "last"} {:sourceFile ".\v24\space.c"} {:sourceLine 518} unique __ctobpl_const_4756: int;

const {:extern} {:model_const "result.readfil3"} {:sourceFile ".\v24\space.c"} {:sourceLine 518} unique __ctobpl_const_4757: int;

const {:extern} {:model_const "first"} {:sourceFile ".\v24\space.c"} {:sourceLine 523} unique __ctobpl_const_4758: int;

const {:extern} {:model_const "first"} {:sourceFile ".\v24\space.c"} {:sourceLine 523} unique __ctobpl_const_4759: int;

const {:extern} {:model_const "strcpy.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 511} unique __ctobpl_const_4748: int;

const {:extern} {:model_const "first"} {:sourceFile ".\v24\space.c"} {:sourceLine 526} unique __ctobpl_const_4760: int;

const {:extern} {:model_const "first"} {:sourceFile ".\v24\space.c"} {:sourceLine 518} unique __ctobpl_const_4755: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5039} unique __ctobpl_const_4738: int;

const {:extern} {:model_const "first"} {:sourceFile ".\v24\space.c"} {:sourceLine 500} unique __ctobpl_const_4742: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5050} unique __ctobpl_const_4733: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 503} unique __ctobpl_const_4746: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5050} unique __ctobpl_const_4732: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5044} unique __ctobpl_const_4729: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5038} unique __ctobpl_const_4737: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5039} unique __ctobpl_const_4739: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5038} unique __ctobpl_const_4736: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5037} unique __ctobpl_const_4734: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5039} unique __ctobpl_const_4741: int;

const {:extern} {:model_const "last"} {:sourceFile ".\v24\space.c"} {:sourceLine 500} unique __ctobpl_const_4743: int;

const {:extern} {:model_const "argc"} {:sourceFile ".\v24\space.c"} {:sourceLine 507} unique __ctobpl_const_4747: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5039} unique __ctobpl_const_4740: int;

const {:extern} {:model_const "argv[1]"} {:sourceFile ".\v24\space.c"} {:sourceLine 511} unique __ctobpl_const_4750: int;

const {:extern} {:model_const "cp"} {:sourceFile ".\v24\space.c"} {:sourceLine 501} unique __ctobpl_const_4744: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5037} unique __ctobpl_const_4735: int;

const {:extern} {:model_const "strcpy.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 511} unique __ctobpl_const_4751: int;

const {:extern} {:model_const "strcpy.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 511} unique __ctobpl_const_4752: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5050} unique __ctobpl_const_4730: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5050} unique __ctobpl_const_4731: int;

const {:extern} {:model_const "argv"} {:sourceFile ".\v24\space.c"} {:sourceLine 511} unique __ctobpl_const_4749: int;

const {:extern} {:model_const "cp"} {:sourceFile ".\v24\space.c"} {:sourceLine 526} unique __ctobpl_const_4764: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 539} unique __ctobpl_const_4778: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 551} unique __ctobpl_const_4784: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 551} unique __ctobpl_const_4785: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 533} unique __ctobpl_const_4769: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 559} unique __ctobpl_const_4786: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5070} unique __ctobpl_const_4788: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 545} unique __ctobpl_const_4781: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5070} unique __ctobpl_const_4789: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 533} unique __ctobpl_const_4771: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 526} unique __ctobpl_const_4762: int;

const {:extern} {:model_const "result.groupdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 526} unique __ctobpl_const_4767: int;

const {:extern} {:model_const "result.simpha"} {:sourceFile ".\v24\space.c"} {:sourceLine 545} unique __ctobpl_const_4782: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 545} unique __ctobpl_const_4783: int;

const {:extern} {:model_const "result.simgroup"} {:sourceFile ".\v24\space.c"} {:sourceLine 533} unique __ctobpl_const_4772: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 539} unique __ctobpl_const_4775: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 559} unique __ctobpl_const_4787: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5070} unique __ctobpl_const_4790: int;

const {:extern} {:model_const "cp"} {:sourceFile ".\v24\space.c"} {:sourceLine 526} unique __ctobpl_const_4761: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 528} unique __ctobpl_const_4768: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 539} unique __ctobpl_const_4774: int;

const {:extern} {:model_const "first"} {:sourceFile ".\v24\space.c"} {:sourceLine 526} unique __ctobpl_const_4763: int;

const {:extern} {:model_const "result.simamp"} {:sourceFile ".\v24\space.c"} {:sourceLine 539} unique __ctobpl_const_4777: int;

const {:extern} {:model_const "pp1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5075} unique __ctobpl_const_4791: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5075} unique __ctobpl_const_4792: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 526} unique __ctobpl_const_4765: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 526} unique __ctobpl_const_4766: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 533} unique __ctobpl_const_4773: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 545} unique __ctobpl_const_4780: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 533} unique __ctobpl_const_4770: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 539} unique __ctobpl_const_4776: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 545} unique __ctobpl_const_4779: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->NEXT->QCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5085} unique __ctobpl_const_4816: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4823: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5083} unique __ctobpl_const_4804: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5084} unique __ctobpl_const_4809: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5085} unique __ctobpl_const_4812: int;

const {:extern} {:model_const "nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5095} unique __ctobpl_const_4817: int;

const {:extern} {:model_const "* nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5095} unique __ctobpl_const_4818: int;

const {:extern} {:model_const "result.intmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4824: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5075} unique __ctobpl_const_4796: int;

const {:extern} {:model_const "qq2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5075} unique __ctobpl_const_4797: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5082} unique __ctobpl_const_4799: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5082} unique __ctobpl_const_4800: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5075} unique __ctobpl_const_4793: int;

const {:extern} {:model_const "qq1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5075} unique __ctobpl_const_4795: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->QCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5083} unique __ctobpl_const_4806: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5075} unique __ctobpl_const_4794: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5083} unique __ctobpl_const_4803: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->PCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5082} unique __ctobpl_const_4802: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5084} unique __ctobpl_const_4807: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5084} unique __ctobpl_const_4810: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->NEXT->PCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5084} unique __ctobpl_const_4811: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5075} unique __ctobpl_const_4798: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5083} unique __ctobpl_const_4805: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5085} unique __ctobpl_const_4813: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5085} unique __ctobpl_const_4814: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5085} unique __ctobpl_const_4815: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4819: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4820: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4821: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4822: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5082} unique __ctobpl_const_4801: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5084} unique __ctobpl_const_4808: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5115} unique __ctobpl_const_4854: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4840: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5115} unique __ctobpl_const_4856: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4829: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5106} unique __ctobpl_const_4850: int;

const {:extern} {:model_const "result.intmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4830: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4839: int;

const {:extern} {:model_const "y"} {:sourceFile ".\v24\space.c"} {:sourceLine 5115} unique __ctobpl_const_4855: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5153} unique __ctobpl_const_4836: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4826: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4827: int;

const {:extern} {:model_const "result.intmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4842: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4841: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4844: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4847: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4825: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4849: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5108} unique __ctobpl_const_4852: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4838: int;

const {:extern} {:model_const "* last_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5153} unique __ctobpl_const_4835: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5115} unique __ctobpl_const_4853: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4837: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4843: int;

const {:extern} {:model_const "first_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5152} unique __ctobpl_const_4831: int;

const {:extern} {:model_const "* first_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5152} unique __ctobpl_const_4832: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5152} unique __ctobpl_const_4833: int;

const {:extern} {:model_const "last_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5153} unique __ctobpl_const_4834: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4845: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5099} unique __ctobpl_const_4828: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4846: int;

const {:extern} {:model_const "result.intmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4848: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 5106} unique __ctobpl_const_4851: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5124} unique __ctobpl_const_4880: int;

const {:extern} {:model_const "app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5124} unique __ctobpl_const_4881: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5121} unique __ctobpl_const_4871: int;

const {:extern} {:model_const "y"} {:sourceFile ".\v24\space.c"} {:sourceLine 5124} unique __ctobpl_const_4882: int;

const {:extern} {:model_const "nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5119} unique __ctobpl_const_4867: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 5115} unique __ctobpl_const_4857: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5125} unique __ctobpl_const_4883: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5126} unique __ctobpl_const_4885: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5127} unique __ctobpl_const_4887: int;

const {:extern} {:model_const "app_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 5127} unique __ctobpl_const_4888: int;

const {:extern} {:model_const "app_ptr->SUBGROUP_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5126} unique __ctobpl_const_4886: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5123} unique __ctobpl_const_4877: int;

const {:extern} {:model_const "result.dcos"} {:sourceFile ".\v24\space.c"} {:sourceLine 5116} unique __ctobpl_const_4866: int;

const {:extern} {:model_const "* nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5119} unique __ctobpl_const_4868: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 5116} unique __ctobpl_const_4861: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5122} unique __ctobpl_const_4876: int;

const {:extern} {:model_const "app_ptr->ZA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5125} unique __ctobpl_const_4884: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5121} unique __ctobpl_const_4873: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 5116} unique __ctobpl_const_4865: int;

const {:extern} {:model_const "result.dsin"} {:sourceFile ".\v24\space.c"} {:sourceLine 5115} unique __ctobpl_const_4858: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 5116} unique __ctobpl_const_4863: int;

const {:extern} {:model_const "nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5119} unique __ctobpl_const_4869: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 5121} unique __ctobpl_const_4872: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5116} unique __ctobpl_const_4862: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5122} unique __ctobpl_const_4874: int;

const {:extern} {:model_const "* nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5119} unique __ctobpl_const_4870: int;

const {:extern} {:model_const "app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5123} unique __ctobpl_const_4878: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 5123} unique __ctobpl_const_4879: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5122} unique __ctobpl_const_4875: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5116} unique __ctobpl_const_4864: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5116} unique __ctobpl_const_4859: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5116} unique __ctobpl_const_4860: int;

const {:extern} {:model_const "app_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5131} unique __ctobpl_const_4897: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5133} unique __ctobpl_const_4900: int;

const {:extern} {:model_const "app_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5133} unique __ctobpl_const_4901: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5138} unique __ctobpl_const_4902: int;

const {:extern} {:model_const "app_ptr->QSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 5129} unique __ctobpl_const_4894: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5141} unique __ctobpl_const_4905: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5141} unique __ctobpl_const_4906: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5174} unique __ctobpl_const_4913: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5174} unique __ctobpl_const_4914: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5174} unique __ctobpl_const_4915: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5131} unique __ctobpl_const_4896: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5141} unique __ctobpl_const_4907: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 5127} unique __ctobpl_const_4889: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5139} unique __ctobpl_const_4904: int;

const {:extern} {:model_const "app_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5132} unique __ctobpl_const_4899: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5128} unique __ctobpl_const_4890: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5144} unique __ctobpl_const_4909: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5183} unique __ctobpl_const_4916: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5132} unique __ctobpl_const_4898: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5146} unique __ctobpl_const_4911: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5183} unique __ctobpl_const_4917: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5183} unique __ctobpl_const_4918: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->PCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5183} unique __ctobpl_const_4919: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5100} unique __ctobpl_const_4912: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5184} unique __ctobpl_const_4920: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 5129} unique __ctobpl_const_4895: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5129} unique __ctobpl_const_4893: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5139} unique __ctobpl_const_4903: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5144} unique __ctobpl_const_4908: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5146} unique __ctobpl_const_4910: int;

const {:extern} {:model_const "app_ptr->PSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 5128} unique __ctobpl_const_4891: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 5128} unique __ctobpl_const_4892: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->QCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5184} unique __ctobpl_const_4923: int;

const {:extern} {:model_const "Q[3]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5199} unique __ctobpl_const_4936: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5194} unique __ctobpl_const_4927: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5184} unique __ctobpl_const_4922: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5196} unique __ctobpl_const_4931: int;

const {:extern} {:model_const "P[4]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5200} unique __ctobpl_const_4938: int;

const {:extern} {:model_const "Q[4]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5201} unique __ctobpl_const_4940: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5202} unique __ctobpl_const_4943: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5195} unique __ctobpl_const_4929: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5203} unique __ctobpl_const_4945: int;

const {:extern} {:model_const "Q[2]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5197} unique __ctobpl_const_4932: int;

const {:extern} {:model_const "P[6]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5204} unique __ctobpl_const_4946: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5204} unique __ctobpl_const_4947: int;

const {:extern} {:model_const "Q[6]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5205} unique __ctobpl_const_4948: int;

const {:extern} {:model_const "* nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5191} unique __ctobpl_const_4925: int;

const {:extern} {:model_const "P[5]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5202} unique __ctobpl_const_4942: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5205} unique __ctobpl_const_4949: int;

const {:extern} {:model_const "P[7]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5206} unique __ctobpl_const_4950: int;

const {:extern} {:model_const "P[2]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5196} unique __ctobpl_const_4930: int;

const {:extern} {:model_const "Q[1]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5195} unique __ctobpl_const_4928: int;

const {:extern} {:model_const "P[3]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5198} unique __ctobpl_const_4934: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5199} unique __ctobpl_const_4937: int;

const {:extern} {:model_const "P[1]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5194} unique __ctobpl_const_4926: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5206} unique __ctobpl_const_4951: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5201} unique __ctobpl_const_4941: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5200} unique __ctobpl_const_4939: int;

const {:extern} {:model_const "Q[7]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5207} unique __ctobpl_const_4952: int;

const {:extern} {:model_const "nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5191} unique __ctobpl_const_4924: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5184} unique __ctobpl_const_4921: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5197} unique __ctobpl_const_4933: int;

const {:extern} {:model_const "Q[5]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5203} unique __ctobpl_const_4944: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5198} unique __ctobpl_const_4935: int;

const {:extern} {:model_const "nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5230} unique __ctobpl_const_4984: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4965: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4968: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4970: int;

const {:extern} {:model_const "first_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5262} unique __ctobpl_const_4956: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5262} unique __ctobpl_const_4958: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4973: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5210} unique __ctobpl_const_4955: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4971: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5226} unique __ctobpl_const_4975: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5226} unique __ctobpl_const_4976: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5216} unique __ctobpl_const_4962: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5210} unique __ctobpl_const_4954: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4967: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5226} unique __ctobpl_const_4978: int;

const {:extern} {:model_const "* first_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5262} unique __ctobpl_const_4957: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5207} unique __ctobpl_const_4953: int;

const {:extern} {:model_const "* last_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5263} unique __ctobpl_const_4960: int;

const {:extern} {:model_const "last_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5263} unique __ctobpl_const_4959: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 5216} unique __ctobpl_const_4963: int;

const {:extern} {:model_const "Q[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4972: int;

const {:extern} {:model_const "P[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4969: int;

const {:extern} {:model_const "y"} {:sourceFile ".\v24\space.c"} {:sourceLine 5226} unique __ctobpl_const_4977: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5218} unique __ctobpl_const_4964: int;

const {:extern} {:model_const "Q[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5226} unique __ctobpl_const_4979: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 5226} unique __ctobpl_const_4980: int;

const {:extern} {:model_const "result.dsin"} {:sourceFile ".\v24\space.c"} {:sourceLine 5226} unique __ctobpl_const_4981: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4966: int;

const {:extern} {:model_const "result.dcos"} {:sourceFile ".\v24\space.c"} {:sourceLine 5225} unique __ctobpl_const_4974: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5263} unique __ctobpl_const_4961: int;

const {:extern} {:model_const "nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5230} unique __ctobpl_const_4982: int;

const {:extern} {:model_const "* nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5230} unique __ctobpl_const_4983: int;

const {:extern} {:model_const "app_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5242} unique __ctobpl_const_5014: int;

const {:extern} {:model_const "app_ptr->PSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 5239} unique __ctobpl_const_5008: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5233} unique __ctobpl_const_4992: int;

const {:extern} {:model_const "y"} {:sourceFile ".\v24\space.c"} {:sourceLine 5235} unique __ctobpl_const_4999: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5232} unique __ctobpl_const_4988: int;

const {:extern} {:model_const "app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5234} unique __ctobpl_const_4995: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 5239} unique __ctobpl_const_5009: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5232} unique __ctobpl_const_4986: int;

const {:extern} {:model_const "app_ptr->QSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 5240} unique __ctobpl_const_5011: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5243} unique __ctobpl_const_5015: int;

const {:extern} {:model_const "app_ptr->ZA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5236} unique __ctobpl_const_5001: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5237} unique __ctobpl_const_5002: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5234} unique __ctobpl_const_4994: int;

const {:extern} {:model_const "app_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 5238} unique __ctobpl_const_5005: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5236} unique __ctobpl_const_5000: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5238} unique __ctobpl_const_5004: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5239} unique __ctobpl_const_5007: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5233} unique __ctobpl_const_4991: int;

const {:extern} {:model_const "app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5235} unique __ctobpl_const_4998: int;

const {:extern} {:model_const "app_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5243} unique __ctobpl_const_5016: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 5238} unique __ctobpl_const_5006: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 5234} unique __ctobpl_const_4996: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5235} unique __ctobpl_const_4997: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5233} unique __ctobpl_const_4990: int;

const {:extern} {:model_const "Q[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5233} unique __ctobpl_const_4993: int;

const {:extern} {:model_const "app_ptr->SUBGROUP_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5237} unique __ctobpl_const_5003: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 5232} unique __ctobpl_const_4987: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5240} unique __ctobpl_const_5010: int;

const {:extern} {:model_const "P[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5232} unique __ctobpl_const_4989: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 5240} unique __ctobpl_const_5012: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5242} unique __ctobpl_const_5013: int;

const {:extern} {:model_const "* nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5230} unique __ctobpl_const_4985: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5249} unique __ctobpl_const_5019: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5252} unique __ctobpl_const_5022: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5252} unique __ctobpl_const_5023: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5210} unique __ctobpl_const_5029: int;

const {:extern} {:model_const "qq"} {:sourceFile ".\v24\space.c"} {:sourceLine 5289} unique __ctobpl_const_5033: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5298} unique __ctobpl_const_5039: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5298} unique __ctobpl_const_5041: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5297} unique __ctobpl_const_5035: int;

const {:extern} {:model_const "nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5304} unique __ctobpl_const_5043: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->PCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5297} unique __ctobpl_const_5038: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->QCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5298} unique __ctobpl_const_5042: int;

const {:extern} {:model_const "* nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5304} unique __ctobpl_const_5044: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5255} unique __ctobpl_const_5025: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5297} unique __ctobpl_const_5037: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5257} unique __ctobpl_const_5028: int;

const {:extern} {:model_const "pp"} {:sourceFile ".\v24\space.c"} {:sourceLine 5289} unique __ctobpl_const_5031: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5289} unique __ctobpl_const_5032: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5257} unique __ctobpl_const_5027: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5298} unique __ctobpl_const_5040: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 5306} unique __ctobpl_const_5046: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5308} unique __ctobpl_const_5047: int;

const {:extern} {:model_const "app_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5244} unique __ctobpl_const_5018: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5297} unique __ctobpl_const_5036: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5250} unique __ctobpl_const_5020: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5255} unique __ctobpl_const_5026: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5289} unique __ctobpl_const_5034: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5250} unique __ctobpl_const_5021: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5252} unique __ctobpl_const_5024: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5315} unique __ctobpl_const_5048: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5285} unique __ctobpl_const_5030: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5306} unique __ctobpl_const_5045: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5244} unique __ctobpl_const_5017: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5324} unique __ctobpl_const_5075: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 5315} unique __ctobpl_const_5052: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 5316} unique __ctobpl_const_5060: int;

const {:extern} {:model_const "* nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5319} unique __ctobpl_const_5063: int;

const {:extern} {:model_const "app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5323} unique __ctobpl_const_5073: int;

const {:extern} {:model_const "y"} {:sourceFile ".\v24\space.c"} {:sourceLine 5324} unique __ctobpl_const_5077: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5316} unique __ctobpl_const_5059: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5325} unique __ctobpl_const_5078: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5322} unique __ctobpl_const_5071: int;

const {:extern} {:model_const "app_ptr->ZA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5325} unique __ctobpl_const_5079: int;

const {:extern} {:model_const "* nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5319} unique __ctobpl_const_5065: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5321} unique __ctobpl_const_5066: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 5315} unique __ctobpl_const_5050: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5326} unique __ctobpl_const_5080: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5316} unique __ctobpl_const_5056: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5315} unique __ctobpl_const_5051: int;

const {:extern} {:model_const "y"} {:sourceFile ".\v24\space.c"} {:sourceLine 5316} unique __ctobpl_const_5058: int;

const {:extern} {:model_const "nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5319} unique __ctobpl_const_5064: int;

const {:extern} {:model_const "result.dsin"} {:sourceFile ".\v24\space.c"} {:sourceLine 5316} unique __ctobpl_const_5061: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 5321} unique __ctobpl_const_5067: int;

const {:extern} {:model_const "nodes_num_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5319} unique __ctobpl_const_5062: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 5315} unique __ctobpl_const_5054: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5322} unique __ctobpl_const_5069: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5315} unique __ctobpl_const_5053: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 5322} unique __ctobpl_const_5070: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5323} unique __ctobpl_const_5072: int;

const {:extern} {:model_const "result.dcos"} {:sourceFile ".\v24\space.c"} {:sourceLine 5315} unique __ctobpl_const_5055: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5321} unique __ctobpl_const_5068: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5316} unique __ctobpl_const_5057: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 5323} unique __ctobpl_const_5074: int;

const {:extern} {:model_const "app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5324} unique __ctobpl_const_5076: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 5315} unique __ctobpl_const_5049: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 5328} unique __ctobpl_const_5086: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5337} unique __ctobpl_const_5107: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5337} unique __ctobpl_const_5110: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5336} unique __ctobpl_const_5106: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5328} unique __ctobpl_const_5084: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5333} unique __ctobpl_const_5094: int;

const {:extern} {:model_const "app_ptr->PSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 5329} unique __ctobpl_const_5088: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5337} unique __ctobpl_const_5109: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5337} unique __ctobpl_const_5111: int;

const {:extern} {:model_const "first_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5340} unique __ctobpl_const_5112: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5327} unique __ctobpl_const_5082: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5333} unique __ctobpl_const_5093: int;

const {:extern} {:model_const "app_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 5328} unique __ctobpl_const_5085: int;

const {:extern} {:model_const "app_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5336} unique __ctobpl_const_5103: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5330} unique __ctobpl_const_5090: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 5329} unique __ctobpl_const_5089: int;

const {:extern} {:model_const "app_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5335} unique __ctobpl_const_5098: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5335} unique __ctobpl_const_5099: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5336} unique __ctobpl_const_5104: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5329} unique __ctobpl_const_5087: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5335} unique __ctobpl_const_5101: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5336} unique __ctobpl_const_5105: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5333} unique __ctobpl_const_5095: int;

const {:extern} {:model_const "app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5327} unique __ctobpl_const_5083: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5335} unique __ctobpl_const_5097: int;

const {:extern} {:model_const "app_ptr->QSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 5330} unique __ctobpl_const_5091: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5333} unique __ctobpl_const_5096: int;

const {:extern} {:model_const "addrem_ptr->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5335} unique __ctobpl_const_5100: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 5330} unique __ctobpl_const_5092: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5336} unique __ctobpl_const_5102: int;

const {:extern} {:model_const "app_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5337} unique __ctobpl_const_5108: int;

const {:extern} {:model_const "app_ptr->SUBGROUP_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 5326} unique __ctobpl_const_5081: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5486} unique __ctobpl_const_5129: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5488} unique __ctobpl_const_5134: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5488} unique __ctobpl_const_5135: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5489} unique __ctobpl_const_5136: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5490} unique __ctobpl_const_5140: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5487} unique __ctobpl_const_5131: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5490} unique __ctobpl_const_5141: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5491} unique __ctobpl_const_5143: int;

const {:extern} {:model_const "* last_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5341} unique __ctobpl_const_5116: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5487} unique __ctobpl_const_5132: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5488} unique __ctobpl_const_5133: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5489} unique __ctobpl_const_5137: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5491} unique __ctobpl_const_5144: int;

const {:extern} {:model_const "* first_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5340} unique __ctobpl_const_5113: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5340} unique __ctobpl_const_5114: int;

const {:extern} {:model_const "unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 5354} unique __ctobpl_const_5118: int;

const {:extern} {:model_const "x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5371} unique __ctobpl_const_5123: int;

const {:extern} {:model_const "* x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5363} unique __ctobpl_const_5120: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5483} unique __ctobpl_const_5125: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5486} unique __ctobpl_const_5127: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5486} unique __ctobpl_const_5128: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5489} unique __ctobpl_const_5138: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5341} unique __ctobpl_const_5117: int;

const {:extern} {:model_const "last_node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5341} unique __ctobpl_const_5115: int;

const {:extern} {:model_const "x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5363} unique __ctobpl_const_5119: int;

const {:extern} {:model_const "x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5367} unique __ctobpl_const_5121: int;

const {:extern} {:model_const "* x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5367} unique __ctobpl_const_5122: int;

const {:extern} {:model_const "* x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5371} unique __ctobpl_const_5124: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5483} unique __ctobpl_const_5126: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5487} unique __ctobpl_const_5130: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5491} unique __ctobpl_const_5142: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5490} unique __ctobpl_const_5139: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4586} unique __ctobpl_const_4147: int;

const {:extern} {:model_const "pcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 4588} unique __ctobpl_const_4153: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4128: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4588} unique __ctobpl_const_4151: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4578} unique __ctobpl_const_4146: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4125: int;

const {:extern} {:model_const "result.nodecoor"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4135: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4578} unique __ctobpl_const_4145: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4560} unique __ctobpl_const_4136: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4575} unique __ctobpl_const_4139: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4586} unique __ctobpl_const_4148: int;

const {:extern} {:model_const "(* node_ptr)->PCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4588} unique __ctobpl_const_4152: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4577} unique __ctobpl_const_4142: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4129: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4589} unique __ctobpl_const_4154: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4134: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4589} unique __ctobpl_const_4155: int;

const {:extern} {:model_const "(* node_ptr)->QCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4589} unique __ctobpl_const_4156: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4577} unique __ctobpl_const_4141: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4588} unique __ctobpl_const_4150: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4127: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4130: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4126: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4132: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4566} unique __ctobpl_const_4137: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4575} unique __ctobpl_const_4138: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4133: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4575} unique __ctobpl_const_4140: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4578} unique __ctobpl_const_4143: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4578} unique __ctobpl_const_4144: int;

const {:extern} {:model_const "(* node_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4586} unique __ctobpl_const_4149: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4131: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4607} unique __ctobpl_const_4183: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4611} unique __ctobpl_const_4184: int;

const {:extern} {:model_const "(* node_ptr)->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4590} unique __ctobpl_const_4160: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4611} unique __ctobpl_const_4185: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4596} unique __ctobpl_const_4172: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4561} unique __ctobpl_const_4179: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4611} unique __ctobpl_const_4186: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4614} unique __ctobpl_const_4187: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4593} unique __ctobpl_const_4167: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4596} unique __ctobpl_const_4173: int;

const {:extern} {:model_const "qcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 4589} unique __ctobpl_const_4157: int;

const {:extern} {:model_const "(* node_ptr)->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4593} unique __ctobpl_const_4169: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4561} unique __ctobpl_const_4178: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4561} unique __ctobpl_const_4180: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4596} unique __ctobpl_const_4170: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4567} unique __ctobpl_const_4175: int;

const {:extern} {:model_const "(* node_ptr)->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4591} unique __ctobpl_const_4163: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4591} unique __ctobpl_const_4161: int;

const {:extern} {:model_const "(* node_ptr)->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4592} unique __ctobpl_const_4166: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4592} unique __ctobpl_const_4164: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4593} unique __ctobpl_const_4168: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4567} unique __ctobpl_const_4174: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4590} unique __ctobpl_const_4159: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4590} unique __ctobpl_const_4158: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4596} unique __ctobpl_const_4171: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4561} unique __ctobpl_const_4181: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4591} unique __ctobpl_const_4162: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4567} unique __ctobpl_const_4177: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6480} unique __ctobpl_const_6169: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4607} unique __ctobpl_const_4182: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4592} unique __ctobpl_const_4165: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4567} unique __ctobpl_const_4176: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4619} unique __ctobpl_const_4197: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4202: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4204: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4205: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4207: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4619} unique __ctobpl_const_4194: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4615} unique __ctobpl_const_4188: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4203: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4206: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4201: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4208: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4626} unique __ctobpl_const_4212: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4635} unique __ctobpl_const_4213: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4619} unique __ctobpl_const_4192: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4210: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4209: int;

const {:extern} {:model_const "* pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4616} unique __ctobpl_const_4191: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 4619} unique __ctobpl_const_4198: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4646} unique __ctobpl_const_4214: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4646} unique __ctobpl_const_4215: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4200: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4646} unique __ctobpl_const_4216: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4646} unique __ctobpl_const_4217: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4615} unique __ctobpl_const_4189: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4620} unique __ctobpl_const_4199: int;

const {:extern} {:model_const "result.sinstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4625} unique __ctobpl_const_4211: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4619} unique __ctobpl_const_4195: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4619} unique __ctobpl_const_4193: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4636} unique __ctobpl_const_4218: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4619} unique __ctobpl_const_4196: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4636} unique __ctobpl_const_4219: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4616} unique __ctobpl_const_4190: int;

const {:extern} {:model_const "isalpha.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4776} unique __ctobpl_const_4246: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 4738} unique __ctobpl_const_4242: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 4776} unique __ctobpl_const_4250: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5492} unique __ctobpl_const_5145: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4630} unique __ctobpl_const_4232: int;

const {:extern} {:model_const "* pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4628} unique __ctobpl_const_4231: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4628} unique __ctobpl_const_4230: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 4776} unique __ctobpl_const_4249: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 4736} unique __ctobpl_const_4243: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 4722} unique __ctobpl_const_4237: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4639} unique __ctobpl_const_4226: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4627} unique __ctobpl_const_4229: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4636} unique __ctobpl_const_4220: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4630} unique __ctobpl_const_4235: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4636} unique __ctobpl_const_4222: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 4725} unique __ctobpl_const_4238: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4630} unique __ctobpl_const_4233: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4638} unique __ctobpl_const_4225: int;

const {:extern} {:model_const "* pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4639} unique __ctobpl_const_4227: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4638} unique __ctobpl_const_4224: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4630} unique __ctobpl_const_4234: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 4723} unique __ctobpl_const_4239: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 4735} unique __ctobpl_const_4241: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4627} unique __ctobpl_const_4228: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4636} unique __ctobpl_const_4223: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 4735} unique __ctobpl_const_4240: int;

const {:extern} {:model_const "isalpha.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4776} unique __ctobpl_const_4244: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 4776} unique __ctobpl_const_4245: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4636} unique __ctobpl_const_4221: int;

const {:extern} {:model_const "isalpha.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4776} unique __ctobpl_const_4247: int;

const {:extern} {:model_const "result.isalpha"} {:sourceFile ".\v24\space.c"} {:sourceLine 4776} unique __ctobpl_const_4248: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 4722} unique __ctobpl_const_4236: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4805} unique __ctobpl_const_4281: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4805} unique __ctobpl_const_4282: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4793} unique __ctobpl_const_4252: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4802} unique __ctobpl_const_4273: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4803} unique __ctobpl_const_4274: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4797} unique __ctobpl_const_4257: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4800} unique __ctobpl_const_4267: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4804} unique __ctobpl_const_4279: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4798} unique __ctobpl_const_4259: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4804} unique __ctobpl_const_4278: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4804} unique __ctobpl_const_4277: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4796} unique __ctobpl_const_4253: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4802} unique __ctobpl_const_4271: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4797} unique __ctobpl_const_4258: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4799} unique __ctobpl_const_4263: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4801} unique __ctobpl_const_4268: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4799} unique __ctobpl_const_4264: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4796} unique __ctobpl_const_4255: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4798} unique __ctobpl_const_4260: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4801} unique __ctobpl_const_4269: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4796} unique __ctobpl_const_4254: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4801} unique __ctobpl_const_4270: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4802} unique __ctobpl_const_4272: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4793} unique __ctobpl_const_4251: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4797} unique __ctobpl_const_4256: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4803} unique __ctobpl_const_4275: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4798} unique __ctobpl_const_4261: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4799} unique __ctobpl_const_4262: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4800} unique __ctobpl_const_4266: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4803} unique __ctobpl_const_4276: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4805} unique __ctobpl_const_4280: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4800} unique __ctobpl_const_4265: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4815} unique __ctobpl_const_4310: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4808} unique __ctobpl_const_4291: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4811} unique __ctobpl_const_4299: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4809} unique __ctobpl_const_4293: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4810} unique __ctobpl_const_4295: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4810} unique __ctobpl_const_4297: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4806} unique __ctobpl_const_4284: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4812} unique __ctobpl_const_4301: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4806} unique __ctobpl_const_4285: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4812} unique __ctobpl_const_4302: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4808} unique __ctobpl_const_4290: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4810} unique __ctobpl_const_4296: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4812} unique __ctobpl_const_4303: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4814} unique __ctobpl_const_4307: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4807} unique __ctobpl_const_4287: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4806} unique __ctobpl_const_4283: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4807} unique __ctobpl_const_4288: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4813} unique __ctobpl_const_4305: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4814} unique __ctobpl_const_4308: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4814} unique __ctobpl_const_4309: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4815} unique __ctobpl_const_4311: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4811} unique __ctobpl_const_4300: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4815} unique __ctobpl_const_4312: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4816} unique __ctobpl_const_4313: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4816} unique __ctobpl_const_4314: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4807} unique __ctobpl_const_4286: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4809} unique __ctobpl_const_4292: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4808} unique __ctobpl_const_4289: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4809} unique __ctobpl_const_4294: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4811} unique __ctobpl_const_4298: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4813} unique __ctobpl_const_4306: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4813} unique __ctobpl_const_4304: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4823} unique __ctobpl_const_4334: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4817} unique __ctobpl_const_4317: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4823} unique __ctobpl_const_4335: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4823} unique __ctobpl_const_4336: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4824} unique __ctobpl_const_4338: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4821} unique __ctobpl_const_4328: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4819} unique __ctobpl_const_4324: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4821} unique __ctobpl_const_4329: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4824} unique __ctobpl_const_4339: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4818} unique __ctobpl_const_4319: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4825} unique __ctobpl_const_4341: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4821} unique __ctobpl_const_4330: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4825} unique __ctobpl_const_4340: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4826} unique __ctobpl_const_4343: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4826} unique __ctobpl_const_4344: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4826} unique __ctobpl_const_4345: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4827} unique __ctobpl_const_4346: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4825} unique __ctobpl_const_4342: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4820} unique __ctobpl_const_4327: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4824} unique __ctobpl_const_4337: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4819} unique __ctobpl_const_4323: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4817} unique __ctobpl_const_4318: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4816} unique __ctobpl_const_4315: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4820} unique __ctobpl_const_4325: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4818} unique __ctobpl_const_4320: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4817} unique __ctobpl_const_4316: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4822} unique __ctobpl_const_4331: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4818} unique __ctobpl_const_4321: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4820} unique __ctobpl_const_4326: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4819} unique __ctobpl_const_4322: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4822} unique __ctobpl_const_4332: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4822} unique __ctobpl_const_4333: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4828} unique __ctobpl_const_4349: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4830} unique __ctobpl_const_4357: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4828} unique __ctobpl_const_4351: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4832} unique __ctobpl_const_4361: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4832} unique __ctobpl_const_4362: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4827} unique __ctobpl_const_4347: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4833} unique __ctobpl_const_4364: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4829} unique __ctobpl_const_4352: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4833} unique __ctobpl_const_4365: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4834} unique __ctobpl_const_4367: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4834} unique __ctobpl_const_4368: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4831} unique __ctobpl_const_4359: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4835} unique __ctobpl_const_4371: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4835} unique __ctobpl_const_4372: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4831} unique __ctobpl_const_4360: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4832} unique __ctobpl_const_4363: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4836} unique __ctobpl_const_4373: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4836} unique __ctobpl_const_4374: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4836} unique __ctobpl_const_4375: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4830} unique __ctobpl_const_4356: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4831} unique __ctobpl_const_4358: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4837} unique __ctobpl_const_4376: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4828} unique __ctobpl_const_4350: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4837} unique __ctobpl_const_4377: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4837} unique __ctobpl_const_4378: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4830} unique __ctobpl_const_4355: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4829} unique __ctobpl_const_4353: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4829} unique __ctobpl_const_4354: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4833} unique __ctobpl_const_4366: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4834} unique __ctobpl_const_4369: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4835} unique __ctobpl_const_4370: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4827} unique __ctobpl_const_4348: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4844} unique __ctobpl_const_4397: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4846} unique __ctobpl_const_4403: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4840} unique __ctobpl_const_4386: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4842} unique __ctobpl_const_4392: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4839} unique __ctobpl_const_4383: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4843} unique __ctobpl_const_4394: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4840} unique __ctobpl_const_4385: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4843} unique __ctobpl_const_4396: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4846} unique __ctobpl_const_4404: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4838} unique __ctobpl_const_4381: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4841} unique __ctobpl_const_4388: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4839} unique __ctobpl_const_4382: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4845} unique __ctobpl_const_4401: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4841} unique __ctobpl_const_4390: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4845} unique __ctobpl_const_4400: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4845} unique __ctobpl_const_4402: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4847} unique __ctobpl_const_4406: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4847} unique __ctobpl_const_4407: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4843} unique __ctobpl_const_4395: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4847} unique __ctobpl_const_4408: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4848} unique __ctobpl_const_4409: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4848} unique __ctobpl_const_4410: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4840} unique __ctobpl_const_4387: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4846} unique __ctobpl_const_4405: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4838} unique __ctobpl_const_4379: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4839} unique __ctobpl_const_4384: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4841} unique __ctobpl_const_4389: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4842} unique __ctobpl_const_4391: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4844} unique __ctobpl_const_4398: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4844} unique __ctobpl_const_4399: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4842} unique __ctobpl_const_4393: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4838} unique __ctobpl_const_4380: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4850} unique __ctobpl_const_4416: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4852} unique __ctobpl_const_4421: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4853} unique __ctobpl_const_4424: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4855} unique __ctobpl_const_4430: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4854} unique __ctobpl_const_4427: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4849} unique __ctobpl_const_4413: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4852} unique __ctobpl_const_4423: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4854} unique __ctobpl_const_4429: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4850} unique __ctobpl_const_4417: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4848} unique __ctobpl_const_4411: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4854} unique __ctobpl_const_4428: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4856} unique __ctobpl_const_4434: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4851} unique __ctobpl_const_4418: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4851} unique __ctobpl_const_4419: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4856} unique __ctobpl_const_4435: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4857} unique __ctobpl_const_4436: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4853} unique __ctobpl_const_4425: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4853} unique __ctobpl_const_4426: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4857} unique __ctobpl_const_4437: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4858} unique __ctobpl_const_4439: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4858} unique __ctobpl_const_4440: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4849} unique __ctobpl_const_4414: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4851} unique __ctobpl_const_4420: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4856} unique __ctobpl_const_4433: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4855} unique __ctobpl_const_4432: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4852} unique __ctobpl_const_4422: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4858} unique __ctobpl_const_4441: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4849} unique __ctobpl_const_4412: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4855} unique __ctobpl_const_4431: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4857} unique __ctobpl_const_4438: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4859} unique __ctobpl_const_4442: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4850} unique __ctobpl_const_4415: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4859} unique __ctobpl_const_4443: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4864} unique __ctobpl_const_4458: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4866} unique __ctobpl_const_4463: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4863} unique __ctobpl_const_4455: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4860} unique __ctobpl_const_4446: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4862} unique __ctobpl_const_4451: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4863} unique __ctobpl_const_4454: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4864} unique __ctobpl_const_4457: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4865} unique __ctobpl_const_4461: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4866} unique __ctobpl_const_4465: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4867} unique __ctobpl_const_4466: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4861} unique __ctobpl_const_4450: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4860} unique __ctobpl_const_4447: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4862} unique __ctobpl_const_4453: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4865} unique __ctobpl_const_4462: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4868} unique __ctobpl_const_4469: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4868} unique __ctobpl_const_4470: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4869} unique __ctobpl_const_4472: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4869} unique __ctobpl_const_4473: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4860} unique __ctobpl_const_4445: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4864} unique __ctobpl_const_4459: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4861} unique __ctobpl_const_4448: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4862} unique __ctobpl_const_4452: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4866} unique __ctobpl_const_4464: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4867} unique __ctobpl_const_4467: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4869} unique __ctobpl_const_4474: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4859} unique __ctobpl_const_4444: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4863} unique __ctobpl_const_4456: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4865} unique __ctobpl_const_4460: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4867} unique __ctobpl_const_4468: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4868} unique __ctobpl_const_4471: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4861} unique __ctobpl_const_4449: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4875} unique __ctobpl_const_4490: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4872} unique __ctobpl_const_4482: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4876} unique __ctobpl_const_4493: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4876} unique __ctobpl_const_4495: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4871} unique __ctobpl_const_4478: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4877} unique __ctobpl_const_4496: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4870} unique __ctobpl_const_4476: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4873} unique __ctobpl_const_4485: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4873} unique __ctobpl_const_4486: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4874} unique __ctobpl_const_4488: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4875} unique __ctobpl_const_4492: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4871} unique __ctobpl_const_4480: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4877} unique __ctobpl_const_4497: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4878} unique __ctobpl_const_4501: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4879} unique __ctobpl_const_4503: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4879} unique __ctobpl_const_4504: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4881} unique __ctobpl_const_4505: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4881} unique __ctobpl_const_4506: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4872} unique __ctobpl_const_4481: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4874} unique __ctobpl_const_4487: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4878} unique __ctobpl_const_4500: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4870} unique __ctobpl_const_4477: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4874} unique __ctobpl_const_4489: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4873} unique __ctobpl_const_4484: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4877} unique __ctobpl_const_4498: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4878} unique __ctobpl_const_4499: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4879} unique __ctobpl_const_4502: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4870} unique __ctobpl_const_4475: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4871} unique __ctobpl_const_4479: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4876} unique __ctobpl_const_4494: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4875} unique __ctobpl_const_4491: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4872} unique __ctobpl_const_4483: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4883} unique __ctobpl_const_4512: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4893} unique __ctobpl_const_4530: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4887} unique __ctobpl_const_4519: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4896} unique __ctobpl_const_4537: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4897} unique __ctobpl_const_4538: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4887} unique __ctobpl_const_4517: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4882} unique __ctobpl_const_4508: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4892} unique __ctobpl_const_4527: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4891} unique __ctobpl_const_4523: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4892} unique __ctobpl_const_4528: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4891} unique __ctobpl_const_4525: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4893} unique __ctobpl_const_4529: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4884} unique __ctobpl_const_4516: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4881} unique __ctobpl_const_4507: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4884} unique __ctobpl_const_4514: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4883} unique __ctobpl_const_4513: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4892} unique __ctobpl_const_4526: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4895} unique __ctobpl_const_4532: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4890} unique __ctobpl_const_4522: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4895} unique __ctobpl_const_4533: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4891} unique __ctobpl_const_4524: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4890} unique __ctobpl_const_4521: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4890} unique __ctobpl_const_4520: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4893} unique __ctobpl_const_4531: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4895} unique __ctobpl_const_4534: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4887} unique __ctobpl_const_4518: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4882} unique __ctobpl_const_4510: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4896} unique __ctobpl_const_4535: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4896} unique __ctobpl_const_4536: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4884} unique __ctobpl_const_4515: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4883} unique __ctobpl_const_4511: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4882} unique __ctobpl_const_4509: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4906} unique __ctobpl_const_4567: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4907} unique __ctobpl_const_4569: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4898} unique __ctobpl_const_4543: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4902} unique __ctobpl_const_4554: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4905} unique __ctobpl_const_4562: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4907} unique __ctobpl_const_4570: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4900} unique __ctobpl_const_4548: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4902} unique __ctobpl_const_4553: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4898} unique __ctobpl_const_4542: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4901} unique __ctobpl_const_4551: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4903} unique __ctobpl_const_4557: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4901} unique __ctobpl_const_4552: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4903} unique __ctobpl_const_4556: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4904} unique __ctobpl_const_4559: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4899} unique __ctobpl_const_4545: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4905} unique __ctobpl_const_4563: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4899} unique __ctobpl_const_4544: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4899} unique __ctobpl_const_4546: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4904} unique __ctobpl_const_4561: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4905} unique __ctobpl_const_4564: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4900} unique __ctobpl_const_4549: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4903} unique __ctobpl_const_4558: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4897} unique __ctobpl_const_4539: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4897} unique __ctobpl_const_4540: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4898} unique __ctobpl_const_4541: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4906} unique __ctobpl_const_4565: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4902} unique __ctobpl_const_4555: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4906} unique __ctobpl_const_4566: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4907} unique __ctobpl_const_4568: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4900} unique __ctobpl_const_4547: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4901} unique __ctobpl_const_4550: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4904} unique __ctobpl_const_4560: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4912} unique __ctobpl_const_4584: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4914} unique __ctobpl_const_4591: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4915} unique __ctobpl_const_4594: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4916} unique __ctobpl_const_4597: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4917} unique __ctobpl_const_4599: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4908} unique __ctobpl_const_4573: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4911} unique __ctobpl_const_4582: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4912} unique __ctobpl_const_4585: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4915} unique __ctobpl_const_4593: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4912} unique __ctobpl_const_4583: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4908} unique __ctobpl_const_4571: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4913} unique __ctobpl_const_4588: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4916} unique __ctobpl_const_4595: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4911} unique __ctobpl_const_4581: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4915} unique __ctobpl_const_4592: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4916} unique __ctobpl_const_4596: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4918} unique __ctobpl_const_4601: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4910} unique __ctobpl_const_4579: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4914} unique __ctobpl_const_4589: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4909} unique __ctobpl_const_4574: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4910} unique __ctobpl_const_4577: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4911} unique __ctobpl_const_4580: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4918} unique __ctobpl_const_4602: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4909} unique __ctobpl_const_4575: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4917} unique __ctobpl_const_4598: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4914} unique __ctobpl_const_4590: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4917} unique __ctobpl_const_4600: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4913} unique __ctobpl_const_4586: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4909} unique __ctobpl_const_4576: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4913} unique __ctobpl_const_4587: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4908} unique __ctobpl_const_4572: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4910} unique __ctobpl_const_4578: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4925} unique __ctobpl_const_4622: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4926} unique __ctobpl_const_4627: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4927} unique __ctobpl_const_4629: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4927} unique __ctobpl_const_4630: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4930} unique __ctobpl_const_4632: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4926} unique __ctobpl_const_4626: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4927} unique __ctobpl_const_4628: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4924} unique __ctobpl_const_4619: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4920} unique __ctobpl_const_4609: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4925} unique __ctobpl_const_4624: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4925} unique __ctobpl_const_4623: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4920} unique __ctobpl_const_4607: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4922} unique __ctobpl_const_4615: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4923} unique __ctobpl_const_4617: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4926} unique __ctobpl_const_4625: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4930} unique __ctobpl_const_4631: int;

const {:extern} {:model_const "strlen.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4931} unique __ctobpl_const_4633: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4923} unique __ctobpl_const_4616: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4931} unique __ctobpl_const_4634: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4919} unique __ctobpl_const_4606: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4924} unique __ctobpl_const_4620: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4922} unique __ctobpl_const_4613: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4919} unique __ctobpl_const_4605: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4920} unique __ctobpl_const_4608: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4918} unique __ctobpl_const_4603: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4921} unique __ctobpl_const_4612: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4921} unique __ctobpl_const_4610: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4919} unique __ctobpl_const_4604: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4921} unique __ctobpl_const_4611: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4922} unique __ctobpl_const_4614: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4923} unique __ctobpl_const_4618: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4924} unique __ctobpl_const_4621: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4961} unique __ctobpl_const_4650: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4961} unique __ctobpl_const_4653: int;

const {:extern} {:model_const "Keywords[(int )i][0]"} {:sourceFile ".\v24\space.c"} {:sourceLine 4794} unique __ctobpl_const_4640: int;

const {:extern} {:model_const "* unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4962} unique __ctobpl_const_4657: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4963} unique __ctobpl_const_4658: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4963} unique __ctobpl_const_4661: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4793} unique __ctobpl_const_4641: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4794} unique __ctobpl_const_4639: int;

const {:extern} {:model_const "result.strlen"} {:sourceFile ".\v24\space.c"} {:sourceLine 4931} unique __ctobpl_const_4637: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4955} unique __ctobpl_const_4643: int;

const {:extern} {:model_const "unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4959} unique __ctobpl_const_4648: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4961} unique __ctobpl_const_4652: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4961} unique __ctobpl_const_4651: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4961} unique __ctobpl_const_4654: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 4961} unique __ctobpl_const_4655: int;

const {:extern} {:model_const "unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4964} unique __ctobpl_const_4664: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4955} unique __ctobpl_const_4642: int;

const {:extern} {:model_const "* unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4959} unique __ctobpl_const_4649: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 4956} unique __ctobpl_const_4646: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4963} unique __ctobpl_const_4659: int;

const {:extern} {:model_const "unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4962} unique __ctobpl_const_4656: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4963} unique __ctobpl_const_4660: int;

const {:extern} {:model_const "strlen.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4931} unique __ctobpl_const_4636: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4956} unique __ctobpl_const_4645: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4963} unique __ctobpl_const_4662: int;

const {:extern} {:model_const "strlen.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4931} unique __ctobpl_const_4635: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4930} unique __ctobpl_const_4638: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 4956} unique __ctobpl_const_4647: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4956} unique __ctobpl_const_4644: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 4963} unique __ctobpl_const_4663: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_120: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_123: int;

const {:extern} {:model_const "result.GetInt"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_129: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3376} unique __ctobpl_const_131: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3386} unique __ctobpl_const_137: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_127: int;

const {:extern} {:model_const "* natur_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3386} unique __ctobpl_const_136: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3363} unique __ctobpl_const_119: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_122: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3387} unique __ctobpl_const_140: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_124: int;

const {:extern} {:model_const "* val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3381} unique __ctobpl_const_134: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3387} unique __ctobpl_const_142: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_126: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_128: int;

const {:extern} {:model_const "* val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3376} unique __ctobpl_const_132: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3485} unique __ctobpl_const_209: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3399} unique __ctobpl_const_145: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3405} unique __ctobpl_const_146: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3381} unique __ctobpl_const_133: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_125: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3363} unique __ctobpl_const_118: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3367} unique __ctobpl_const_130: int;

const {:extern} {:model_const "* val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3386} unique __ctobpl_const_138: int;

const {:extern} {:model_const "natur_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3386} unique __ctobpl_const_135: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3387} unique __ctobpl_const_139: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3363} unique __ctobpl_const_117: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3387} unique __ctobpl_const_141: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3366} unique __ctobpl_const_121: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3398} unique __ctobpl_const_143: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3398} unique __ctobpl_const_144: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 3555} unique __ctobpl_const_276: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3555} unique __ctobpl_const_273: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3573} unique __ctobpl_const_284: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3573} unique __ctobpl_const_287: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4670} unique __ctobpl_const_294: int;

const {:extern} {:model_const "strcmp.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4670} unique __ctobpl_const_296: int;

const {:extern} {:model_const "* val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3570} unique __ctobpl_const_283: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3556} unique __ctobpl_const_277: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4662} unique __ctobpl_const_288: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4670} unique __ctobpl_const_295: int;

const {:extern} {:model_const "result.strcmp"} {:sourceFile ".\v24\space.c"} {:sourceLine 4670} unique __ctobpl_const_299: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4756} unique __ctobpl_const_302: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3555} unique __ctobpl_const_275: int;

const {:extern} {:model_const "result.strlen"} {:sourceFile ".\v24\space.c"} {:sourceLine 4756} unique __ctobpl_const_303: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3555} unique __ctobpl_const_271: int;

const {:extern} {:model_const "* ureal_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3570} unique __ctobpl_const_281: int;

const {:extern} {:model_const "* val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3565} unique __ctobpl_const_279: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3565} unique __ctobpl_const_278: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3555} unique __ctobpl_const_274: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4662} unique __ctobpl_const_289: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4666} unique __ctobpl_const_291: int;

const {:extern} {:model_const "ureal_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3570} unique __ctobpl_const_280: int;

const {:extern} {:model_const "WORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 4670} unique __ctobpl_const_297: int;

const {:extern} {:model_const "strcmp.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4670} unique __ctobpl_const_298: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3570} unique __ctobpl_const_282: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4666} unique __ctobpl_const_300: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3573} unique __ctobpl_const_285: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3573} unique __ctobpl_const_286: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 4666} unique __ctobpl_const_292: int;

const {:extern} {:model_const "result.strlen"} {:sourceFile ".\v24\space.c"} {:sourceLine 4662} unique __ctobpl_const_290: int;

const {:extern} {:model_const "strcmp.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4670} unique __ctobpl_const_293: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3555} unique __ctobpl_const_272: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3493} unique __ctobpl_const_254: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3546} unique __ctobpl_const_266: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3551} unique __ctobpl_const_270: int;

const {:extern} {:model_const "word[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3493} unique __ctobpl_const_256: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3497} unique __ctobpl_const_258: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3531} unique __ctobpl_const_251: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3492} unique __ctobpl_const_253: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3493} unique __ctobpl_const_257: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3531} unique __ctobpl_const_252: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3493} unique __ctobpl_const_255: int;

const {:extern} {:model_const "result.isletter"} {:sourceFile ".\v24\space.c"} {:sourceLine 3521} unique __ctobpl_const_245: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3498} unique __ctobpl_const_261: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3531} unique __ctobpl_const_250: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3498} unique __ctobpl_const_262: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3498} unique __ctobpl_const_263: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 598} unique __ctobpl_const_366: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3531} unique __ctobpl_const_249: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3498} unique __ctobpl_const_260: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3544} unique __ctobpl_const_265: int;

const {:extern} {:model_const "val"} {:sourceFile ".\v24\space.c"} {:sourceLine 3546} unique __ctobpl_const_267: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3551} unique __ctobpl_const_268: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3525} unique __ctobpl_const_246: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3521} unique __ctobpl_const_241: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3497} unique __ctobpl_const_259: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3525} unique __ctobpl_const_247: int;

const {:extern} {:model_const "result.InKWords"} {:sourceFile ".\v24\space.c"} {:sourceLine 3525} unique __ctobpl_const_248: int;

const {:extern} {:model_const "word[0]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3521} unique __ctobpl_const_242: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3551} unique __ctobpl_const_269: int;

const {:extern} {:model_const "isletter.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3521} unique __ctobpl_const_243: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3544} unique __ctobpl_const_264: int;

const {:extern} {:model_const "isletter.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3521} unique __ctobpl_const_244: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3508} unique __ctobpl_const_230: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_219: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3490} unique __ctobpl_const_212: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_222: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3505} unique __ctobpl_const_225: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3509} unique __ctobpl_const_233: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_215: int;

const {:extern} {:model_const "result.isdigit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_221: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3518} unique __ctobpl_const_238: int;

const {:extern} {:model_const "isletter.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3521} unique __ctobpl_const_240: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_218: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_220: int;

const {:extern} {:model_const "result.isletter"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_216: int;

const {:extern} {:model_const "result.TapeGet"} {:sourceFile ".\v24\space.c"} {:sourceLine 3490} unique __ctobpl_const_213: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_223: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3505} unique __ctobpl_const_226: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3503} unique __ctobpl_const_228: int;

const {:extern} {:model_const "word[30]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3503} unique __ctobpl_const_229: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3509} unique __ctobpl_const_231: int;

const {:extern} {:model_const "word[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 3505} unique __ctobpl_const_227: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 3502} unique __ctobpl_const_224: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_214: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3509} unique __ctobpl_const_232: int;

const {:extern} {:model_const "isdigit.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3491} unique __ctobpl_const_217: int;

const {:extern} {:model_const "tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3509} unique __ctobpl_const_234: int;

const {:extern} {:model_const "* tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3509} unique __ctobpl_const_235: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3518} unique __ctobpl_const_237: int;

const {:extern} {:model_const "result.strlen"} {:sourceFile ".\v24\space.c"} {:sourceLine 3518} unique __ctobpl_const_239: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3490} unique __ctobpl_const_211: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3490} unique __ctobpl_const_210: int;

const {:extern} {:model_const "word"} {:sourceFile ".\v24\space.c"} {:sourceLine 3509} unique __ctobpl_const_236: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 688} unique __ctobpl_const_462: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 692} unique __ctobpl_const_473: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 712} unique __ctobpl_const_489: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 688} unique __ctobpl_const_463: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 692} unique __ctobpl_const_475: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_482: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 690} unique __ctobpl_const_470: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 714} unique __ctobpl_const_492: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 692} unique __ctobpl_const_474: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_483: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 689} unique __ctobpl_const_465: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 689} unique __ctobpl_const_469: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_480: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 692} unique __ctobpl_const_476: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 690} unique __ctobpl_const_471: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_484: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_479: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_478: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_485: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 689} unique __ctobpl_const_466: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_477: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 702} unique __ctobpl_const_487: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 712} unique __ctobpl_const_490: int;

const {:extern} {:model_const "(* addrem_ptr)->BLOCK_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 688} unique __ctobpl_const_464: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 689} unique __ctobpl_const_468: int;

const {:extern} {:model_const "(* addrem_ptr)->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 689} unique __ctobpl_const_467: int;

const {:extern} {:model_const "(* addrem_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 690} unique __ctobpl_const_472: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 710} unique __ctobpl_const_488: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 712} unique __ctobpl_const_491: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_481: int;

const {:extern} {:model_const "result.hexdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 700} unique __ctobpl_const_486: int;

const {:extern} {:model_const "(* addrem_ptr)->ADDREM_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 687} unique __ctobpl_const_461: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_442: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 682} unique __ctobpl_const_455: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 657} unique __ctobpl_const_432: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 657} unique __ctobpl_const_431: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 679} unique __ctobpl_const_452: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 656} unique __ctobpl_const_430: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_440: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 681} unique __ctobpl_const_453: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 659} unique __ctobpl_const_435: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 682} unique __ctobpl_const_456: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 682} unique __ctobpl_const_457: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 682} unique __ctobpl_const_458: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 687} unique __ctobpl_const_460: int;

const {:extern} {:model_const "(* addrem_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 657} unique __ctobpl_const_433: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_439: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 687} unique __ctobpl_const_459: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 679} unique __ctobpl_const_451: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 659} unique __ctobpl_const_436: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 679} unique __ctobpl_const_450: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_438: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_445: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 659} unique __ctobpl_const_437: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_443: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_441: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_446: int;

const {:extern} {:model_const "result.polydef"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_447: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 659} unique __ctobpl_const_434: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 667} unique __ctobpl_const_444: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 669} unique __ctobpl_const_448: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 677} unique __ctobpl_const_449: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 681} unique __ctobpl_const_454: int;

const {:extern} {:model_const "app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 865} unique __ctobpl_const_748: int;

const {:extern} {:model_const "* app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 865} unique __ctobpl_const_749: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 797} unique __ctobpl_const_760: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 926} unique __ctobpl_const_763: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 935} unique __ctobpl_const_765: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 936} unique __ctobpl_const_767: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_773: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_774: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 935} unique __ctobpl_const_766: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 941} unique __ctobpl_const_769: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_775: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 797} unique __ctobpl_const_759: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 870} unique __ctobpl_const_754: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 795} unique __ctobpl_const_758: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 868} unique __ctobpl_const_750: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 870} unique __ctobpl_const_753: int;

const {:extern} {:model_const "add_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 873} unique __ctobpl_const_757: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 926} unique __ctobpl_const_762: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 935} unique __ctobpl_const_764: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_771: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_772: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1066} unique __ctobpl_const_871: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 865} unique __ctobpl_const_747: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 941} unique __ctobpl_const_768: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 865} unique __ctobpl_const_746: int;

const {:extern} {:model_const "app2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 868} unique __ctobpl_const_751: int;

const {:extern} {:model_const "* app2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 868} unique __ctobpl_const_752: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 873} unique __ctobpl_const_755: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 873} unique __ctobpl_const_756: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_770: int;

const {:extern} {:model_const "add_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 797} unique __ctobpl_const_761: int;

const {:extern} {:model_const "* app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 863} unique __ctobpl_const_745: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 974} unique __ctobpl_const_803: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_791: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 969} unique __ctobpl_const_802: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 949} unique __ctobpl_const_780: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 950} unique __ctobpl_const_784: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_787: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_790: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_776: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_793: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 950} unique __ctobpl_const_781: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 965} unique __ctobpl_const_800: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 965} unique __ctobpl_const_801: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1063} unique __ctobpl_const_870: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 954} unique __ctobpl_const_785: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_788: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_789: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 950} unique __ctobpl_const_782: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_794: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_777: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 960} unique __ctobpl_const_786: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 964} unique __ctobpl_const_797: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_778: int;

const {:extern} {:model_const "result.adddef"} {:sourceFile ".\v24\space.c"} {:sourceLine 947} unique __ctobpl_const_779: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_795: int;

const {:extern} {:model_const "result.remdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_796: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1063} unique __ctobpl_const_869: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 993} unique __ctobpl_const_804: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 993} unique __ctobpl_const_805: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 950} unique __ctobpl_const_783: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 961} unique __ctobpl_const_792: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 965} unique __ctobpl_const_798: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 965} unique __ctobpl_const_799: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 813} unique __ctobpl_const_684: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 810} unique __ctobpl_const_682: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_700: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_697: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 816} unique __ctobpl_const_688: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_690: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_707: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_708: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_709: int;

const {:extern} {:model_const "app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_691: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_695: int;

const {:extern} {:model_const "app2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_692: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_693: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_704: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_705: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 824} unique __ctobpl_const_710: int;

const {:extern} {:model_const "new_nodes_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_696: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 824} unique __ctobpl_const_711: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 825} unique __ctobpl_const_712: int;

const {:extern} {:model_const "app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_701: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 827} unique __ctobpl_const_713: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_694: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 812} unique __ctobpl_const_683: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->GEOMETRY"} {:sourceFile ".\v24\space.c"} {:sourceLine 813} unique __ctobpl_const_686: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_703: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 813} unique __ctobpl_const_685: int;

const {:extern} {:model_const "app2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_702: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 814} unique __ctobpl_const_687: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_698: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_699: int;

const {:extern} {:model_const "new_nodes_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 822} unique __ctobpl_const_706: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 818} unique __ctobpl_const_689: int;

const {:extern} {:model_const "app2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_717: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 843} unique __ctobpl_const_736: int;

const {:extern} {:model_const "app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 863} unique __ctobpl_const_744: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_715: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_724: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 837} unique __ctobpl_const_714: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_725: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_728: int;

const {:extern} {:model_const "new_nodes_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_731: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_732: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_730: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_733: int;

const {:extern} {:model_const "elem_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_722: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 842} unique __ctobpl_const_735: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 853} unique __ctobpl_const_738: int;

const {:extern} {:model_const "app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_716: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_729: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 853} unique __ctobpl_const_739: int;

const {:extern} {:model_const "* new_nodes_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 853} unique __ctobpl_const_741: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 862} unique __ctobpl_const_742: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_718: int;

const {:extern} {:model_const "new_nodes_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_721: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_723: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_734: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_719: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_720: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 845} unique __ctobpl_const_737: int;

const {:extern} {:model_const "new_nodes_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 853} unique __ctobpl_const_740: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 863} unique __ctobpl_const_743: int;

const {:extern} {:model_const "app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_726: int;

const {:extern} {:model_const "app2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 841} unique __ctobpl_const_727: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1209} unique __ctobpl_const_1007: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1014: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1201} unique __ctobpl_const_999: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1208} unique __ctobpl_const_1004: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1208} unique __ctobpl_const_1006: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1017: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1015: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1008: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1009: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1208} unique __ctobpl_const_1001: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1019: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1224} unique __ctobpl_const_1021: int;

const {:extern} {:model_const "angle_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1011: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1224} unique __ctobpl_const_1022: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1224} unique __ctobpl_const_1024: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1214} unique __ctobpl_const_1025: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1010: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1012: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1208} unique __ctobpl_const_1002: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1214} unique __ctobpl_const_1026: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1214} unique __ctobpl_const_1028: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1202} unique __ctobpl_const_1029: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1213} unique __ctobpl_const_1020: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1224} unique __ctobpl_const_1023: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1214} unique __ctobpl_const_1027: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1208} unique __ctobpl_const_1005: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1208} unique __ctobpl_const_1000: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1208} unique __ctobpl_const_1003: int;

const {:extern} {:model_const "angle_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1016: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1202} unique __ctobpl_const_1030: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1018: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1212} unique __ctobpl_const_1013: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1248} unique __ctobpl_const_1044: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1250} unique __ctobpl_const_1049: int;

const {:extern} {:model_const "error1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1244} unique __ctobpl_const_1038: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1241} unique __ctobpl_const_1036: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1054: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1056: int;

const {:extern} {:model_const "error2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1245} unique __ctobpl_const_1039: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1057: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1246} unique __ctobpl_const_1040: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1249} unique __ctobpl_const_1046: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1202} unique __ctobpl_const_1031: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1058: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1059: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1202} unique __ctobpl_const_1032: int;

const {:extern} {:model_const "error1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1060: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1247} unique __ctobpl_const_1043: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1249} unique __ctobpl_const_1047: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1237} unique __ctobpl_const_1033: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1053: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1246} unique __ctobpl_const_1041: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1248} unique __ctobpl_const_1045: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1237} unique __ctobpl_const_1034: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1241} unique __ctobpl_const_1035: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1051: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1055: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1247} unique __ctobpl_const_1042: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1550} unique __ctobpl_const_1316: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1250} unique __ctobpl_const_1048: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1052: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1050: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1241} unique __ctobpl_const_1037: int;

const {:extern} {:model_const "ap2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 746} unique __ctobpl_const_552: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 603} unique __ctobpl_const_543: int;

const {:extern} {:model_const "add_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 745} unique __ctobpl_const_548: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 638} unique __ctobpl_const_537: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 602} unique __ctobpl_const_541: int;

const {:extern} {:model_const "app2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 746} unique __ctobpl_const_553: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 704} unique __ctobpl_const_527: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 671} unique __ctobpl_const_531: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 638} unique __ctobpl_const_536: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 637} unique __ctobpl_const_535: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 603} unique __ctobpl_const_545: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 589} unique __ctobpl_const_546: int;

const {:extern} {:model_const "ap2_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 746} unique __ctobpl_const_554: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 670} unique __ctobpl_const_529: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 602} unique __ctobpl_const_540: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 638} unique __ctobpl_const_539: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 671} unique __ctobpl_const_532: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 638} unique __ctobpl_const_538: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 603} unique __ctobpl_const_544: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 994} unique __ctobpl_const_806: int;

const {:extern} {:model_const "ap1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 746} unique __ctobpl_const_549: int;

const {:extern} {:model_const "ap1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 746} unique __ctobpl_const_551: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 704} unique __ctobpl_const_525: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 704} unique __ctobpl_const_524: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 637} unique __ctobpl_const_534: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 704} unique __ctobpl_const_526: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 670} unique __ctobpl_const_528: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 589} unique __ctobpl_const_547: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 671} unique __ctobpl_const_533: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 603} unique __ctobpl_const_542: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 671} unique __ctobpl_const_530: int;

const {:extern} {:model_const "app1_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 746} unique __ctobpl_const_550: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 723} unique __ctobpl_const_510: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 732} unique __ctobpl_const_516: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 732} unique __ctobpl_const_517: int;

const {:extern} {:model_const "(* addrem_ptr)->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 722} unique __ctobpl_const_506: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 725} unique __ctobpl_const_514: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 733} unique __ctobpl_const_518: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 715} unique __ctobpl_const_495: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 733} unique __ctobpl_const_519: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 722} unique __ctobpl_const_507: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 733} unique __ctobpl_const_520: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 703} unique __ctobpl_const_522: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 703} unique __ctobpl_const_523: int;

const {:extern} {:model_const "(* addrem_ptr)->ADDREM_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 720} unique __ctobpl_const_500: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 720} unique __ctobpl_const_498: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 733} unique __ctobpl_const_521: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 715} unique __ctobpl_const_496: int;

const {:extern} {:model_const "(* addrem_ptr)->BLOCK_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 721} unique __ctobpl_const_503: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 721} unique __ctobpl_const_501: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 722} unique __ctobpl_const_504: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 723} unique __ctobpl_const_509: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 722} unique __ctobpl_const_508: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 721} unique __ctobpl_const_502: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 725} unique __ctobpl_const_513: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 725} unique __ctobpl_const_515: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 714} unique __ctobpl_const_493: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 722} unique __ctobpl_const_505: int;

const {:extern} {:model_const "(* addrem_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 723} unique __ctobpl_const_511: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 715} unique __ctobpl_const_497: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 720} unique __ctobpl_const_499: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 715} unique __ctobpl_const_494: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 725} unique __ctobpl_const_512: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1196} unique __ctobpl_const_986: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1196} unique __ctobpl_const_988: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 1143} unique __ctobpl_const_966: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1190} unique __ctobpl_const_979: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1190} unique __ctobpl_const_977: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1196} unique __ctobpl_const_987: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1135} unique __ctobpl_const_969: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1176} unique __ctobpl_const_972: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1135} unique __ctobpl_const_967: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1184} unique __ctobpl_const_973: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1190} unique __ctobpl_const_978: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1190} unique __ctobpl_const_981: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1191} unique __ctobpl_const_984: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1135} unique __ctobpl_const_968: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1176} unique __ctobpl_const_971: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1196} unique __ctobpl_const_985: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1187} unique __ctobpl_const_976: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1197} unique __ctobpl_const_992: int;

const {:extern} {:model_const "angle_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1200} unique __ctobpl_const_993: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1200} unique __ctobpl_const_994: int;

const {:extern} {:model_const "angle_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1200} unique __ctobpl_const_995: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1200} unique __ctobpl_const_996: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1200} unique __ctobpl_const_997: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1196} unique __ctobpl_const_989: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1196} unique __ctobpl_const_990: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1196} unique __ctobpl_const_991: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1184} unique __ctobpl_const_975: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1184} unique __ctobpl_const_974: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1190} unique __ctobpl_const_980: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1190} unique __ctobpl_const_982: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1190} unique __ctobpl_const_983: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1135} unique __ctobpl_const_970: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1071} unique __ctobpl_const_881: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1087} unique __ctobpl_const_903: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_895: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1072} unique __ctobpl_const_883: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1071} unique __ctobpl_const_880: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_898: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_891: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_894: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1071} unique __ctobpl_const_882: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1068} unique __ctobpl_const_875: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1071} unique __ctobpl_const_877: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1071} unique __ctobpl_const_876: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1077} unique __ctobpl_const_887: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1077} unique __ctobpl_const_888: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_893: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_899: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1067} unique __ctobpl_const_873: int;

const {:extern} {:model_const "result.angunit"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_900: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1068} unique __ctobpl_const_874: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1077} unique __ctobpl_const_885: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_897: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1087} unique __ctobpl_const_902: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1086} unique __ctobpl_const_901: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1071} unique __ctobpl_const_879: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1077} unique __ctobpl_const_884: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1071} unique __ctobpl_const_878: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 1077} unique __ctobpl_const_889: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_892: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1067} unique __ctobpl_const_872: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1078} unique __ctobpl_const_890: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1077} unique __ctobpl_const_886: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1085} unique __ctobpl_const_896: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1134} unique __ctobpl_const_930: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1141} unique __ctobpl_const_931: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1141} unique __ctobpl_const_932: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1079} unique __ctobpl_const_908: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1141} unique __ctobpl_const_934: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1090} unique __ctobpl_const_906: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1121} unique __ctobpl_const_913: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1127} unique __ctobpl_const_917: int;

const {:extern} {:model_const "result.angclaus"} {:sourceFile ".\v24\space.c"} {:sourceLine 1255} unique __ctobpl_const_1061: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1124} unique __ctobpl_const_915: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1127} unique __ctobpl_const_919: int;

const {:extern} {:model_const "theta_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1133} unique __ctobpl_const_924: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1127} unique __ctobpl_const_916: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1141} unique __ctobpl_const_933: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1127} unique __ctobpl_const_920: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1121} unique __ctobpl_const_914: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1127} unique __ctobpl_const_918: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1127} unique __ctobpl_const_921: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1113} unique __ctobpl_const_910: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1113} unique __ctobpl_const_911: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1128} unique __ctobpl_const_923: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1090} unique __ctobpl_const_905: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1133} unique __ctobpl_const_925: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1090} unique __ctobpl_const_907: int;

const {:extern} {:model_const "theta_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1133} unique __ctobpl_const_926: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1133} unique __ctobpl_const_928: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 1133} unique __ctobpl_const_929: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1090} unique __ctobpl_const_904: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1127} unique __ctobpl_const_922: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1079} unique __ctobpl_const_909: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1121} unique __ctobpl_const_912: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1133} unique __ctobpl_const_927: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1142} unique __ctobpl_const_938: int;

const {:extern} {:model_const "phi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_947: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_950: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1160} unique __ctobpl_const_954: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1160} unique __ctobpl_const_955: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_943: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1150} unique __ctobpl_const_957: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1141} unique __ctobpl_const_937: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_945: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1150} unique __ctobpl_const_958: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1150} unique __ctobpl_const_959: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 1143} unique __ctobpl_const_960: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1143} unique __ctobpl_const_961: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_948: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1143} unique __ctobpl_const_962: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1150} unique __ctobpl_const_956: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 1143} unique __ctobpl_const_963: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1143} unique __ctobpl_const_964: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1143} unique __ctobpl_const_965: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_946: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1149} unique __ctobpl_const_951: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1160} unique __ctobpl_const_952: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_941: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1141} unique __ctobpl_const_936: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_940: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_939: int;

const {:extern} {:model_const "phi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_942: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1160} unique __ctobpl_const_953: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_949: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1141} unique __ctobpl_const_935: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1148} unique __ctobpl_const_944: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1195: int;

const {:extern} {:model_const "phi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1214: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1408} unique __ctobpl_const_1197: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1215: int;

const {:extern} {:model_const "u_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1193: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1409} unique __ctobpl_const_1198: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1409} unique __ctobpl_const_1199: int;

const {:extern} {:model_const "result.uvdir"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1196: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1192: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1413} unique __ctobpl_const_1202: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1419} unique __ctobpl_const_1203: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1206: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1210: int;

const {:extern} {:model_const "theta_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1213: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1216: int;

const {:extern} {:model_const "result.angledir"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1217: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1423} unique __ctobpl_const_1218: int;

const {:extern} {:model_const "phi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1208: int;

const {:extern} {:model_const "theta_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1207: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1424} unique __ctobpl_const_1219: int;

const {:extern} {:model_const "v_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1194: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1205: int;

const {:extern} {:model_const "u_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1188: int;

const {:extern} {:model_const "v_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1189: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1190: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1409} unique __ctobpl_const_1201: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1409} unique __ctobpl_const_1200: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1191: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1204: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1212: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1209: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1420} unique __ctobpl_const_1211: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1476} unique __ctobpl_const_1241: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1434} unique __ctobpl_const_1226: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1434} unique __ctobpl_const_1224: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1434} unique __ctobpl_const_1227: int;

const {:extern} {:model_const "pcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 1461} unique __ctobpl_const_1231: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1424} unique __ctobpl_const_1221: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1465} unique __ctobpl_const_1235: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1473} unique __ctobpl_const_1238: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1474} unique __ctobpl_const_1240: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1476} unique __ctobpl_const_1242: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1473} unique __ctobpl_const_1239: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1479} unique __ctobpl_const_1244: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1479} unique __ctobpl_const_1247: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1479} unique __ctobpl_const_1249: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1480} unique __ctobpl_const_1250: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1251: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1428} unique __ctobpl_const_1223: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1479} unique __ctobpl_const_1245: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1455} unique __ctobpl_const_1228: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1434} unique __ctobpl_const_1225: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1465} unique __ctobpl_const_1236: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1424} unique __ctobpl_const_1222: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1479} unique __ctobpl_const_1246: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1455} unique __ctobpl_const_1229: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1462} unique __ctobpl_const_1232: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1473} unique __ctobpl_const_1237: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1424} unique __ctobpl_const_1220: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1461} unique __ctobpl_const_1230: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1479} unique __ctobpl_const_1248: int;

const {:extern} {:model_const "qcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 1462} unique __ctobpl_const_1233: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1465} unique __ctobpl_const_1234: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1479} unique __ctobpl_const_1243: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1503} unique __ctobpl_const_1271: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1503} unique __ctobpl_const_1269: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1493} unique __ctobpl_const_1264: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1513} unique __ctobpl_const_1278: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1252: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1260: int;

const {:extern} {:model_const "app_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 1513} unique __ctobpl_const_1279: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1254: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1512} unique __ctobpl_const_1275: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1514} unique __ctobpl_const_1280: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1503} unique __ctobpl_const_1270: int;

const {:extern} {:model_const "app_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 1514} unique __ctobpl_const_1281: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1515} unique __ctobpl_const_1282: int;

const {:extern} {:model_const "app_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 1515} unique __ctobpl_const_1283: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1258: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1253: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1487} unique __ctobpl_const_1263: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1259: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1503} unique __ctobpl_const_1268: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1511} unique __ctobpl_const_1272: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 1500} unique __ctobpl_const_1266: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1257: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1502} unique __ctobpl_const_1267: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1261: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1256: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1500} unique __ctobpl_const_1265: int;

const {:extern} {:model_const "app_ptr->PCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 1511} unique __ctobpl_const_1273: int;

const {:extern} {:model_const "app_ptr->QCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 1512} unique __ctobpl_const_1276: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1255: int;

const {:extern} {:model_const "pcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 1511} unique __ctobpl_const_1274: int;

const {:extern} {:model_const "qcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 1512} unique __ctobpl_const_1277: int;

const {:extern} {:model_const "result.nodecoor"} {:sourceFile ".\v24\space.c"} {:sourceLine 1485} unique __ctobpl_const_1262: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1520} unique __ctobpl_const_1288: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1521} unique __ctobpl_const_1291: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1302: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1517} unique __ctobpl_const_1286: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1526} unique __ctobpl_const_1304: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1296: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1299: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1516} unique __ctobpl_const_1284: int;

const {:extern} {:model_const "app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 1517} unique __ctobpl_const_1287: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1520} unique __ctobpl_const_1289: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1293: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1297: int;

const {:extern} {:model_const "result.nodecoor"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1303: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1539} unique __ctobpl_const_1306: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1541} unique __ctobpl_const_1308: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 1539} unique __ctobpl_const_1307: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1549} unique __ctobpl_const_1313: int;

const {:extern} {:model_const "app_ptr->PCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 1549} unique __ctobpl_const_1314: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1301: int;

const {:extern} {:model_const "app_ptr->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 1516} unique __ctobpl_const_1285: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1294: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1292: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1300: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1542} unique __ctobpl_const_1309: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1542} unique __ctobpl_const_1310: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1298: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1521} unique __ctobpl_const_1290: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1532} unique __ctobpl_const_1305: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1542} unique __ctobpl_const_1311: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1542} unique __ctobpl_const_1312: int;

const {:extern} {:model_const "pcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 1549} unique __ctobpl_const_1315: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1524} unique __ctobpl_const_1295: int;

const {:extern} {:model_const "error2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1276} unique __ctobpl_const_1093: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1068: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1067: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1258} unique __ctobpl_const_1065: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1074: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1257} unique __ctobpl_const_1064: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1076: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1077: int;

const {:extern} {:model_const "error1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1256} unique __ctobpl_const_1062: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1078: int;

const {:extern} {:model_const "error2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1079: int;

const {:extern} {:model_const "result.doubstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1080: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1289} unique __ctobpl_const_1084: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1073: int;

const {:extern} {:model_const "error2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1265} unique __ctobpl_const_1082: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1257} unique __ctobpl_const_1063: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1069: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1289} unique __ctobpl_const_1085: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1276} unique __ctobpl_const_1089: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1258} unique __ctobpl_const_1066: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1276} unique __ctobpl_const_1088: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1075: int;

const {:extern} {:model_const "error1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1265} unique __ctobpl_const_1081: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1289} unique __ctobpl_const_1086: int;

const {:extern} {:model_const "error2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1276} unique __ctobpl_const_1090: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1072: int;

const {:extern} {:model_const "error2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1275} unique __ctobpl_const_1083: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1276} unique __ctobpl_const_1091: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1071: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1262} unique __ctobpl_const_1070: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1276} unique __ctobpl_const_1092: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1289} unique __ctobpl_const_1087: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1312} unique __ctobpl_const_1124: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1280} unique __ctobpl_const_1099: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1281} unique __ctobpl_const_1100: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1267} unique __ctobpl_const_1106: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1281} unique __ctobpl_const_1101: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1278} unique __ctobpl_const_1095: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1268} unique __ctobpl_const_1109: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1266} unique __ctobpl_const_1105: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1269} unique __ctobpl_const_1111: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1269} unique __ctobpl_const_1110: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1883} unique __ctobpl_const_1571: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1282} unique __ctobpl_const_1102: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1266} unique __ctobpl_const_1104: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1268} unique __ctobpl_const_1108: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1267} unique __ctobpl_const_1107: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1300} unique __ctobpl_const_1114: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1300} unique __ctobpl_const_1115: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1307} unique __ctobpl_const_1116: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1279} unique __ctobpl_const_1097: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1307} unique __ctobpl_const_1118: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1278} unique __ctobpl_const_1094: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1311} unique __ctobpl_const_1119: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1270} unique __ctobpl_const_1112: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1279} unique __ctobpl_const_1096: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1280} unique __ctobpl_const_1098: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1270} unique __ctobpl_const_1113: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1307} unique __ctobpl_const_1117: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1282} unique __ctobpl_const_1103: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1311} unique __ctobpl_const_1120: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1312} unique __ctobpl_const_1121: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1312} unique __ctobpl_const_1122: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1312} unique __ctobpl_const_1123: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1320} unique __ctobpl_const_1138: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1334} unique __ctobpl_const_1141: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1312} unique __ctobpl_const_1125: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1334} unique __ctobpl_const_1142: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1314} unique __ctobpl_const_1134: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1338} unique __ctobpl_const_1143: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1320} unique __ctobpl_const_1139: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1314} unique __ctobpl_const_1133: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1338} unique __ctobpl_const_1145: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1312} unique __ctobpl_const_1126: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1313} unique __ctobpl_const_1127: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1314} unique __ctobpl_const_1130: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1342} unique __ctobpl_const_1147: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1342} unique __ctobpl_const_1150: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1342} unique __ctobpl_const_1151: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 1342} unique __ctobpl_const_1152: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1343} unique __ctobpl_const_1153: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1342} unique __ctobpl_const_1148: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1154: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1339} unique __ctobpl_const_1146: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1315} unique __ctobpl_const_1135: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1315} unique __ctobpl_const_1136: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1342} unique __ctobpl_const_1149: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1338} unique __ctobpl_const_1144: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1155: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1156: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1313} unique __ctobpl_const_1128: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1314} unique __ctobpl_const_1131: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1314} unique __ctobpl_const_1132: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1320} unique __ctobpl_const_1137: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1320} unique __ctobpl_const_1140: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1314} unique __ctobpl_const_1129: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1160: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1162: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1395} unique __ctobpl_const_1174: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1401} unique __ctobpl_const_1182: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1401} unique __ctobpl_const_1183: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1402} unique __ctobpl_const_1184: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1357} unique __ctobpl_const_1169: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1185: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1186: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1387} unique __ctobpl_const_1171: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1357} unique __ctobpl_const_1167: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1401} unique __ctobpl_const_1179: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1354} unique __ctobpl_const_1166: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1387} unique __ctobpl_const_1172: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1401} unique __ctobpl_const_1181: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1405} unique __ctobpl_const_1187: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1357} unique __ctobpl_const_1168: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1353} unique __ctobpl_const_1164: int;

const {:extern} {:model_const "result.angunit"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1163: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1357} unique __ctobpl_const_1170: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1395} unique __ctobpl_const_1173: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1401} unique __ctobpl_const_1177: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1157: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1354} unique __ctobpl_const_1165: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1398} unique __ctobpl_const_1176: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1401} unique __ctobpl_const_1178: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1161: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1158: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1395} unique __ctobpl_const_1175: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1349} unique __ctobpl_const_1159: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1401} unique __ctobpl_const_1180: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1500: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1501: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1793} unique __ctobpl_const_1478: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1502: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1806} unique __ctobpl_const_1494: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1797} unique __ctobpl_const_1481: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1498: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1503: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1504: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1803} unique __ctobpl_const_1488: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1806} unique __ctobpl_const_1493: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1505: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 1768} unique __ctobpl_const_1476: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 1765} unique __ctobpl_const_1474: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1793} unique __ctobpl_const_1479: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1802} unique __ctobpl_const_1486: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1802} unique __ctobpl_const_1487: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1806} unique __ctobpl_const_1490: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1801} unique __ctobpl_const_1484: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1797} unique __ctobpl_const_1480: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1806} unique __ctobpl_const_1496: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1499: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1806} unique __ctobpl_const_1491: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 1765} unique __ctobpl_const_1475: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 1766} unique __ctobpl_const_1477: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1800} unique __ctobpl_const_1483: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1801} unique __ctobpl_const_1485: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1806} unique __ctobpl_const_1492: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1797} unique __ctobpl_const_1482: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1803} unique __ctobpl_const_1489: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1806} unique __ctobpl_const_1495: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1807} unique __ctobpl_const_1497: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1821} unique __ctobpl_const_1511: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1821} unique __ctobpl_const_1512: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1821} unique __ctobpl_const_1509: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1821} unique __ctobpl_const_1515: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1518: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1519: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1521: int;

const {:extern} {:model_const "result.GetUReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1526: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1837} unique __ctobpl_const_1528: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1522: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1506: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1523: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1524: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1821} unique __ctobpl_const_1510: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1821} unique __ctobpl_const_1513: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1821} unique __ctobpl_const_1514: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1517: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1525: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1828} unique __ctobpl_const_1527: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1827} unique __ctobpl_const_1520: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1837} unique __ctobpl_const_1531: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1837} unique __ctobpl_const_1532: int;

const {:extern} {:model_const "result.lenunit"} {:sourceFile ".\v24\space.c"} {:sourceLine 1837} unique __ctobpl_const_1533: int;

const {:extern} {:model_const "result.GetUReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 1812} unique __ctobpl_const_1507: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1838} unique __ctobpl_const_1534: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1839} unique __ctobpl_const_1535: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1842} unique __ctobpl_const_1537: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1837} unique __ctobpl_const_1529: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1822} unique __ctobpl_const_1516: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1837} unique __ctobpl_const_1530: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1839} unique __ctobpl_const_1536: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1813} unique __ctobpl_const_1508: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1830} unique __ctobpl_const_1543: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1816} unique __ctobpl_const_1553: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1830} unique __ctobpl_const_1544: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1831} unique __ctobpl_const_1546: int;

const {:extern} {:model_const "result.sin"} {:sourceFile ".\v24\space.c"} {:sourceLine 1853} unique __ctobpl_const_1559: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1876} unique __ctobpl_const_1565: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 1880} unique __ctobpl_const_1568: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1832} unique __ctobpl_const_1547: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1882} unique __ctobpl_const_1569: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1815} unique __ctobpl_const_1551: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1875} unique __ctobpl_const_1564: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1842} unique __ctobpl_const_1538: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1842} unique __ctobpl_const_1540: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1829} unique __ctobpl_const_1541: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1814} unique __ctobpl_const_1548: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1829} unique __ctobpl_const_1542: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1831} unique __ctobpl_const_1545: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1817} unique __ctobpl_const_1554: int;

const {:extern} {:model_const "sin.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1853} unique __ctobpl_const_1555: int;

const {:extern} {:model_const "sin.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1853} unique __ctobpl_const_1557: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 1853} unique __ctobpl_const_1556: int;

const {:extern} {:model_const "sin.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1853} unique __ctobpl_const_1558: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1814} unique __ctobpl_const_1549: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1815} unique __ctobpl_const_1550: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1866} unique __ctobpl_const_1560: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1875} unique __ctobpl_const_1562: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1875} unique __ctobpl_const_1563: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1842} unique __ctobpl_const_1539: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1816} unique __ctobpl_const_1552: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1866} unique __ctobpl_const_1561: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1880} unique __ctobpl_const_1566: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1880} unique __ctobpl_const_1567: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1558} unique __ctobpl_const_1329: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1565} unique __ctobpl_const_1338: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1533} unique __ctobpl_const_1341: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1554} unique __ctobpl_const_1325: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1559} unique __ctobpl_const_1333: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1533} unique __ctobpl_const_1343: int;

const {:extern} {:model_const "qcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 1550} unique __ctobpl_const_1318: int;

const {:extern} {:model_const "app_ptr->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 1554} unique __ctobpl_const_1326: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1562} unique __ctobpl_const_1335: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1551} unique __ctobpl_const_1319: int;

const {:extern} {:model_const "app_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 1552} unique __ctobpl_const_1322: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1565} unique __ctobpl_const_1337: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1565} unique __ctobpl_const_1340: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1533} unique __ctobpl_const_1342: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1533} unique __ctobpl_const_1344: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1527} unique __ctobpl_const_1345: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1565} unique __ctobpl_const_1339: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1553} unique __ctobpl_const_1323: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1527} unique __ctobpl_const_1346: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1527} unique __ctobpl_const_1347: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1527} unique __ctobpl_const_1348: int;

const {:extern} {:model_const "app_ptr->QCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 1550} unique __ctobpl_const_1317: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1552} unique __ctobpl_const_1321: int;

const {:extern} {:model_const "app_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 1553} unique __ctobpl_const_1324: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1555} unique __ctobpl_const_1327: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 1558} unique __ctobpl_const_1330: int;

const {:extern} {:model_const "app_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 1551} unique __ctobpl_const_1320: int;

const {:extern} {:model_const "app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 1555} unique __ctobpl_const_1328: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1558} unique __ctobpl_const_1331: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1559} unique __ctobpl_const_1332: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1562} unique __ctobpl_const_1336: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1562} unique __ctobpl_const_1334: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1589} unique __ctobpl_const_1368: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1589} unique __ctobpl_const_1369: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1585} unique __ctobpl_const_1360: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1577} unique __ctobpl_const_1358: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1586} unique __ctobpl_const_1363: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1578} unique __ctobpl_const_1359: int;

const {:extern} {:model_const "* direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1586} unique __ctobpl_const_1364: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1589} unique __ctobpl_const_1371: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1590} unique __ctobpl_const_1372: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1595} unique __ctobpl_const_1375: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1585} unique __ctobpl_const_1362: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1595} unique __ctobpl_const_1374: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1595} unique __ctobpl_const_1378: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1595} unique __ctobpl_const_1379: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1488} unique __ctobpl_const_1355: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1494} unique __ctobpl_const_1352: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1595} unique __ctobpl_const_1377: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1577} unique __ctobpl_const_1357: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1589} unique __ctobpl_const_1366: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1494} unique __ctobpl_const_1350: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1589} unique __ctobpl_const_1365: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1488} unique __ctobpl_const_1354: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1589} unique __ctobpl_const_1370: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1488} unique __ctobpl_const_1356: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1488} unique __ctobpl_const_1353: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2002} unique __ctobpl_const_1826: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1589} unique __ctobpl_const_1367: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1494} unique __ctobpl_const_1351: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1595} unique __ctobpl_const_1376: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1494} unique __ctobpl_const_1349: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1585} unique __ctobpl_const_1361: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1595} unique __ctobpl_const_1373: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1623} unique __ctobpl_const_1405: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1630} unique __ctobpl_const_1411: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1598} unique __ctobpl_const_1383: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1611} unique __ctobpl_const_1402: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1603} unique __ctobpl_const_1390: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1603} unique __ctobpl_const_1387: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1603} unique __ctobpl_const_1393: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1623} unique __ctobpl_const_1406: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1627} unique __ctobpl_const_1410: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1611} unique __ctobpl_const_1401: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1596} unique __ctobpl_const_1380: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1603} unique __ctobpl_const_1389: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1627} unique __ctobpl_const_1409: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1627} unique __ctobpl_const_1408: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1603} unique __ctobpl_const_1388: int;

const {:extern} {:model_const "* direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1605} unique __ctobpl_const_1396: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1603} unique __ctobpl_const_1392: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1597} unique __ctobpl_const_1381: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1606} unique __ctobpl_const_1398: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1624} unique __ctobpl_const_1407: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1611} unique __ctobpl_const_1404: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1605} unique __ctobpl_const_1395: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1603} unique __ctobpl_const_1391: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1598} unique __ctobpl_const_1385: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1598} unique __ctobpl_const_1386: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1606} unique __ctobpl_const_1397: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1604} unique __ctobpl_const_1394: int;

const {:extern} {:model_const "* direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1597} unique __ctobpl_const_1382: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1606} unique __ctobpl_const_1399: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1598} unique __ctobpl_const_1384: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1606} unique __ctobpl_const_1400: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1611} unique __ctobpl_const_1403: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1631} unique __ctobpl_const_1418: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1433: int;

const {:extern} {:model_const "radius_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1648} unique __ctobpl_const_1439: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1648} unique __ctobpl_const_1440: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1648} unique __ctobpl_const_1442: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1641} unique __ctobpl_const_1437: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1435: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1636} unique __ctobpl_const_1422: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1648} unique __ctobpl_const_1438: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1636} unique __ctobpl_const_1421: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1429: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1630} unique __ctobpl_const_1413: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1434: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1432: int;

const {:extern} {:model_const "result.Get1Real"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1436: int;

const {:extern} {:model_const "radius_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1648} unique __ctobpl_const_1441: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1630} unique __ctobpl_const_1416: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1630} unique __ctobpl_const_1417: int;

const {:extern} {:model_const "result.lenunit"} {:sourceFile ".\v24\space.c"} {:sourceLine 1648} unique __ctobpl_const_1443: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1637} unique __ctobpl_const_1426: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1636} unique __ctobpl_const_1419: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1636} unique __ctobpl_const_1424: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1636} unique __ctobpl_const_1425: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1630} unique __ctobpl_const_1415: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1630} unique __ctobpl_const_1412: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1630} unique __ctobpl_const_1414: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1636} unique __ctobpl_const_1420: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1428: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1430: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1431: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1636} unique __ctobpl_const_1423: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1640} unique __ctobpl_const_1427: int;

const {:extern} {:model_const "cos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1734} unique __ctobpl_const_1469: int;

const {:extern} {:model_const "result.cos"} {:sourceFile ".\v24\space.c"} {:sourceLine 1734} unique __ctobpl_const_1470: int;

const {:extern} {:model_const "* x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1748} unique __ctobpl_const_1473: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1882} unique __ctobpl_const_1570: int;

const {:extern} {:model_const "result.acos"} {:sourceFile ".\v24\space.c"} {:sourceLine 1702} unique __ctobpl_const_1459: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1642} unique __ctobpl_const_1455: int;

const {:extern} {:model_const "radius_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1653} unique __ctobpl_const_1445: int;

const {:extern} {:model_const "* radius_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1653} unique __ctobpl_const_1446: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1656} unique __ctobpl_const_1450: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1642} unique __ctobpl_const_1452: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 1702} unique __ctobpl_const_1457: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 1724} unique __ctobpl_const_1463: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1656} unique __ctobpl_const_1448: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1642} unique __ctobpl_const_1454: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 1724} unique __ctobpl_const_1464: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 1713} unique __ctobpl_const_1461: int;

const {:extern} {:model_const "cos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1734} unique __ctobpl_const_1468: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 1734} unique __ctobpl_const_1467: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1656} unique __ctobpl_const_1449: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1652} unique __ctobpl_const_1444: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1642} unique __ctobpl_const_1456: int;

const {:extern} {:model_const "result.atan"} {:sourceFile ".\v24\space.c"} {:sourceLine 1724} unique __ctobpl_const_1465: int;

const {:extern} {:model_const "unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 1742} unique __ctobpl_const_1471: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1642} unique __ctobpl_const_1451: int;

const {:extern} {:model_const "result.asin"} {:sourceFile ".\v24\space.c"} {:sourceLine 1713} unique __ctobpl_const_1462: int;

const {:extern} {:model_const "x_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1748} unique __ctobpl_const_1472: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 1713} unique __ctobpl_const_1460: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1656} unique __ctobpl_const_1447: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1642} unique __ctobpl_const_1453: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 1702} unique __ctobpl_const_1458: int;

const {:extern} {:model_const "cos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1734} unique __ctobpl_const_1466: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1998} unique __ctobpl_const_1813: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1992} unique __ctobpl_const_1796: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1996} unique __ctobpl_const_1808: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1998} unique __ctobpl_const_1814: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1993} unique __ctobpl_const_1799: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1995} unique __ctobpl_const_1803: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1994} unique __ctobpl_const_1801: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1999} unique __ctobpl_const_1815: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2000} unique __ctobpl_const_1818: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1997} unique __ctobpl_const_1811: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2001} unique __ctobpl_const_1821: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2001} unique __ctobpl_const_1822: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1995} unique __ctobpl_const_1805: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2001} unique __ctobpl_const_1823: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1999} unique __ctobpl_const_1817: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1992} unique __ctobpl_const_1795: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1996} unique __ctobpl_const_1806: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1997} unique __ctobpl_const_1809: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1994} unique __ctobpl_const_1802: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1995} unique __ctobpl_const_1804: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1997} unique __ctobpl_const_1810: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2000} unique __ctobpl_const_1820: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2002} unique __ctobpl_const_1824: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1998} unique __ctobpl_const_1812: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2002} unique __ctobpl_const_1825: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1993} unique __ctobpl_const_1798: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1994} unique __ctobpl_const_1800: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2000} unique __ctobpl_const_1819: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1993} unique __ctobpl_const_1797: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1999} unique __ctobpl_const_1816: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1996} unique __ctobpl_const_1807: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1992} unique __ctobpl_const_1794: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1898} unique __ctobpl_const_1589: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1898} unique __ctobpl_const_1591: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1898} unique __ctobpl_const_1588: int;

const {:extern} {:model_const "(* elem_ptr)->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 1899} unique __ctobpl_const_1594: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1600: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1888} unique __ctobpl_const_1580: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1883} unique __ctobpl_const_1574: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1888} unique __ctobpl_const_1577: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1900} unique __ctobpl_const_1598: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1599: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1897} unique __ctobpl_const_1587: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1601: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1602: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1900} unique __ctobpl_const_1597: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1898} unique __ctobpl_const_1590: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1603: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1888} unique __ctobpl_const_1575: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1895} unique __ctobpl_const_1583: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1883} unique __ctobpl_const_1573: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1889} unique __ctobpl_const_1582: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1899} unique __ctobpl_const_1592: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1883} unique __ctobpl_const_1572: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1899} unique __ctobpl_const_1593: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1900} unique __ctobpl_const_1595: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1888} unique __ctobpl_const_1579: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1895} unique __ctobpl_const_1585: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1888} unique __ctobpl_const_1578: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1900} unique __ctobpl_const_1596: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1888} unique __ctobpl_const_1576: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 1888} unique __ctobpl_const_1581: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1895} unique __ctobpl_const_1584: int;

const {:extern} {:model_const "result.GetUName"} {:sourceFile ".\v24\space.c"} {:sourceLine 1895} unique __ctobpl_const_1586: int;

const {:extern} {:model_const "p2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2218} unique __ctobpl_const_2081: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1937} unique __ctobpl_const_1629: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1937} unique __ctobpl_const_1631: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1938} unique __ctobpl_const_1632: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1934} unique __ctobpl_const_1620: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1936} unique __ctobpl_const_1627: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1938} unique __ctobpl_const_1634: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1936} unique __ctobpl_const_1628: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1604: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1938} unique __ctobpl_const_1633: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1913} unique __ctobpl_const_1615: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1913} unique __ctobpl_const_1614: int;

const {:extern} {:model_const "result.sinelem"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1608: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1606: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1607: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1908} unique __ctobpl_const_1612: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1908} unique __ctobpl_const_1610: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1935} unique __ctobpl_const_1623: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1890} unique __ctobpl_const_1616: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1905} unique __ctobpl_const_1605: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1908} unique __ctobpl_const_1613: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1935} unique __ctobpl_const_1624: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 1890} unique __ctobpl_const_1617: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1934} unique __ctobpl_const_1622: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 1931} unique __ctobpl_const_1618: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1935} unique __ctobpl_const_1625: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1936} unique __ctobpl_const_1626: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1937} unique __ctobpl_const_1630: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 1907} unique __ctobpl_const_1609: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 1908} unique __ctobpl_const_1611: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 1931} unique __ctobpl_const_1619: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1934} unique __ctobpl_const_1621: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1943} unique __ctobpl_const_1648: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1947} unique __ctobpl_const_1659: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1947} unique __ctobpl_const_1660: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1939} unique __ctobpl_const_1637: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1940} unique __ctobpl_const_1638: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1943} unique __ctobpl_const_1647: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1946} unique __ctobpl_const_1656: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1947} unique __ctobpl_const_1661: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1948} unique __ctobpl_const_1662: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1948} unique __ctobpl_const_1663: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1948} unique __ctobpl_const_1664: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1949} unique __ctobpl_const_1665: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1949} unique __ctobpl_const_1666: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1942} unique __ctobpl_const_1646: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1941} unique __ctobpl_const_1642: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1941} unique __ctobpl_const_1643: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1941} unique __ctobpl_const_1641: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1939} unique __ctobpl_const_1635: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1944} unique __ctobpl_const_1650: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1944} unique __ctobpl_const_1651: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1945} unique __ctobpl_const_1653: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1943} unique __ctobpl_const_1649: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1945} unique __ctobpl_const_1654: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1940} unique __ctobpl_const_1639: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1945} unique __ctobpl_const_1655: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1942} unique __ctobpl_const_1644: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1939} unique __ctobpl_const_1636: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1944} unique __ctobpl_const_1652: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1946} unique __ctobpl_const_1657: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1942} unique __ctobpl_const_1645: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1946} unique __ctobpl_const_1658: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1940} unique __ctobpl_const_1640: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1952} unique __ctobpl_const_1675: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1953} unique __ctobpl_const_1677: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1957} unique __ctobpl_const_1689: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1950} unique __ctobpl_const_1668: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1958} unique __ctobpl_const_1693: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1958} unique __ctobpl_const_1694: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1959} unique __ctobpl_const_1695: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1949} unique __ctobpl_const_1667: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1956} unique __ctobpl_const_1686: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1954} unique __ctobpl_const_1680: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1953} unique __ctobpl_const_1678: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1958} unique __ctobpl_const_1692: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1955} unique __ctobpl_const_1683: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1955} unique __ctobpl_const_1684: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1951} unique __ctobpl_const_1673: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1952} unique __ctobpl_const_1676: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1954} unique __ctobpl_const_1682: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1957} unique __ctobpl_const_1691: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1959} unique __ctobpl_const_1696: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1955} unique __ctobpl_const_1685: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1956} unique __ctobpl_const_1687: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1950} unique __ctobpl_const_1669: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1957} unique __ctobpl_const_1690: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1959} unique __ctobpl_const_1697: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1951} unique __ctobpl_const_1671: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1960} unique __ctobpl_const_1698: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1954} unique __ctobpl_const_1681: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1953} unique __ctobpl_const_1679: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1951} unique __ctobpl_const_1672: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1956} unique __ctobpl_const_1688: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1950} unique __ctobpl_const_1670: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1952} unique __ctobpl_const_1674: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1960} unique __ctobpl_const_1699: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1960} unique __ctobpl_const_1700: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1961} unique __ctobpl_const_1701: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1966} unique __ctobpl_const_1718: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1967} unique __ctobpl_const_1720: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1962} unique __ctobpl_const_1706: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1967} unique __ctobpl_const_1721: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1964} unique __ctobpl_const_1711: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1964} unique __ctobpl_const_1710: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1968} unique __ctobpl_const_1722: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1968} unique __ctobpl_const_1723: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1965} unique __ctobpl_const_1715: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1968} unique __ctobpl_const_1724: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1969} unique __ctobpl_const_1727: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1970} unique __ctobpl_const_1728: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1970} unique __ctobpl_const_1729: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1966} unique __ctobpl_const_1717: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1970} unique __ctobpl_const_1730: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1963} unique __ctobpl_const_1707: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1965} unique __ctobpl_const_1713: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1969} unique __ctobpl_const_1725: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1967} unique __ctobpl_const_1719: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1969} unique __ctobpl_const_1726: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1961} unique __ctobpl_const_1702: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1961} unique __ctobpl_const_1703: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1962} unique __ctobpl_const_1704: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1962} unique __ctobpl_const_1705: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1966} unique __ctobpl_const_1716: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1963} unique __ctobpl_const_1709: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1964} unique __ctobpl_const_1712: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1965} unique __ctobpl_const_1714: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1963} unique __ctobpl_const_1708: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1975} unique __ctobpl_const_1743: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1976} unique __ctobpl_const_1747: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1977} unique __ctobpl_const_1750: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1980} unique __ctobpl_const_1759: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1980} unique __ctobpl_const_1760: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1981} unique __ctobpl_const_1761: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1977} unique __ctobpl_const_1749: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1977} unique __ctobpl_const_1751: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1978} unique __ctobpl_const_1754: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1981} unique __ctobpl_const_1762: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1972} unique __ctobpl_const_1734: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1973} unique __ctobpl_const_1737: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1972} unique __ctobpl_const_1736: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1976} unique __ctobpl_const_1746: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1976} unique __ctobpl_const_1748: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1978} unique __ctobpl_const_1753: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1975} unique __ctobpl_const_1745: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1979} unique __ctobpl_const_1756: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1971} unique __ctobpl_const_1732: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1973} unique __ctobpl_const_1739: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1975} unique __ctobpl_const_1744: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1973} unique __ctobpl_const_1738: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1974} unique __ctobpl_const_1740: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1974} unique __ctobpl_const_1742: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1979} unique __ctobpl_const_1757: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1972} unique __ctobpl_const_1735: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1980} unique __ctobpl_const_1758: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1971} unique __ctobpl_const_1733: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1978} unique __ctobpl_const_1752: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1979} unique __ctobpl_const_1755: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1971} unique __ctobpl_const_1731: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1974} unique __ctobpl_const_1741: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1990} unique __ctobpl_const_1788: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1991} unique __ctobpl_const_1791: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1991} unique __ctobpl_const_1792: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1991} unique __ctobpl_const_1793: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1983} unique __ctobpl_const_1767: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1984} unique __ctobpl_const_1772: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1983} unique __ctobpl_const_1768: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1985} unique __ctobpl_const_1775: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1988} unique __ctobpl_const_1782: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1989} unique __ctobpl_const_1786: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1987} unique __ctobpl_const_1780: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1982} unique __ctobpl_const_1765: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1989} unique __ctobpl_const_1787: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1984} unique __ctobpl_const_1770: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1986} unique __ctobpl_const_1776: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1988} unique __ctobpl_const_1784: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1986} unique __ctobpl_const_1778: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1990} unique __ctobpl_const_1789: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1983} unique __ctobpl_const_1769: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1981} unique __ctobpl_const_1763: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1987} unique __ctobpl_const_1781: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1989} unique __ctobpl_const_1785: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1990} unique __ctobpl_const_1790: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1986} unique __ctobpl_const_1777: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1987} unique __ctobpl_const_1779: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1985} unique __ctobpl_const_1773: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1982} unique __ctobpl_const_1764: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1982} unique __ctobpl_const_1766: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1984} unique __ctobpl_const_1771: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1985} unique __ctobpl_const_1774: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 1988} unique __ctobpl_const_1783: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3651} unique __ctobpl_const_3032: int;

const {:extern} {:model_const "* gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3654} unique __ctobpl_const_3036: int;

const {:extern} {:model_const "(* gnode_ptr)->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 3654} unique __ctobpl_const_3037: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3022: int;

const {:extern} {:model_const "(* gnode_ptr)->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3021: int;

const {:extern} {:model_const "result.gnodfind"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_3007: int;

const {:extern} {:model_const "* gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3651} unique __ctobpl_const_3031: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 3654} unique __ctobpl_const_3038: int;

const {:extern} {:model_const "(* gnode_ptr)->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3025: int;

const {:extern} {:model_const "* gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3020: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3654} unique __ctobpl_const_3035: int;

const {:extern} {:model_const "gnode_list_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3648} unique __ctobpl_const_3018: int;

const {:extern} {:model_const "* gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3024: int;

const {:extern} {:model_const "phase"} {:sourceFile ".\v24\space.c"} {:sourceLine 3627} unique __ctobpl_const_3012: int;

const {:extern} {:model_const "gnode_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 3627} unique __ctobpl_const_3010: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3627} unique __ctobpl_const_3009: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3631} unique __ctobpl_const_3013: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3619} unique __ctobpl_const_3008: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 3631} unique __ctobpl_const_3015: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3023: int;

const {:extern} {:model_const "* gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3648} unique __ctobpl_const_3017: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3648} unique __ctobpl_const_3016: int;

const {:extern} {:model_const "gnode_ptr->GEOMPORT_PTR->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 3627} unique __ctobpl_const_3011: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3026: int;

const {:extern} {:model_const "* gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3028: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3651} unique __ctobpl_const_3030: int;

const {:extern} {:model_const "* gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3651} unique __ctobpl_const_3033: int;

const {:extern} {:model_const "gnode_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 3631} unique __ctobpl_const_3014: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3019: int;

const {:extern} {:model_const "(* gnode_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 3651} unique __ctobpl_const_3034: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3027: int;

const {:extern} {:model_const "(* gnode_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 3650} unique __ctobpl_const_3029: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 3654} unique __ctobpl_const_3042: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3686} unique __ctobpl_const_3060: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3669} unique __ctobpl_const_3043: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3690} unique __ctobpl_const_3068: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3673} unique __ctobpl_const_3047: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3690} unique __ctobpl_const_3067: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 3690} unique __ctobpl_const_3069: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3678} unique __ctobpl_const_3058: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3691} unique __ctobpl_const_3070: int;

const {:extern} {:model_const "q1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3676} unique __ctobpl_const_3053: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3654} unique __ctobpl_const_3039: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3669} unique __ctobpl_const_3044: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3672} unique __ctobpl_const_3045: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3687} unique __ctobpl_const_3062: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3690} unique __ctobpl_const_3063: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3690} unique __ctobpl_const_3065: int;

const {:extern} {:model_const "p1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3674} unique __ctobpl_const_3049: int;

const {:extern} {:model_const "q1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 3676} unique __ctobpl_const_3054: int;

const {:extern} {:model_const "q2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3677} unique __ctobpl_const_3055: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3690} unique __ctobpl_const_3064: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3686} unique __ctobpl_const_3061: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3690} unique __ctobpl_const_3066: int;

const {:extern} {:model_const "* gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3654} unique __ctobpl_const_3040: int;

const {:extern} {:model_const "q2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 3677} unique __ctobpl_const_3056: int;

const {:extern} {:model_const "p2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 3675} unique __ctobpl_const_3052: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3686} unique __ctobpl_const_3059: int;

const {:extern} {:model_const "(* gnode_ptr)->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 3654} unique __ctobpl_const_3041: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 3673} unique __ctobpl_const_3048: int;

const {:extern} {:model_const "p1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 3674} unique __ctobpl_const_3050: int;

const {:extern} {:model_const "p2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3675} unique __ctobpl_const_3051: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 3672} unique __ctobpl_const_3046: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3678} unique __ctobpl_const_3057: int;

const {:extern} {:model_const "(* grampexc_ptr)->AMP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 3716} unique __ctobpl_const_3102: int;

const {:extern} {:model_const "result.unifamp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3082: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3706} unique __ctobpl_const_3084: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3076: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3709} unique __ctobpl_const_3091: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3708} unique __ctobpl_const_3087: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3073: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3706} unique __ctobpl_const_3085: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3074: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3709} unique __ctobpl_const_3092: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 3706} unique __ctobpl_const_3086: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3716} unique __ctobpl_const_3100: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3078: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3709} unique __ctobpl_const_3090: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3714} unique __ctobpl_const_3094: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3075: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3071: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3704} unique __ctobpl_const_3083: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3077: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3709} unique __ctobpl_const_3089: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3714} unique __ctobpl_const_3093: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3072: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3708} unique __ctobpl_const_3088: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3079: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3715} unique __ctobpl_const_3096: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3715} unique __ctobpl_const_3097: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3080: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 3715} unique __ctobpl_const_3099: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3716} unique __ctobpl_const_3101: int;

const {:extern} {:model_const "(* grampexc_ptr)->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 3715} unique __ctobpl_const_3098: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3701} unique __ctobpl_const_3081: int;

const {:extern} {:model_const "(* grampexc_ptr)->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 3714} unique __ctobpl_const_3095: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2655} unique __ctobpl_const_2594: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2671} unique __ctobpl_const_2617: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2633} unique __ctobpl_const_2620: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2671} unique __ctobpl_const_2618: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2671} unique __ctobpl_const_2619: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2666} unique __ctobpl_const_2606: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2670} unique __ctobpl_const_2616: int;

const {:extern} {:model_const "datan.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2659} unique __ctobpl_const_2597: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2633} unique __ctobpl_const_2621: int;

const {:extern} {:model_const "result.datan"} {:sourceFile ".\v24\space.c"} {:sourceLine 2659} unique __ctobpl_const_2603: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2633} unique __ctobpl_const_2622: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2666} unique __ctobpl_const_2607: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2659} unique __ctobpl_const_2598: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2666} unique __ctobpl_const_2609: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2669} unique __ctobpl_const_2612: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2669} unique __ctobpl_const_2613: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2670} unique __ctobpl_const_2615: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2659} unique __ctobpl_const_2602: int;

const {:extern} {:model_const "datan.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2659} unique __ctobpl_const_2600: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2670} unique __ctobpl_const_2614: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2635} unique __ctobpl_const_2623: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2637} unique __ctobpl_const_2624: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2655} unique __ctobpl_const_2596: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2655} unique __ctobpl_const_2595: int;

const {:extern} {:model_const "datan.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2659} unique __ctobpl_const_2601: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2659} unique __ctobpl_const_2599: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2665} unique __ctobpl_const_2604: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2665} unique __ctobpl_const_2605: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2666} unique __ctobpl_const_2608: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2654} unique __ctobpl_const_2593: int;

const {:extern} {:model_const "result.dsin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2666} unique __ctobpl_const_2610: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2669} unique __ctobpl_const_2611: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2612} unique __ctobpl_const_2650: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2613} unique __ctobpl_const_2653: int;

const {:extern} {:model_const "grid->QX"} {:sourceFile ".\v24\space.c"} {:sourceLine 2613} unique __ctobpl_const_2654: int;

const {:extern} {:model_const "result.dcos"} {:sourceFile ".\v24\space.c"} {:sourceLine 2639} unique __ctobpl_const_2636: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2614} unique __ctobpl_const_2655: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2637} unique __ctobpl_const_2625: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2638} unique __ctobpl_const_2627: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2647} unique __ctobpl_const_2637: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2611} unique __ctobpl_const_2647: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2641} unique __ctobpl_const_2629: int;

const {:extern} {:model_const "grid->PY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2612} unique __ctobpl_const_2651: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2614} unique __ctobpl_const_2656: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2639} unique __ctobpl_const_2635: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2649} unique __ctobpl_const_2644: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 2612} unique __ctobpl_const_2649: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2642} unique __ctobpl_const_2631: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2647} unique __ctobpl_const_2638: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2639} unique __ctobpl_const_2633: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2648} unique __ctobpl_const_2640: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2639} unique __ctobpl_const_2632: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2641} unique __ctobpl_const_2628: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2642} unique __ctobpl_const_2630: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2648} unique __ctobpl_const_2641: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2639} unique __ctobpl_const_2634: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2649} unique __ctobpl_const_2645: int;

const {:extern} {:model_const "grid->PX"} {:sourceFile ".\v24\space.c"} {:sourceLine 2611} unique __ctobpl_const_2648: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2647} unique __ctobpl_const_2639: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2649} unique __ctobpl_const_2643: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 2613} unique __ctobpl_const_2652: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2648} unique __ctobpl_const_2642: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2638} unique __ctobpl_const_2626: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2611} unique __ctobpl_const_2646: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2679: int;

const {:extern} {:model_const "grid->QY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2614} unique __ctobpl_const_2657: int;

const {:extern} {:model_const "sqrt.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2617} unique __ctobpl_const_2667: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 2617} unique __ctobpl_const_2668: int;

const {:extern} {:model_const "sqrt.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2617} unique __ctobpl_const_2673: int;

const {:extern} {:model_const "dacos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2684: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2685: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2616} unique __ctobpl_const_2659: int;

const {:extern} {:model_const "result.dacos"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2686: int;

const {:extern} {:model_const "dacos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2621} unique __ctobpl_const_2687: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2680: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2621} unique __ctobpl_const_2688: int;

const {:extern} {:model_const "sqrt.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2616} unique __ctobpl_const_2663: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2617} unique __ctobpl_const_2670: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2616} unique __ctobpl_const_2660: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2616} unique __ctobpl_const_2665: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2677: int;

const {:extern} {:model_const "sqrt.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2617} unique __ctobpl_const_2672: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2678: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2682: int;

const {:extern} {:model_const "dacos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2683: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 2616} unique __ctobpl_const_2662: int;

const {:extern} {:model_const "result.sqrt"} {:sourceFile ".\v24\space.c"} {:sourceLine 2616} unique __ctobpl_const_2666: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2617} unique __ctobpl_const_2671: int;

const {:extern} {:model_const "dacos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2676: int;

const {:extern} {:model_const "sqrt.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2616} unique __ctobpl_const_2664: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 2617} unique __ctobpl_const_2669: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2617} unique __ctobpl_const_2674: int;

const {:extern} {:model_const "sqrt.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2616} unique __ctobpl_const_2658: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 2616} unique __ctobpl_const_2661: int;

const {:extern} {:model_const "result.sqrt"} {:sourceFile ".\v24\space.c"} {:sourceLine 2617} unique __ctobpl_const_2675: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2619} unique __ctobpl_const_2681: int;

const {:extern} {:model_const "rot_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2621} unique __ctobpl_const_2692: int;

const {:extern} {:model_const "result.dacos"} {:sourceFile ".\v24\space.c"} {:sourceLine 2621} unique __ctobpl_const_2693: int;

const {:extern} {:model_const "rot_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2626} unique __ctobpl_const_2705: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2621} unique __ctobpl_const_2689: int;

const {:extern} {:model_const "grid->ROT_ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2626} unique __ctobpl_const_2704: int;

const {:extern} {:model_const "dacos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2621} unique __ctobpl_const_2691: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2624} unique __ctobpl_const_2697: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2624} unique __ctobpl_const_2698: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2708} unique __ctobpl_const_2706: int;

const {:extern} {:model_const "elem->GEOMETRY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2708} unique __ctobpl_const_2707: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2726} unique __ctobpl_const_2708: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2726} unique __ctobpl_const_2709: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2726} unique __ctobpl_const_2710: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2623} unique __ctobpl_const_2696: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2626} unique __ctobpl_const_2703: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2727} unique __ctobpl_const_2712: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2728} unique __ctobpl_const_2714: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2728} unique __ctobpl_const_2715: int;

const {:extern} {:model_const "dacos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2621} unique __ctobpl_const_2690: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2727} unique __ctobpl_const_2711: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2728} unique __ctobpl_const_2716: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2729} unique __ctobpl_const_2717: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2729} unique __ctobpl_const_2718: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2729} unique __ctobpl_const_2719: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2731} unique __ctobpl_const_2720: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2624} unique __ctobpl_const_2699: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2625} unique __ctobpl_const_2700: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2625} unique __ctobpl_const_2701: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2727} unique __ctobpl_const_2713: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2623} unique __ctobpl_const_2694: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2623} unique __ctobpl_const_2695: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2625} unique __ctobpl_const_2702: int;

const {:extern} {:model_const "result.datan"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2734: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2712} unique __ctobpl_const_2743: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2713} unique __ctobpl_const_2746: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2715} unique __ctobpl_const_2749: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2738} unique __ctobpl_const_2738: int;

const {:extern} {:model_const "datan.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2725: int;

const {:extern} {:model_const "datan.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2731: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2731} unique __ctobpl_const_2722: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2712} unique __ctobpl_const_2744: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2731} unique __ctobpl_const_2723: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2732: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2733: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2711} unique __ctobpl_const_2742: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2728: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2711} unique __ctobpl_const_2741: int;

const {:extern} {:model_const "datan.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2730: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2712} unique __ctobpl_const_2745: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2713} unique __ctobpl_const_2748: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2715} unique __ctobpl_const_2750: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2715} unique __ctobpl_const_2751: int;

const {:extern} {:model_const "printf.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 2738} unique __ctobpl_const_2737: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2715} unique __ctobpl_const_2752: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2713} unique __ctobpl_const_2747: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2731} unique __ctobpl_const_2721: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2726: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2735: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2727: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2736: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2732} unique __ctobpl_const_2724: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2736} unique __ctobpl_const_2729: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2738} unique __ctobpl_const_2739: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2711} unique __ctobpl_const_2740: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2748} unique __ctobpl_const_2767: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2747} unique __ctobpl_const_2764: int;

const {:extern} {:model_const "printf.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 2720} unique __ctobpl_const_2771: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2720} unique __ctobpl_const_2772: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2749} unique __ctobpl_const_2769: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2719} unique __ctobpl_const_2754: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2759} unique __ctobpl_const_2774: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2759} unique __ctobpl_const_2775: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2761} unique __ctobpl_const_2777: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2764} unique __ctobpl_const_2780: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2764} unique __ctobpl_const_2781: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2761} unique __ctobpl_const_2776: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2765} unique __ctobpl_const_2782: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2720} unique __ctobpl_const_2773: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2762} unique __ctobpl_const_2778: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 2749} unique __ctobpl_const_2768: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 2765} unique __ctobpl_const_2783: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2746} unique __ctobpl_const_2758: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2719} unique __ctobpl_const_2757: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2747} unique __ctobpl_const_2763: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4194} unique __ctobpl_const_3614: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2762} unique __ctobpl_const_2779: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2716} unique __ctobpl_const_2753: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2719} unique __ctobpl_const_2756: int;

const {:extern} {:model_const "printf.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 2747} unique __ctobpl_const_2759: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2747} unique __ctobpl_const_2760: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2719} unique __ctobpl_const_2755: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2747} unique __ctobpl_const_2761: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2748} unique __ctobpl_const_2766: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 2748} unique __ctobpl_const_2765: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 2747} unique __ctobpl_const_2762: int;

const {:extern} {:model_const "grid->ROT_ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2749} unique __ctobpl_const_2770: int;

const {:extern} {:model_const "grid->PX"} {:sourceFile ".\v24\space.c"} {:sourceLine 2777} unique __ctobpl_const_2805: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2767} unique __ctobpl_const_2787: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2775} unique __ctobpl_const_2797: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 2778} unique __ctobpl_const_2806: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2773} unique __ctobpl_const_2792: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 2766} unique __ctobpl_const_2785: int;

const {:extern} {:model_const "grid->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2773} unique __ctobpl_const_2793: int;

const {:extern} {:model_const "grid->PQSTEP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2776} unique __ctobpl_const_2802: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2778} unique __ctobpl_const_2807: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2766} unique __ctobpl_const_2784: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2777} unique __ctobpl_const_2803: int;

const {:extern} {:model_const "grid->PY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2778} unique __ctobpl_const_2808: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 2779} unique __ctobpl_const_2809: int;

const {:extern} {:model_const "grid->QX"} {:sourceFile ".\v24\space.c"} {:sourceLine 2779} unique __ctobpl_const_2811: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2774} unique __ctobpl_const_2794: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2774} unique __ctobpl_const_2796: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2775} unique __ctobpl_const_2799: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2779} unique __ctobpl_const_2810: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2777} unique __ctobpl_const_2804: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2773} unique __ctobpl_const_2791: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2776} unique __ctobpl_const_2800: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2780} unique __ctobpl_const_2812: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2780} unique __ctobpl_const_2813: int;

const {:extern} {:model_const "grid->QY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2780} unique __ctobpl_const_2814: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2781} unique __ctobpl_const_2815: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2772} unique __ctobpl_const_2788: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2772} unique __ctobpl_const_2790: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2775} unique __ctobpl_const_2798: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2767} unique __ctobpl_const_2786: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2774} unique __ctobpl_const_2795: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2776} unique __ctobpl_const_2801: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2772} unique __ctobpl_const_2789: int;

const {:extern} {:model_const "rot_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2782} unique __ctobpl_const_2818: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2784} unique __ctobpl_const_2821: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2803} unique __ctobpl_const_2837: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2804} unique __ctobpl_const_2838: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2803} unique __ctobpl_const_2836: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2804} unique __ctobpl_const_2840: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2808} unique __ctobpl_const_2842: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2812} unique __ctobpl_const_2843: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2816} unique __ctobpl_const_2844: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2813} unique __ctobpl_const_2847: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2806} unique __ctobpl_const_2833: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2782} unique __ctobpl_const_2819: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2804} unique __ctobpl_const_2839: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2813} unique __ctobpl_const_2845: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2802} unique __ctobpl_const_2832: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2813} unique __ctobpl_const_2846: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2804} unique __ctobpl_const_2841: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2793} unique __ctobpl_const_2825: int;

const {:extern} {:model_const "grid->ROT_ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2782} unique __ctobpl_const_2820: int;

const {:extern} {:model_const "grid->PQXY_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2781} unique __ctobpl_const_2817: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2796} unique __ctobpl_const_2824: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2781} unique __ctobpl_const_2816: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2792} unique __ctobpl_const_2823: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2793} unique __ctobpl_const_2827: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2793} unique __ctobpl_const_2828: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2794} unique __ctobpl_const_2830: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2798} unique __ctobpl_const_2831: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2803} unique __ctobpl_const_2834: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2794} unique __ctobpl_const_2829: int;

const {:extern} {:model_const "grid->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2784} unique __ctobpl_const_2822: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2793} unique __ctobpl_const_2826: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2803} unique __ctobpl_const_2835: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2838} unique __ctobpl_const_2876: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2830} unique __ctobpl_const_2865: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2824} unique __ctobpl_const_2857: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2827} unique __ctobpl_const_2860: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2838} unique __ctobpl_const_2877: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2823} unique __ctobpl_const_2853: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2823} unique __ctobpl_const_2856: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 2825} unique __ctobpl_const_2858: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2831} unique __ctobpl_const_2867: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 2834} unique __ctobpl_const_2872: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2838} unique __ctobpl_const_2878: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 2826} unique __ctobpl_const_2859: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2829} unique __ctobpl_const_2861: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2822} unique __ctobpl_const_2852: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2830} unique __ctobpl_const_2863: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 2833} unique __ctobpl_const_2871: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2837} unique __ctobpl_const_2874: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2838} unique __ctobpl_const_2875: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2823} unique __ctobpl_const_2854: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2831} unique __ctobpl_const_2868: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2831} unique __ctobpl_const_2869: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2832} unique __ctobpl_const_2870: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2814} unique __ctobpl_const_2849: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2839} unique __ctobpl_const_2879: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2823} unique __ctobpl_const_2855: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2830} unique __ctobpl_const_2862: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2831} unique __ctobpl_const_2866: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2835} unique __ctobpl_const_2873: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2830} unique __ctobpl_const_2864: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2813} unique __ctobpl_const_2848: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2814} unique __ctobpl_const_2850: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2818} unique __ctobpl_const_2851: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2855} unique __ctobpl_const_2900: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2840} unique __ctobpl_const_2884: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2841} unique __ctobpl_const_2888: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2840} unique __ctobpl_const_2883: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2841} unique __ctobpl_const_2890: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2842} unique __ctobpl_const_2891: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2851} unique __ctobpl_const_2896: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2841} unique __ctobpl_const_2889: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2856} unique __ctobpl_const_2901: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2840} unique __ctobpl_const_2885: int;

const {:extern} {:model_const "grid->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2856} unique __ctobpl_const_2902: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2857} unique __ctobpl_const_2906: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2858} unique __ctobpl_const_2907: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2858} unique __ctobpl_const_2909: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2858} unique __ctobpl_const_2908: int;

const {:extern} {:model_const "grid->PQSTEP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2859} unique __ctobpl_const_2911: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2857} unique __ctobpl_const_2904: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2856} unique __ctobpl_const_2903: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2857} unique __ctobpl_const_2905: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2859} unique __ctobpl_const_2910: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2843} unique __ctobpl_const_2892: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2844} unique __ctobpl_const_2893: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2839} unique __ctobpl_const_2881: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2841} unique __ctobpl_const_2887: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2839} unique __ctobpl_const_2880: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2850} unique __ctobpl_const_2895: int;

const {:extern} {:model_const "rot_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2852} unique __ctobpl_const_2897: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2849} unique __ctobpl_const_2894: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2839} unique __ctobpl_const_2882: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2840} unique __ctobpl_const_2886: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2855} unique __ctobpl_const_2898: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2855} unique __ctobpl_const_2899: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 2860} unique __ctobpl_const_2915: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3121} unique __ctobpl_const_2937: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2859} unique __ctobpl_const_2912: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2860} unique __ctobpl_const_2913: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2863} unique __ctobpl_const_2924: int;

const {:extern} {:model_const "dummy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2879} unique __ctobpl_const_2931: int;

const {:extern} {:model_const "grid->ROT_ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2865} unique __ctobpl_const_2929: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 2882} unique __ctobpl_const_2932: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3117} unique __ctobpl_const_2935: int;

const {:extern} {:model_const "grid->QY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2863} unique __ctobpl_const_2923: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3122} unique __ctobpl_const_2939: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3125} unique __ctobpl_const_2941: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3125} unique __ctobpl_const_2943: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2861} unique __ctobpl_const_2916: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3121} unique __ctobpl_const_2938: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3125} unique __ctobpl_const_2942: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2864} unique __ctobpl_const_2925: int;

const {:extern} {:model_const "grid->QX"} {:sourceFile ".\v24\space.c"} {:sourceLine 2862} unique __ctobpl_const_2920: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2863} unique __ctobpl_const_2922: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 2861} unique __ctobpl_const_2918: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2864} unique __ctobpl_const_2927: int;

const {:extern} {:model_const "rot_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2865} unique __ctobpl_const_2930: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 2862} unique __ctobpl_const_2921: int;

const {:extern} {:model_const "dummy"} {:sourceFile ".\v24\space.c"} {:sourceLine 2882} unique __ctobpl_const_2933: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2862} unique __ctobpl_const_2919: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3117} unique __ctobpl_const_2934: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3125} unique __ctobpl_const_2940: int;

const {:extern} {:model_const "grid->PY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2861} unique __ctobpl_const_2917: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2865} unique __ctobpl_const_2928: int;

const {:extern} {:model_const "grid->PQXY_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2864} unique __ctobpl_const_2926: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3121} unique __ctobpl_const_2936: int;

const {:extern} {:model_const "grid->PX"} {:sourceFile ".\v24\space.c"} {:sourceLine 2860} unique __ctobpl_const_2914: int;

const {:extern} {:model_const "pqdim_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2955: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3136} unique __ctobpl_const_2964: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2954: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2952: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3137} unique __ctobpl_const_2965: int;

const {:extern} {:model_const "* geometry_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3149} unique __ctobpl_const_2971: int;

const {:extern} {:model_const "pqdim_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2961: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2973: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2953: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2960: int;

const {:extern} {:model_const "result.recspec"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2963: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3137} unique __ctobpl_const_2966: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2974: int;

const {:extern} {:model_const "geometry_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3133} unique __ctobpl_const_2948: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2975: int;

const {:extern} {:model_const "* geometry_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3133} unique __ctobpl_const_2949: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2956: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2957: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3125} unique __ctobpl_const_2944: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2958: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2962: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3137} unique __ctobpl_const_2967: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3137} unique __ctobpl_const_2968: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3125} unique __ctobpl_const_2945: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2950: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2951: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3134} unique __ctobpl_const_2959: int;

const {:extern} {:model_const "geometry_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3149} unique __ctobpl_const_2970: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3141} unique __ctobpl_const_2969: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2972: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3126} unique __ctobpl_const_2947: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 3125} unique __ctobpl_const_2946: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3153} unique __ctobpl_const_2985: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3153} unique __ctobpl_const_2986: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_2999: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3157} unique __ctobpl_const_2989: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2980: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3127} unique __ctobpl_const_2994: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3127} unique __ctobpl_const_2995: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2982: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 3127} unique __ctobpl_const_2993: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3153} unique __ctobpl_const_2987: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2977: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_3001: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 3127} unique __ctobpl_const_2996: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3127} unique __ctobpl_const_2992: int;

const {:extern} {:model_const "gnode_list_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_3002: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_3003: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_3006: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3152} unique __ctobpl_const_2984: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 3127} unique __ctobpl_const_2990: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3153} unique __ctobpl_const_2988: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2978: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3127} unique __ctobpl_const_2991: int;

const {:extern} {:model_const "gnode_list_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_2998: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2979: int;

const {:extern} {:model_const "result.circspec"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2983: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_3000: int;

const {:extern} {:model_const "radius_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2981: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3610} unique __ctobpl_const_2997: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_3004: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 3618} unique __ctobpl_const_3005: int;

const {:extern} {:model_const "radius_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3150} unique __ctobpl_const_2976: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3371: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3998} unique __ctobpl_const_3364: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3370: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3372: int;

const {:extern} {:model_const "grid_type"} {:sourceFile ".\v24\space.c"} {:sourceLine 4007} unique __ctobpl_const_3368: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3374: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3998} unique __ctobpl_const_3360: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3376: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3998} unique __ctobpl_const_3363: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3377: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3378: int;

const {:extern} {:model_const "result.squgrdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3380: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4019} unique __ctobpl_const_3382: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3384: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3385: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3386: int;

const {:extern} {:model_const "grid_type"} {:sourceFile ".\v24\space.c"} {:sourceLine 4020} unique __ctobpl_const_3383: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3387: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3388: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3994} unique __ctobpl_const_3357: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3994} unique __ctobpl_const_3358: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3995} unique __ctobpl_const_3359: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3373: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3379: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3375: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3998} unique __ctobpl_const_3365: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4010} unique __ctobpl_const_3381: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3998} unique __ctobpl_const_3361: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3998} unique __ctobpl_const_3362: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 3998} unique __ctobpl_const_3366: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3999} unique __ctobpl_const_3367: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4008} unique __ctobpl_const_3369: int;

const {:extern} {:model_const "grid_type"} {:sourceFile ".\v24\space.c"} {:sourceLine 4044} unique __ctobpl_const_3415: int;

const {:extern} {:model_const "grid_type"} {:sourceFile ".\v24\space.c"} {:sourceLine 4032} unique __ctobpl_const_3400: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3403: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4035} unique __ctobpl_const_3413: int;

const {:extern} {:model_const "result.hexgrdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3412: int;

const {:extern} {:model_const "result.recgrdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3397: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4043} unique __ctobpl_const_3414: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3416: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3393: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3402: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3418: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3411: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3419: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3420: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3394: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3409: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3406: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3408: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3417: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3405: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3392: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3396: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3407: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3391: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3395: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3401: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3389: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4023} unique __ctobpl_const_3398: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4031} unique __ctobpl_const_3399: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3404: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4021} unique __ctobpl_const_3390: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4033} unique __ctobpl_const_3410: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3427: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3430: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3440: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3439: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3428: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3431: int;

const {:extern} {:model_const "result.trigrdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3443: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3421: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3422: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3434: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4063} unique __ctobpl_const_3448: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3437: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4070} unique __ctobpl_const_3451: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4070} unique __ctobpl_const_3452: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3435: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3441: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3433: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4047} unique __ctobpl_const_3444: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3438: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4065} unique __ctobpl_const_3449: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3426: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4063} unique __ctobpl_const_3446: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3429: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4063} unique __ctobpl_const_3447: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3432: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3436: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3442: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4065} unique __ctobpl_const_3450: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4055} unique __ctobpl_const_3445: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3425: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3423: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4045} unique __ctobpl_const_3424: int;

const {:extern} {:model_const "(* grid_ptr)->PQSTEP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4074} unique __ctobpl_const_3469: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4076} unique __ctobpl_const_3476: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4071} unique __ctobpl_const_3455: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4076} unique __ctobpl_const_3478: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4078} unique __ctobpl_const_3483: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4075} unique __ctobpl_const_3472: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4077} unique __ctobpl_const_3479: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4078} unique __ctobpl_const_3484: int;

const {:extern} {:model_const "(* grid_ptr)->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4072} unique __ctobpl_const_3461: int;

const {:extern} {:model_const "(* grid_ptr)->ORIENT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4071} unique __ctobpl_const_3457: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4072} unique __ctobpl_const_3460: int;

const {:extern} {:model_const "(* grid_ptr)->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4073} unique __ctobpl_const_3465: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4074} unique __ctobpl_const_3467: int;

const {:extern} {:model_const "(* grid_ptr)->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4075} unique __ctobpl_const_3473: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4077} unique __ctobpl_const_3480: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4072} unique __ctobpl_const_3459: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4073} unique __ctobpl_const_3464: int;

const {:extern} {:model_const "(* grid_ptr)->PX"} {:sourceFile ".\v24\space.c"} {:sourceLine 4077} unique __ctobpl_const_3481: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4073} unique __ctobpl_const_3463: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 4077} unique __ctobpl_const_3482: int;

const {:extern} {:model_const "orient"} {:sourceFile ".\v24\space.c"} {:sourceLine 4071} unique __ctobpl_const_3458: int;

const {:extern} {:model_const "grid_type"} {:sourceFile ".\v24\space.c"} {:sourceLine 4070} unique __ctobpl_const_3454: int;

const {:extern} {:model_const "(* grid_ptr)->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4076} unique __ctobpl_const_3477: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4071} unique __ctobpl_const_3456: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4075} unique __ctobpl_const_3471: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 4075} unique __ctobpl_const_3474: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4072} unique __ctobpl_const_3462: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4074} unique __ctobpl_const_3468: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4073} unique __ctobpl_const_3466: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4074} unique __ctobpl_const_3470: int;

const {:extern} {:model_const "(* grid_ptr)->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4070} unique __ctobpl_const_3453: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4076} unique __ctobpl_const_3475: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4025} unique __ctobpl_const_3513: int;

const {:extern} {:model_const "(* grid_ptr)->PY"} {:sourceFile ".\v24\space.c"} {:sourceLine 4078} unique __ctobpl_const_3485: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4025} unique __ctobpl_const_3514: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4011} unique __ctobpl_const_3515: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4011} unique __ctobpl_const_3516: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4079} unique __ctobpl_const_3488: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4080} unique __ctobpl_const_3492: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4079} unique __ctobpl_const_3487: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 4080} unique __ctobpl_const_3494: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4081} unique __ctobpl_const_3496: int;

const {:extern} {:model_const "(* grid_ptr)->QX"} {:sourceFile ".\v24\space.c"} {:sourceLine 4079} unique __ctobpl_const_3489: int;

const {:extern} {:model_const "(* grid_ptr)->PQXY_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4081} unique __ctobpl_const_3497: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4084} unique __ctobpl_const_3499: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4084} unique __ctobpl_const_3501: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4056} unique __ctobpl_const_3503: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4057} unique __ctobpl_const_3506: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4080} unique __ctobpl_const_3491: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4081} unique __ctobpl_const_3498: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4084} unique __ctobpl_const_3500: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4056} unique __ctobpl_const_3504: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4057} unique __ctobpl_const_3505: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4057} unique __ctobpl_const_3507: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4057} unique __ctobpl_const_3508: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 4079} unique __ctobpl_const_3490: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4081} unique __ctobpl_const_3495: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4048} unique __ctobpl_const_3509: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4048} unique __ctobpl_const_3510: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4036} unique __ctobpl_const_3511: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 4078} unique __ctobpl_const_3486: int;

const {:extern} {:model_const "(* grid_ptr)->QY"} {:sourceFile ".\v24\space.c"} {:sourceLine 4080} unique __ctobpl_const_3493: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4084} unique __ctobpl_const_3502: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4036} unique __ctobpl_const_3512: int;

const {:extern} {:model_const "fail"} {:sourceFile ".\v24\space.c"} {:sourceLine 4110} unique __ctobpl_const_3541: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4106} unique __ctobpl_const_3528: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4117} unique __ctobpl_const_3544: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4121} unique __ctobpl_const_3546: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4121} unique __ctobpl_const_3547: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4105} unique __ctobpl_const_3525: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4000} unique __ctobpl_const_3518: int;

const {:extern} {:model_const "addrem"} {:sourceFile ".\v24\space.c"} {:sourceLine 4106} unique __ctobpl_const_3527: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4099} unique __ctobpl_const_3519: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4117} unique __ctobpl_const_3543: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4121} unique __ctobpl_const_3548: int;

const {:extern} {:model_const "fail_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4110} unique __ctobpl_const_3540: int;

const {:extern} {:model_const "fail"} {:sourceFile ".\v24\space.c"} {:sourceLine 4110} unique __ctobpl_const_3539: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4118} unique __ctobpl_const_3545: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 4104} unique __ctobpl_const_3523: int;

const {:extern} {:model_const "grampexc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4107} unique __ctobpl_const_3532: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4000} unique __ctobpl_const_3517: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4104} unique __ctobpl_const_3522: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 4105} unique __ctobpl_const_3524: int;

const {:extern} {:model_const "grampexc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4107} unique __ctobpl_const_3530: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4107} unique __ctobpl_const_3531: int;

const {:extern} {:model_const "grphaexc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4108} unique __ctobpl_const_3533: int;

const {:extern} {:model_const "grphaexc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4108} unique __ctobpl_const_3535: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 4104} unique __ctobpl_const_3521: int;

const {:extern} {:model_const "err"} {:sourceFile ".\v24\space.c"} {:sourceLine 4109} unique __ctobpl_const_3536: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4108} unique __ctobpl_const_3534: int;

const {:extern} {:model_const "err_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4109} unique __ctobpl_const_3537: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4117} unique __ctobpl_const_3542: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 4105} unique __ctobpl_const_3526: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4099} unique __ctobpl_const_3520: int;

const {:extern} {:model_const "addrem"} {:sourceFile ".\v24\space.c"} {:sourceLine 4106} unique __ctobpl_const_3529: int;

const {:extern} {:model_const "err"} {:sourceFile ".\v24\space.c"} {:sourceLine 4109} unique __ctobpl_const_3538: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3567: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4121} unique __ctobpl_const_3550: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3561: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4154} unique __ctobpl_const_3572: int;

const {:extern} {:model_const "(* grid_ptr)->LEVEL"} {:sourceFile ".\v24\space.c"} {:sourceLine 4154} unique __ctobpl_const_3574: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4128} unique __ctobpl_const_3555: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4156} unique __ctobpl_const_3579: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4156} unique __ctobpl_const_3580: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4153} unique __ctobpl_const_3571: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3565: int;

const {:extern} {:model_const "result.greldef"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3569: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4148} unique __ctobpl_const_3570: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4155} unique __ctobpl_const_3575: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3568: int;

const {:extern} {:model_const "result.InUNames"} {:sourceFile ".\v24\space.c"} {:sourceLine 4135} unique __ctobpl_const_3557: int;

const {:extern} {:model_const "result.GetUName"} {:sourceFile ".\v24\space.c"} {:sourceLine 4128} unique __ctobpl_const_3556: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3558: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3559: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3560: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4121} unique __ctobpl_const_3551: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4122} unique __ctobpl_const_3553: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3563: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4154} unique __ctobpl_const_3573: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3562: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 4121} unique __ctobpl_const_3552: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4155} unique __ctobpl_const_3576: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3564: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4145} unique __ctobpl_const_3566: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4128} unique __ctobpl_const_3554: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4121} unique __ctobpl_const_3549: int;

const {:extern} {:model_const "(* elem_ptr)->LEVEL"} {:sourceFile ".\v24\space.c"} {:sourceLine 4155} unique __ctobpl_const_3577: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4156} unique __ctobpl_const_3578: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4156} unique __ctobpl_const_3581: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3601: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3584: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3585: int;

const {:extern} {:model_const "result.grexcdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3604: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3598: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4175} unique __ctobpl_const_3605: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4186} unique __ctobpl_const_3606: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4186} unique __ctobpl_const_3607: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3586: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3602: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4186} unique __ctobpl_const_3608: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4186} unique __ctobpl_const_3609: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4186} unique __ctobpl_const_3610: int;

const {:extern} {:model_const "result.grgeodef"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3591: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4186} unique __ctobpl_const_3611: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 4186} unique __ctobpl_const_3612: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3590: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3582: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3603: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3587: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4165} unique __ctobpl_const_3592: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3594: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3588: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3595: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3589: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4162} unique __ctobpl_const_3583: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3593: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3596: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3597: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3599: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4172} unique __ctobpl_const_3600: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3111: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3114: int;

const {:extern} {:model_const "p1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3115: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3122: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3123: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3128: int;

const {:extern} {:model_const "result.secoramp"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3130: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3740} unique __ctobpl_const_3134: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3113: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3119: int;

const {:extern} {:model_const "(* grampexc_ptr)->PQEXP_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 3717} unique __ctobpl_const_3106: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3717} unique __ctobpl_const_3105: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3719} unique __ctobpl_const_3109: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3719} unique __ctobpl_const_3108: int;

const {:extern} {:model_const "p2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3116: int;

const {:extern} {:model_const "q2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3127: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3731} unique __ctobpl_const_3131: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3738} unique __ctobpl_const_3132: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3740} unique __ctobpl_const_3133: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 3740} unique __ctobpl_const_3135: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3112: int;

const {:extern} {:model_const "q2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3118: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3120: int;

const {:extern} {:model_const "q1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3117: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3121: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3719} unique __ctobpl_const_3107: int;

const {:extern} {:model_const "p2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3125: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3719} unique __ctobpl_const_3110: int;

const {:extern} {:model_const "p1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3124: int;

const {:extern} {:model_const "q1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3126: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3729} unique __ctobpl_const_3129: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3717} unique __ctobpl_const_3104: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3752} unique __ctobpl_const_3158: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3748} unique __ctobpl_const_3142: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3743} unique __ctobpl_const_3138: int;

const {:extern} {:model_const "(* grampexc_ptr)->CENTRE"} {:sourceFile ".\v24\space.c"} {:sourceLine 3749} unique __ctobpl_const_3147: int;

const {:extern} {:model_const "p1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 3750} unique __ctobpl_const_3152: int;

const {:extern} {:model_const "(* grampexc_ptr)->Q1_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 3752} unique __ctobpl_const_3159: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3749} unique __ctobpl_const_3145: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3751} unique __ctobpl_const_3154: int;

const {:extern} {:model_const "(* grampexc_ptr)->P2_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 3751} unique __ctobpl_const_3155: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3753} unique __ctobpl_const_3161: int;

const {:extern} {:model_const "q1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 3752} unique __ctobpl_const_3160: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3743} unique __ctobpl_const_3141: int;

const {:extern} {:model_const "(* grampexc_ptr)->P1_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 3750} unique __ctobpl_const_3151: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3751} unique __ctobpl_const_3153: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3743} unique __ctobpl_const_3139: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3749} unique __ctobpl_const_3146: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3748} unique __ctobpl_const_3143: int;

const {:extern} {:model_const "(* grampexc_ptr)->Q2_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 3753} unique __ctobpl_const_3163: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3743} unique __ctobpl_const_3140: int;

const {:extern} {:model_const "(* grampexc_ptr)->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 3748} unique __ctobpl_const_3144: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3742} unique __ctobpl_const_3137: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3750} unique __ctobpl_const_3150: int;

const {:extern} {:model_const "p2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 3751} unique __ctobpl_const_3156: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3752} unique __ctobpl_const_3157: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3750} unique __ctobpl_const_3149: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3753} unique __ctobpl_const_3162: int;

const {:extern} {:model_const "q2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 3753} unique __ctobpl_const_3164: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3754} unique __ctobpl_const_3165: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3754} unique __ctobpl_const_3166: int;

const {:extern} {:model_const "(* grampexc_ptr)->AMP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 3754} unique __ctobpl_const_3167: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3742} unique __ctobpl_const_3136: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 3749} unique __ctobpl_const_3148: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3692} unique __ctobpl_const_3181: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3193: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3789} unique __ctobpl_const_3185: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3792} unique __ctobpl_const_3187: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3793} unique __ctobpl_const_3189: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3757} unique __ctobpl_const_3174: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3794} unique __ctobpl_const_3191: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3192: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3195: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3793} unique __ctobpl_const_3190: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3768} unique __ctobpl_const_3177: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3754} unique __ctobpl_const_3168: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3732} unique __ctobpl_const_3179: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3780} unique __ctobpl_const_3182: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3789} unique __ctobpl_const_3186: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3194: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3196: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3197: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3757} unique __ctobpl_const_3175: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3198: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3757} unique __ctobpl_const_3173: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3732} unique __ctobpl_const_3178: int;

const {:extern} {:model_const "(* grampexc_ptr)->PQEXP_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 3755} unique __ctobpl_const_3171: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3757} unique __ctobpl_const_3172: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3768} unique __ctobpl_const_3176: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3692} unique __ctobpl_const_3180: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3755} unique __ctobpl_const_3169: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3755} unique __ctobpl_const_3170: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3792} unique __ctobpl_const_3188: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4558} unique __ctobpl_const_4124: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3780} unique __ctobpl_const_3183: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3789} unique __ctobpl_const_3184: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3826} unique __ctobpl_const_3218: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3826} unique __ctobpl_const_3219: int;

const {:extern} {:model_const "result.elemdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3213: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3812} unique __ctobpl_const_3214: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3813} unique __ctobpl_const_3220: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3199: int;

const {:extern} {:model_const "result.griddef1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3201: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3799} unique __ctobpl_const_3202: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3204: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3826} unique __ctobpl_const_3216: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3826} unique __ctobpl_const_3217: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3813} unique __ctobpl_const_3221: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3813} unique __ctobpl_const_3223: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3840} unique __ctobpl_const_3224: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3849} unique __ctobpl_const_3226: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3849} unique __ctobpl_const_3227: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3205: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3209: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3797} unique __ctobpl_const_3200: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3849} unique __ctobpl_const_3228: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3207: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3818} unique __ctobpl_const_3215: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4187} unique __ctobpl_const_3613: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3813} unique __ctobpl_const_3222: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3210: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3211: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3852} unique __ctobpl_const_3229: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3840} unique __ctobpl_const_3225: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3803} unique __ctobpl_const_3203: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3206: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3212: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3810} unique __ctobpl_const_3208: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3256: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3257: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3853} unique __ctobpl_const_3231: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3858} unique __ctobpl_const_3241: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3258: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3857} unique __ctobpl_const_3236: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3253: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3259: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3260: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3261: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3242: int;

const {:extern} {:model_const "result.grampexc"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3251: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3254: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3857} unique __ctobpl_const_3237: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3852} unique __ctobpl_const_3230: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3854} unique __ctobpl_const_3233: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3243: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3244: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3245: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3857} unique __ctobpl_const_3235: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 3857} unique __ctobpl_const_3240: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3246: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3247: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3857} unique __ctobpl_const_3234: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3853} unique __ctobpl_const_3232: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3857} unique __ctobpl_const_3238: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3857} unique __ctobpl_const_3239: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3248: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3249: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3863} unique __ctobpl_const_3250: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3866} unique __ctobpl_const_3252: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3255: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3281: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3898} unique __ctobpl_const_3269: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3283: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3284: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3285: int;

const {:extern} {:model_const "a_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3903} unique __ctobpl_const_3271: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3910} unique __ctobpl_const_3275: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3286: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3287: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3288: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3280: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3883} unique __ctobpl_const_3267: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3919} unique __ctobpl_const_3290: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3924} unique __ctobpl_const_3291: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3883} unique __ctobpl_const_3264: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3282: int;

const {:extern} {:model_const "result.adddef"} {:sourceFile ".\v24\space.c"} {:sourceLine 3917} unique __ctobpl_const_3289: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3933} unique __ctobpl_const_3292: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 3910} unique __ctobpl_const_3276: int;

const {:extern} {:model_const "* app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3933} unique __ctobpl_const_3293: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3903} unique __ctobpl_const_3272: int;

const {:extern} {:model_const "a_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3903} unique __ctobpl_const_3273: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3910} unique __ctobpl_const_3274: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3875} unique __ctobpl_const_3263: int;

const {:extern} {:model_const "result.grphaexc"} {:sourceFile ".\v24\space.c"} {:sourceLine 3872} unique __ctobpl_const_3262: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3902} unique __ctobpl_const_3270: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3911} unique __ctobpl_const_3277: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3914} unique __ctobpl_const_3278: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3883} unique __ctobpl_const_3265: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3914} unique __ctobpl_const_3279: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3883} unique __ctobpl_const_3266: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3898} unique __ctobpl_const_3268: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 3953} unique __ctobpl_const_3312: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3955} unique __ctobpl_const_3315: int;

const {:extern} {:model_const "result.adremdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3308: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3301: int;

const {:extern} {:model_const "* app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3955} unique __ctobpl_const_3317: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3307: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3953} unique __ctobpl_const_3313: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3955} unique __ctobpl_const_3316: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3300: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 3957} unique __ctobpl_const_3319: int;

const {:extern} {:model_const "* app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3953} unique __ctobpl_const_3314: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3947} unique __ctobpl_const_3320: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3299: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3302: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3933} unique __ctobpl_const_3295: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3946} unique __ctobpl_const_3310: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3947} unique __ctobpl_const_3321: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3957} unique __ctobpl_const_3318: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 3942} unique __ctobpl_const_3323: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3943} unique __ctobpl_const_3324: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 3943} unique __ctobpl_const_3325: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3935} unique __ctobpl_const_3298: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3935} unique __ctobpl_const_3297: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3303: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3942} unique __ctobpl_const_3322: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3305: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3933} unique __ctobpl_const_3294: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3304: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3935} unique __ctobpl_const_3296: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3940} unique __ctobpl_const_3306: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 3941} unique __ctobpl_const_3309: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3953} unique __ctobpl_const_3311: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3920} unique __ctobpl_const_3331: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3980} unique __ctobpl_const_3346: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3943} unique __ctobpl_const_3326: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3978} unique __ctobpl_const_3342: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3979} unique __ctobpl_const_3344: int;

const {:extern} {:model_const "px"} {:sourceFile ".\v24\space.c"} {:sourceLine 3980} unique __ctobpl_const_3347: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3981} unique __ctobpl_const_3348: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3982} unique __ctobpl_const_3350: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3920} unique __ctobpl_const_3328: int;

const {:extern} {:model_const "qx"} {:sourceFile ".\v24\space.c"} {:sourceLine 3982} unique __ctobpl_const_3351: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3976} unique __ctobpl_const_3338: int;

const {:extern} {:model_const "qy"} {:sourceFile ".\v24\space.c"} {:sourceLine 3983} unique __ctobpl_const_3353: int;

const {:extern} {:model_const "orient"} {:sourceFile ".\v24\space.c"} {:sourceLine 3974} unique __ctobpl_const_3335: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3975} unique __ctobpl_const_3336: int;

const {:extern} {:model_const "py"} {:sourceFile ".\v24\space.c"} {:sourceLine 3981} unique __ctobpl_const_3349: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3983} unique __ctobpl_const_3352: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 3975} unique __ctobpl_const_3337: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3943} unique __ctobpl_const_3327: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 3976} unique __ctobpl_const_3339: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3979} unique __ctobpl_const_3345: int;

const {:extern} {:model_const "pqxy_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3984} unique __ctobpl_const_3355: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3994} unique __ctobpl_const_3356: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3984} unique __ctobpl_const_3354: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3920} unique __ctobpl_const_3329: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3920} unique __ctobpl_const_3330: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3971} unique __ctobpl_const_3332: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3971} unique __ctobpl_const_3333: int;

const {:extern} {:model_const "orient_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3974} unique __ctobpl_const_3334: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 3977} unique __ctobpl_const_3340: int;

const {:extern} {:model_const "pqstep_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3977} unique __ctobpl_const_3341: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 3978} unique __ctobpl_const_3343: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2499} unique __ctobpl_const_2418: int;

const {:extern} {:model_const "grid->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2510} unique __ctobpl_const_2428: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2465} unique __ctobpl_const_2402: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2508} unique __ctobpl_const_2425: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2502} unique __ctobpl_const_2421: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2499} unique __ctobpl_const_2419: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2514} unique __ctobpl_const_2429: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2514} unique __ctobpl_const_2430: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2462} unique __ctobpl_const_2399: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2504} unique __ctobpl_const_2424: int;

const {:extern} {:model_const "radius_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2466} unique __ctobpl_const_2405: int;

const {:extern} {:model_const "elem_ptr->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2467} unique __ctobpl_const_2407: int;

const {:extern} {:model_const "elem_ptr->RADIUS"} {:sourceFile ".\v24\space.c"} {:sourceLine 2465} unique __ctobpl_const_2401: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2465} unique __ctobpl_const_2400: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2467} unique __ctobpl_const_2406: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2469} unique __ctobpl_const_2412: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2468} unique __ctobpl_const_2409: int;

const {:extern} {:model_const "pqdim_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2469} unique __ctobpl_const_2414: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2498} unique __ctobpl_const_2416: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2502} unique __ctobpl_const_2422: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2467} unique __ctobpl_const_2408: int;

const {:extern} {:model_const "elem_ptr->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2468} unique __ctobpl_const_2410: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2504} unique __ctobpl_const_2423: int;

const {:extern} {:model_const "grid->ROT_ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2508} unique __ctobpl_const_2426: int;

const {:extern} {:model_const "elem_ptr->RADIUS_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2466} unique __ctobpl_const_2404: int;

const {:extern} {:model_const "elem_ptr->PQDIM_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2469} unique __ctobpl_const_2413: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 2499} unique __ctobpl_const_2420: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2510} unique __ctobpl_const_2427: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2466} unique __ctobpl_const_2403: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2468} unique __ctobpl_const_2411: int;

const {:extern} {:model_const "group_ptr->GRID_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 2498} unique __ctobpl_const_2417: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2498} unique __ctobpl_const_2415: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2542} unique __ctobpl_const_2442: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2448: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2449: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2450: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2436: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2437: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2439: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2433: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2434: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2447: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2452: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2454: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2431: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2446: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2455: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2435: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2456: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2440: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2451: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2457: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2458: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2459: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2438: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2445: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2460: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2461: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2462: int;

const {:extern} {:model_const "result.doubmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2453: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2443: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2525} unique __ctobpl_const_2444: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2432: int;

const {:extern} {:model_const "result.doubmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2541} unique __ctobpl_const_2441: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2563} unique __ctobpl_const_2481: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2580} unique __ctobpl_const_2469: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2564} unique __ctobpl_const_2484: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2580} unique __ctobpl_const_2476: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2596} unique __ctobpl_const_2491: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2599} unique __ctobpl_const_2493: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2580} unique __ctobpl_const_2472: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2547} unique __ctobpl_const_2466: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2564} unique __ctobpl_const_2482: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2563} unique __ctobpl_const_2478: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2563} unique __ctobpl_const_2479: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2580} unique __ctobpl_const_2475: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2564} unique __ctobpl_const_2483: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2547} unique __ctobpl_const_2465: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2564} unique __ctobpl_const_2485: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2586} unique __ctobpl_const_2486: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2586} unique __ctobpl_const_2487: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2591} unique __ctobpl_const_2488: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2580} unique __ctobpl_const_2473: int;

const {:extern} {:model_const "elem->GEOMETRY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2591} unique __ctobpl_const_2489: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2599} unique __ctobpl_const_2492: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2552} unique __ctobpl_const_2467: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2580} unique __ctobpl_const_2471: int;

const {:extern} {:model_const "result.doubmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2464: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2596} unique __ctobpl_const_2490: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2580} unique __ctobpl_const_2474: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2599} unique __ctobpl_const_2494: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2580} unique __ctobpl_const_2470: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2552} unique __ctobpl_const_2468: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2563} unique __ctobpl_const_2480: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2581} unique __ctobpl_const_2477: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2526} unique __ctobpl_const_2463: int;

const {:extern} {:model_const "elem->GEOMETRY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2675} unique __ctobpl_const_2523: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2690} unique __ctobpl_const_2524: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2597} unique __ctobpl_const_2499: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2598} unique __ctobpl_const_2504: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2627} unique __ctobpl_const_2512: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2602} unique __ctobpl_const_2506: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2607} unique __ctobpl_const_2508: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2597} unique __ctobpl_const_2498: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2598} unique __ctobpl_const_2502: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2602} unique __ctobpl_const_2505: int;

const {:extern} {:model_const "grid->PX"} {:sourceFile ".\v24\space.c"} {:sourceLine 2607} unique __ctobpl_const_2509: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2627} unique __ctobpl_const_2510: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2598} unique __ctobpl_const_2503: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2597} unique __ctobpl_const_2497: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2627} unique __ctobpl_const_2514: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2598} unique __ctobpl_const_2501: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2627} unique __ctobpl_const_2515: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2673} unique __ctobpl_const_2516: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2673} unique __ctobpl_const_2517: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2673} unique __ctobpl_const_2521: int;

const {:extern} {:model_const "elem->GEOMETRY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2690} unique __ctobpl_const_2525: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2692} unique __ctobpl_const_2526: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2599} unique __ctobpl_const_2495: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2597} unique __ctobpl_const_2500: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2673} unique __ctobpl_const_2519: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2600} unique __ctobpl_const_2496: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2673} unique __ctobpl_const_2520: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2627} unique __ctobpl_const_2513: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2592} unique __ctobpl_const_2507: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2627} unique __ctobpl_const_2511: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2673} unique __ctobpl_const_2518: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2675} unique __ctobpl_const_2522: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2698} unique __ctobpl_const_2542: int;

const {:extern} {:model_const "dasin.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2702} unique __ctobpl_const_2549: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2697} unique __ctobpl_const_2540: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2697} unique __ctobpl_const_2541: int;

const {:extern} {:model_const "elem->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2695} unique __ctobpl_const_2537: int;

const {:extern} {:model_const "result.dasin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2702} unique __ctobpl_const_2551: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2694} unique __ctobpl_const_2533: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2693} unique __ctobpl_const_2529: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2695} unique __ctobpl_const_2535: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2693} unique __ctobpl_const_2531: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2692} unique __ctobpl_const_2527: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2694} unique __ctobpl_const_2532: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2693} unique __ctobpl_const_2530: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2694} unique __ctobpl_const_2534: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2697} unique __ctobpl_const_2538: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2697} unique __ctobpl_const_2539: int;

const {:extern} {:model_const "dasin.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2702} unique __ctobpl_const_2545: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2702} unique __ctobpl_const_2546: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2702} unique __ctobpl_const_2547: int;

const {:extern} {:model_const "dasin.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2702} unique __ctobpl_const_2548: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2702} unique __ctobpl_const_2550: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2704} unique __ctobpl_const_2552: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2704} unique __ctobpl_const_2553: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2704} unique __ctobpl_const_2554: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2677} unique __ctobpl_const_2555: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2699} unique __ctobpl_const_2544: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2677} unique __ctobpl_const_2556: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2699} unique __ctobpl_const_2543: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2677} unique __ctobpl_const_2557: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2678} unique __ctobpl_const_2558: int;

const {:extern} {:model_const "grid->PSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2692} unique __ctobpl_const_2528: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2695} unique __ctobpl_const_2536: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2576: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2681} unique __ctobpl_const_2567: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2629} unique __ctobpl_const_2589: int;

const {:extern} {:model_const "elem->GEOMETRY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2629} unique __ctobpl_const_2590: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2678} unique __ctobpl_const_2559: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2577: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2681} unique __ctobpl_const_2565: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2681} unique __ctobpl_const_2566: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2682} unique __ctobpl_const_2568: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2679} unique __ctobpl_const_2561: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2683} unique __ctobpl_const_2570: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2679} unique __ctobpl_const_2562: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2684} unique __ctobpl_const_2571: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2684} unique __ctobpl_const_2572: int;

const {:extern} {:model_const "dacos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2573: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2578: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2575: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2579: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2580: int;

const {:extern} {:model_const "elem->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2679} unique __ctobpl_const_2563: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2581: int;

const {:extern} {:model_const "qstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2574: int;

const {:extern} {:model_const "dacos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2582: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2683} unique __ctobpl_const_2569: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2584: int;

const {:extern} {:model_const "result.dacos"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2585: int;

const {:extern} {:model_const "dacos.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2687} unique __ctobpl_const_2583: int;

const {:extern} {:model_const "grid->ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2689} unique __ctobpl_const_2587: int;

const {:extern} {:model_const "grid->QSTEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2678} unique __ctobpl_const_2560: int;

const {:extern} {:model_const "pstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 2681} unique __ctobpl_const_2564: int;

const {:extern} {:model_const "grid"} {:sourceFile ".\v24\space.c"} {:sourceLine 2689} unique __ctobpl_const_2586: int;

const {:extern} {:model_const "angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 2689} unique __ctobpl_const_2588: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2254} unique __ctobpl_const_2104: int;

const {:extern} {:model_const "g->CENTRE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2254} unique __ctobpl_const_2109: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2254} unique __ctobpl_const_2110: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2254} unique __ctobpl_const_2111: int;

const {:extern} {:model_const "g->Q2_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 2220} unique __ctobpl_const_2086: int;

const {:extern} {:model_const "q2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2220} unique __ctobpl_const_2087: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2242} unique __ctobpl_const_2094: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2244} unique __ctobpl_const_2096: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 3716} unique __ctobpl_const_3103: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2244} unique __ctobpl_const_2098: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2244} unique __ctobpl_const_2100: int;

const {:extern} {:model_const "g->CENTRE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2254} unique __ctobpl_const_2105: int;

const {:extern} {:model_const "g->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2242} unique __ctobpl_const_2095: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2241} unique __ctobpl_const_2092: int;

const {:extern} {:model_const "g->Q1_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 2219} unique __ctobpl_const_2083: int;

const {:extern} {:model_const "q1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2219} unique __ctobpl_const_2084: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2244} unique __ctobpl_const_2099: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2244} unique __ctobpl_const_2103: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2254} unique __ctobpl_const_2106: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2220} unique __ctobpl_const_2085: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2254} unique __ctobpl_const_2107: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2254} unique __ctobpl_const_2108: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2654} unique __ctobpl_const_2591: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2237} unique __ctobpl_const_2090: int;

const {:extern} {:model_const "g->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2237} unique __ctobpl_const_2091: int;

const {:extern} {:model_const "g->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2241} unique __ctobpl_const_2093: int;

const {:extern} {:model_const "g->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2244} unique __ctobpl_const_2097: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2221} unique __ctobpl_const_2088: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2244} unique __ctobpl_const_2102: int;

const {:extern} {:model_const "g->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2244} unique __ctobpl_const_2101: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2219} unique __ctobpl_const_2082: int;

const {:extern} {:model_const "g->AMP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2221} unique __ctobpl_const_2089: int;

const {:extern} {:model_const "g->P1_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2255} unique __ctobpl_const_2117: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2257} unique __ctobpl_const_2130: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2256} unique __ctobpl_const_2127: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2257} unique __ctobpl_const_2131: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2257} unique __ctobpl_const_2134: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2257} unique __ctobpl_const_2135: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2256} unique __ctobpl_const_2124: int;

const {:extern} {:model_const "g->Q2_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2258} unique __ctobpl_const_2137: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2256} unique __ctobpl_const_2126: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2258} unique __ctobpl_const_2142: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2258} unique __ctobpl_const_2143: int;

const {:extern} {:model_const "g->P2_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2256} unique __ctobpl_const_2121: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2255} unique __ctobpl_const_2112: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2256} unique __ctobpl_const_2122: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2255} unique __ctobpl_const_2119: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2256} unique __ctobpl_const_2120: int;

const {:extern} {:model_const "g->P1_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2255} unique __ctobpl_const_2113: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2257} unique __ctobpl_const_2128: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2257} unique __ctobpl_const_2132: int;

const {:extern} {:model_const "g->Q1_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2257} unique __ctobpl_const_2133: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2258} unique __ctobpl_const_2136: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2258} unique __ctobpl_const_2139: int;

const {:extern} {:model_const "g->Q1_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2257} unique __ctobpl_const_2129: int;

const {:extern} {:model_const "g->P2_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2256} unique __ctobpl_const_2125: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2258} unique __ctobpl_const_2138: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2258} unique __ctobpl_const_2140: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2255} unique __ctobpl_const_2118: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2255} unique __ctobpl_const_2114: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2256} unique __ctobpl_const_2123: int;

const {:extern} {:model_const "g->Q2_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2258} unique __ctobpl_const_2141: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2255} unique __ctobpl_const_2116: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2255} unique __ctobpl_const_2115: int;

const {:extern} {:model_const "g->OMIT_ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2269} unique __ctobpl_const_2145: int;

const {:extern} {:model_const "g->ANGLE_STEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2271} unique __ctobpl_const_2155: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2271} unique __ctobpl_const_2156: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2274} unique __ctobpl_const_2166: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2274} unique __ctobpl_const_2167: int;

const {:extern} {:model_const "g->PHASE_START"} {:sourceFile ".\v24\space.c"} {:sourceLine 2274} unique __ctobpl_const_2169: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2274} unique __ctobpl_const_2171: int;

const {:extern} {:model_const "g->PHASE_STEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2275} unique __ctobpl_const_2173: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2271} unique __ctobpl_const_2158: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2270} unique __ctobpl_const_2152: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2275} unique __ctobpl_const_2175: int;

const {:extern} {:model_const "g->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2271} unique __ctobpl_const_2157: int;

const {:extern} {:model_const "g->PHASE_START"} {:sourceFile ".\v24\space.c"} {:sourceLine 2274} unique __ctobpl_const_2165: int;

const {:extern} {:model_const "g->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2270} unique __ctobpl_const_2153: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2269} unique __ctobpl_const_2144: int;

const {:extern} {:model_const "g->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2271} unique __ctobpl_const_2161: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2273} unique __ctobpl_const_2162: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2274} unique __ctobpl_const_2168: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2274} unique __ctobpl_const_2170: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2275} unique __ctobpl_const_2172: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2275} unique __ctobpl_const_2174: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2270} unique __ctobpl_const_2150: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2271} unique __ctobpl_const_2160: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2274} unique __ctobpl_const_2164: int;

const {:extern} {:model_const "g->OMIT_PHASE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2273} unique __ctobpl_const_2163: int;

const {:extern} {:model_const "g->ANGLE_STEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2271} unique __ctobpl_const_2159: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2271} unique __ctobpl_const_2154: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2270} unique __ctobpl_const_2146: int;

const {:extern} {:model_const "g->ANGLE_START"} {:sourceFile ".\v24\space.c"} {:sourceLine 2270} unique __ctobpl_const_2147: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2270} unique __ctobpl_const_2148: int;

const {:extern} {:model_const "g->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2270} unique __ctobpl_const_2149: int;

const {:extern} {:model_const "g->ANGLE_START"} {:sourceFile ".\v24\space.c"} {:sourceLine 2270} unique __ctobpl_const_2151: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2304} unique __ctobpl_const_2198: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2280} unique __ctobpl_const_2186: int;

const {:extern} {:model_const "node_ptr->OMIT_ORIENT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2304} unique __ctobpl_const_2199: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2275} unique __ctobpl_const_2178: int;

const {:extern} {:model_const "node_ptr->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2309} unique __ctobpl_const_2201: int;

const {:extern} {:model_const "node_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2310} unique __ctobpl_const_2203: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2311} unique __ctobpl_const_2204: int;

const {:extern} {:model_const "node_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2311} unique __ctobpl_const_2205: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2312} unique __ctobpl_const_2206: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2309} unique __ctobpl_const_2200: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2310} unique __ctobpl_const_2202: int;

const {:extern} {:model_const "node_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2312} unique __ctobpl_const_2207: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2281} unique __ctobpl_const_2192: int;

const {:extern} {:model_const "g->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2280} unique __ctobpl_const_2183: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2281} unique __ctobpl_const_2190: int;

const {:extern} {:model_const "g->PHI"} {:sourceFile ".\v24\space.c"} {:sourceLine 2281} unique __ctobpl_const_2193: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2275} unique __ctobpl_const_2176: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2280} unique __ctobpl_const_2182: int;

const {:extern} {:model_const "g->PHASE_STEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2275} unique __ctobpl_const_2177: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2280} unique __ctobpl_const_2184: int;

const {:extern} {:model_const "g->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2281} unique __ctobpl_const_2191: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2281} unique __ctobpl_const_2194: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2275} unique __ctobpl_const_2179: int;

const {:extern} {:model_const "g->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2280} unique __ctobpl_const_2187: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2281} unique __ctobpl_const_2188: int;

const {:extern} {:model_const "g->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2291} unique __ctobpl_const_2197: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2280} unique __ctobpl_const_2180: int;

const {:extern} {:model_const "g->THETA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2280} unique __ctobpl_const_2181: int;

const {:extern} {:model_const "g->THETA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2280} unique __ctobpl_const_2185: int;

const {:extern} {:model_const "g->PHI"} {:sourceFile ".\v24\space.c"} {:sourceLine 2281} unique __ctobpl_const_2189: int;

const {:extern} {:model_const "g->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2281} unique __ctobpl_const_2195: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2291} unique __ctobpl_const_2196: int;

const {:extern} {:model_const "app_ptr->AMP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2334} unique __ctobpl_const_2231: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2332} unique __ctobpl_const_2225: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2329} unique __ctobpl_const_2222: int;

const {:extern} {:model_const "app_ptr->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2335} unique __ctobpl_const_2236: int;

const {:extern} {:model_const "amp"} {:sourceFile ".\v24\space.c"} {:sourceLine 2333} unique __ctobpl_const_2226: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2334} unique __ctobpl_const_2232: int;

const {:extern} {:model_const "app_ptr->AMP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2334} unique __ctobpl_const_2234: int;

const {:extern} {:model_const "amp"} {:sourceFile ".\v24\space.c"} {:sourceLine 2335} unique __ctobpl_const_2237: int;

const {:extern} {:model_const "ang"} {:sourceFile ".\v24\space.c"} {:sourceLine 2337} unique __ctobpl_const_2238: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2337} unique __ctobpl_const_2239: int;

const {:extern} {:model_const "node_ptr->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2313} unique __ctobpl_const_2209: int;

const {:extern} {:model_const "node_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2306} unique __ctobpl_const_2213: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2334} unique __ctobpl_const_2230: int;

const {:extern} {:model_const "node_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2305} unique __ctobpl_const_2211: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2307} unique __ctobpl_const_2214: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2306} unique __ctobpl_const_2212: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2329} unique __ctobpl_const_2223: int;

const {:extern} {:model_const "amp"} {:sourceFile ".\v24\space.c"} {:sourceLine 2326} unique __ctobpl_const_2219: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2308} unique __ctobpl_const_2216: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2334} unique __ctobpl_const_2229: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2313} unique __ctobpl_const_2208: int;

const {:extern} {:model_const "ang"} {:sourceFile ".\v24\space.c"} {:sourceLine 2327} unique __ctobpl_const_2221: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2334} unique __ctobpl_const_2233: int;

const {:extern} {:model_const "ang_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2327} unique __ctobpl_const_2220: int;

const {:extern} {:model_const "elem_ptr->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 2329} unique __ctobpl_const_2224: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2335} unique __ctobpl_const_2235: int;

const {:extern} {:model_const "node_ptr->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2308} unique __ctobpl_const_2217: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2326} unique __ctobpl_const_2218: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2333} unique __ctobpl_const_2227: int;

const {:extern} {:model_const "app_ptr->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2333} unique __ctobpl_const_2228: int;

const {:extern} {:model_const "node_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2307} unique __ctobpl_const_2215: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2305} unique __ctobpl_const_2210: int;

const {:extern} {:model_const "ang_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2346} unique __ctobpl_const_2268: int;

const {:extern} {:model_const "ang_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2342} unique __ctobpl_const_2253: int;

const {:extern} {:model_const "app_ptr->PSH_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2342} unique __ctobpl_const_2258: int;

const {:extern} {:model_const "app_ptr->PPA_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2346} unique __ctobpl_const_2270: int;

const {:extern} {:model_const "ang"} {:sourceFile ".\v24\space.c"} {:sourceLine 2339} unique __ctobpl_const_2249: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2338} unique __ctobpl_const_2242: int;

const {:extern} {:model_const "ang_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2338} unique __ctobpl_const_2241: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2338} unique __ctobpl_const_2245: int;

const {:extern} {:model_const "ang"} {:sourceFile ".\v24\space.c"} {:sourceLine 2341} unique __ctobpl_const_2250: int;

const {:extern} {:model_const "ang_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2342} unique __ctobpl_const_2256: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2345} unique __ctobpl_const_2263: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2341} unique __ctobpl_const_2251: int;

const {:extern} {:model_const "ang"} {:sourceFile ".\v24\space.c"} {:sourceLine 2343} unique __ctobpl_const_2261: int;

const {:extern} {:model_const "app_ptr->PSC_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2338} unique __ctobpl_const_2246: int;

const {:extern} {:model_const "app_ptr->PSC_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2338} unique __ctobpl_const_2243: int;

const {:extern} {:model_const "app_ptr->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 2339} unique __ctobpl_const_2248: int;

const {:extern} {:model_const "ang_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2338} unique __ctobpl_const_2244: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2339} unique __ctobpl_const_2247: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2342} unique __ctobpl_const_2254: int;

const {:extern} {:model_const "app_ptr->PPA_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2346} unique __ctobpl_const_2267: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2346} unique __ctobpl_const_2266: int;

const {:extern} {:model_const "app_ptr->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 2337} unique __ctobpl_const_2240: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2346} unique __ctobpl_const_2269: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2347} unique __ctobpl_const_2271: int;

const {:extern} {:model_const "ang"} {:sourceFile ".\v24\space.c"} {:sourceLine 2345} unique __ctobpl_const_2262: int;

const {:extern} {:model_const "app_ptr->PSH_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2342} unique __ctobpl_const_2255: int;

const {:extern} {:model_const "app_ptr->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 2343} unique __ctobpl_const_2260: int;

const {:extern} {:model_const "app_ptr->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 2341} unique __ctobpl_const_2252: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2342} unique __ctobpl_const_2257: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2343} unique __ctobpl_const_2259: int;

const {:extern} {:model_const "app_ptr->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2345} unique __ctobpl_const_2264: int;

const {:extern} {:model_const "ang_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2346} unique __ctobpl_const_2265: int;

const {:extern} {:model_const "app_ptr->AMP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2362} unique __ctobpl_const_2299: int;

const {:extern} {:model_const "ang"} {:sourceFile ".\v24\space.c"} {:sourceLine 2356} unique __ctobpl_const_2286: int;

const {:extern} {:model_const "app_ptr->PSC_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2363} unique __ctobpl_const_2301: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2352} unique __ctobpl_const_2278: int;

const {:extern} {:model_const "app_ptr->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2358} unique __ctobpl_const_2296: int;

const {:extern} {:model_const "app_ptr->PHEPOL_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2353} unique __ctobpl_const_2283: int;

const {:extern} {:model_const "ang_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2357} unique __ctobpl_const_2289: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2363} unique __ctobpl_const_2300: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2353} unique __ctobpl_const_2282: int;

const {:extern} {:model_const "ang_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2357} unique __ctobpl_const_2292: int;

const {:extern} {:model_const "ang"} {:sourceFile ".\v24\space.c"} {:sourceLine 2358} unique __ctobpl_const_2297: int;

const {:extern} {:model_const "app_ptr->PSH_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2364} unique __ctobpl_const_2303: int;

const {:extern} {:model_const "app_ptr->OMIT_POL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2351} unique __ctobpl_const_2277: int;

const {:extern} {:model_const "elem_ptr->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2352} unique __ctobpl_const_2281: int;

const {:extern} {:model_const "elem_ptr->PHEPOL_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2353} unique __ctobpl_const_2285: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2364} unique __ctobpl_const_2302: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2357} unique __ctobpl_const_2293: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2351} unique __ctobpl_const_2276: int;

const {:extern} {:model_const "app_ptr->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2356} unique __ctobpl_const_2288: int;

const {:extern} {:model_const "app_ptr->PHEPOL_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2357} unique __ctobpl_const_2294: int;

const {:extern} {:model_const "app_ptr->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2347} unique __ctobpl_const_2272: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2356} unique __ctobpl_const_2287: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2353} unique __ctobpl_const_2284: int;

const {:extern} {:model_const "elem_ptr->POLARIZATION"} {:sourceFile ".\v24\space.c"} {:sourceLine 2350} unique __ctobpl_const_2275: int;

const {:extern} {:model_const "ang"} {:sourceFile ".\v24\space.c"} {:sourceLine 2347} unique __ctobpl_const_2273: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2352} unique __ctobpl_const_2280: int;

const {:extern} {:model_const "app_ptr->PHEPOL_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2357} unique __ctobpl_const_2291: int;

const {:extern} {:model_const "app_ptr->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2352} unique __ctobpl_const_2279: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2358} unique __ctobpl_const_2295: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2357} unique __ctobpl_const_2290: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2362} unique __ctobpl_const_2298: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2350} unique __ctobpl_const_2274: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2384} unique __ctobpl_const_2313: int;

const {:extern} {:model_const "radius_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2400} unique __ctobpl_const_2321: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2366} unique __ctobpl_const_2306: int;

const {:extern} {:model_const "pqdim_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2403} unique __ctobpl_const_2330: int;

const {:extern} {:model_const "elem_ptr->PQDIM_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2403} unique __ctobpl_const_2332: int;

const {:extern} {:model_const "elem_ptr->RADIUS_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2400} unique __ctobpl_const_2323: int;

const {:extern} {:model_const "elem_ptr->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2401} unique __ctobpl_const_2326: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2400} unique __ctobpl_const_2322: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2402} unique __ctobpl_const_2327: int;

const {:extern} {:model_const "elem_ptr->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2402} unique __ctobpl_const_2329: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2403} unique __ctobpl_const_2331: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2405} unique __ctobpl_const_2333: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2401} unique __ctobpl_const_2324: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2399} unique __ctobpl_const_2319: int;

const {:extern} {:model_const "elem_ptr->GEOMETRY"} {:sourceFile ".\v24\space.c"} {:sourceLine 2405} unique __ctobpl_const_2334: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2382} unique __ctobpl_const_2312: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2385} unique __ctobpl_const_2316: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2365} unique __ctobpl_const_2304: int;

const {:extern} {:model_const "elem_ptr->RADIUS"} {:sourceFile ".\v24\space.c"} {:sourceLine 2399} unique __ctobpl_const_2320: int;

const {:extern} {:model_const "app_ptr->PHEPOL_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2366} unique __ctobpl_const_2307: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2368} unique __ctobpl_const_2308: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2385} unique __ctobpl_const_2315: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2382} unique __ctobpl_const_2311: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2384} unique __ctobpl_const_2314: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2399} unique __ctobpl_const_2318: int;

const {:extern} {:model_const "app_ptr->PPA_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2365} unique __ctobpl_const_2305: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2401} unique __ctobpl_const_2325: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2388} unique __ctobpl_const_2317: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2402} unique __ctobpl_const_2328: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2408} unique __ctobpl_const_2335: int;

const {:extern} {:model_const "app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2368} unique __ctobpl_const_2310: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2368} unique __ctobpl_const_2309: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2415} unique __ctobpl_const_2356: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2414} unique __ctobpl_const_2352: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2430} unique __ctobpl_const_2362: int;

const {:extern} {:model_const "pqdim_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2408} unique __ctobpl_const_2336: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2410} unique __ctobpl_const_2345: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2410} unique __ctobpl_const_2350: int;

const {:extern} {:model_const "radius_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2414} unique __ctobpl_const_2355: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2416} unique __ctobpl_const_2358: int;

const {:extern} {:model_const "pqdim_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2409} unique __ctobpl_const_2342: int;

const {:extern} {:model_const "result.sqrt"} {:sourceFile ".\v24\space.c"} {:sourceLine 2410} unique __ctobpl_const_2351: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2410} unique __ctobpl_const_2347: int;

const {:extern} {:model_const "radius_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2414} unique __ctobpl_const_2353: int;

const {:extern} {:model_const "sqrt.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2410} unique __ctobpl_const_2348: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2409} unique __ctobpl_const_2339: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2415} unique __ctobpl_const_2357: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2409} unique __ctobpl_const_2341: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2414} unique __ctobpl_const_2354: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 2416} unique __ctobpl_const_2359: int;

const {:extern} {:model_const "pqdim_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2425} unique __ctobpl_const_2361: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2410} unique __ctobpl_const_2344: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 2433} unique __ctobpl_const_2365: int;

const {:extern} {:model_const "sqrt.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2410} unique __ctobpl_const_2349: int;

const {:extern} {:model_const "radius_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2424} unique __ctobpl_const_2360: int;

const {:extern} {:model_const "pqdim_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2409} unique __ctobpl_const_2340: int;

const {:extern} {:model_const "pqdim_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2408} unique __ctobpl_const_2338: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2435} unique __ctobpl_const_2366: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2441} unique __ctobpl_const_2367: int;

const {:extern} {:model_const "elem_ptr->NPORTS"} {:sourceFile ".\v24\space.c"} {:sourceLine 2430} unique __ctobpl_const_2363: int;

const {:extern} {:model_const "sqrt.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2410} unique __ctobpl_const_2343: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2410} unique __ctobpl_const_2346: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2433} unique __ctobpl_const_2364: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2408} unique __ctobpl_const_2337: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2453} unique __ctobpl_const_2389: int;

const {:extern} {:model_const "elem_ptr->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 2458} unique __ctobpl_const_2396: int;

const {:extern} {:model_const "port_ptr->AMP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2443} unique __ctobpl_const_2372: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2444} unique __ctobpl_const_2373: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2445} unique __ctobpl_const_2375: int;

const {:extern} {:model_const "port_ptr->PORTNUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 2441} unique __ctobpl_const_2368: int;

const {:extern} {:model_const "port_ptr->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 2446} unique __ctobpl_const_2378: int;

const {:extern} {:model_const "port_ptr->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2448} unique __ctobpl_const_2382: int;

const {:extern} {:model_const "port_ptr->PPA_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2449} unique __ctobpl_const_2384: int;

const {:extern} {:model_const "port_ptr->OMIT_POL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2453} unique __ctobpl_const_2390: int;

const {:extern} {:model_const "port_ptr->PSH_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2447} unique __ctobpl_const_2380: int;

const {:extern} {:model_const "port_ptr->PHEPOL_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2451} unique __ctobpl_const_2388: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2455} unique __ctobpl_const_2391: int;

const {:extern} {:model_const "port_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2455} unique __ctobpl_const_2392: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2449} unique __ctobpl_const_2383: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2457} unique __ctobpl_const_2393: int;

const {:extern} {:model_const "port_ptr->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 2442} unique __ctobpl_const_2370: int;

const {:extern} {:model_const "port_ptr->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2450} unique __ctobpl_const_2386: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2450} unique __ctobpl_const_2385: int;

const {:extern} {:model_const "elem_ptr->NPORTS"} {:sourceFile ".\v24\space.c"} {:sourceLine 2457} unique __ctobpl_const_2394: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2458} unique __ctobpl_const_2395: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2451} unique __ctobpl_const_2387: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2458} unique __ctobpl_const_2397: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2462} unique __ctobpl_const_2398: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2442} unique __ctobpl_const_2369: int;

const {:extern} {:model_const "port_ptr->PSC_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2445} unique __ctobpl_const_2376: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2448} unique __ctobpl_const_2381: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2443} unique __ctobpl_const_2371: int;

const {:extern} {:model_const "port_ptr->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 2444} unique __ctobpl_const_2374: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2446} unique __ctobpl_const_2377: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2447} unique __ctobpl_const_2379: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2030} unique __ctobpl_const_1908: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2033} unique __ctobpl_const_1917: int;

const {:extern} {:model_const "ErrorMessages[i][0]"} {:sourceFile ".\v24\space.c"} {:sourceLine 1932} unique __ctobpl_const_1921: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2024} unique __ctobpl_const_1890: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2025} unique __ctobpl_const_1894: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2025} unique __ctobpl_const_1893: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2027} unique __ctobpl_const_1899: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2025} unique __ctobpl_const_1895: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2027} unique __ctobpl_const_1901: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2028} unique __ctobpl_const_1902: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2028} unique __ctobpl_const_1904: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2026} unique __ctobpl_const_1896: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2029} unique __ctobpl_const_1905: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2029} unique __ctobpl_const_1906: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2024} unique __ctobpl_const_1892: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2027} unique __ctobpl_const_1900: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2026} unique __ctobpl_const_1897: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2030} unique __ctobpl_const_1909: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2031} unique __ctobpl_const_1911: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2026} unique __ctobpl_const_1898: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2029} unique __ctobpl_const_1907: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2030} unique __ctobpl_const_1910: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2031} unique __ctobpl_const_1912: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2028} unique __ctobpl_const_1903: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2032} unique __ctobpl_const_1914: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2032} unique __ctobpl_const_1915: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2024} unique __ctobpl_const_1891: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2032} unique __ctobpl_const_1916: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2033} unique __ctobpl_const_1918: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2033} unique __ctobpl_const_1919: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 1932} unique __ctobpl_const_1920: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2031} unique __ctobpl_const_1913: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2097} unique __ctobpl_const_1929: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2101} unique __ctobpl_const_1944: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2089} unique __ctobpl_const_1926: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2089} unique __ctobpl_const_1924: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2100} unique __ctobpl_const_1942: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2101} unique __ctobpl_const_1945: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2102} unique __ctobpl_const_1947: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2102} unique __ctobpl_const_1948: int;

const {:extern} {:model_const "qnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2112} unique __ctobpl_const_1934: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2100} unique __ctobpl_const_1941: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2112} unique __ctobpl_const_1937: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 2101} unique __ctobpl_const_1946: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 2102} unique __ctobpl_const_1949: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2089} unique __ctobpl_const_1923: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2111} unique __ctobpl_const_1933: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2103} unique __ctobpl_const_1950: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 2103} unique __ctobpl_const_1951: int;

const {:extern} {:model_const "g->P2_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 2218} unique __ctobpl_const_2080: int;

const {:extern} {:model_const "* pnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2111} unique __ctobpl_const_1931: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2112} unique __ctobpl_const_1936: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2099} unique __ctobpl_const_1938: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2095} unique __ctobpl_const_1928: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 2099} unique __ctobpl_const_1939: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 2100} unique __ctobpl_const_1943: int;

const {:extern} {:model_const "pnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2111} unique __ctobpl_const_1930: int;

const {:extern} {:model_const "elem"} {:sourceFile ".\v24\space.c"} {:sourceLine 2654} unique __ctobpl_const_2592: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2089} unique __ctobpl_const_1925: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2095} unique __ctobpl_const_1927: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2111} unique __ctobpl_const_1932: int;

const {:extern} {:model_const "* qnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2112} unique __ctobpl_const_1935: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2099} unique __ctobpl_const_1940: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 1931} unique __ctobpl_const_1922: int;

const {:extern} {:model_const "xsize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2153} unique __ctobpl_const_1972: int;

const {:extern} {:model_const "* xsize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2153} unique __ctobpl_const_1973: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2106} unique __ctobpl_const_1959: int;

const {:extern} {:model_const "elem_pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2153} unique __ctobpl_const_1976: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2103} unique __ctobpl_const_1952: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2108} unique __ctobpl_const_1962: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2104} unique __ctobpl_const_1954: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2108} unique __ctobpl_const_1963: int;

const {:extern} {:model_const "ysize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2154} unique __ctobpl_const_1977: int;

const {:extern} {:model_const "* ysize_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2154} unique __ctobpl_const_1978: int;

const {:extern} {:model_const "xmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2153} unique __ctobpl_const_1974: int;

const {:extern} {:model_const "xmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2129} unique __ctobpl_const_1965: int;

const {:extern} {:model_const "ymin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2154} unique __ctobpl_const_1980: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 2104} unique __ctobpl_const_1955: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2135} unique __ctobpl_const_1969: int;

const {:extern} {:model_const "elem_qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 2154} unique __ctobpl_const_1981: int;

const {:extern} {:model_const "ymax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2129} unique __ctobpl_const_1968: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2139} unique __ctobpl_const_1982: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 2106} unique __ctobpl_const_1961: int;

const {:extern} {:model_const "app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2108} unique __ctobpl_const_1964: int;

const {:extern} {:model_const "xmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2153} unique __ctobpl_const_1975: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 2105} unique __ctobpl_const_1958: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2135} unique __ctobpl_const_1970: int;

const {:extern} {:model_const "app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2139} unique __ctobpl_const_1983: int;

const {:extern} {:model_const "ymax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2154} unique __ctobpl_const_1979: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2104} unique __ctobpl_const_1953: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2105} unique __ctobpl_const_1957: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2105} unique __ctobpl_const_1956: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2106} unique __ctobpl_const_1960: int;

const {:extern} {:model_const "xmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2129} unique __ctobpl_const_1966: int;

const {:extern} {:model_const "ymin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2129} unique __ctobpl_const_1967: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2137} unique __ctobpl_const_1971: int;

const {:extern} {:model_const "app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2143} unique __ctobpl_const_1995: int;

const {:extern} {:model_const "app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2144} unique __ctobpl_const_1999: int;

const {:extern} {:model_const "ymax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2146} unique __ctobpl_const_2003: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2142} unique __ctobpl_const_1992: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2145} unique __ctobpl_const_2001: int;

const {:extern} {:model_const "app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2146} unique __ctobpl_const_2005: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2165} unique __ctobpl_const_2009: int;

const {:extern} {:model_const "xmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2142} unique __ctobpl_const_1991: int;

const {:extern} {:model_const "ymin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2143} unique __ctobpl_const_1996: int;

const {:extern} {:model_const "ymax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2145} unique __ctobpl_const_2000: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2166} unique __ctobpl_const_2011: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 2166} unique __ctobpl_const_2012: int;

const {:extern} {:model_const "p1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2167} unique __ctobpl_const_2013: int;

const {:extern} {:model_const "p1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2167} unique __ctobpl_const_2014: int;

const {:extern} {:model_const "app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2140} unique __ctobpl_const_1987: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2141} unique __ctobpl_const_1989: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2148} unique __ctobpl_const_2007: int;

const {:extern} {:model_const "p2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2168} unique __ctobpl_const_2015: int;

const {:extern} {:model_const "ymin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2144} unique __ctobpl_const_1997: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2146} unique __ctobpl_const_2004: int;

const {:extern} {:model_const "xmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2140} unique __ctobpl_const_1985: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2143} unique __ctobpl_const_1994: int;

const {:extern} {:model_const "app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2141} unique __ctobpl_const_1990: int;

const {:extern} {:model_const "app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2142} unique __ctobpl_const_1993: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2144} unique __ctobpl_const_1998: int;

const {:extern} {:model_const "xmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 2139} unique __ctobpl_const_1984: int;

const {:extern} {:model_const "app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 2145} unique __ctobpl_const_2002: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2148} unique __ctobpl_const_2006: int;

const {:extern} {:model_const "app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2148} unique __ctobpl_const_2008: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 2165} unique __ctobpl_const_2010: int;

const {:extern} {:model_const "xmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 2141} unique __ctobpl_const_1988: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2140} unique __ctobpl_const_1986: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 2174} unique __ctobpl_const_2021: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2177} unique __ctobpl_const_2031: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2180} unique __ctobpl_const_2040: int;

const {:extern} {:model_const "p2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2168} unique __ctobpl_const_2016: int;

const {:extern} {:model_const "q2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2170} unique __ctobpl_const_2020: int;

const {:extern} {:model_const "q1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2169} unique __ctobpl_const_2018: int;

const {:extern} {:model_const "p1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2176} unique __ctobpl_const_2027: int;

const {:extern} {:model_const "q1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2169} unique __ctobpl_const_2017: int;

const {:extern} {:model_const "g->CENTRE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2175} unique __ctobpl_const_2026: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 2175} unique __ctobpl_const_2024: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2176} unique __ctobpl_const_2028: int;

const {:extern} {:model_const "q1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2178} unique __ctobpl_const_2033: int;

const {:extern} {:model_const "g->Q1_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 2178} unique __ctobpl_const_2035: int;

const {:extern} {:model_const "g->Q2_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 2179} unique __ctobpl_const_2038: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2175} unique __ctobpl_const_2025: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2178} unique __ctobpl_const_2034: int;

const {:extern} {:model_const "p2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2177} unique __ctobpl_const_2030: int;

const {:extern} {:model_const "g->AMP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 2180} unique __ctobpl_const_2041: int;

const {:extern} {:model_const "g->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2183} unique __ctobpl_const_2043: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2183} unique __ctobpl_const_2042: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 2187} unique __ctobpl_const_2044: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2174} unique __ctobpl_const_2022: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 2188} unique __ctobpl_const_2045: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2179} unique __ctobpl_const_2037: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2191} unique __ctobpl_const_2046: int;

const {:extern} {:model_const "q2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2179} unique __ctobpl_const_2036: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2191} unique __ctobpl_const_2047: int;

const {:extern} {:model_const "g->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2174} unique __ctobpl_const_2023: int;

const {:extern} {:model_const "g->P2_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 2177} unique __ctobpl_const_2032: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2180} unique __ctobpl_const_2039: int;

const {:extern} {:model_const "g->P1_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 2176} unique __ctobpl_const_2029: int;

const {:extern} {:model_const "q2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2170} unique __ctobpl_const_2019: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2195} unique __ctobpl_const_2052: int;

const {:extern} {:model_const "p2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2197} unique __ctobpl_const_2060: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2197} unique __ctobpl_const_2061: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2191} unique __ctobpl_const_2048: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2198} unique __ctobpl_const_2063: int;

const {:extern} {:model_const "q1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2198} unique __ctobpl_const_2062: int;

const {:extern} {:model_const "q1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2198} unique __ctobpl_const_2064: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2198} unique __ctobpl_const_2065: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2199} unique __ctobpl_const_2067: int;

const {:extern} {:model_const "q2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2199} unique __ctobpl_const_2068: int;

const {:extern} {:model_const "q2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2199} unique __ctobpl_const_2066: int;

const {:extern} {:model_const "p1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2196} unique __ctobpl_const_2056: int;

const {:extern} {:model_const "p2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2197} unique __ctobpl_const_2058: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2195} unique __ctobpl_const_2051: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2199} unique __ctobpl_const_2069: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 2215} unique __ctobpl_const_2072: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2196} unique __ctobpl_const_2057: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2215} unique __ctobpl_const_2070: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 2216} unique __ctobpl_const_2075: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2195} unique __ctobpl_const_2053: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2217} unique __ctobpl_const_2076: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2191} unique __ctobpl_const_2049: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2197} unique __ctobpl_const_2059: int;

const {:extern} {:model_const "g->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 2215} unique __ctobpl_const_2071: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2216} unique __ctobpl_const_2073: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2195} unique __ctobpl_const_2050: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 2196} unique __ctobpl_const_2055: int;

const {:extern} {:model_const "p1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 2196} unique __ctobpl_const_2054: int;

const {:extern} {:model_const "g->CENTRE"} {:sourceFile ".\v24\space.c"} {:sourceLine 2216} unique __ctobpl_const_2074: int;

const {:extern} {:model_const "g->P1_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 2217} unique __ctobpl_const_2077: int;

const {:extern} {:model_const "p1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 2217} unique __ctobpl_const_2078: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 2218} unique __ctobpl_const_2079: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2005} unique __ctobpl_const_1833: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2005} unique __ctobpl_const_1835: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2005} unique __ctobpl_const_1834: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2004} unique __ctobpl_const_1830: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2003} unique __ctobpl_const_1827: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2006} unique __ctobpl_const_1836: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2003} unique __ctobpl_const_1828: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2007} unique __ctobpl_const_1839: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2007} unique __ctobpl_const_1840: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2006} unique __ctobpl_const_1838: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2007} unique __ctobpl_const_1841: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2008} unique __ctobpl_const_1842: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2009} unique __ctobpl_const_1845: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2009} unique __ctobpl_const_1846: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2010} unique __ctobpl_const_1849: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2011} unique __ctobpl_const_1851: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2011} unique __ctobpl_const_1852: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2012} unique __ctobpl_const_1854: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2012} unique __ctobpl_const_1856: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2003} unique __ctobpl_const_1829: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2004} unique __ctobpl_const_1832: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2006} unique __ctobpl_const_1837: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2008} unique __ctobpl_const_1843: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2008} unique __ctobpl_const_1844: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2010} unique __ctobpl_const_1848: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2004} unique __ctobpl_const_1831: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2009} unique __ctobpl_const_1847: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2011} unique __ctobpl_const_1853: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2012} unique __ctobpl_const_1855: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2013} unique __ctobpl_const_1857: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2013} unique __ctobpl_const_1858: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2010} unique __ctobpl_const_1850: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2020} unique __ctobpl_const_1879: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2020} unique __ctobpl_const_1880: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2015} unique __ctobpl_const_1865: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2019} unique __ctobpl_const_1875: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2017} unique __ctobpl_const_1871: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2021} unique __ctobpl_const_1882: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2022} unique __ctobpl_const_1884: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2018} unique __ctobpl_const_1873: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2014} unique __ctobpl_const_1862: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2013} unique __ctobpl_const_1859: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2022} unique __ctobpl_const_1885: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2022} unique __ctobpl_const_1886: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2019} unique __ctobpl_const_1877: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2014} unique __ctobpl_const_1861: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2016} unique __ctobpl_const_1867: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2020} unique __ctobpl_const_1878: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2021} unique __ctobpl_const_1883: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2023} unique __ctobpl_const_1888: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2018} unique __ctobpl_const_1874: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2015} unique __ctobpl_const_1863: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2019} unique __ctobpl_const_1876: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2021} unique __ctobpl_const_1881: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2023} unique __ctobpl_const_1887: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2023} unique __ctobpl_const_1889: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2017} unique __ctobpl_const_1870: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2015} unique __ctobpl_const_1864: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2016} unique __ctobpl_const_1868: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2017} unique __ctobpl_const_1869: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2018} unique __ctobpl_const_1872: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2014} unique __ctobpl_const_1860: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 2016} unique __ctobpl_const_1866: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4244} unique __ctobpl_const_3726: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5492} unique __ctobpl_const_5147: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 4239} unique __ctobpl_const_3717: int;

const {:extern} {:model_const "direction"} {:sourceFile ".\v24\space.c"} {:sourceLine 4245} unique __ctobpl_const_3729: int;

const {:extern} {:model_const "omit_angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4246} unique __ctobpl_const_3730: int;

const {:extern} {:model_const "angle_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4247} unique __ctobpl_const_3732: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 4247} unique __ctobpl_const_3733: int;

const {:extern} {:model_const "q1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4242} unique __ctobpl_const_3722: int;

const {:extern} {:model_const "p2_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4241} unique __ctobpl_const_3721: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4123} unique __ctobpl_const_3710: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4245} unique __ctobpl_const_3728: int;

const {:extern} {:model_const "omit_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 4246} unique __ctobpl_const_3731: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4238} unique __ctobpl_const_3714: int;

const {:extern} {:model_const "p1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4240} unique __ctobpl_const_3718: int;

const {:extern} {:model_const "angle_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4248} unique __ctobpl_const_3734: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 4248} unique __ctobpl_const_3735: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4249} unique __ctobpl_const_3736: int;

const {:extern} {:model_const "q2_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4243} unique __ctobpl_const_3725: int;

const {:extern} {:model_const "omit_phase"} {:sourceFile ".\v24\space.c"} {:sourceLine 4249} unique __ctobpl_const_3737: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4235} unique __ctobpl_const_3712: int;

const {:extern} {:model_const "phase_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4250} unique __ctobpl_const_3738: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 4250} unique __ctobpl_const_3739: int;

const {:extern} {:model_const "phase_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4251} unique __ctobpl_const_3740: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4123} unique __ctobpl_const_3711: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 4238} unique __ctobpl_const_3715: int;

const {:extern} {:model_const "p1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4240} unique __ctobpl_const_3719: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4239} unique __ctobpl_const_3716: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4235} unique __ctobpl_const_3713: int;

const {:extern} {:model_const "p2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4241} unique __ctobpl_const_3720: int;

const {:extern} {:model_const "q1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4242} unique __ctobpl_const_3723: int;

const {:extern} {:model_const "q2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4243} unique __ctobpl_const_3724: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4244} unique __ctobpl_const_3727: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3766: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3767: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3768: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 4251} unique __ctobpl_const_3741: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3770: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3771: int;

const {:extern} {:model_const "u"} {:sourceFile ".\v24\space.c"} {:sourceLine 4252} unique __ctobpl_const_3743: int;

const {:extern} {:model_const "theta"} {:sourceFile ".\v24\space.c"} {:sourceLine 4254} unique __ctobpl_const_3747: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4263} unique __ctobpl_const_3752: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3769: int;

const {:extern} {:model_const "phase_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4256} unique __ctobpl_const_3751: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3772: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4264} unique __ctobpl_const_3755: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4267} unique __ctobpl_const_3756: int;

const {:extern} {:model_const "phi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4255} unique __ctobpl_const_3748: int;

const {:extern} {:model_const "u_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4252} unique __ctobpl_const_3742: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4256} unique __ctobpl_const_3750: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3765: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4267} unique __ctobpl_const_3760: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4263} unique __ctobpl_const_3753: int;

const {:extern} {:model_const "theta_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4254} unique __ctobpl_const_3746: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 4255} unique __ctobpl_const_3749: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4267} unique __ctobpl_const_3757: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4268} unique __ctobpl_const_3763: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4267} unique __ctobpl_const_3759: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4267} unique __ctobpl_const_3758: int;

const {:extern} {:model_const "v"} {:sourceFile ".\v24\space.c"} {:sourceLine 4253} unique __ctobpl_const_3745: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4267} unique __ctobpl_const_3761: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4263} unique __ctobpl_const_3754: int;

const {:extern} {:model_const "v_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4253} unique __ctobpl_const_3744: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 4267} unique __ctobpl_const_3762: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3764: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 4292} unique __ctobpl_const_3792: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4294} unique __ctobpl_const_3798: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4283} unique __ctobpl_const_3777: int;

const {:extern} {:model_const "phase_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4293} unique __ctobpl_const_3796: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4286} unique __ctobpl_const_3783: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PQEXP_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4294} unique __ctobpl_const_3799: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4285} unique __ctobpl_const_3780: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4283} unique __ctobpl_const_3778: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4286} unique __ctobpl_const_3784: int;

const {:extern} {:model_const "(* grphaexc_ptr)->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4291} unique __ctobpl_const_3788: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4292} unique __ctobpl_const_3790: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4296} unique __ctobpl_const_3800: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4296} unique __ctobpl_const_3802: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4296} unique __ctobpl_const_3803: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4294} unique __ctobpl_const_3797: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4296} unique __ctobpl_const_3801: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4286} unique __ctobpl_const_3785: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3804: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4293} unique __ctobpl_const_3793: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4286} unique __ctobpl_const_3782: int;

const {:extern} {:model_const "result.unifpha"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3775: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3774: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4291} unique __ctobpl_const_3786: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4281} unique __ctobpl_const_3776: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4291} unique __ctobpl_const_3787: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4293} unique __ctobpl_const_3795: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4293} unique __ctobpl_const_3794: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4278} unique __ctobpl_const_3773: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4283} unique __ctobpl_const_3779: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4285} unique __ctobpl_const_3781: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4292} unique __ctobpl_const_3789: int;

const {:extern} {:model_const "(* grphaexc_ptr)->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 4292} unique __ctobpl_const_3791: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4319} unique __ctobpl_const_3833: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4319} unique __ctobpl_const_3834: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4307} unique __ctobpl_const_3824: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4324} unique __ctobpl_const_3835: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4318} unique __ctobpl_const_3830: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4324} unique __ctobpl_const_3836: int;

const {:extern} {:model_const "p1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3808: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3816: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3813: int;

const {:extern} {:model_const "p2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3818: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3807: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3805: int;

const {:extern} {:model_const "q2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3811: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3812: int;

const {:extern} {:model_const "p2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3809: int;

const {:extern} {:model_const "p1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3817: int;

const {:extern} {:model_const "q2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3820: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4314} unique __ctobpl_const_3825: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4316} unique __ctobpl_const_3826: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3814: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4316} unique __ctobpl_const_3828: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3806: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3815: int;

const {:extern} {:model_const "q1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3819: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3821: int;

const {:extern} {:model_const "q1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3810: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3822: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4316} unique __ctobpl_const_3827: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4318} unique __ctobpl_const_3829: int;

const {:extern} {:model_const "result.secorpha"} {:sourceFile ".\v24\space.c"} {:sourceLine 4305} unique __ctobpl_const_3823: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4319} unique __ctobpl_const_3831: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4319} unique __ctobpl_const_3832: int;

const {:extern} {:model_const "phase_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4330} unique __ctobpl_const_3861: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4333} unique __ctobpl_const_3865: int;

const {:extern} {:model_const "(* grphaexc_ptr)->P1_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4326} unique __ctobpl_const_3844: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4333} unique __ctobpl_const_3866: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4329} unique __ctobpl_const_3854: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4330} unique __ctobpl_const_3859: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4328} unique __ctobpl_const_3851: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4330} unique __ctobpl_const_3860: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4333} unique __ctobpl_const_3867: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4333} unique __ctobpl_const_3868: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4325} unique __ctobpl_const_3839: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4326} unique __ctobpl_const_3842: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4327} unique __ctobpl_const_3846: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4329} unique __ctobpl_const_3855: int;

const {:extern} {:model_const "q2_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4329} unique __ctobpl_const_3857: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4331} unique __ctobpl_const_3862: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4326} unique __ctobpl_const_3843: int;

const {:extern} {:model_const "(* grphaexc_ptr)->CENTRE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4325} unique __ctobpl_const_3840: int;

const {:extern} {:model_const "p1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4326} unique __ctobpl_const_3845: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4331} unique __ctobpl_const_3863: int;

const {:extern} {:model_const "(* grphaexc_ptr)->P2_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4327} unique __ctobpl_const_3848: int;

const {:extern} {:model_const "p2_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4327} unique __ctobpl_const_3849: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 4325} unique __ctobpl_const_3841: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4327} unique __ctobpl_const_3847: int;

const {:extern} {:model_const "q1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 4328} unique __ctobpl_const_3853: int;

const {:extern} {:model_const "(* grphaexc_ptr)->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4324} unique __ctobpl_const_3837: int;

const {:extern} {:model_const "(* grphaexc_ptr)->Q2_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4329} unique __ctobpl_const_3856: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4330} unique __ctobpl_const_3858: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4325} unique __ctobpl_const_3838: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4328} unique __ctobpl_const_3850: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PQEXP_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4331} unique __ctobpl_const_3864: int;

const {:extern} {:model_const "(* grphaexc_ptr)->Q1_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4328} unique __ctobpl_const_3852: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3891: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3872: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3881: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4344} unique __ctobpl_const_3895: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4353} unique __ctobpl_const_3897: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4353} unique __ctobpl_const_3898: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4353} unique __ctobpl_const_3899: int;

const {:extern} {:model_const "angle_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3874: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3876: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4355} unique __ctobpl_const_3900: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3870: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3883: int;

const {:extern} {:model_const "omit_angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3885: int;

const {:extern} {:model_const "phase_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3878: int;

const {:extern} {:model_const "phase_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3889: int;

const {:extern} {:model_const "phase_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3890: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3893: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3869: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3871: int;

const {:extern} {:model_const "angle_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3875: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3884: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3879: int;

const {:extern} {:model_const "angle_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3886: int;

const {:extern} {:model_const "result.serotpha"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3894: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3880: int;

const {:extern} {:model_const "angle_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3887: int;

const {:extern} {:model_const "omit_angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3873: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3888: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4351} unique __ctobpl_const_3896: int;

const {:extern} {:model_const "phase_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3877: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3882: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4342} unique __ctobpl_const_3892: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PHASE_START"} {:sourceFile ".\v24\space.c"} {:sourceLine 4367} unique __ctobpl_const_3927: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4363} unique __ctobpl_const_3909: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4362} unique __ctobpl_const_3905: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4366} unique __ctobpl_const_3922: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 4367} unique __ctobpl_const_3928: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4368} unique __ctobpl_const_3929: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4365} unique __ctobpl_const_3918: int;

const {:extern} {:model_const "(* grphaexc_ptr)->OMIT_PHASE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4366} unique __ctobpl_const_3923: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 4364} unique __ctobpl_const_3916: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4367} unique __ctobpl_const_3925: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4368} unique __ctobpl_const_3930: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4361} unique __ctobpl_const_3903: int;

const {:extern} {:model_const "omit_angle"} {:sourceFile ".\v24\space.c"} {:sourceLine 4363} unique __ctobpl_const_3912: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4365} unique __ctobpl_const_3917: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PHASE_STEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4368} unique __ctobpl_const_3931: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 4368} unique __ctobpl_const_3932: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4361} unique __ctobpl_const_3902: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4362} unique __ctobpl_const_3906: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4363} unique __ctobpl_const_3910: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4364} unique __ctobpl_const_3913: int;

const {:extern} {:model_const "(* grphaexc_ptr)->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4361} unique __ctobpl_const_3904: int;

const {:extern} {:model_const "(* grphaexc_ptr)->ANGLE_STEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4365} unique __ctobpl_const_3919: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4367} unique __ctobpl_const_3926: int;

const {:extern} {:model_const "direction"} {:sourceFile ".\v24\space.c"} {:sourceLine 4362} unique __ctobpl_const_3908: int;

const {:extern} {:model_const "(* grphaexc_ptr)->OMIT_ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4363} unique __ctobpl_const_3911: int;

const {:extern} {:model_const "(* grphaexc_ptr)->DIRECTION"} {:sourceFile ".\v24\space.c"} {:sourceLine 4362} unique __ctobpl_const_3907: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4355} unique __ctobpl_const_3901: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 4365} unique __ctobpl_const_3920: int;

const {:extern} {:model_const "(* grphaexc_ptr)->ANGLE_START"} {:sourceFile ".\v24\space.c"} {:sourceLine 4364} unique __ctobpl_const_3915: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4364} unique __ctobpl_const_3914: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4366} unique __ctobpl_const_3921: int;

const {:extern} {:model_const "omit_phase"} {:sourceFile ".\v24\space.c"} {:sourceLine 4366} unique __ctobpl_const_3924: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3948: int;

const {:extern} {:model_const "v_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3952: int;

const {:extern} {:model_const "v_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3960: int;

const {:extern} {:model_const "theta_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3961: int;

const {:extern} {:model_const "phi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3962: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3963: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3950: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4374} unique __ctobpl_const_3944: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4371} unique __ctobpl_const_3942: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3964: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3956: int;

const {:extern} {:model_const "theta_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3953: int;

const {:extern} {:model_const "(* grphaexc_ptr)->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4369} unique __ctobpl_const_3935: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4371} unique __ctobpl_const_3941: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3957: int;

const {:extern} {:model_const "u_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3959: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3949: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3955: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4374} unique __ctobpl_const_3946: int;

const {:extern} {:model_const "phi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3954: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4369} unique __ctobpl_const_3933: int;

const {:extern} {:model_const "phase_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4370} unique __ctobpl_const_3940: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3958: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4370} unique __ctobpl_const_3938: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4370} unique __ctobpl_const_3937: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PQEXP_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4371} unique __ctobpl_const_3943: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PHASE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4370} unique __ctobpl_const_3939: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4369} unique __ctobpl_const_3936: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4369} unique __ctobpl_const_3934: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4374} unique __ctobpl_const_3945: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4374} unique __ctobpl_const_3947: int;

const {:extern} {:model_const "u_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3951: int;

const {:extern} {:model_const "theta"} {:sourceFile ".\v24\space.c"} {:sourceLine 4407} unique __ctobpl_const_3987: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4408} unique __ctobpl_const_3989: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4405} unique __ctobpl_const_3977: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4406} unique __ctobpl_const_3981: int;

const {:extern} {:model_const "(* grphaexc_ptr)->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4404} unique __ctobpl_const_3975: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4407} unique __ctobpl_const_3985: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PHI"} {:sourceFile ".\v24\space.c"} {:sourceLine 4408} unique __ctobpl_const_3990: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 4408} unique __ctobpl_const_3991: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4409} unique __ctobpl_const_3992: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4409} unique __ctobpl_const_3993: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4398} unique __ctobpl_const_3972: int;

const {:extern} {:model_const "u"} {:sourceFile ".\v24\space.c"} {:sourceLine 4405} unique __ctobpl_const_3979: int;

const {:extern} {:model_const "(* grphaexc_ptr)->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4409} unique __ctobpl_const_3994: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4408} unique __ctobpl_const_3988: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 4409} unique __ctobpl_const_3995: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4410} unique __ctobpl_const_3996: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4404} unique __ctobpl_const_3974: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4398} unique __ctobpl_const_3971: int;

const {:extern} {:model_const "result.beampha"} {:sourceFile ".\v24\space.c"} {:sourceLine 4384} unique __ctobpl_const_3965: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4396} unique __ctobpl_const_3968: int;

const {:extern} {:model_const "(* grphaexc_ptr)->THETA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4407} unique __ctobpl_const_3986: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4394} unique __ctobpl_const_3967: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4405} unique __ctobpl_const_3976: int;

const {:extern} {:model_const "(* grphaexc_ptr)->U"} {:sourceFile ".\v24\space.c"} {:sourceLine 4405} unique __ctobpl_const_3978: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4406} unique __ctobpl_const_3980: int;

const {:extern} {:model_const "(* grphaexc_ptr)->V"} {:sourceFile ".\v24\space.c"} {:sourceLine 4406} unique __ctobpl_const_3982: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4407} unique __ctobpl_const_3984: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4387} unique __ctobpl_const_3966: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4396} unique __ctobpl_const_3970: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4396} unique __ctobpl_const_3969: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4404} unique __ctobpl_const_3973: int;

const {:extern} {:model_const "v"} {:sourceFile ".\v24\space.c"} {:sourceLine 4406} unique __ctobpl_const_3983: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4308} unique __ctobpl_const_4009: int;

const {:extern} {:model_const "filename"} {:sourceFile ".\v24\space.c"} {:sourceLine 4449} unique __ctobpl_const_4018: int;

const {:extern} {:model_const "NEL"} {:sourceFile ".\v24\space.c"} {:sourceLine 4461} unique __ctobpl_const_4020: int;

const {:extern} {:model_const "NPORTS"} {:sourceFile ".\v24\space.c"} {:sourceLine 4468} unique __ctobpl_const_4023: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4468} unique __ctobpl_const_4024: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4468} unique __ctobpl_const_4025: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4441} unique __ctobpl_const_4014: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->NPORTS"} {:sourceFile ".\v24\space.c"} {:sourceLine 4468} unique __ctobpl_const_4026: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4410} unique __ctobpl_const_3997: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4476} unique __ctobpl_const_4027: int;

const {:extern} {:model_const "IDUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 4433} unique __ctobpl_const_4013: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4446} unique __ctobpl_const_4016: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4446} unique __ctobpl_const_4017: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4422} unique __ctobpl_const_4004: int;

const {:extern} {:model_const "IDUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 4478} unique __ctobpl_const_4028: int;

const {:extern} {:model_const "(* grphaexc_ptr)->PQEXP_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4410} unique __ctobpl_const_3998: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4413} unique __ctobpl_const_4001: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4413} unique __ctobpl_const_3999: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4413} unique __ctobpl_const_4000: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4388} unique __ctobpl_const_4006: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4308} unique __ctobpl_const_4010: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4269} unique __ctobpl_const_4011: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4269} unique __ctobpl_const_4012: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4388} unique __ctobpl_const_4005: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4345} unique __ctobpl_const_4007: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4422} unique __ctobpl_const_4003: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4345} unique __ctobpl_const_4008: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4446} unique __ctobpl_const_4015: int;

const {:extern} {:model_const "filename"} {:sourceFile ".\v24\space.c"} {:sourceLine 4449} unique __ctobpl_const_4019: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4461} unique __ctobpl_const_4021: int;

const {:extern} {:model_const "group_ptr->NUM_OF_NODES"} {:sourceFile ".\v24\space.c"} {:sourceLine 4461} unique __ctobpl_const_4022: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4413} unique __ctobpl_const_4002: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4482} unique __ctobpl_const_4037: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4485} unique __ctobpl_const_4046: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4483} unique __ctobpl_const_4040: int;

const {:extern} {:model_const "geomnode_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4485} unique __ctobpl_const_4047: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4481} unique __ctobpl_const_4034: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4480} unique __ctobpl_const_4030: int;

const {:extern} {:model_const "geomnode_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4483} unique __ctobpl_const_4041: int;

const {:extern} {:model_const "geomnode_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4489} unique __ctobpl_const_4050: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4483} unique __ctobpl_const_4039: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4490} unique __ctobpl_const_4051: int;

const {:extern} {:model_const "IDUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 4478} unique __ctobpl_const_4029: int;

const {:extern} {:model_const "geomnode_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4490} unique __ctobpl_const_4053: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4491} unique __ctobpl_const_4055: int;

const {:extern} {:model_const "geomnode_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4480} unique __ctobpl_const_4032: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4489} unique __ctobpl_const_4049: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4491} unique __ctobpl_const_4054: int;

const {:extern} {:model_const "geomnode_ptr->ZA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4491} unique __ctobpl_const_4056: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4482} unique __ctobpl_const_4036: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4480} unique __ctobpl_const_4031: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4492} unique __ctobpl_const_4058: int;

const {:extern} {:model_const "geomnode_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4481} unique __ctobpl_const_4035: int;

const {:extern} {:model_const "geomnode_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4492} unique __ctobpl_const_4059: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4492} unique __ctobpl_const_4057: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4481} unique __ctobpl_const_4033: int;

const {:extern} {:model_const "geomnode_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4484} unique __ctobpl_const_4044: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4485} unique __ctobpl_const_4045: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4489} unique __ctobpl_const_4048: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4490} unique __ctobpl_const_4052: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4484} unique __ctobpl_const_4042: int;

const {:extern} {:model_const "geomnode_ptr->ZA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4482} unique __ctobpl_const_4038: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4484} unique __ctobpl_const_4043: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4493} unique __ctobpl_const_4060: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4504} unique __ctobpl_const_4082: int;

const {:extern} {:model_const "geomnode_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4517} unique __ctobpl_const_4072: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4497} unique __ctobpl_const_4067: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4505} unique __ctobpl_const_4084: int;

const {:extern} {:model_const "geomport_ptr->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4508} unique __ctobpl_const_4089: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4494} unique __ctobpl_const_4063: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4509} unique __ctobpl_const_4091: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4501} unique __ctobpl_const_4073: int;

const {:extern} {:model_const "geomport_ptr->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 4509} unique __ctobpl_const_4092: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4508} unique __ctobpl_const_4088: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4508} unique __ctobpl_const_4087: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4517} unique __ctobpl_const_4070: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4509} unique __ctobpl_const_4090: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4497} unique __ctobpl_const_4066: int;

const {:extern} {:model_const "geomnode_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4497} unique __ctobpl_const_4068: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4500} unique __ctobpl_const_4069: int;

const {:extern} {:model_const "geomport_ptr->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 4503} unique __ctobpl_const_4078: int;

const {:extern} {:model_const "geomport_ptr->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 4504} unique __ctobpl_const_4083: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4517} unique __ctobpl_const_4071: int;

const {:extern} {:model_const "geomport_ptr->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 4501} unique __ctobpl_const_4075: int;

const {:extern} {:model_const "geomnode_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4494} unique __ctobpl_const_4065: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4494} unique __ctobpl_const_4064: int;

const {:extern} {:model_const "geomnode_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4493} unique __ctobpl_const_4062: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4503} unique __ctobpl_const_4077: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4493} unique __ctobpl_const_4061: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4501} unique __ctobpl_const_4074: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4503} unique __ctobpl_const_4076: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4503} unique __ctobpl_const_4079: int;

const {:extern} {:model_const "geomport_ptr->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4503} unique __ctobpl_const_4080: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4504} unique __ctobpl_const_4081: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4505} unique __ctobpl_const_4085: int;

const {:extern} {:model_const "geomport_ptr->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 4505} unique __ctobpl_const_4086: int;

const {:extern} {:model_const "geomport_ptr->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 4509} unique __ctobpl_const_4094: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4511} unique __ctobpl_const_4098: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4509} unique __ctobpl_const_4093: int;

const {:extern} {:model_const "geomport_ptr->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 4510} unique __ctobpl_const_4097: int;

const {:extern} {:model_const "geomport_ptr->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 4511} unique __ctobpl_const_4100: int;

const {:extern} {:model_const "printf.arg.2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4510} unique __ctobpl_const_4095: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4514} unique __ctobpl_const_4101: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4532} unique __ctobpl_const_4104: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4549} unique __ctobpl_const_4114: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4539} unique __ctobpl_const_4108: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4549} unique __ctobpl_const_4115: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4552} unique __ctobpl_const_4118: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4552} unique __ctobpl_const_4116: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4552} unique __ctobpl_const_4120: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4552} unique __ctobpl_const_4121: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4552} unique __ctobpl_const_4119: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4511} unique __ctobpl_const_4099: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4546} unique __ctobpl_const_4111: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4538} unique __ctobpl_const_4106: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 4552} unique __ctobpl_const_4122: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4552} unique __ctobpl_const_4117: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4510} unique __ctobpl_const_4096: int;

const {:extern} {:model_const "geomport_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4514} unique __ctobpl_const_4103: int;

const {:extern} {:model_const "geomport_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4514} unique __ctobpl_const_4102: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4532} unique __ctobpl_const_4105: int;

const {:extern} {:model_const "pcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 4538} unique __ctobpl_const_4107: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4546} unique __ctobpl_const_4110: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4553} unique __ctobpl_const_4123: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 4546} unique __ctobpl_const_4112: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5492} unique __ctobpl_const_5146: int;

const {:extern} {:model_const "qcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 4539} unique __ctobpl_const_4109: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 4547} unique __ctobpl_const_4113: int;

const {:extern} {:model_const "(* group_ptr)->GRID_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4209} unique __ctobpl_const_3641: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4205} unique __ctobpl_const_3627: int;

const {:extern} {:model_const "grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4209} unique __ctobpl_const_3642: int;

const {:extern} {:model_const "* grid_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4209} unique __ctobpl_const_3643: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4210} unique __ctobpl_const_3644: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4210} unique __ctobpl_const_3645: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4207} unique __ctobpl_const_3634: int;

const {:extern} {:model_const "(* group_ptr)->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4210} unique __ctobpl_const_3646: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4197} unique __ctobpl_const_3621: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4208} unique __ctobpl_const_3636: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4197} unique __ctobpl_const_3619: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4209} unique __ctobpl_const_3640: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4197} unique __ctobpl_const_3620: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4204} unique __ctobpl_const_3623: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4208} unique __ctobpl_const_3637: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 4194} unique __ctobpl_const_3616: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4204} unique __ctobpl_const_3624: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4204} unique __ctobpl_const_3626: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4197} unique __ctobpl_const_3622: int;

const {:extern} {:model_const "(* group_ptr)->NUM_OF_NODES"} {:sourceFile ".\v24\space.c"} {:sourceLine 4205} unique __ctobpl_const_3629: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4196} unique __ctobpl_const_3618: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4194} unique __ctobpl_const_3615: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4204} unique __ctobpl_const_3625: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4207} unique __ctobpl_const_3633: int;

const {:extern} {:model_const "(* group_ptr)->PSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4207} unique __ctobpl_const_3635: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4196} unique __ctobpl_const_3617: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4205} unique __ctobpl_const_3628: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4206} unique __ctobpl_const_3631: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4206} unique __ctobpl_const_3630: int;

const {:extern} {:model_const "(* group_ptr)->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4206} unique __ctobpl_const_3632: int;

const {:extern} {:model_const "(* group_ptr)->QSIZE"} {:sourceFile ".\v24\space.c"} {:sourceLine 4208} unique __ctobpl_const_3638: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4209} unique __ctobpl_const_3639: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4215} unique __ctobpl_const_3670: int;

const {:extern} {:model_const "(* group_ptr)->ADDREM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4213} unique __ctobpl_const_3661: int;

const {:extern} {:model_const "(* group_ptr)->GRAMPEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4211} unique __ctobpl_const_3651: int;

const {:extern} {:model_const "(* group_ptr)->FAIL_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4215} unique __ctobpl_const_3671: int;

const {:extern} {:model_const "err_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4214} unique __ctobpl_const_3667: int;

const {:extern} {:model_const "* grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4211} unique __ctobpl_const_3653: int;

const {:extern} {:model_const "(* group_ptr)->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4212} unique __ctobpl_const_3656: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4214} unique __ctobpl_const_3665: int;

const {:extern} {:model_const "fail_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4215} unique __ctobpl_const_3672: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4217} unique __ctobpl_const_3674: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4211} unique __ctobpl_const_3650: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4217} unique __ctobpl_const_3675: int;

const {:extern} {:model_const "(* group_ptr)->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4217} unique __ctobpl_const_3676: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4218} unique __ctobpl_const_3677: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4210} unique __ctobpl_const_3648: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4218} unique __ctobpl_const_3678: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4210} unique __ctobpl_const_3647: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4211} unique __ctobpl_const_3652: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4213} unique __ctobpl_const_3660: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4213} unique __ctobpl_const_3663: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4212} unique __ctobpl_const_3657: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4214} unique __ctobpl_const_3664: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4215} unique __ctobpl_const_3669: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4211} unique __ctobpl_const_3649: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4213} unique __ctobpl_const_3662: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4213} unique __ctobpl_const_3659: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4212} unique __ctobpl_const_3654: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4212} unique __ctobpl_const_3655: int;

const {:extern} {:model_const "* grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4212} unique __ctobpl_const_3658: int;

const {:extern} {:model_const "(* group_ptr)->ERR_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 4214} unique __ctobpl_const_3666: int;

const {:extern} {:model_const "* err_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4214} unique __ctobpl_const_3668: int;

const {:extern} {:model_const "* fail_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4215} unique __ctobpl_const_3673: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4176} unique __ctobpl_const_3695: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4166} unique __ctobpl_const_3699: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4188} unique __ctobpl_const_3691: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 4188} unique __ctobpl_const_3687: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4188} unique __ctobpl_const_3689: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 4188} unique __ctobpl_const_3693: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4166} unique __ctobpl_const_3698: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4166} unique __ctobpl_const_3701: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4176} unique __ctobpl_const_3696: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4129} unique __ctobpl_const_3706: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4129} unique __ctobpl_const_3707: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4166} unique __ctobpl_const_3700: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4129} unique __ctobpl_const_3708: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4129} unique __ctobpl_const_3709: int;

const {:extern} {:model_const "* group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4219} unique __ctobpl_const_3681: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4219} unique __ctobpl_const_3680: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4223} unique __ctobpl_const_3684: int;

const {:extern} {:model_const "(* group_ptr)->BUILT"} {:sourceFile ".\v24\space.c"} {:sourceLine 4218} unique __ctobpl_const_3679: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4176} unique __ctobpl_const_3697: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4188} unique __ctobpl_const_3688: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4136} unique __ctobpl_const_3703: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4136} unique __ctobpl_const_3704: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 4223} unique __ctobpl_const_3683: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4136} unique __ctobpl_const_3705: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4136} unique __ctobpl_const_3702: int;

const {:extern} {:model_const "(* group_ptr)->SUPER_GROUP_PTR[0]"} {:sourceFile ".\v24\space.c"} {:sourceLine 4219} unique __ctobpl_const_3682: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4223} unique __ctobpl_const_3685: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4223} unique __ctobpl_const_3686: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 4188} unique __ctobpl_const_3690: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4188} unique __ctobpl_const_3692: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 4176} unique __ctobpl_const_3694: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 6518} unique __ctobpl_const_6203: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6526} unique __ctobpl_const_6222: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 6527} unique __ctobpl_const_6226: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 6527} unique __ctobpl_const_6224: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6528} unique __ctobpl_const_6227: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6527} unique __ctobpl_const_6225: int;

const {:extern} {:model_const "* qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6528} unique __ctobpl_const_6228: int;

const {:extern} {:model_const "* pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6516} unique __ctobpl_const_6201: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 6519} unique __ctobpl_const_6206: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6523} unique __ctobpl_const_6216: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 6526} unique __ctobpl_const_6223: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 6518} unique __ctobpl_const_6205: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 6523} unique __ctobpl_const_6217: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6524} unique __ctobpl_const_6220: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 6519} unique __ctobpl_const_6208: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6528} unique __ctobpl_const_6229: int;

const {:extern} {:model_const "* qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6524} unique __ctobpl_const_6219: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6531} unique __ctobpl_const_6230: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6531} unique __ctobpl_const_6231: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 6523} unique __ctobpl_const_6215: int;

const {:extern} {:model_const "* pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6520} unique __ctobpl_const_6210: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6520} unique __ctobpl_const_6209: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6519} unique __ctobpl_const_6207: int;

const {:extern} {:model_const "app_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 6522} unique __ctobpl_const_6213: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 6526} unique __ctobpl_const_6221: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6516} unique __ctobpl_const_6202: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6518} unique __ctobpl_const_6204: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6520} unique __ctobpl_const_6211: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6516} unique __ctobpl_const_6200: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6522} unique __ctobpl_const_6212: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6524} unique __ctobpl_const_6218: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 6522} unique __ctobpl_const_6214: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6579} unique __ctobpl_const_6255: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6557} unique __ctobpl_const_6243: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 6561} unique __ctobpl_const_6249: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6553} unique __ctobpl_const_6235: int;

const {:extern} {:model_const "putchar.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6561} unique __ctobpl_const_6251: int;

const {:extern} {:model_const "p->info"} {:sourceFile ".\v24\space.c"} {:sourceLine 6555} unique __ctobpl_const_6241: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 6545} unique __ctobpl_const_6233: int;

const {:extern} {:model_const "p->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6554} unique __ctobpl_const_6238: int;

const {:extern} {:model_const "line_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 6557} unique __ctobpl_const_6242: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6579} unique __ctobpl_const_6256: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6587} unique __ctobpl_const_6258: int;

const {:extern} {:model_const "firstel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6553} unique __ctobpl_const_6236: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6555} unique __ctobpl_const_6240: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6558} unique __ctobpl_const_6246: int;

const {:extern} {:model_const "p->LINE_NUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 6558} unique __ctobpl_const_6247: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6587} unique __ctobpl_const_6259: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6588} unique __ctobpl_const_6260: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6591} unique __ctobpl_const_6261: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6591} unique __ctobpl_const_6263: int;

const {:extern} {:model_const "app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6531} unique __ctobpl_const_6232: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6554} unique __ctobpl_const_6237: int;

const {:extern} {:model_const "p->LINE_NUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 6557} unique __ctobpl_const_6244: int;

const {:extern} {:model_const "ch"} {:sourceFile ".\v24\space.c"} {:sourceLine 6555} unique __ctobpl_const_6239: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6562} unique __ctobpl_const_6252: int;

const {:extern} {:model_const "putchar.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6561} unique __ctobpl_const_6250: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6587} unique __ctobpl_const_6257: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6591} unique __ctobpl_const_6262: int;

const {:extern} {:model_const "line_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 6558} unique __ctobpl_const_6245: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6562} unique __ctobpl_const_6253: int;

const {:extern} {:model_const "p->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6562} unique __ctobpl_const_6254: int;

const {:extern} {:model_const "line_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 6546} unique __ctobpl_const_6234: int;

const {:extern} {:model_const "putchar.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6561} unique __ctobpl_const_6248: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6629} unique __ctobpl_const_6293: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6629} unique __ctobpl_const_6294: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6599} unique __ctobpl_const_6288: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6591} unique __ctobpl_const_6267: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6275: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6280: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6621} unique __ctobpl_const_6290: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6276: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6629} unique __ctobpl_const_6292: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6630} unique __ctobpl_const_6295: int;

const {:extern} {:model_const "psc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6272: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6270: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6592} unique __ctobpl_const_6268: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6274: int;

const {:extern} {:model_const "psc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6277: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6591} unique __ctobpl_const_6266: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6591} unique __ctobpl_const_6265: int;

const {:extern} {:model_const "psc_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6278: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6605} unique __ctobpl_const_6283: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6605} unique __ctobpl_const_6284: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6605} unique __ctobpl_const_6285: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6269: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6279: int;

const {:extern} {:model_const "psc_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6273: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6597} unique __ctobpl_const_6271: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6598} unique __ctobpl_const_6281: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6599} unique __ctobpl_const_6286: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6599} unique __ctobpl_const_6287: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6599} unique __ctobpl_const_6289: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6591} unique __ctobpl_const_6264: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6605} unique __ctobpl_const_6282: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6621} unique __ctobpl_const_6291: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6633} unique __ctobpl_const_6300: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6633} unique __ctobpl_const_6302: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6311: int;

const {:extern} {:model_const "psh_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6312: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6641} unique __ctobpl_const_6321: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6634} unique __ctobpl_const_6303: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6640} unique __ctobpl_const_6316: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7870} unique __ctobpl_const_7701: int;

const {:extern} {:model_const "line_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 6659} unique __ctobpl_const_6325: int;

const {:extern} {:model_const "CR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6660} unique __ctobpl_const_6326: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6647} unique __ctobpl_const_6320: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6641} unique __ctobpl_const_6324: int;

const {:extern} {:model_const "psh_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6307: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6633} unique __ctobpl_const_6301: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6647} unique __ctobpl_const_6318: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6633} unique __ctobpl_const_6299: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6304: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6314: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6641} unique __ctobpl_const_6322: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6633} unique __ctobpl_const_6297: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6305: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6633} unique __ctobpl_const_6296: int;

const {:extern} {:model_const "psh_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6313: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6647} unique __ctobpl_const_6319: int;

const {:extern} {:model_const "psh_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6308: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6306: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6633} unique __ctobpl_const_6298: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6647} unique __ctobpl_const_6317: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6309: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6641} unique __ctobpl_const_6323: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6315: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6639} unique __ctobpl_const_6310: int;

const {:extern} {:model_const "* firstel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6667} unique __ctobpl_const_6328: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6687} unique __ctobpl_const_6342: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6679} unique __ctobpl_const_6336: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6699} unique __ctobpl_const_6350: int;

const {:extern} {:model_const "lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6668} unique __ctobpl_const_6329: int;

const {:extern} {:model_const "result.fopen"} {:sourceFile ".\v24\space.c"} {:sourceLine 6673} unique __ctobpl_const_6334: int;

const {:extern} {:model_const "filename"} {:sourceFile ".\v24\space.c"} {:sourceLine 6671} unique __ctobpl_const_6332: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6673} unique __ctobpl_const_6335: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6679} unique __ctobpl_const_6338: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6681} unique __ctobpl_const_6340: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6700} unique __ctobpl_const_6353: int;

const {:extern} {:model_const "p->LINE_NUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 6700} unique __ctobpl_const_6354: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6679} unique __ctobpl_const_6337: int;

const {:extern} {:model_const "isspace.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6687} unique __ctobpl_const_6341: int;

const {:extern} {:model_const "isspace.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6687} unique __ctobpl_const_6344: int;

const {:extern} {:model_const "* lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6668} unique __ctobpl_const_6330: int;

const {:extern} {:model_const "isspace.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6687} unique __ctobpl_const_6343: int;

const {:extern} {:model_const "firstel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6667} unique __ctobpl_const_6327: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6693} unique __ctobpl_const_6347: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6693} unique __ctobpl_const_6348: int;

const {:extern} {:model_const "filename"} {:sourceFile ".\v24\space.c"} {:sourceLine 6671} unique __ctobpl_const_6331: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6673} unique __ctobpl_const_6333: int;

const {:extern} {:model_const "result.isspace"} {:sourceFile ".\v24\space.c"} {:sourceLine 6687} unique __ctobpl_const_6345: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6687} unique __ctobpl_const_6346: int;

const {:extern} {:model_const "p->info"} {:sourceFile ".\v24\space.c"} {:sourceLine 6699} unique __ctobpl_const_6351: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6699} unique __ctobpl_const_6352: int;

const {:extern} {:model_const "result.getc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6679} unique __ctobpl_const_6339: int;

const {:extern} {:model_const "line_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 6700} unique __ctobpl_const_6355: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6701} unique __ctobpl_const_6356: int;

const {:extern} {:model_const "p->PREV"} {:sourceFile ".\v24\space.c"} {:sourceLine 6701} unique __ctobpl_const_6357: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6702} unique __ctobpl_const_6358: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6694} unique __ctobpl_const_6349: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6712} unique __ctobpl_const_6378: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6704} unique __ctobpl_const_6362: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6751} unique __ctobpl_const_6371: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6712} unique __ctobpl_const_6374: int;

const {:extern} {:model_const "isspace.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6712} unique __ctobpl_const_6373: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6732} unique __ctobpl_const_6379: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6733} unique __ctobpl_const_6381: int;

const {:extern} {:model_const "isspace.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6712} unique __ctobpl_const_6375: int;

const {:extern} {:model_const "* lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6705} unique __ctobpl_const_6364: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6705} unique __ctobpl_const_6365: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6708} unique __ctobpl_const_6368: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6732} unique __ctobpl_const_6380: int;

const {:extern} {:model_const "p->LINE_NUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 6739} unique __ctobpl_const_6386: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6741} unique __ctobpl_const_6388: int;

const {:extern} {:model_const "p->PREV"} {:sourceFile ".\v24\space.c"} {:sourceLine 6741} unique __ctobpl_const_6389: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6708} unique __ctobpl_const_6366: int;

const {:extern} {:model_const "lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6741} unique __ctobpl_const_6390: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6738} unique __ctobpl_const_6382: int;

const {:extern} {:model_const "p->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6702} unique __ctobpl_const_6359: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6739} unique __ctobpl_const_6385: int;

const {:extern} {:model_const "line_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 6739} unique __ctobpl_const_6387: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6738} unique __ctobpl_const_6384: int;

const {:extern} {:model_const "lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6705} unique __ctobpl_const_6363: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6751} unique __ctobpl_const_6372: int;

const {:extern} {:model_const "result.getc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6708} unique __ctobpl_const_6369: int;

const {:extern} {:model_const "result.isspace"} {:sourceFile ".\v24\space.c"} {:sourceLine 6712} unique __ctobpl_const_6377: int;

const {:extern} {:model_const "firstel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6704} unique __ctobpl_const_6360: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6708} unique __ctobpl_const_6367: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6711} unique __ctobpl_const_6370: int;

const {:extern} {:model_const "isspace.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6712} unique __ctobpl_const_6376: int;

const {:extern} {:model_const "p->info"} {:sourceFile ".\v24\space.c"} {:sourceLine 6738} unique __ctobpl_const_6383: int;

const {:extern} {:model_const "* firstel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6704} unique __ctobpl_const_6361: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6716} unique __ctobpl_const_6410: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6742} unique __ctobpl_const_6392: int;

const {:extern} {:model_const "* lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6743} unique __ctobpl_const_6395: int;

const {:extern} {:model_const "* lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6744} unique __ctobpl_const_6399: int;

const {:extern} {:model_const "result.getc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6746} unique __ctobpl_const_6404: int;

const {:extern} {:model_const "result.getc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6716} unique __ctobpl_const_6411: int;

const {:extern} {:model_const "isspace.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6717} unique __ctobpl_const_6414: int;

const {:extern} {:model_const "line_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 6715} unique __ctobpl_const_6407: int;

const {:extern} {:model_const "CR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6714} unique __ctobpl_const_6406: int;

const {:extern} {:model_const "result.isspace"} {:sourceFile ".\v24\space.c"} {:sourceLine 6717} unique __ctobpl_const_6416: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6717} unique __ctobpl_const_6417: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6743} unique __ctobpl_const_6397: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6744} unique __ctobpl_const_6400: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6716} unique __ctobpl_const_6409: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6719} unique __ctobpl_const_6419: int;

const {:extern} {:model_const "isspace.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6717} unique __ctobpl_const_6412: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6720} unique __ctobpl_const_6420: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6724} unique __ctobpl_const_6421: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6717} unique __ctobpl_const_6413: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6746} unique __ctobpl_const_6402: int;

const {:extern} {:model_const "lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6744} unique __ctobpl_const_6398: int;

const {:extern} {:model_const "* lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6741} unique __ctobpl_const_6391: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6714} unique __ctobpl_const_6405: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6719} unique __ctobpl_const_6418: int;

const {:extern} {:model_const "lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6743} unique __ctobpl_const_6394: int;

const {:extern} {:model_const "isspace.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6717} unique __ctobpl_const_6415: int;

const {:extern} {:model_const "p->info"} {:sourceFile ".\v24\space.c"} {:sourceLine 6724} unique __ctobpl_const_6422: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6716} unique __ctobpl_const_6408: int;

const {:extern} {:model_const "p->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6742} unique __ctobpl_const_6393: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6746} unique __ctobpl_const_6401: int;

const {:extern} {:model_const "(* lastel)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6743} unique __ctobpl_const_6396: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6746} unique __ctobpl_const_6403: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6771} unique __ctobpl_const_6452: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6772} unique __ctobpl_const_6454: int;

const {:extern} {:model_const "lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6728} unique __ctobpl_const_6432: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6770} unique __ctobpl_const_6451: int;

const {:extern} {:model_const "line_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 6725} unique __ctobpl_const_6425: int;

const {:extern} {:model_const "* lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6729} unique __ctobpl_const_6437: int;

const {:extern} {:model_const "p->LINE_NUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 6725} unique __ctobpl_const_6424: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6771} unique __ctobpl_const_6453: int;

const {:extern} {:model_const "lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6726} unique __ctobpl_const_6428: int;

const {:extern} {:model_const "(* lastel)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6728} unique __ctobpl_const_6434: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6729} unique __ctobpl_const_6438: int;

const {:extern} {:model_const "result.getc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6690} unique __ctobpl_const_6445: int;

const {:extern} {:model_const "p->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6727} unique __ctobpl_const_6431: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6725} unique __ctobpl_const_6423: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6688} unique __ctobpl_const_6439: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6690} unique __ctobpl_const_6442: int;

const {:extern} {:model_const "lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6729} unique __ctobpl_const_6436: int;

const {:extern} {:model_const "CR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6688} unique __ctobpl_const_6440: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6728} unique __ctobpl_const_6435: int;

const {:extern} {:model_const "line_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 6689} unique __ctobpl_const_6441: int;

const {:extern} {:model_const "f"} {:sourceFile ".\v24\space.c"} {:sourceLine 6690} unique __ctobpl_const_6443: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 6690} unique __ctobpl_const_6444: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6763} unique __ctobpl_const_6446: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6763} unique __ctobpl_const_6447: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6767} unique __ctobpl_const_6448: int;

const {:extern} {:model_const "p->PREV"} {:sourceFile ".\v24\space.c"} {:sourceLine 6726} unique __ctobpl_const_6427: int;

const {:extern} {:model_const "* lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6726} unique __ctobpl_const_6429: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6767} unique __ctobpl_const_6450: int;

const {:extern} {:model_const "* lastel"} {:sourceFile ".\v24\space.c"} {:sourceLine 6728} unique __ctobpl_const_6433: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6726} unique __ctobpl_const_6426: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 6727} unique __ctobpl_const_6430: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6767} unique __ctobpl_const_6449: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6776} unique __ctobpl_const_6463: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6805} unique __ctobpl_const_6485: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6467: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6468: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6476: int;

const {:extern} {:model_const "result.doubstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6479: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6466: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6805} unique __ctobpl_const_6484: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6478: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6773} unique __ctobpl_const_6456: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6776} unique __ctobpl_const_6464: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6773} unique __ctobpl_const_6457: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6776} unique __ctobpl_const_6460: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6776} unique __ctobpl_const_6461: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6772} unique __ctobpl_const_6455: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6777} unique __ctobpl_const_6465: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6471: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6474: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6475: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6477: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6793} unique __ctobpl_const_6481: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6783} unique __ctobpl_const_6480: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6805} unique __ctobpl_const_6482: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6776} unique __ctobpl_const_6458: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6776} unique __ctobpl_const_6459: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6472: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6469: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6473: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6805} unique __ctobpl_const_6483: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6776} unique __ctobpl_const_6462: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6782} unique __ctobpl_const_6470: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6794} unique __ctobpl_const_6486: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6794} unique __ctobpl_const_6487: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6796} unique __ctobpl_const_6492: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6797} unique __ctobpl_const_6494: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6788} unique __ctobpl_const_6505: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6819} unique __ctobpl_const_6508: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6819} unique __ctobpl_const_6509: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6798} unique __ctobpl_const_6497: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6823} unique __ctobpl_const_6510: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6823} unique __ctobpl_const_6511: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6823} unique __ctobpl_const_6512: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6826} unique __ctobpl_const_6513: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6829} unique __ctobpl_const_6514: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6794} unique __ctobpl_const_6491: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6794} unique __ctobpl_const_6490: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6829} unique __ctobpl_const_6516: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6829} unique __ctobpl_const_6517: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6784} unique __ctobpl_const_6498: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6785} unique __ctobpl_const_6501: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6786} unique __ctobpl_const_6502: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6798} unique __ctobpl_const_6496: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6788} unique __ctobpl_const_6504: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6794} unique __ctobpl_const_6488: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6788} unique __ctobpl_const_6506: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6797} unique __ctobpl_const_6495: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6829} unique __ctobpl_const_6518: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6829} unique __ctobpl_const_6515: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6794} unique __ctobpl_const_6489: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6788} unique __ctobpl_const_6507: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6796} unique __ctobpl_const_6493: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6785} unique __ctobpl_const_6500: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6786} unique __ctobpl_const_6503: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6784} unique __ctobpl_const_6499: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6550: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6835} unique __ctobpl_const_6528: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6531: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6533: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6847} unique __ctobpl_const_6545: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6836} unique __ctobpl_const_6529: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6534: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6537: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6835} unique __ctobpl_const_6524: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6847} unique __ctobpl_const_6546: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6835} unique __ctobpl_const_6526: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6532: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6829} unique __ctobpl_const_6519: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6530: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6847} unique __ctobpl_const_6547: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6835} unique __ctobpl_const_6527: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6848} unique __ctobpl_const_6548: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6538: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6840} unique __ctobpl_const_6540: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6835} unique __ctobpl_const_6523: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6536: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6835} unique __ctobpl_const_6522: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6829} unique __ctobpl_const_6520: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6830} unique __ctobpl_const_6521: int;

const {:extern} {:model_const "result.Get1Real"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6539: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6839} unique __ctobpl_const_6535: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6847} unique __ctobpl_const_6541: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6835} unique __ctobpl_const_6525: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6847} unique __ctobpl_const_6542: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6847} unique __ctobpl_const_6543: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6847} unique __ctobpl_const_6544: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6549: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6841} unique __ctobpl_const_6582: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6867} unique __ctobpl_const_6570: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6853} unique __ctobpl_const_6573: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6557: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6859} unique __ctobpl_const_6562: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6852} unique __ctobpl_const_6559: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6555: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6553: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6859} unique __ctobpl_const_6560: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6859} unique __ctobpl_const_6564: int;

const {:extern} {:model_const "pqdim_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6859} unique __ctobpl_const_6563: int;

const {:extern} {:model_const "result.lenunit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6859} unique __ctobpl_const_6565: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6556: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6867} unique __ctobpl_const_6569: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6867} unique __ctobpl_const_6572: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6853} unique __ctobpl_const_6574: int;

const {:extern} {:model_const "result.Get1Real"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6558: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6552: int;

const {:extern} {:model_const "pqdim_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6864} unique __ctobpl_const_6567: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6853} unique __ctobpl_const_6576: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6867} unique __ctobpl_const_6571: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6853} unique __ctobpl_const_6577: int;

const {:extern} {:model_const "* pqdim_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6864} unique __ctobpl_const_6568: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6841} unique __ctobpl_const_6579: int;

const {:extern} {:model_const "pqdim_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6859} unique __ctobpl_const_6561: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6863} unique __ctobpl_const_6566: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6853} unique __ctobpl_const_6575: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6841} unique __ctobpl_const_6580: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6551: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6841} unique __ctobpl_const_6581: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6851} unique __ctobpl_const_6554: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6853} unique __ctobpl_const_6578: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6890} unique __ctobpl_const_6591: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6882} unique __ctobpl_const_6588: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6894} unique __ctobpl_const_6594: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6894} unique __ctobpl_const_6595: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6890} unique __ctobpl_const_6590: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6894} unique __ctobpl_const_6597: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6894} unique __ctobpl_const_6598: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6894} unique __ctobpl_const_6600: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6890} unique __ctobpl_const_6592: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6603: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6602: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6604: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6605: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6607: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6608: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6879} unique __ctobpl_const_6585: int;

const {:extern} {:model_const "no_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6882} unique __ctobpl_const_6587: int;

const {:extern} {:model_const "no_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6882} unique __ctobpl_const_6589: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6609: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6841} unique __ctobpl_const_6583: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6610: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6894} unique __ctobpl_const_6599: int;

const {:extern} {:model_const "result.nodedef"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6611: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6908} unique __ctobpl_const_6612: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6894} unique __ctobpl_const_6596: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6895} unique __ctobpl_const_6601: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6905} unique __ctobpl_const_6606: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6915} unique __ctobpl_const_6613: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6917} unique __ctobpl_const_6614: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6879} unique __ctobpl_const_6586: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6891} unique __ctobpl_const_6593: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6841} unique __ctobpl_const_6584: int;

const {:extern} {:model_const "(* addrem_ptr)->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6927} unique __ctobpl_const_6631: int;

const {:extern} {:model_const "(* addrem_ptr)->ADDREM_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 6925} unique __ctobpl_const_6625: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6926} unique __ctobpl_const_6626: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6928} unique __ctobpl_const_6635: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6927} unique __ctobpl_const_6629: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6930} unique __ctobpl_const_6638: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6930} unique __ctobpl_const_6639: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6927} unique __ctobpl_const_6632: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6930} unique __ctobpl_const_6640: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6643: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6920} unique __ctobpl_const_6619: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6930} unique __ctobpl_const_6637: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6644: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6917} unique __ctobpl_const_6615: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6925} unique __ctobpl_const_6624: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6927} unique __ctobpl_const_6630: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6642: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6919} unique __ctobpl_const_6618: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6920} unique __ctobpl_const_6622: int;

const {:extern} {:model_const "(* addrem_ptr)->BLOCK_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 6926} unique __ctobpl_const_6628: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6927} unique __ctobpl_const_6633: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6920} unique __ctobpl_const_6620: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6926} unique __ctobpl_const_6627: int;

const {:extern} {:model_const "(* addrem_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6928} unique __ctobpl_const_6636: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6641: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6645: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6925} unique __ctobpl_const_6623: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6646: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6928} unique __ctobpl_const_6634: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6919} unique __ctobpl_const_6617: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6920} unique __ctobpl_const_6621: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6917} unique __ctobpl_const_6616: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6960} unique __ctobpl_const_6669: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6959} unique __ctobpl_const_6665: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6647: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6953} unique __ctobpl_const_6658: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6961} unique __ctobpl_const_6673: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6948} unique __ctobpl_const_6652: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6963} unique __ctobpl_const_6676: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6952} unique __ctobpl_const_6656: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6953} unique __ctobpl_const_6660: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6959} unique __ctobpl_const_6666: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6953} unique __ctobpl_const_6661: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6950} unique __ctobpl_const_6653: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6953} unique __ctobpl_const_6659: int;

const {:extern} {:model_const "(* addrem_ptr)->BLOCK_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 6959} unique __ctobpl_const_6667: int;

const {:extern} {:model_const "result.blockdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6650: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6648: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6960} unique __ctobpl_const_6668: int;

const {:extern} {:model_const "(* addrem_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6961} unique __ctobpl_const_6675: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6963} unique __ctobpl_const_6677: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6958} unique __ctobpl_const_6663: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6952} unique __ctobpl_const_6657: int;

const {:extern} {:model_const "(* addrem_ptr)->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6960} unique __ctobpl_const_6670: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6960} unique __ctobpl_const_6671: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6941} unique __ctobpl_const_6651: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6960} unique __ctobpl_const_6672: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6961} unique __ctobpl_const_6674: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6963} unique __ctobpl_const_6678: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6950} unique __ctobpl_const_6655: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6939} unique __ctobpl_const_6649: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6958} unique __ctobpl_const_6662: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6950} unique __ctobpl_const_6654: int;

const {:extern} {:model_const "(* addrem_ptr)->ADDREM_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 6958} unique __ctobpl_const_6664: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6181: int;

const {:extern} {:model_const "* pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6186: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6191: int;

const {:extern} {:model_const "* pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6192: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 6503} unique __ctobpl_const_6174: int;

const {:extern} {:model_const "gnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6177: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6178: int;

const {:extern} {:model_const "* qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6182: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6185: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6180: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6480} unique __ctobpl_const_6171: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 6503} unique __ctobpl_const_6172: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 6503} unique __ctobpl_const_6173: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 6503} unique __ctobpl_const_6175: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6963} unique __ctobpl_const_6679: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6176: int;

const {:extern} {:model_const "* qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6179: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6189: int;

const {:extern} {:model_const "* pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6190: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6512} unique __ctobpl_const_6193: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 6514} unique __ctobpl_const_6195: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 6514} unique __ctobpl_const_6196: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 6515} unique __ctobpl_const_6197: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6515} unique __ctobpl_const_6198: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6480} unique __ctobpl_const_6170: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6183: int;

const {:extern} {:model_const "app_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 6515} unique __ctobpl_const_6199: int;

const {:extern} {:model_const "* qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6184: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6187: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6514} unique __ctobpl_const_6194: int;

const {:extern} {:model_const "* qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6509} unique __ctobpl_const_6188: int;

const {:extern} {:model_const "result.linpol"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5715: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5710: int;

const {:extern} {:model_const "* direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6033} unique __ctobpl_const_5693: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6033} unique __ctobpl_const_5692: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6036} unique __ctobpl_const_5700: int;

const {:extern} {:model_const "* polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6042} unique __ctobpl_const_5703: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6037} unique __ctobpl_const_5701: int;

const {:extern} {:model_const "* phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6032} unique __ctobpl_const_5691: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5714: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6036} unique __ctobpl_const_5695: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5705: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5706: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5713: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5712: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5704: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6032} unique __ctobpl_const_5690: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5711: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6045} unique __ctobpl_const_5716: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6036} unique __ctobpl_const_5696: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6036} unique __ctobpl_const_5697: int;

const {:extern} {:model_const "* phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6031} unique __ctobpl_const_5689: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5708: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5707: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6043} unique __ctobpl_const_5709: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6046} unique __ctobpl_const_5717: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6036} unique __ctobpl_const_5699: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6046} unique __ctobpl_const_5719: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6036} unique __ctobpl_const_5694: int;

const {:extern} {:model_const "polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6042} unique __ctobpl_const_5702: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6046} unique __ctobpl_const_5718: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6046} unique __ctobpl_const_5720: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6036} unique __ctobpl_const_5698: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5731: int;

const {:extern} {:model_const "result.circpol"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5733: int;

const {:extern} {:model_const "* polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6058} unique __ctobpl_const_5723: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6050} unique __ctobpl_const_5721: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5727: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5732: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6062} unique __ctobpl_const_5738: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6085} unique __ctobpl_const_5740: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6089} unique __ctobpl_const_5743: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6089} unique __ctobpl_const_5744: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6062} unique __ctobpl_const_5737: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6061} unique __ctobpl_const_5734: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6066} unique __ctobpl_const_5739: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5725: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5728: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6062} unique __ctobpl_const_5735: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6085} unique __ctobpl_const_5741: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6089} unique __ctobpl_const_5745: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6095} unique __ctobpl_const_5748: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6094} unique __ctobpl_const_5746: int;

const {:extern} {:model_const "qcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 6095} unique __ctobpl_const_5749: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5726: int;

const {:extern} {:model_const "pcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 6094} unique __ctobpl_const_5747: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6102} unique __ctobpl_const_5750: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6102} unique __ctobpl_const_5751: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5724: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5729: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 6086} unique __ctobpl_const_5742: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6102} unique __ctobpl_const_5752: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6062} unique __ctobpl_const_5736: int;

const {:extern} {:model_const "polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6058} unique __ctobpl_const_5722: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6059} unique __ctobpl_const_5730: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6103} unique __ctobpl_const_5753: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6124} unique __ctobpl_const_5776: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6108} unique __ctobpl_const_5758: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6108} unique __ctobpl_const_5762: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5771: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 6125} unique __ctobpl_const_5777: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6127} unique __ctobpl_const_5780: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 6125} unique __ctobpl_const_5778: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6129} unique __ctobpl_const_5781: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6130} unique __ctobpl_const_5782: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6130} unique __ctobpl_const_5783: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6127} unique __ctobpl_const_5779: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6108} unique __ctobpl_const_5761: int;

const {:extern} {:model_const "result.nodecoor"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5775: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6130} unique __ctobpl_const_5784: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5764: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5766: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6105} unique __ctobpl_const_5754: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5767: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5769: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6108} unique __ctobpl_const_5759: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6108} unique __ctobpl_const_5757: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5765: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6108} unique __ctobpl_const_5756: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5770: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5774: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6105} unique __ctobpl_const_5755: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6108} unique __ctobpl_const_5760: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6109} unique __ctobpl_const_5763: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5772: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5773: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6122} unique __ctobpl_const_5768: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6136} unique __ctobpl_const_5789: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6137} unique __ctobpl_const_5792: int;

const {:extern} {:model_const "app_ptr->PCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 6135} unique __ctobpl_const_5787: int;

const {:extern} {:model_const "app_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 6138} unique __ctobpl_const_5795: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6144} unique __ctobpl_const_5802: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6148} unique __ctobpl_const_5807: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6143} unique __ctobpl_const_5800: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6154} unique __ctobpl_const_5814: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6145} unique __ctobpl_const_5804: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6148} unique __ctobpl_const_5808: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6145} unique __ctobpl_const_5803: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6146} unique __ctobpl_const_5805: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6150} unique __ctobpl_const_5812: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6150} unique __ctobpl_const_5813: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6135} unique __ctobpl_const_5786: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 6161} unique __ctobpl_const_5815: int;

const {:extern} {:model_const "pcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 6135} unique __ctobpl_const_5788: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6149} unique __ctobpl_const_5811: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6148} unique __ctobpl_const_5809: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6169} unique __ctobpl_const_5816: int;

const {:extern} {:model_const "app_ptr->QCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 6136} unique __ctobpl_const_5790: int;

const {:extern} {:model_const "app_ptr->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 6139} unique __ctobpl_const_5797: int;

const {:extern} {:model_const "qcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 6136} unique __ctobpl_const_5791: int;

const {:extern} {:model_const "app_ptr->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 6137} unique __ctobpl_const_5793: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6140} unique __ctobpl_const_5798: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6139} unique __ctobpl_const_5796: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6138} unique __ctobpl_const_5794: int;

const {:extern} {:model_const "app_ptr->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6140} unique __ctobpl_const_5799: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6130} unique __ctobpl_const_5785: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6144} unique __ctobpl_const_5801: int;

const {:extern} {:model_const "app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6146} unique __ctobpl_const_5806: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6149} unique __ctobpl_const_5810: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6162} unique __ctobpl_const_5824: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6195} unique __ctobpl_const_5839: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6163} unique __ctobpl_const_5826: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6195} unique __ctobpl_const_5838: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6170} unique __ctobpl_const_5820: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6169} unique __ctobpl_const_5818: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6163} unique __ctobpl_const_5828: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6192} unique __ctobpl_const_5834: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6195} unique __ctobpl_const_5840: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6170} unique __ctobpl_const_5822: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6162} unique __ctobpl_const_5823: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6163} unique __ctobpl_const_5825: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6195} unique __ctobpl_const_5841: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6183} unique __ctobpl_const_5829: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5843: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6163} unique __ctobpl_const_5827: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6170} unique __ctobpl_const_5819: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6191} unique __ctobpl_const_5833: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6195} unique __ctobpl_const_5835: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5846: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6183} unique __ctobpl_const_5830: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6191} unique __ctobpl_const_5832: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6195} unique __ctobpl_const_5836: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6196} unique __ctobpl_const_5842: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5847: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5845: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6169} unique __ctobpl_const_5817: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5844: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6195} unique __ctobpl_const_5837: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6191} unique __ctobpl_const_5831: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5848: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6170} unique __ctobpl_const_5821: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6203} unique __ctobpl_const_5860: int;

const {:extern} {:model_const "psc_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6229} unique __ctobpl_const_5872: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6209} unique __ctobpl_const_5856: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6209} unique __ctobpl_const_5857: int;

const {:extern} {:model_const "psh_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6231} unique __ctobpl_const_5876: int;

const {:extern} {:model_const "ppa"} {:sourceFile ".\v24\space.c"} {:sourceLine 6232} unique __ctobpl_const_5879: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5852: int;

const {:extern} {:model_const "psh_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6230} unique __ctobpl_const_5874: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6203} unique __ctobpl_const_5861: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6227} unique __ctobpl_const_5868: int;

const {:extern} {:model_const "psc_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6229} unique __ctobpl_const_5873: int;

const {:extern} {:model_const "psh"} {:sourceFile ".\v24\space.c"} {:sourceLine 6230} unique __ctobpl_const_5875: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5853: int;

const {:extern} {:model_const "result.ampval"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5854: int;

const {:extern} {:model_const "psc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6228} unique __ctobpl_const_5871: int;

const {:extern} {:model_const "ppa_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6232} unique __ctobpl_const_5878: int;

const {:extern} {:model_const "ppa_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6233} unique __ctobpl_const_5880: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6209} unique __ctobpl_const_5858: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6203} unique __ctobpl_const_5862: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6220} unique __ctobpl_const_5864: int;

const {:extern} {:model_const "amp"} {:sourceFile ".\v24\space.c"} {:sourceLine 6226} unique __ctobpl_const_5867: int;

const {:extern} {:model_const "psc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6228} unique __ctobpl_const_5870: int;

const {:extern} {:model_const "psh_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6231} unique __ctobpl_const_5877: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6226} unique __ctobpl_const_5866: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5850: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5851: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6209} unique __ctobpl_const_5859: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6203} unique __ctobpl_const_5863: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6202} unique __ctobpl_const_5855: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6220} unique __ctobpl_const_5865: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6227} unique __ctobpl_const_5869: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6201} unique __ctobpl_const_5849: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6248} unique __ctobpl_const_5892: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6248} unique __ctobpl_const_5894: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6248} unique __ctobpl_const_5898: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5902: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6243} unique __ctobpl_const_5890: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6244} unique __ctobpl_const_5891: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5905: int;

const {:extern} {:model_const "ppa_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6233} unique __ctobpl_const_5881: int;

const {:extern} {:model_const "omit_pol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6236} unique __ctobpl_const_5886: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6249} unique __ctobpl_const_5899: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6243} unique __ctobpl_const_5888: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5901: int;

const {:extern} {:model_const "phepol"} {:sourceFile ".\v24\space.c"} {:sourceLine 6234} unique __ctobpl_const_5883: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6234} unique __ctobpl_const_5882: int;

const {:extern} {:model_const "omit_pol"} {:sourceFile ".\v24\space.c"} {:sourceLine 6236} unique __ctobpl_const_5887: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5904: int;

const {:extern} {:model_const "portnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5907: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6248} unique __ctobpl_const_5893: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6248} unique __ctobpl_const_5897: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5908: int;

const {:extern} {:model_const "phepol_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6235} unique __ctobpl_const_5885: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6235} unique __ctobpl_const_5884: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6248} unique __ctobpl_const_5896: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6248} unique __ctobpl_const_5895: int;

const {:extern} {:model_const "portnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5903: int;

const {:extern} {:model_const "result.GetNatur"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5909: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6243} unique __ctobpl_const_5889: int;

const {:extern} {:model_const "omit_pol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6266} unique __ctobpl_const_5911: int;

const {:extern} {:model_const "* omit_pol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6266} unique __ctobpl_const_5912: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5900: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6256} unique __ctobpl_const_5906: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6257} unique __ctobpl_const_5910: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5918: int;

const {:extern} {:model_const "* omit_pol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6271} unique __ctobpl_const_5927: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6273} unique __ctobpl_const_5930: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6277} unique __ctobpl_const_5932: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5936: int;

const {:extern} {:model_const "amp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5941: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5920: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5915: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5917: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6272} unique __ctobpl_const_5928: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5937: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5939: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5940: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5942: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5943: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5923: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6270} unique __ctobpl_const_5925: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5935: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5938: int;

const {:extern} {:model_const "result.portamp"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5944: int;

const {:extern} {:model_const "* phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6272} unique __ctobpl_const_5929: int;

const {:extern} {:model_const "* phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6273} unique __ctobpl_const_5931: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5933: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6283} unique __ctobpl_const_5934: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5921: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5914: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5922: int;

const {:extern} {:model_const "omit_pol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6271} unique __ctobpl_const_5926: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5916: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5919: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5913: int;

const {:extern} {:model_const "result.polorbis"} {:sourceFile ".\v24\space.c"} {:sourceLine 6267} unique __ctobpl_const_5924: int;

const {:extern} {:model_const "psh_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5949: int;

const {:extern} {:model_const "psh_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6295} unique __ctobpl_const_5959: int;

const {:extern} {:model_const "* psh_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6296} unique __ctobpl_const_5962: int;

const {:extern} {:model_const "psh_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6296} unique __ctobpl_const_5961: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6299} unique __ctobpl_const_5963: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5965: int;

const {:extern} {:model_const "psc_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5968: int;

const {:extern} {:model_const "psc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5967: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5969: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5947: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5946: int;

const {:extern} {:model_const "* psh_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6295} unique __ctobpl_const_5960: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5966: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5970: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5971: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6294} unique __ctobpl_const_5958: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5951: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5952: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5953: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6286} unique __ctobpl_const_5945: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5956: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5964: int;

const {:extern} {:model_const "psc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5972: int;

const {:extern} {:model_const "psc_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5973: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5974: int;

const {:extern} {:model_const "result.pscdef1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6305} unique __ctobpl_const_5975: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6307} unique __ctobpl_const_5976: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5948: int;

const {:extern} {:model_const "psh_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5954: int;

const {:extern} {:model_const "psh_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5950: int;

const {:extern} {:model_const "psh_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5955: int;

const {:extern} {:model_const "result.pshdef1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6292} unique __ctobpl_const_5957: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6312} unique __ctobpl_const_5981: int;

const {:extern} {:model_const "PORT_PTR->AMP_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6332} unique __ctobpl_const_6004: int;

const {:extern} {:model_const "ppa_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6321} unique __ctobpl_const_5995: int;

const {:extern} {:model_const "PORT_PTR->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 6331} unique __ctobpl_const_6001: int;

const {:extern} {:model_const "PORT_PTR->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 6333} unique __ctobpl_const_6007: int;

const {:extern} {:model_const "psc_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6309} unique __ctobpl_const_5979: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5982: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5983: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5987: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5988: int;

const {:extern} {:model_const "result.ppadef1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5993: int;

const {:extern} {:model_const "ppa_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5985: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6320} unique __ctobpl_const_5994: int;

const {:extern} {:model_const "* ppa_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6321} unique __ctobpl_const_5996: int;

const {:extern} {:model_const "ppa_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6322} unique __ctobpl_const_5997: int;

const {:extern} {:model_const "* ppa_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6322} unique __ctobpl_const_5998: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5984: int;

const {:extern} {:model_const "ppa_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5991: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5992: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6331} unique __ctobpl_const_6000: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6332} unique __ctobpl_const_6003: int;

const {:extern} {:model_const "ppa_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5986: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6325} unique __ctobpl_const_5999: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5989: int;

const {:extern} {:model_const "amp_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6332} unique __ctobpl_const_6005: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6333} unique __ctobpl_const_6006: int;

const {:extern} {:model_const "amp"} {:sourceFile ".\v24\space.c"} {:sourceLine 6331} unique __ctobpl_const_6002: int;

const {:extern} {:model_const "psc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6333} unique __ctobpl_const_6008: int;

const {:extern} {:model_const "ppa_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6318} unique __ctobpl_const_5990: int;

const {:extern} {:model_const "psc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6308} unique __ctobpl_const_5977: int;

const {:extern} {:model_const "* psc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6308} unique __ctobpl_const_5978: int;

const {:extern} {:model_const "* psc_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6309} unique __ctobpl_const_5980: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6258} unique __ctobpl_const_6037: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6258} unique __ctobpl_const_6038: int;

const {:extern} {:model_const "PORT_PTR->PSC_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6334} unique __ctobpl_const_6010: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6337} unique __ctobpl_const_6018: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6258} unique __ctobpl_const_6039: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6340} unique __ctobpl_const_6027: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6258} unique __ctobpl_const_6040: int;

const {:extern} {:model_const "psh"} {:sourceFile ".\v24\space.c"} {:sourceLine 6335} unique __ctobpl_const_6014: int;

const {:extern} {:model_const "PORT_PTR->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 6335} unique __ctobpl_const_6013: int;

const {:extern} {:model_const "PORT_PTR->PSH_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6336} unique __ctobpl_const_6016: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6336} unique __ctobpl_const_6015: int;

const {:extern} {:model_const "ppa"} {:sourceFile ".\v24\space.c"} {:sourceLine 6337} unique __ctobpl_const_6020: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6338} unique __ctobpl_const_6021: int;

const {:extern} {:model_const "ppa_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6338} unique __ctobpl_const_6023: int;

const {:extern} {:model_const "PORT_PTR->OMIT_POL"} {:sourceFile ".\v24\space.c"} {:sourceLine 6341} unique __ctobpl_const_6031: int;

const {:extern} {:model_const "omit_pol"} {:sourceFile ".\v24\space.c"} {:sourceLine 6341} unique __ctobpl_const_6032: int;

const {:extern} {:model_const "psc_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6334} unique __ctobpl_const_6011: int;

const {:extern} {:model_const "PORT_PTR->PPA_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6338} unique __ctobpl_const_6022: int;

const {:extern} {:model_const "PORT_PTR->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 6339} unique __ctobpl_const_6025: int;

const {:extern} {:model_const "phepol_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6340} unique __ctobpl_const_6029: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6335} unique __ctobpl_const_6012: int;

const {:extern} {:model_const "PORT_PTR->PHEPOL_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6340} unique __ctobpl_const_6028: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6341} unique __ctobpl_const_6030: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6344} unique __ctobpl_const_6033: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6344} unique __ctobpl_const_6034: int;

const {:extern} {:model_const "PORT_PTR->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 6337} unique __ctobpl_const_6019: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6344} unique __ctobpl_const_6035: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6344} unique __ctobpl_const_6036: int;

const {:extern} {:model_const "psh_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 6336} unique __ctobpl_const_6017: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6334} unique __ctobpl_const_6009: int;

const {:extern} {:model_const "PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6339} unique __ctobpl_const_6024: int;

const {:extern} {:model_const "phepol"} {:sourceFile ".\v24\space.c"} {:sourceLine 6339} unique __ctobpl_const_6026: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6070: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6071: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6362} unique __ctobpl_const_6051: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6374} unique __ctobpl_const_6057: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 6250} unique __ctobpl_const_6046: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6375} unique __ctobpl_const_6060: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6069: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6258} unique __ctobpl_const_6042: int;

const {:extern} {:model_const "portnum"} {:sourceFile ".\v24\space.c"} {:sourceLine 6364} unique __ctobpl_const_6053: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6378} unique __ctobpl_const_6061: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 6250} unique __ctobpl_const_6043: int;

const {:extern} {:model_const "portnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6364} unique __ctobpl_const_6052: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6378} unique __ctobpl_const_6063: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6378} unique __ctobpl_const_6066: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6378} unique __ctobpl_const_6067: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6258} unique __ctobpl_const_6041: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6374} unique __ctobpl_const_6058: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6379} unique __ctobpl_const_6068: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6378} unique __ctobpl_const_6064: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6374} unique __ctobpl_const_6059: int;

const {:extern} {:model_const "nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6072: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 6250} unique __ctobpl_const_6049: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6378} unique __ctobpl_const_6065: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6250} unique __ctobpl_const_6044: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6250} unique __ctobpl_const_6045: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6378} unique __ctobpl_const_6062: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6362} unique __ctobpl_const_6050: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6250} unique __ctobpl_const_6048: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6367} unique __ctobpl_const_6054: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6367} unique __ctobpl_const_6055: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6367} unique __ctobpl_const_6056: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6250} unique __ctobpl_const_6047: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6397} unique __ctobpl_const_6092: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6400} unique __ctobpl_const_6097: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6098: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6400} unique __ctobpl_const_6095: int;

const {:extern} {:model_const "nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6076: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6444} unique __ctobpl_const_6087: int;

const {:extern} {:model_const "n"} {:sourceFile ".\v24\space.c"} {:sourceLine 6395} unique __ctobpl_const_6081: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6101: int;

const {:extern} {:model_const "n"} {:sourceFile ".\v24\space.c"} {:sourceLine 6395} unique __ctobpl_const_6080: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6444} unique __ctobpl_const_6088: int;

const {:extern} {:model_const "portnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6102: int;

const {:extern} {:model_const "nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6395} unique __ctobpl_const_6082: int;

const {:extern} {:model_const "* nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6395} unique __ctobpl_const_6083: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6397} unique __ctobpl_const_6091: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6385} unique __ctobpl_const_6079: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6100: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6103: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6099: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6104: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6073: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6075: int;

const {:extern} {:model_const "result.GetNatur"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6078: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6441} unique __ctobpl_const_6086: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6399} unique __ctobpl_const_6093: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6444} unique __ctobpl_const_6089: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6441} unique __ctobpl_const_6084: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6400} unique __ctobpl_const_6094: int;

const {:extern} {:model_const "* port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6441} unique __ctobpl_const_6085: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6400} unique __ctobpl_const_6096: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6077: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6384} unique __ctobpl_const_6074: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6444} unique __ctobpl_const_6090: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6420} unique __ctobpl_const_6112: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6426} unique __ctobpl_const_6118: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6431} unique __ctobpl_const_6122: int;

const {:extern} {:model_const "n"} {:sourceFile ".\v24\space.c"} {:sourceLine 6395} unique __ctobpl_const_6126: int;

const {:extern} {:model_const "portnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6107: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6428} unique __ctobpl_const_6120: int;

const {:extern} {:model_const "app_ptr->PORTNUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 6420} unique __ctobpl_const_6113: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6426} unique __ctobpl_const_6117: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6408} unique __ctobpl_const_6127: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6408} unique __ctobpl_const_6128: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6408} unique __ctobpl_const_6130: int;

const {:extern} {:model_const "result.portdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6109: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6108: int;

const {:extern} {:model_const "nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6386} unique __ctobpl_const_6131: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6387} unique __ctobpl_const_6133: int;

const {:extern} {:model_const "* portnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6420} unique __ctobpl_const_6115: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6425} unique __ctobpl_const_6116: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6428} unique __ctobpl_const_6121: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6434} unique __ctobpl_const_6125: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6408} unique __ctobpl_const_6129: int;

const {:extern} {:model_const "portnum_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6420} unique __ctobpl_const_6114: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6428} unique __ctobpl_const_6119: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6431} unique __ctobpl_const_6123: int;

const {:extern} {:model_const "* nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6386} unique __ctobpl_const_6132: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6105: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6387} unique __ctobpl_const_6134: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6387} unique __ctobpl_const_6135: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6387} unique __ctobpl_const_6136: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6407} unique __ctobpl_const_6110: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6434} unique __ctobpl_const_6124: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6404} unique __ctobpl_const_6106: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6413} unique __ctobpl_const_6111: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6472} unique __ctobpl_const_6148: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 6472} unique __ctobpl_const_6149: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6472} unique __ctobpl_const_6143: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6151: int;

const {:extern} {:model_const "ppa_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6159: int;

const {:extern} {:model_const "ppa_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6160: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6161: int;

const {:extern} {:model_const "ppa_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6154: int;

const {:extern} {:model_const "ppa_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6155: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6156: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6486} unique __ctobpl_const_6164: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6162: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6486} unique __ctobpl_const_6166: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6152: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6479} unique __ctobpl_const_6163: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6158: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6472} unique __ctobpl_const_6144: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6472} unique __ctobpl_const_6145: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6486} unique __ctobpl_const_6165: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6473} unique __ctobpl_const_6150: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6472} unique __ctobpl_const_6147: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6153: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6478} unique __ctobpl_const_6157: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6486} unique __ctobpl_const_6167: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6480} unique __ctobpl_const_6168: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6468} unique __ctobpl_const_6139: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6469} unique __ctobpl_const_6142: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6468} unique __ctobpl_const_6140: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6460} unique __ctobpl_const_6138: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6472} unique __ctobpl_const_6146: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6460} unique __ctobpl_const_6137: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6468} unique __ctobpl_const_6141: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5497} unique __ctobpl_const_5162: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5497} unique __ctobpl_const_5160: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5502} unique __ctobpl_const_5176: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5497} unique __ctobpl_const_5161: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5493} unique __ctobpl_const_5149: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5496} unique __ctobpl_const_5157: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5500} unique __ctobpl_const_5170: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5501} unique __ctobpl_const_5173: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5498} unique __ctobpl_const_5165: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5499} unique __ctobpl_const_5167: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5494} unique __ctobpl_const_5151: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5496} unique __ctobpl_const_5158: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5494} unique __ctobpl_const_5153: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5500} unique __ctobpl_const_5169: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5498} unique __ctobpl_const_5163: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5493} unique __ctobpl_const_5150: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5495} unique __ctobpl_const_5154: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5499} unique __ctobpl_const_5166: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5495} unique __ctobpl_const_5156: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5499} unique __ctobpl_const_5168: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5498} unique __ctobpl_const_5164: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5495} unique __ctobpl_const_5155: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5501} unique __ctobpl_const_5172: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5501} unique __ctobpl_const_5174: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5494} unique __ctobpl_const_5152: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5502} unique __ctobpl_const_5175: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5493} unique __ctobpl_const_5148: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5496} unique __ctobpl_const_5159: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5502} unique __ctobpl_const_5177: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5503} unique __ctobpl_const_5178: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5500} unique __ctobpl_const_5171: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5503} unique __ctobpl_const_5179: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5503} unique __ctobpl_const_5180: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5535} unique __ctobpl_const_5201: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5483} unique __ctobpl_const_5189: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5204: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5209: int;

const {:extern} {:model_const "MOSErrors[i][0]"} {:sourceFile ".\v24\space.c"} {:sourceLine 5484} unique __ctobpl_const_5188: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5504} unique __ctobpl_const_5181: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5505} unique __ctobpl_const_5185: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5529} unique __ctobpl_const_5192: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5210: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5484} unique __ctobpl_const_5187: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5521} unique __ctobpl_const_5190: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5504} unique __ctobpl_const_5183: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5535} unique __ctobpl_const_5200: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5505} unique __ctobpl_const_5186: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5529} unique __ctobpl_const_5193: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5535} unique __ctobpl_const_5197: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5535} unique __ctobpl_const_5198: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5535} unique __ctobpl_const_5199: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5536} unique __ctobpl_const_5203: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5205: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5206: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5208: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6680: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5521} unique __ctobpl_const_5191: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5532} unique __ctobpl_const_5195: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5207: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5505} unique __ctobpl_const_5184: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5535} unique __ctobpl_const_5196: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5535} unique __ctobpl_const_5202: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5504} unique __ctobpl_const_5182: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5529} unique __ctobpl_const_5194: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5557} unique __ctobpl_const_5235: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5568} unique __ctobpl_const_5238: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5568} unique __ctobpl_const_5239: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5574} unique __ctobpl_const_5240: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5575} unique __ctobpl_const_5242: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5227: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5546} unique __ctobpl_const_5219: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5229: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5223: int;

const {:extern} {:model_const "result.GetInt"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5232: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5226: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5551} unique __ctobpl_const_5233: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5546} unique __ctobpl_const_5217: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5225: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5540} unique __ctobpl_const_5214: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5546} unique __ctobpl_const_5216: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5224: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5230: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5212: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5211: int;

const {:extern} {:model_const "result.GetInt"} {:sourceFile ".\v24\space.c"} {:sourceLine 5539} unique __ctobpl_const_5213: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5546} unique __ctobpl_const_5220: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5228: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5550} unique __ctobpl_const_5231: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5557} unique __ctobpl_const_5234: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5557} unique __ctobpl_const_5236: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5557} unique __ctobpl_const_5237: int;

const {:extern} {:model_const "pcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 5574} unique __ctobpl_const_5241: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5546} unique __ctobpl_const_5215: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5546} unique __ctobpl_const_5221: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5546} unique __ctobpl_const_5218: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5547} unique __ctobpl_const_5222: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5269: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5272: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 5579} unique __ctobpl_const_5251: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5271: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5273: int;

const {:extern} {:model_const "qcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 5575} unique __ctobpl_const_5243: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5592} unique __ctobpl_const_5257: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5588} unique __ctobpl_const_5255: int;

const {:extern} {:model_const "phea"} {:sourceFile ".\v24\space.c"} {:sourceLine 5577} unique __ctobpl_const_5247: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5595} unique __ctobpl_const_5263: int;

const {:extern} {:model_const "thea_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5576} unique __ctobpl_const_5244: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5592} unique __ctobpl_const_5258: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5595} unique __ctobpl_const_5260: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5270: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5595} unique __ctobpl_const_5261: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5274: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5267: int;

const {:extern} {:model_const "psea"} {:sourceFile ".\v24\space.c"} {:sourceLine 5578} unique __ctobpl_const_5249: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5587} unique __ctobpl_const_5254: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5579} unique __ctobpl_const_5250: int;

const {:extern} {:model_const "omit_orient"} {:sourceFile ".\v24\space.c"} {:sourceLine 5589} unique __ctobpl_const_5256: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5595} unique __ctobpl_const_5259: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5595} unique __ctobpl_const_5262: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5596} unique __ctobpl_const_5266: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5268: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5587} unique __ctobpl_const_5252: int;

const {:extern} {:model_const "thea"} {:sourceFile ".\v24\space.c"} {:sourceLine 5576} unique __ctobpl_const_5245: int;

const {:extern} {:model_const "phea_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5577} unique __ctobpl_const_5246: int;

const {:extern} {:model_const "psea_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5578} unique __ctobpl_const_5248: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5587} unique __ctobpl_const_5253: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5595} unique __ctobpl_const_5264: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5595} unique __ctobpl_const_5265: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5284: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5290: int;

const {:extern} {:model_const "thea_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5292: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5633} unique __ctobpl_const_5302: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 5633} unique __ctobpl_const_5303: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5635} unique __ctobpl_const_5304: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5635} unique __ctobpl_const_5305: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5636} unique __ctobpl_const_5306: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5616} unique __ctobpl_const_5281: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5291: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5603} unique __ctobpl_const_5279: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5295: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5609} unique __ctobpl_const_5280: int;

const {:extern} {:model_const "psea_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5294: int;

const {:extern} {:model_const "pcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5275: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5282: int;

const {:extern} {:model_const "psea_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5287: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5289: int;

const {:extern} {:model_const "phea_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5293: int;

const {:extern} {:model_const "qcoord_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5276: int;

const {:extern} {:model_const "thea_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5285: int;

const {:extern} {:model_const "result.nodorien"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5297: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5296: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5620} unique __ctobpl_const_5298: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5625} unique __ctobpl_const_5299: int;

const {:extern} {:model_const "phea_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5286: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5277: int;

const {:extern} {:model_const "result.nodecoor"} {:sourceFile ".\v24\space.c"} {:sourceLine 5601} unique __ctobpl_const_5278: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5283: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5617} unique __ctobpl_const_5288: int;

const {:extern} {:model_const "omit_orient"} {:sourceFile ".\v24\space.c"} {:sourceLine 5626} unique __ctobpl_const_5300: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5633} unique __ctobpl_const_5301: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 5651} unique __ctobpl_const_5336: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5652} unique __ctobpl_const_5337: int;

const {:extern} {:model_const "qcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 5647} unique __ctobpl_const_5320: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5646} unique __ctobpl_const_5313: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5652} unique __ctobpl_const_5338: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5644} unique __ctobpl_const_5310: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5646} unique __ctobpl_const_5314: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5650} unique __ctobpl_const_5329: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5650} unique __ctobpl_const_5330: int;

const {:extern} {:model_const "(* node_ptr)->QCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5647} unique __ctobpl_const_5319: int;

const {:extern} {:model_const "(* node_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5644} unique __ctobpl_const_5312: int;

const {:extern} {:model_const "pcoord"} {:sourceFile ".\v24\space.c"} {:sourceLine 5646} unique __ctobpl_const_5316: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5647} unique __ctobpl_const_5317: int;

const {:extern} {:model_const "(* node_ptr)->THEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5648} unique __ctobpl_const_5323: int;

const {:extern} {:model_const "(* node_ptr)->PCOORD"} {:sourceFile ".\v24\space.c"} {:sourceLine 5646} unique __ctobpl_const_5315: int;

const {:extern} {:model_const "thea"} {:sourceFile ".\v24\space.c"} {:sourceLine 5648} unique __ctobpl_const_5324: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5644} unique __ctobpl_const_5311: int;

const {:extern} {:model_const "(* node_ptr)->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5649} unique __ctobpl_const_5327: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5649} unique __ctobpl_const_5325: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5648} unique __ctobpl_const_5321: int;

const {:extern} {:model_const "phea"} {:sourceFile ".\v24\space.c"} {:sourceLine 5649} unique __ctobpl_const_5328: int;

const {:extern} {:model_const "(* node_ptr)->PSEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 5650} unique __ctobpl_const_5331: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5647} unique __ctobpl_const_5318: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5648} unique __ctobpl_const_5322: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5636} unique __ctobpl_const_5307: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5636} unique __ctobpl_const_5309: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5636} unique __ctobpl_const_5308: int;

const {:extern} {:model_const "psea"} {:sourceFile ".\v24\space.c"} {:sourceLine 5650} unique __ctobpl_const_5332: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5651} unique __ctobpl_const_5333: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5651} unique __ctobpl_const_5334: int;

const {:extern} {:model_const "(* node_ptr)->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5651} unique __ctobpl_const_5335: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5649} unique __ctobpl_const_5326: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5671} unique __ctobpl_const_5354: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5679} unique __ctobpl_const_5357: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5604} unique __ctobpl_const_5352: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5610} unique __ctobpl_const_5347: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5679} unique __ctobpl_const_5356: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5610} unique __ctobpl_const_5348: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5604} unique __ctobpl_const_5351: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5671} unique __ctobpl_const_5353: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5685} unique __ctobpl_const_5359: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5685} unique __ctobpl_const_5362: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5655} unique __ctobpl_const_5342: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5610} unique __ctobpl_const_5346: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5685} unique __ctobpl_const_5360: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5685} unique __ctobpl_const_5364: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5604} unique __ctobpl_const_5349: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5655} unique __ctobpl_const_5341: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5655} unique __ctobpl_const_5344: int;

const {:extern} {:model_const "(* node_ptr)->OMIT_ORIENT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5652} unique __ctobpl_const_5339: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5604} unique __ctobpl_const_5350: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5682} unique __ctobpl_const_5358: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5685} unique __ctobpl_const_5365: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5610} unique __ctobpl_const_5345: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5691} unique __ctobpl_const_5367: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5691} unique __ctobpl_const_5369: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5691} unique __ctobpl_const_5370: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5655} unique __ctobpl_const_5343: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5679} unique __ctobpl_const_5355: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5685} unique __ctobpl_const_5363: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5686} unique __ctobpl_const_5366: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5691} unique __ctobpl_const_5368: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5685} unique __ctobpl_const_5361: int;

const {:extern} {:model_const "omit_orient"} {:sourceFile ".\v24\space.c"} {:sourceLine 5652} unique __ctobpl_const_5340: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5707} unique __ctobpl_const_5394: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5715} unique __ctobpl_const_5400: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5696} unique __ctobpl_const_5381: int;

const {:extern} {:model_const "theta_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5695} unique __ctobpl_const_5375: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5704} unique __ctobpl_const_5389: int;

const {:extern} {:model_const "phi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5707} unique __ctobpl_const_5392: int;

const {:extern} {:model_const "phi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5707} unique __ctobpl_const_5390: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5691} unique __ctobpl_const_5372: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5703} unique __ctobpl_const_5385: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 5695} unique __ctobpl_const_5380: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5692} unique __ctobpl_const_5374: int;

const {:extern} {:model_const "theta_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5695} unique __ctobpl_const_5377: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5695} unique __ctobpl_const_5376: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5691} unique __ctobpl_const_5373: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5707} unique __ctobpl_const_5391: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5707} unique __ctobpl_const_5393: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5695} unique __ctobpl_const_5378: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5703} unique __ctobpl_const_5382: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5703} unique __ctobpl_const_5384: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5715} unique __ctobpl_const_5397: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5715} unique __ctobpl_const_5399: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5703} unique __ctobpl_const_5388: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5715} unique __ctobpl_const_5401: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5715} unique __ctobpl_const_5402: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5703} unique __ctobpl_const_5387: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 5707} unique __ctobpl_const_5395: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5703} unique __ctobpl_const_5386: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5691} unique __ctobpl_const_5371: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5695} unique __ctobpl_const_5379: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5703} unique __ctobpl_const_5383: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5708} unique __ctobpl_const_5396: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5715} unique __ctobpl_const_5398: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5733} unique __ctobpl_const_5427: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5733} unique __ctobpl_const_5428: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5420: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5719} unique __ctobpl_const_5408: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5733} unique __ctobpl_const_5425: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5719} unique __ctobpl_const_5406: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5729} unique __ctobpl_const_5422: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5721} unique __ctobpl_const_5429: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5721} unique __ctobpl_const_5431: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5730} unique __ctobpl_const_5423: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5412: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5721} unique __ctobpl_const_5432: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5416: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5721} unique __ctobpl_const_5430: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5414: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5730} unique __ctobpl_const_5424: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5719} unique __ctobpl_const_5409: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5709} unique __ctobpl_const_5433: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5709} unique __ctobpl_const_5434: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5418: int;

const {:extern} {:model_const "psi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5719} unique __ctobpl_const_5405: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5720} unique __ctobpl_const_5411: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5716} unique __ctobpl_const_5404: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5417: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 5719} unique __ctobpl_const_5410: int;

const {:extern} {:model_const "psi_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5719} unique __ctobpl_const_5407: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5413: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5715} unique __ctobpl_const_5403: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5415: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5419: int;

const {:extern} {:model_const "result.angunit"} {:sourceFile ".\v24\space.c"} {:sourceLine 5728} unique __ctobpl_const_5421: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5733} unique __ctobpl_const_5426: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5774} unique __ctobpl_const_5448: int;

const {:extern} {:model_const "err_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5781} unique __ctobpl_const_5458: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5764} unique __ctobpl_const_5444: int;

const {:extern} {:model_const "p->PREV"} {:sourceFile ".\v24\space.c"} {:sourceLine 5774} unique __ctobpl_const_5451: int;

const {:extern} {:model_const "p->LINE_NUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 5781} unique __ctobpl_const_5457: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5788} unique __ctobpl_const_5460: int;

const {:extern} {:model_const "fn"} {:sourceFile ".\v24\space.c"} {:sourceLine 5748} unique __ctobpl_const_5441: int;

const {:extern} {:model_const "err_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5774} unique __ctobpl_const_5453: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5697} unique __ctobpl_const_5438: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5709} unique __ctobpl_const_5435: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5709} unique __ctobpl_const_5436: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5697} unique __ctobpl_const_5439: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5781} unique __ctobpl_const_5456: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5788} unique __ctobpl_const_5461: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5697} unique __ctobpl_const_5437: int;

const {:extern} {:model_const "err_ptr->LINE_NUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 5781} unique __ctobpl_const_5459: int;

const {:extern} {:model_const "n"} {:sourceFile ".\v24\space.c"} {:sourceLine 5788} unique __ctobpl_const_5462: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 5788} unique __ctobpl_const_5463: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5783} unique __ctobpl_const_5464: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5697} unique __ctobpl_const_5440: int;

const {:extern} {:model_const "p->PREV->LINE_NUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 5774} unique __ctobpl_const_5452: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5781} unique __ctobpl_const_5455: int;

const {:extern} {:model_const "err_ptr->LINE_NUM"} {:sourceFile ".\v24\space.c"} {:sourceLine 5774} unique __ctobpl_const_5454: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5783} unique __ctobpl_const_5465: int;

const {:extern} {:model_const "p->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 5783} unique __ctobpl_const_5466: int;

const {:extern} {:model_const "errline_printed"} {:sourceFile ".\v24\space.c"} {:sourceLine 5766} unique __ctobpl_const_5446: int;

const {:extern} {:model_const "errline_printed"} {:sourceFile ".\v24\space.c"} {:sourceLine 5768} unique __ctobpl_const_5447: int;

const {:extern} {:model_const "n"} {:sourceFile ".\v24\space.c"} {:sourceLine 5761} unique __ctobpl_const_5443: int;

const {:extern} {:model_const "err_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5764} unique __ctobpl_const_5445: int;

const {:extern} {:model_const "p->PREV"} {:sourceFile ".\v24\space.c"} {:sourceLine 5774} unique __ctobpl_const_5449: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5774} unique __ctobpl_const_5450: int;

const {:extern} {:model_const "fn"} {:sourceFile ".\v24\space.c"} {:sourceLine 5748} unique __ctobpl_const_5442: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5836} unique __ctobpl_const_5494: int;

const {:extern} {:model_const "phase_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5840} unique __ctobpl_const_5496: int;

const {:extern} {:model_const "p->PREV"} {:sourceFile ".\v24\space.c"} {:sourceLine 5776} unique __ctobpl_const_5470: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5824} unique __ctobpl_const_5477: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5830} unique __ctobpl_const_5484: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5836} unique __ctobpl_const_5488: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5827} unique __ctobpl_const_5479: int;

const {:extern} {:model_const "errcode"} {:sourceFile ".\v24\space.c"} {:sourceLine 5798} unique __ctobpl_const_5473: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5830} unique __ctobpl_const_5486: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5830} unique __ctobpl_const_5481: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5830} unique __ctobpl_const_5483: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5840} unique __ctobpl_const_5497: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5824} unique __ctobpl_const_5476: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5776} unique __ctobpl_const_5468: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5816} unique __ctobpl_const_5474: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5816} unique __ctobpl_const_5475: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5824} unique __ctobpl_const_5478: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5830} unique __ctobpl_const_5482: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 5776} unique __ctobpl_const_5469: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5830} unique __ctobpl_const_5480: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5830} unique __ctobpl_const_5485: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5836} unique __ctobpl_const_5491: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5831} unique __ctobpl_const_5487: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5836} unique __ctobpl_const_5493: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5837} unique __ctobpl_const_5495: int;

const {:extern} {:model_const "phase_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5840} unique __ctobpl_const_5498: int;

const {:extern} {:model_const "errcode"} {:sourceFile ".\v24\space.c"} {:sourceLine 5796} unique __ctobpl_const_5472: int;

const {:extern} {:model_const "s"} {:sourceFile ".\v24\space.c"} {:sourceLine 5795} unique __ctobpl_const_5471: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5836} unique __ctobpl_const_5489: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5836} unique __ctobpl_const_5490: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5836} unique __ctobpl_const_5492: int;

const {:extern} {:model_const "n"} {:sourceFile ".\v24\space.c"} {:sourceLine 5775} unique __ctobpl_const_5467: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5516: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5848} unique __ctobpl_const_5503: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5517: int;

const {:extern} {:model_const "phase_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5514: int;

const {:extern} {:model_const "phase_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5519: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5518: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5520: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5521: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5522: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5853} unique __ctobpl_const_5523: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5848} unique __ctobpl_const_5507: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5860} unique __ctobpl_const_5525: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5860} unique __ctobpl_const_5527: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5512: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5860} unique __ctobpl_const_5526: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5854} unique __ctobpl_const_5528: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5511: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5860} unique __ctobpl_const_5524: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5854} unique __ctobpl_const_5529: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5854} unique __ctobpl_const_5530: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5840} unique __ctobpl_const_5500: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5513: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5852} unique __ctobpl_const_5515: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5841} unique __ctobpl_const_5502: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5848} unique __ctobpl_const_5508: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5848} unique __ctobpl_const_5506: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5840} unique __ctobpl_const_5499: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5848} unique __ctobpl_const_5504: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 5840} unique __ctobpl_const_5501: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5848} unique __ctobpl_const_5505: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5848} unique __ctobpl_const_5509: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5849} unique __ctobpl_const_5510: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5886} unique __ctobpl_const_5545: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5886} unique __ctobpl_const_5547: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5886} unique __ctobpl_const_5542: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5886} unique __ctobpl_const_5548: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5894} unique __ctobpl_const_5551: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5895} unique __ctobpl_const_5553: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5896} unique __ctobpl_const_5554: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5874} unique __ctobpl_const_5537: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5896} unique __ctobpl_const_5555: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5886} unique __ctobpl_const_5544: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5874} unique __ctobpl_const_5536: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5886} unique __ctobpl_const_5546: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5896} unique __ctobpl_const_5556: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5842} unique __ctobpl_const_5534: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5882} unique __ctobpl_const_5540: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5842} unique __ctobpl_const_5532: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5887} unique __ctobpl_const_5549: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5894} unique __ctobpl_const_5550: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5895} unique __ctobpl_const_5552: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5896} unique __ctobpl_const_5557: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5896} unique __ctobpl_const_5558: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5896} unique __ctobpl_const_5559: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5898} unique __ctobpl_const_5561: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5899} unique __ctobpl_const_5562: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5896} unique __ctobpl_const_5560: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5842} unique __ctobpl_const_5533: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5854} unique __ctobpl_const_5531: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5883} unique __ctobpl_const_5541: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5842} unique __ctobpl_const_5535: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5882} unique __ctobpl_const_5538: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5886} unique __ctobpl_const_5543: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5882} unique __ctobpl_const_5539: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5911} unique __ctobpl_const_5580: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5911} unique __ctobpl_const_5581: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5583: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5584: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5585: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5586: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5911} unique __ctobpl_const_5579: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5908} unique __ctobpl_const_5570: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5587: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5899} unique __ctobpl_const_5565: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5908} unique __ctobpl_const_5573: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5589: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5908} unique __ctobpl_const_5574: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5906} unique __ctobpl_const_5567: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5582: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5590: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5592: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5593: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5591: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5907} unique __ctobpl_const_5569: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5908} unique __ctobpl_const_5572: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5908} unique __ctobpl_const_5576: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5916} unique __ctobpl_const_5588: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5918} unique __ctobpl_const_5594: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5908} unique __ctobpl_const_5575: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5907} unique __ctobpl_const_5568: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5910} unique __ctobpl_const_5577: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5899} unique __ctobpl_const_5564: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5899} unique __ctobpl_const_5563: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5906} unique __ctobpl_const_5566: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5911} unique __ctobpl_const_5578: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5908} unique __ctobpl_const_5571: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5919} unique __ctobpl_const_5596: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5889} unique __ctobpl_const_5606: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5924} unique __ctobpl_const_5602: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5889} unique __ctobpl_const_5607: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5944} unique __ctobpl_const_5609: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5919} unique __ctobpl_const_5598: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5923} unique __ctobpl_const_5599: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5952} unique __ctobpl_const_5610: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5952} unique __ctobpl_const_5612: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5956} unique __ctobpl_const_5615: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5956} unique __ctobpl_const_5617: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5956} unique __ctobpl_const_5618: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5956} unique __ctobpl_const_5620: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5957} unique __ctobpl_const_5621: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5919} unique __ctobpl_const_5597: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5924} unique __ctobpl_const_5600: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5956} unique __ctobpl_const_5614: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5956} unique __ctobpl_const_5616: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5964} unique __ctobpl_const_5622: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5953} unique __ctobpl_const_5613: int;

const {:extern} {:model_const "* phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5964} unique __ctobpl_const_5623: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5965} unique __ctobpl_const_5624: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5924} unique __ctobpl_const_5603: int;

const {:extern} {:model_const "* phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5965} unique __ctobpl_const_5625: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5919} unique __ctobpl_const_5595: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5924} unique __ctobpl_const_5601: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5952} unique __ctobpl_const_5611: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5888} unique __ctobpl_const_5604: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5966} unique __ctobpl_const_5626: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5944} unique __ctobpl_const_5608: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5956} unique __ctobpl_const_5619: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5888} unique __ctobpl_const_5605: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5655: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5657: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5978} unique __ctobpl_const_5648: int;

const {:extern} {:model_const "* phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5976} unique __ctobpl_const_5639: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5658: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5654: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5980} unique __ctobpl_const_5649: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5966} unique __ctobpl_const_5628: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5969} unique __ctobpl_const_5635: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5969} unique __ctobpl_const_5636: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5976} unique __ctobpl_const_5638: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5977} unique __ctobpl_const_5640: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5981} unique __ctobpl_const_5651: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5968} unique __ctobpl_const_5633: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5656: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5981} unique __ctobpl_const_5650: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5966} unique __ctobpl_const_5629: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5966} unique __ctobpl_const_5630: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5969} unique __ctobpl_const_5634: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5969} unique __ctobpl_const_5637: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5966} unique __ctobpl_const_5631: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5978} unique __ctobpl_const_5644: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5978} unique __ctobpl_const_5645: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5978} unique __ctobpl_const_5646: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5966} unique __ctobpl_const_5627: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5981} unique __ctobpl_const_5652: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5978} unique __ctobpl_const_5647: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5978} unique __ctobpl_const_5643: int;

const {:extern} {:model_const "* phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5977} unique __ctobpl_const_5641: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 5978} unique __ctobpl_const_5642: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5981} unique __ctobpl_const_5653: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 5966} unique __ctobpl_const_5632: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5662: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5994} unique __ctobpl_const_5674: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5959} unique __ctobpl_const_5678: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5989} unique __ctobpl_const_5669: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5660: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5994} unique __ctobpl_const_5675: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5994} unique __ctobpl_const_5673: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5988} unique __ctobpl_const_5666: int;

const {:extern} {:model_const "* phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5958} unique __ctobpl_const_5677: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5659: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5664: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6020} unique __ctobpl_const_5681: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6028} unique __ctobpl_const_5682: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6028} unique __ctobpl_const_5683: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5989} unique __ctobpl_const_5667: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 6028} unique __ctobpl_const_5684: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 5993} unique __ctobpl_const_5671: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 5989} unique __ctobpl_const_5668: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5958} unique __ctobpl_const_5676: int;

const {:extern} {:model_const "* polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6030} unique __ctobpl_const_5687: int;

const {:extern} {:model_const "* phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5959} unique __ctobpl_const_5679: int;

const {:extern} {:model_const "polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6030} unique __ctobpl_const_5686: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5989} unique __ctobpl_const_5670: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5665: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5661: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6029} unique __ctobpl_const_5685: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5986} unique __ctobpl_const_5663: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 5994} unique __ctobpl_const_5672: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6020} unique __ctobpl_const_5680: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6031} unique __ctobpl_const_5688: int;

const {:extern} {:model_const "angle_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7388: int;

const {:extern} {:model_const "angle_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7389: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7394: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7395: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7385: int;

const {:extern} {:model_const "phase_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7391: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7397: int;

const {:extern} {:model_const "phase_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7401: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7623} unique __ctobpl_const_7407: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7386: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7400: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7405: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7617} unique __ctobpl_const_7382: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7390: int;

const {:extern} {:model_const "phase_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7392: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7393: int;

const {:extern} {:model_const "phase_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7402: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7404: int;

const {:extern} {:model_const "result.serotpar"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7406: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7618} unique __ctobpl_const_7383: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7627} unique __ctobpl_const_7408: int;

const {:extern} {:model_const "omit_angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7628} unique __ctobpl_const_7409: int;

const {:extern} {:model_const "* omit_angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7628} unique __ctobpl_const_7410: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7632} unique __ctobpl_const_7411: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7632} unique __ctobpl_const_7412: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7632} unique __ctobpl_const_7413: int;

const {:extern} {:model_const "angle_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7399: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7403: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7387: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7396: int;

const {:extern} {:model_const "angle_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7621} unique __ctobpl_const_7398: int;

const {:extern} {:model_const "* direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7618} unique __ctobpl_const_7384: int;

const {:extern} {:model_const "p1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7674} unique __ctobpl_const_7442: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7674} unique __ctobpl_const_7443: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 7610} unique __ctobpl_const_7415: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7610} unique __ctobpl_const_7416: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7655} unique __ctobpl_const_7438: int;

const {:extern} {:model_const "grampexc_ptr->P1_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 7674} unique __ctobpl_const_7444: int;

const {:extern} {:model_const "qmax_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7654} unique __ctobpl_const_7437: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 7610} unique __ctobpl_const_7421: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7651} unique __ctobpl_const_7427: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7654} unique __ctobpl_const_7436: int;

const {:extern} {:model_const "pmin_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7651} unique __ctobpl_const_7428: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7649} unique __ctobpl_const_7423: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7650} unique __ctobpl_const_7425: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7653} unique __ctobpl_const_7433: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7610} unique __ctobpl_const_7419: int;

const {:extern} {:model_const "pmin_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7651} unique __ctobpl_const_7426: int;

const {:extern} {:model_const "qmin_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7653} unique __ctobpl_const_7432: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7632} unique __ctobpl_const_7414: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7610} unique __ctobpl_const_7417: int;

const {:extern} {:model_const "p2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7675} unique __ctobpl_const_7445: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 7673} unique __ctobpl_const_7439: int;

const {:extern} {:model_const "qmax_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7654} unique __ctobpl_const_7435: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7610} unique __ctobpl_const_7420: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7673} unique __ctobpl_const_7440: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 7610} unique __ctobpl_const_7418: int;

const {:extern} {:model_const "pmax_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7652} unique __ctobpl_const_7429: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7649} unique __ctobpl_const_7424: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7649} unique __ctobpl_const_7422: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7652} unique __ctobpl_const_7430: int;

const {:extern} {:model_const "pmax_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7652} unique __ctobpl_const_7431: int;

const {:extern} {:model_const "grampexc_ptr->CENTRE"} {:sourceFile ".\v24\space.c"} {:sourceLine 7673} unique __ctobpl_const_7441: int;

const {:extern} {:model_const "qmin_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7653} unique __ctobpl_const_7434: int;

const {:extern} {:model_const "q1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7676} unique __ctobpl_const_7448: int;

const {:extern} {:model_const "p1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7710} unique __ctobpl_const_7460: int;

const {:extern} {:model_const "grampexc_ptr->P2_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 7675} unique __ctobpl_const_7447: int;

const {:extern} {:model_const "q2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7677} unique __ctobpl_const_7451: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7699} unique __ctobpl_const_7459: int;

const {:extern} {:model_const "grampexc_ptr->Q2_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 7677} unique __ctobpl_const_7453: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7698} unique __ctobpl_const_7456: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7675} unique __ctobpl_const_7446: int;

const {:extern} {:model_const "Hx[5]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7710} unique __ctobpl_const_7461: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7677} unique __ctobpl_const_7452: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7698} unique __ctobpl_const_7457: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7699} unique __ctobpl_const_7458: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7676} unique __ctobpl_const_7449: int;

const {:extern} {:model_const "Hy[5]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7711} unique __ctobpl_const_7463: int;

const {:extern} {:model_const "Hx[2]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7712} unique __ctobpl_const_7465: int;

const {:extern} {:model_const "p2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7713} unique __ctobpl_const_7466: int;

const {:extern} {:model_const "q1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7714} unique __ctobpl_const_7468: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 7682} unique __ctobpl_const_7454: int;

const {:extern} {:model_const "Hx[6]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7714} unique __ctobpl_const_7469: int;

const {:extern} {:model_const "Hx[7]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7714} unique __ctobpl_const_7470: int;

const {:extern} {:model_const "q1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7715} unique __ctobpl_const_7471: int;

const {:extern} {:model_const "Hy[6]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7715} unique __ctobpl_const_7472: int;

const {:extern} {:model_const "q2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7716} unique __ctobpl_const_7473: int;

const {:extern} {:model_const "q2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7717} unique __ctobpl_const_7476: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 7695} unique __ctobpl_const_7455: int;

const {:extern} {:model_const "grampexc_ptr->Q1_ET"} {:sourceFile ".\v24\space.c"} {:sourceLine 7676} unique __ctobpl_const_7450: int;

const {:extern} {:model_const "p1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7711} unique __ctobpl_const_7462: int;

const {:extern} {:model_const "Hx[4]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7716} unique __ctobpl_const_7474: int;

const {:extern} {:model_const "Hx[3]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7716} unique __ctobpl_const_7475: int;

const {:extern} {:model_const "Hy[2]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7713} unique __ctobpl_const_7467: int;

const {:extern} {:model_const "Hy[4]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7717} unique __ctobpl_const_7477: int;

const {:extern} {:model_const "p2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7712} unique __ctobpl_const_7464: int;

const {:extern} {:model_const "p1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7685} unique __ctobpl_const_7505: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7718} unique __ctobpl_const_7478: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7685} unique __ctobpl_const_7506: int;

const {:extern} {:model_const "(* pmin_ptr)->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7685} unique __ctobpl_const_7508: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7701} unique __ctobpl_const_7482: int;

const {:extern} {:model_const "geomnode_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7704} unique __ctobpl_const_7493: int;

const {:extern} {:model_const "Hx[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7702} unique __ctobpl_const_7484: int;

const {:extern} {:model_const "Hy[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7703} unique __ctobpl_const_7488: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7496: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7702} unique __ctobpl_const_7485: int;

const {:extern} {:model_const "Hx[1]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7718} unique __ctobpl_const_7479: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7704} unique __ctobpl_const_7491: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7498: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7703} unique __ctobpl_const_7487: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7704} unique __ctobpl_const_7492: int;

const {:extern} {:model_const "Hy[1]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7719} unique __ctobpl_const_7481: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7499: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7702} unique __ctobpl_const_7483: int;

const {:extern} {:model_const "geomnode_app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7702} unique __ctobpl_const_7486: int;

const {:extern} {:model_const "geomnode_app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7703} unique __ctobpl_const_7490: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7699} unique __ctobpl_const_7494: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7500: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7502: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7504: int;

const {:extern} {:model_const "* pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7685} unique __ctobpl_const_7507: int;

const {:extern} {:model_const "p2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7686} unique __ctobpl_const_7509: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7703} unique __ctobpl_const_7489: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7495: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7501: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7497: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7684} unique __ctobpl_const_7503: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7719} unique __ctobpl_const_7480: int;

const {:extern} {:model_const "* pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7686} unique __ctobpl_const_7511: int;

const {:extern} {:model_const "(* qmin_ptr)->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7687} unique __ctobpl_const_7516: int;

const {:extern} {:model_const "q2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7688} unique __ctobpl_const_7517: int;

const {:extern} {:model_const "q1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7691} unique __ctobpl_const_7526: int;

const {:extern} {:model_const "(* pmax_ptr)->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7686} unique __ctobpl_const_7512: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7686} unique __ctobpl_const_7510: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7688} unique __ctobpl_const_7518: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7687} unique __ctobpl_const_7514: int;

const {:extern} {:model_const "q1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7692} unique __ctobpl_const_7530: int;

const {:extern} {:model_const "p1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7694} unique __ctobpl_const_7534: int;

const {:extern} {:model_const "* qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7688} unique __ctobpl_const_7519: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7693} unique __ctobpl_const_7531: int;

const {:extern} {:model_const "q1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7693} unique __ctobpl_const_7532: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7728} unique __ctobpl_const_7535: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7729} unique __ctobpl_const_7538: int;

const {:extern} {:model_const "q1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7689} unique __ctobpl_const_7522: int;

const {:extern} {:model_const "p2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7728} unique __ctobpl_const_7536: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7728} unique __ctobpl_const_7537: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7729} unique __ctobpl_const_7540: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7731} unique __ctobpl_const_7541: int;

const {:extern} {:model_const "p2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7690} unique __ctobpl_const_7524: int;

const {:extern} {:model_const "q2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7689} unique __ctobpl_const_7523: int;

const {:extern} {:model_const "p1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7689} unique __ctobpl_const_7521: int;

const {:extern} {:model_const "q2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7729} unique __ctobpl_const_7539: int;

const {:extern} {:model_const "q1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7687} unique __ctobpl_const_7513: int;

const {:extern} {:model_const "* qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7687} unique __ctobpl_const_7515: int;

const {:extern} {:model_const "(* qmax_ptr)->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7688} unique __ctobpl_const_7520: int;

const {:extern} {:model_const "p1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7690} unique __ctobpl_const_7525: int;

const {:extern} {:model_const "q2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7692} unique __ctobpl_const_7529: int;

const {:extern} {:model_const "p2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7691} unique __ctobpl_const_7528: int;

const {:extern} {:model_const "p1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7691} unique __ctobpl_const_7527: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7694} unique __ctobpl_const_7533: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7737} unique __ctobpl_const_7556: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 7734} unique __ctobpl_const_7557: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7736} unique __ctobpl_const_7544: int;

const {:extern} {:model_const "p1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7736} unique __ctobpl_const_7545: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7737} unique __ctobpl_const_7552: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7734} unique __ctobpl_const_7558: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 7742} unique __ctobpl_const_7561: int;

const {:extern} {:model_const "q2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7742} unique __ctobpl_const_7563: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7742} unique __ctobpl_const_7564: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7742} unique __ctobpl_const_7566: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 7743} unique __ctobpl_const_7567: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7737} unique __ctobpl_const_7551: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 7743} unique __ctobpl_const_7568: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7743} unique __ctobpl_const_7569: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7737} unique __ctobpl_const_7554: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 7731} unique __ctobpl_const_7542: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7742} unique __ctobpl_const_7565: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7743} unique __ctobpl_const_7570: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7743} unique __ctobpl_const_7571: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7736} unique __ctobpl_const_7549: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7739} unique __ctobpl_const_7560: int;

const {:extern} {:model_const "q1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7743} unique __ctobpl_const_7572: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7743} unique __ctobpl_const_7573: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 7737} unique __ctobpl_const_7550: int;

const {:extern} {:model_const "q1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7742} unique __ctobpl_const_7562: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7736} unique __ctobpl_const_7548: int;

const {:extern} {:model_const "p2_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7736} unique __ctobpl_const_7546: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7737} unique __ctobpl_const_7553: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 7734} unique __ctobpl_const_7559: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7733} unique __ctobpl_const_7543: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7736} unique __ctobpl_const_7547: int;

const {:extern} {:model_const "p1_et"} {:sourceFile ".\v24\space.c"} {:sourceLine 7737} unique __ctobpl_const_7555: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7753} unique __ctobpl_const_7601: int;

const {:extern} {:model_const "E"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7589: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 7749} unique __ctobpl_const_7586: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7757} unique __ctobpl_const_7605: int;

const {:extern} {:model_const "D"} {:sourceFile ".\v24\space.c"} {:sourceLine 7749} unique __ctobpl_const_7585: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7748} unique __ctobpl_const_7583: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7598: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 7740} unique __ctobpl_const_7576: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7748} unique __ctobpl_const_7584: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7596: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7746} unique __ctobpl_const_7578: int;

const {:extern} {:model_const "A"} {:sourceFile ".\v24\space.c"} {:sourceLine 7746} unique __ctobpl_const_7577: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7749} unique __ctobpl_const_7588: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7594: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 7740} unique __ctobpl_const_7574: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7591: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7599: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7593: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7600: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7597: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7753} unique __ctobpl_const_7602: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7592: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7590: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7754} unique __ctobpl_const_7603: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 7740} unique __ctobpl_const_7575: int;

const {:extern} {:model_const "B"} {:sourceFile ".\v24\space.c"} {:sourceLine 7747} unique __ctobpl_const_7579: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 7747} unique __ctobpl_const_7580: int;

const {:extern} {:model_const "C"} {:sourceFile ".\v24\space.c"} {:sourceLine 7748} unique __ctobpl_const_7581: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 7749} unique __ctobpl_const_7587: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7750} unique __ctobpl_const_7595: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7754} unique __ctobpl_const_7604: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 7748} unique __ctobpl_const_7582: int;

const {:extern} {:model_const "geomnode_app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7614: int;

const {:extern} {:model_const "geomnode_app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7623: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7622: int;

const {:extern} {:model_const "E"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7610: int;

const {:extern} {:model_const "result.secorder"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7625: int;

const {:extern} {:model_const "A"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7606: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7763} unique __ctobpl_const_7630: int;

const {:extern} {:model_const "C"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7617: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7620: int;

const {:extern} {:model_const "D"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7609: int;

const {:extern} {:model_const "B"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7607: int;

const {:extern} {:model_const "B"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7616: int;

const {:extern} {:model_const "geomnode_app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7621: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7611: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7763} unique __ctobpl_const_7628: int;

const {:extern} {:model_const "amp_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7624: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7763} unique __ctobpl_const_7629: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7766} unique __ctobpl_const_7631: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7766} unique __ctobpl_const_7632: int;

const {:extern} {:model_const "D"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7618: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7769} unique __ctobpl_const_7633: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7802} unique __ctobpl_const_7634: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 7802} unique __ctobpl_const_7635: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7763} unique __ctobpl_const_7626: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7802} unique __ctobpl_const_7636: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7805} unique __ctobpl_const_7637: int;

const {:extern} {:model_const "A"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7615: int;

const {:extern} {:model_const "geomnode_app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7612: int;

const {:extern} {:model_const "C"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7608: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7613: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7763} unique __ctobpl_const_7627: int;

const {:extern} {:model_const "E"} {:sourceFile ".\v24\space.c"} {:sourceLine 7760} unique __ctobpl_const_7619: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7795} unique __ctobpl_const_7659: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7821} unique __ctobpl_const_7661: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7780} unique __ctobpl_const_7646: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7823} unique __ctobpl_const_7665: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 7772} unique __ctobpl_const_7641: int;

const {:extern} {:model_const "amp_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 7780} unique __ctobpl_const_7645: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7787} unique __ctobpl_const_7651: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7784} unique __ctobpl_const_7648: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7785} unique __ctobpl_const_7649: int;

const {:extern} {:model_const "geomnode_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7805} unique __ctobpl_const_7639: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7787} unique __ctobpl_const_7652: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7787} unique __ctobpl_const_7653: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7792} unique __ctobpl_const_7657: int;

const {:extern} {:model_const "port_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7795} unique __ctobpl_const_7660: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7772} unique __ctobpl_const_7640: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8213: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7821} unique __ctobpl_const_7662: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7774} unique __ctobpl_const_7642: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7780} unique __ctobpl_const_7643: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7821} unique __ctobpl_const_7663: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7795} unique __ctobpl_const_7658: int;

const {:extern} {:model_const "grampexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7831} unique __ctobpl_const_7667: int;

const {:extern} {:model_const "port_app_ptr->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 7780} unique __ctobpl_const_7647: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7790} unique __ctobpl_const_7655: int;

const {:extern} {:model_const "grampexc_ptr->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 7831} unique __ctobpl_const_7668: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 7831} unique __ctobpl_const_7666: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7790} unique __ctobpl_const_7654: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7822} unique __ctobpl_const_7664: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7805} unique __ctobpl_const_7638: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7785} unique __ctobpl_const_7650: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7792} unique __ctobpl_const_7656: int;

const {:extern} {:model_const "app_ptr->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 7780} unique __ctobpl_const_7644: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7870} unique __ctobpl_const_7699: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7885} unique __ctobpl_const_7682: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7870} unique __ctobpl_const_7700: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 7863} unique __ctobpl_const_7693: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7834} unique __ctobpl_const_7670: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7835} unique __ctobpl_const_7671: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7852} unique __ctobpl_const_7681: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 7855} unique __ctobpl_const_7689: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7835} unique __ctobpl_const_7672: int;

const {:extern} {:model_const "geomnode_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7888} unique __ctobpl_const_7687: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7843} unique __ctobpl_const_7673: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7846} unique __ctobpl_const_7678: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7846} unique __ctobpl_const_7675: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7834} unique __ctobpl_const_7669: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7846} unique __ctobpl_const_7676: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7849} unique __ctobpl_const_7679: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 7885} unique __ctobpl_const_7683: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7885} unique __ctobpl_const_7684: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7888} unique __ctobpl_const_7686: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7863} unique __ctobpl_const_7691: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7863} unique __ctobpl_const_7694: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7846} unique __ctobpl_const_7674: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7849} unique __ctobpl_const_7680: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7867} unique __ctobpl_const_7696: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7855} unique __ctobpl_const_7688: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7868} unique __ctobpl_const_7697: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7888} unique __ctobpl_const_7685: int;

const {:extern} {:model_const "port_app_ptr->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 7863} unique __ctobpl_const_7695: int;

const {:extern} {:model_const "app_ptr->AMP"} {:sourceFile ".\v24\space.c"} {:sourceLine 7863} unique __ctobpl_const_7692: int;

const {:extern} {:model_const "primo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7846} unique __ctobpl_const_7677: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7857} unique __ctobpl_const_7690: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7868} unique __ctobpl_const_7698: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6982} unique __ctobpl_const_6693: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6985} unique __ctobpl_const_6697: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6984} unique __ctobpl_const_6696: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6985} unique __ctobpl_const_6700: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6985} unique __ctobpl_const_6699: int;

const {:extern} {:model_const "result.polydef"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6689: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6984} unique __ctobpl_const_6695: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6686: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 6982} unique __ctobpl_const_6694: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6991} unique __ctobpl_const_6705: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6688: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6683: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6980} unique __ctobpl_const_6691: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6684: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6985} unique __ctobpl_const_6698: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6990} unique __ctobpl_const_6701: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6990} unique __ctobpl_const_6702: int;

const {:extern} {:model_const "(* addrem_ptr)->BLOCK_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 6991} unique __ctobpl_const_6706: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6982} unique __ctobpl_const_6692: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6992} unique __ctobpl_const_6707: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6992} unique __ctobpl_const_6708: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 6973} unique __ctobpl_const_6690: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6991} unique __ctobpl_const_6704: int;

const {:extern} {:model_const "(* addrem_ptr)->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 6992} unique __ctobpl_const_6709: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6992} unique __ctobpl_const_6710: int;

const {:extern} {:model_const "(* addrem_ptr)->ADDREM_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 6990} unique __ctobpl_const_6703: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6992} unique __ctobpl_const_6711: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6687: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6993} unique __ctobpl_const_6712: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6682: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6681: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6971} unique __ctobpl_const_6685: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6721: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7019} unique __ctobpl_const_6739: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7024} unique __ctobpl_const_6740: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7024} unique __ctobpl_const_6741: int;

const {:extern} {:model_const "(* addrem_ptr)->ADDREM_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 7024} unique __ctobpl_const_6742: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6995} unique __ctobpl_const_6718: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7016} unique __ctobpl_const_6732: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7025} unique __ctobpl_const_6743: int;

const {:extern} {:model_const "(* addrem_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 6993} unique __ctobpl_const_6714: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6724: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7007} unique __ctobpl_const_6729: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7014} unique __ctobpl_const_6730: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7018} unique __ctobpl_const_6735: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6995} unique __ctobpl_const_6715: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 6995} unique __ctobpl_const_6716: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7019} unique __ctobpl_const_6737: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7019} unique __ctobpl_const_6738: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7025} unique __ctobpl_const_6744: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6993} unique __ctobpl_const_6713: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6995} unique __ctobpl_const_6717: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6726: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6719: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6720: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6725: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7016} unique __ctobpl_const_6731: int;

const {:extern} {:model_const "result.malloc"} {:sourceFile ".\v24\space.c"} {:sourceLine 7016} unique __ctobpl_const_6733: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7018} unique __ctobpl_const_6734: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6723: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7019} unique __ctobpl_const_6736: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6727: int;

const {:extern} {:model_const "result.hexdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6728: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7005} unique __ctobpl_const_6722: int;

const {:extern} {:model_const "(* addrem_ptr)->NODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 7026} unique __ctobpl_const_6748: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7039} unique __ctobpl_const_6762: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7008} unique __ctobpl_const_6765: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7029} unique __ctobpl_const_6757: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7008} unique __ctobpl_const_6764: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7039} unique __ctobpl_const_6761: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6909} unique __ctobpl_const_6770: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6896} unique __ctobpl_const_6772: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6896} unique __ctobpl_const_6773: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8212: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7029} unique __ctobpl_const_6755: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7058} unique __ctobpl_const_6774: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7058} unique __ctobpl_const_6775: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7027} unique __ctobpl_const_6751: int;

const {:extern} {:model_const "(* addrem_ptr)->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7027} unique __ctobpl_const_6753: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7038} unique __ctobpl_const_6758: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7026} unique __ctobpl_const_6747: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7038} unique __ctobpl_const_6759: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7029} unique __ctobpl_const_6754: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7029} unique __ctobpl_const_6756: int;

const {:extern} {:model_const "* node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7026} unique __ctobpl_const_6750: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7039} unique __ctobpl_const_6763: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7039} unique __ctobpl_const_6760: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6974} unique __ctobpl_const_6767: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6942} unique __ctobpl_const_6768: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6942} unique __ctobpl_const_6769: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7026} unique __ctobpl_const_6746: int;

const {:extern} {:model_const "addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6974} unique __ctobpl_const_6766: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 6909} unique __ctobpl_const_6771: int;

const {:extern} {:model_const "node_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7026} unique __ctobpl_const_6749: int;

const {:extern} {:model_const "* addrem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7027} unique __ctobpl_const_6752: int;

const {:extern} {:model_const "(* addrem_ptr)->BLOCK_TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 7025} unique __ctobpl_const_6745: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7078} unique __ctobpl_const_6789: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7072} unique __ctobpl_const_6786: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7078} unique __ctobpl_const_6788: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7078} unique __ctobpl_const_6790: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7078} unique __ctobpl_const_6792: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7082} unique __ctobpl_const_6797: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7086} unique __ctobpl_const_6805: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7078} unique __ctobpl_const_6794: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7082} unique __ctobpl_const_6798: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7078} unique __ctobpl_const_6791: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7066} unique __ctobpl_const_6776: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7072} unique __ctobpl_const_6784: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7079} unique __ctobpl_const_6795: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7082} unique __ctobpl_const_6801: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7066} unique __ctobpl_const_6778: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7069} unique __ctobpl_const_6779: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7072} unique __ctobpl_const_6785: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7082} unique __ctobpl_const_6799: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7082} unique __ctobpl_const_6800: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7083} unique __ctobpl_const_6803: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7086} unique __ctobpl_const_6804: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7072} unique __ctobpl_const_6782: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7078} unique __ctobpl_const_6793: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7086} unique __ctobpl_const_6806: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7086} unique __ctobpl_const_6807: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7073} unique __ctobpl_const_6787: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7082} unique __ctobpl_const_6796: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7072} unique __ctobpl_const_6783: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7066} unique __ctobpl_const_6777: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7082} unique __ctobpl_const_6802: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7072} unique __ctobpl_const_6780: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7072} unique __ctobpl_const_6781: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7094} unique __ctobpl_const_6813: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7094} unique __ctobpl_const_6815: int;

const {:extern} {:model_const "p1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7098} unique __ctobpl_const_6819: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7098} unique __ctobpl_const_6822: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7106} unique __ctobpl_const_6828: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7087} unique __ctobpl_const_6810: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7098} unique __ctobpl_const_6823: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7086} unique __ctobpl_const_6808: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7094} unique __ctobpl_const_6814: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7094} unique __ctobpl_const_6811: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 7098} unique __ctobpl_const_6824: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7094} unique __ctobpl_const_6812: int;

const {:extern} {:model_const "p1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7098} unique __ctobpl_const_6821: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7106} unique __ctobpl_const_6826: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7106} unique __ctobpl_const_6827: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7106} unique __ctobpl_const_6829: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7098} unique __ctobpl_const_6820: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7106} unique __ctobpl_const_6830: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 7086} unique __ctobpl_const_6809: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7094} unique __ctobpl_const_6817: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7106} unique __ctobpl_const_6832: int;

const {:extern} {:model_const "p2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7110} unique __ctobpl_const_6834: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7099} unique __ctobpl_const_6825: int;

const {:extern} {:model_const "p2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7110} unique __ctobpl_const_6836: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7095} unique __ctobpl_const_6818: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7110} unique __ctobpl_const_6837: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7107} unique __ctobpl_const_6833: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7094} unique __ctobpl_const_6816: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7106} unique __ctobpl_const_6831: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7110} unique __ctobpl_const_6835: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7110} unique __ctobpl_const_6838: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 7110} unique __ctobpl_const_6839: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7130} unique __ctobpl_const_6858: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7130} unique __ctobpl_const_6859: int;

const {:extern} {:model_const "q1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7122} unique __ctobpl_const_6851: int;

const {:extern} {:model_const "q2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6867: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6869: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7130} unique __ctobpl_const_6857: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7118} unique __ctobpl_const_6845: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7122} unique __ctobpl_const_6853: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6871: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7118} unique __ctobpl_const_6843: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7131} unique __ctobpl_const_6863: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6865: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6866: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7118} unique __ctobpl_const_6844: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 7122} unique __ctobpl_const_6854: int;

const {:extern} {:model_const "q1_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7122} unique __ctobpl_const_6849: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7130} unique __ctobpl_const_6861: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7118} unique __ctobpl_const_6846: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7111} unique __ctobpl_const_6840: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6864: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7122} unique __ctobpl_const_6852: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7130} unique __ctobpl_const_6860: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7119} unique __ctobpl_const_6848: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7130} unique __ctobpl_const_6856: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7130} unique __ctobpl_const_6862: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6868: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6870: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7118} unique __ctobpl_const_6842: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7118} unique __ctobpl_const_6847: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7118} unique __ctobpl_const_6841: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7122} unique __ctobpl_const_6850: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7123} unique __ctobpl_const_6855: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7088} unique __ctobpl_const_6897: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6874: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7142} unique __ctobpl_const_6879: int;

const {:extern} {:model_const "result.ampval"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6875: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7142} unique __ctobpl_const_6877: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6873: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7136} unique __ctobpl_const_6881: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7136} unique __ctobpl_const_6883: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7112} unique __ctobpl_const_6889: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7112} unique __ctobpl_const_6890: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7135} unique __ctobpl_const_6876: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7100} unique __ctobpl_const_6894: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7100} unique __ctobpl_const_6896: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7088} unique __ctobpl_const_6899: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7088} unique __ctobpl_const_6898: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7124} unique __ctobpl_const_6887: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7088} unique __ctobpl_const_6900: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7136} unique __ctobpl_const_6882: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7142} unique __ctobpl_const_6880: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7136} unique __ctobpl_const_6884: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7124} unique __ctobpl_const_6885: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7124} unique __ctobpl_const_6888: int;

const {:extern} {:model_const "z"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6901: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6902: int;

const {:extern} {:model_const "q2_et_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7134} unique __ctobpl_const_6872: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6903: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7124} unique __ctobpl_const_6886: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7112} unique __ctobpl_const_6891: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7142} unique __ctobpl_const_6878: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7112} unique __ctobpl_const_6892: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7100} unique __ctobpl_const_6893: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7100} unique __ctobpl_const_6895: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7204} unique __ctobpl_const_6935: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6905: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6910: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7183} unique __ctobpl_const_6914: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7197} unique __ctobpl_const_6921: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7197} unique __ctobpl_const_6923: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7198} unique __ctobpl_const_6927: int;

const {:extern} {:model_const "z"} {:sourceFile ".\v24\space.c"} {:sourceLine 7166} unique __ctobpl_const_6913: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7191} unique __ctobpl_const_6916: int;

const {:extern} {:model_const "y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6911: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7191} unique __ctobpl_const_6917: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7191} unique __ctobpl_const_6918: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7197} unique __ctobpl_const_6922: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7197} unique __ctobpl_const_6925: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7203} unique __ctobpl_const_6928: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6904: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7203} unique __ctobpl_const_6929: int;

const {:extern} {:model_const "y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6907: int;

const {:extern} {:model_const "y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6906: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6908: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7197} unique __ctobpl_const_6926: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7203} unique __ctobpl_const_6930: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7203} unique __ctobpl_const_6932: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7197} unique __ctobpl_const_6924: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7203} unique __ctobpl_const_6933: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7203} unique __ctobpl_const_6934: int;

const {:extern} {:model_const "x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6909: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7197} unique __ctobpl_const_6920: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7203} unique __ctobpl_const_6931: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7164} unique __ctobpl_const_6912: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7183} unique __ctobpl_const_6915: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7194} unique __ctobpl_const_6919: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7223} unique __ctobpl_const_6962: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7212} unique __ctobpl_const_6950: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7207} unique __ctobpl_const_6940: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7224} unique __ctobpl_const_6965: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7219} unique __ctobpl_const_6954: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7207} unique __ctobpl_const_6936: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7208} unique __ctobpl_const_6943: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7219} unique __ctobpl_const_6956: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7220} unique __ctobpl_const_6958: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7223} unique __ctobpl_const_6960: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 7211} unique __ctobpl_const_6949: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7211} unique __ctobpl_const_6947: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7211} unique __ctobpl_const_6945: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7219} unique __ctobpl_const_6953: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7207} unique __ctobpl_const_6942: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7219} unique __ctobpl_const_6955: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7207} unique __ctobpl_const_6939: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7207} unique __ctobpl_const_6941: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7211} unique __ctobpl_const_6948: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7219} unique __ctobpl_const_6957: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7219} unique __ctobpl_const_6951: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7223} unique __ctobpl_const_6963: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 7223} unique __ctobpl_const_6964: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7207} unique __ctobpl_const_6938: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7211} unique __ctobpl_const_6946: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7231} unique __ctobpl_const_6966: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7231} unique __ctobpl_const_6967: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7207} unique __ctobpl_const_6937: int;

const {:extern} {:model_const "centre_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7211} unique __ctobpl_const_6944: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7219} unique __ctobpl_const_6952: int;

const {:extern} {:model_const "p1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7223} unique __ctobpl_const_6961: int;

const {:extern} {:model_const "p1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7223} unique __ctobpl_const_6959: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7247} unique __ctobpl_const_6990: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7255} unique __ctobpl_const_6996: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7255} unique __ctobpl_const_6997: int;

const {:extern} {:model_const "q1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7247} unique __ctobpl_const_6991: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7248} unique __ctobpl_const_6995: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7243} unique __ctobpl_const_6983: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7243} unique __ctobpl_const_6984: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7231} unique __ctobpl_const_6970: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7247} unique __ctobpl_const_6992: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7255} unique __ctobpl_const_6998: int;

const {:extern} {:model_const "p2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7235} unique __ctobpl_const_6976: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7235} unique __ctobpl_const_6978: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7231} unique __ctobpl_const_6969: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7236} unique __ctobpl_const_6980: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7231} unique __ctobpl_const_6972: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7232} unique __ctobpl_const_6973: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7243} unique __ctobpl_const_6981: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7243} unique __ctobpl_const_6986: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7243} unique __ctobpl_const_6987: int;

const {:extern} {:model_const "q1_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7247} unique __ctobpl_const_6989: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7255} unique __ctobpl_const_6999: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7247} unique __ctobpl_const_6993: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7231} unique __ctobpl_const_6971: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 7247} unique __ctobpl_const_6994: int;

const {:extern} {:model_const "p2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7235} unique __ctobpl_const_6974: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7235} unique __ctobpl_const_6975: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 7235} unique __ctobpl_const_6979: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7231} unique __ctobpl_const_6968: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7235} unique __ctobpl_const_6977: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7243} unique __ctobpl_const_6982: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7243} unique __ctobpl_const_6985: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7244} unique __ctobpl_const_6988: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7014: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7267} unique __ctobpl_const_7019: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7261} unique __ctobpl_const_7023: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7255} unique __ctobpl_const_7000: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7013: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7237} unique __ctobpl_const_7029: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7237} unique __ctobpl_const_7031: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7261} unique __ctobpl_const_7022: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7255} unique __ctobpl_const_7002: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7008: int;

const {:extern} {:model_const "q2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7012: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7015: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7260} unique __ctobpl_const_7016: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7009: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7267} unique __ctobpl_const_7017: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7006: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7010: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7267} unique __ctobpl_const_7018: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7249} unique __ctobpl_const_7025: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7249} unique __ctobpl_const_7026: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7005: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7249} unique __ctobpl_const_7028: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7237} unique __ctobpl_const_7030: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7256} unique __ctobpl_const_7003: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7004: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7261} unique __ctobpl_const_7021: int;

const {:extern} {:model_const "q2_ep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7007: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7259} unique __ctobpl_const_7011: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7267} unique __ctobpl_const_7020: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7261} unique __ctobpl_const_7024: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7249} unique __ctobpl_const_7027: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7255} unique __ctobpl_const_7001: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7293} unique __ctobpl_const_7043: int;

const {:extern} {:model_const "g_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7301} unique __ctobpl_const_7048: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7301} unique __ctobpl_const_7051: int;

const {:extern} {:model_const "g_app_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7303} unique __ctobpl_const_7055: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7213} unique __ctobpl_const_7038: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7308} unique __ctobpl_const_7057: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 7292} unique __ctobpl_const_7042: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7237} unique __ctobpl_const_7032: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7225} unique __ctobpl_const_7034: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7225} unique __ctobpl_const_7036: int;

const {:extern} {:model_const "g_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7294} unique __ctobpl_const_7045: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7303} unique __ctobpl_const_7056: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7313} unique __ctobpl_const_7060: int;

const {:extern} {:model_const "g_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7316} unique __ctobpl_const_7062: int;

const {:extern} {:model_const "g_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7316} unique __ctobpl_const_7063: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7294} unique __ctobpl_const_7046: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7213} unique __ctobpl_const_7040: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7292} unique __ctobpl_const_7041: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7213} unique __ctobpl_const_7037: int;

const {:extern} {:model_const "g_app_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7303} unique __ctobpl_const_7053: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7225} unique __ctobpl_const_7033: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7308} unique __ctobpl_const_7058: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7313} unique __ctobpl_const_7059: int;

const {:extern} {:model_const "g_app_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 7301} unique __ctobpl_const_7049: int;

const {:extern} {:model_const "g_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7303} unique __ctobpl_const_7054: int;

const {:extern} {:model_const "g_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7316} unique __ctobpl_const_7061: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7225} unique __ctobpl_const_7035: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7213} unique __ctobpl_const_7039: int;

const {:extern} {:model_const "g_app_ptr->GEOMPORT_PTR->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7301} unique __ctobpl_const_7050: int;

const {:extern} {:model_const "g_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7303} unique __ctobpl_const_7052: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 7293} unique __ctobpl_const_7044: int;

const {:extern} {:model_const "g_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7299} unique __ctobpl_const_7047: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7347} unique __ctobpl_const_7075: int;

const {:extern} {:model_const "qmax_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 7350} unique __ctobpl_const_7085: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7358} unique __ctobpl_const_7090: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7073: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7359} unique __ctobpl_const_7092: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 7358} unique __ctobpl_const_7091: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7067: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7071: int;

const {:extern} {:model_const "qmin_ptr->LOC_Q"} {:sourceFile ".\v24\space.c"} {:sourceLine 7349} unique __ctobpl_const_7082: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7349} unique __ctobpl_const_7081: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7350} unique __ctobpl_const_7084: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 7359} unique __ctobpl_const_7093: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 7362} unique __ctobpl_const_7094: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7066: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7347} unique __ctobpl_const_7074: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7348} unique __ctobpl_const_7077: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7350} unique __ctobpl_const_7083: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7362} unique __ctobpl_const_7095: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7353} unique __ctobpl_const_7086: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7353} unique __ctobpl_const_7089: int;

const {:extern} {:model_const "pmax_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 7348} unique __ctobpl_const_7079: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7072: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7068: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7065: int;

const {:extern} {:model_const "pmin_ptr->LOC_P"} {:sourceFile ".\v24\space.c"} {:sourceLine 7347} unique __ctobpl_const_7076: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7348} unique __ctobpl_const_7078: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7349} unique __ctobpl_const_7080: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7070: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7064: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7345} unique __ctobpl_const_7069: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7353} unique __ctobpl_const_7087: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7353} unique __ctobpl_const_7088: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7369} unique __ctobpl_const_7103: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7379} unique __ctobpl_const_7107: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7380} unique __ctobpl_const_7109: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7384} unique __ctobpl_const_7118: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7119: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7379} unique __ctobpl_const_7106: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7383} unique __ctobpl_const_7114: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7362} unique __ctobpl_const_7096: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7369} unique __ctobpl_const_7105: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7123: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7125: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7126: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7127: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7122: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7363} unique __ctobpl_const_7099: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7362} unique __ctobpl_const_7098: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 7381} unique __ctobpl_const_7110: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7381} unique __ctobpl_const_7111: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7369} unique __ctobpl_const_7104: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7383} unique __ctobpl_const_7115: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7369} unique __ctobpl_const_7102: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7382} unique __ctobpl_const_7112: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7364} unique __ctobpl_const_7100: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7384} unique __ctobpl_const_7116: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7384} unique __ctobpl_const_7117: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7120: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7121: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7380} unique __ctobpl_const_7108: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7124: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7382} unique __ctobpl_const_7113: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7366} unique __ctobpl_const_7101: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7362} unique __ctobpl_const_7097: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7155: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7157: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7388} unique __ctobpl_const_7133: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7400} unique __ctobpl_const_7146: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7401} unique __ctobpl_const_7148: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7158: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7387} unique __ctobpl_const_7132: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7387} unique __ctobpl_const_7131: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7396} unique __ctobpl_const_7138: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7397} unique __ctobpl_const_7140: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7399} unique __ctobpl_const_7145: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7401} unique __ctobpl_const_7149: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7153: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 7389} unique __ctobpl_const_7135: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7159: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7151: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7390} unique __ctobpl_const_7136: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7386} unique __ctobpl_const_7129: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7386} unique __ctobpl_const_7130: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7396} unique __ctobpl_const_7139: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7391} unique __ctobpl_const_7137: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7398} unique __ctobpl_const_7143: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7400} unique __ctobpl_const_7147: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7389} unique __ctobpl_const_7134: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7152: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7156: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7385} unique __ctobpl_const_7128: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 7398} unique __ctobpl_const_7142: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7401} unique __ctobpl_const_7150: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7397} unique __ctobpl_const_7141: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7154: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7399} unique __ctobpl_const_7144: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 7406} unique __ctobpl_const_7167: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7418} unique __ctobpl_const_7180: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7417} unique __ctobpl_const_7179: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7413} unique __ctobpl_const_7171: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7403} unique __ctobpl_const_7162: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7407} unique __ctobpl_const_7168: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7408} unique __ctobpl_const_7169: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7406} unique __ctobpl_const_7166: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7404} unique __ctobpl_const_7164: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7416} unique __ctobpl_const_7176: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7418} unique __ctobpl_const_7182: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7186: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7413} unique __ctobpl_const_7170: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7185: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7188: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7190: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 7415} unique __ctobpl_const_7174: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7416} unique __ctobpl_const_7177: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7418} unique __ctobpl_const_7181: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7403} unique __ctobpl_const_7161: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7183: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7184: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7415} unique __ctobpl_const_7175: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7417} unique __ctobpl_const_7178: int;

const {:extern} {:model_const "q"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7189: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7191: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7187: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7404} unique __ctobpl_const_7163: int;

const {:extern} {:model_const "p2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7414} unique __ctobpl_const_7172: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7414} unique __ctobpl_const_7173: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7402} unique __ctobpl_const_7160: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7405} unique __ctobpl_const_7165: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7216: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 7423} unique __ctobpl_const_7199: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7217: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7423} unique __ctobpl_const_7198: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7219: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7422} unique __ctobpl_const_7197: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7221: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7430} unique __ctobpl_const_7202: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7222: int;

const {:extern} {:model_const "pcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7425} unique __ctobpl_const_7201: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7220: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7223: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7433} unique __ctobpl_const_7209: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7419} unique __ctobpl_const_7192: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 7432} unique __ctobpl_const_7206: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7218: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7421} unique __ctobpl_const_7195: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7421} unique __ctobpl_const_7196: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7431} unique __ctobpl_const_7204: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7420} unique __ctobpl_const_7194: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7424} unique __ctobpl_const_7200: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7434} unique __ctobpl_const_7210: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7434} unique __ctobpl_const_7211: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7431} unique __ctobpl_const_7205: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7430} unique __ctobpl_const_7203: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7420} unique __ctobpl_const_7193: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7432} unique __ctobpl_const_7207: int;

const {:extern} {:model_const "q1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7433} unique __ctobpl_const_7208: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7435} unique __ctobpl_const_7212: int;

const {:extern} {:model_const "q2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7435} unique __ctobpl_const_7213: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7435} unique __ctobpl_const_7214: int;

const {:extern} {:model_const "p"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7215: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7440} unique __ctobpl_const_7230: int;

const {:extern} {:model_const "qcorr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7442} unique __ctobpl_const_7233: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7236: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7241: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7441} unique __ctobpl_const_7232: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7243: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7371} unique __ctobpl_const_7244: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7372} unique __ctobpl_const_7247: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7374} unique __ctobpl_const_7249: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7450} unique __ctobpl_const_7252: int;

const {:extern} {:model_const "pmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7451} unique __ctobpl_const_7253: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 7440} unique __ctobpl_const_7231: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7436} unique __ctobpl_const_7224: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7371} unique __ctobpl_const_7245: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7372} unique __ctobpl_const_7246: int;

const {:extern} {:model_const "endvisit"} {:sourceFile ".\v24\space.c"} {:sourceLine 7375} unique __ctobpl_const_7251: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7452} unique __ctobpl_const_7254: int;

const {:extern} {:model_const "cph"} {:sourceFile ".\v24\space.c"} {:sourceLine 7437} unique __ctobpl_const_7225: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7438} unique __ctobpl_const_7228: int;

const {:extern} {:model_const "g"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7238: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7239: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 7437} unique __ctobpl_const_7226: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7242: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7237: int;

const {:extern} {:model_const "nodes_num"} {:sourceFile ".\v24\space.c"} {:sourceLine 7374} unique __ctobpl_const_7250: int;

const {:extern} {:model_const "pmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7234: int;

const {:extern} {:model_const "qmax"} {:sourceFile ".\v24\space.c"} {:sourceLine 7453} unique __ctobpl_const_7255: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7235: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7373} unique __ctobpl_const_7248: int;

const {:extern} {:model_const "cont"} {:sourceFile ".\v24\space.c"} {:sourceLine 7439} unique __ctobpl_const_7229: int;

const {:extern} {:model_const "can"} {:sourceFile ".\v24\space.c"} {:sourceLine 7438} unique __ctobpl_const_7227: int;

const {:extern} {:model_const "qmin"} {:sourceFile ".\v24\space.c"} {:sourceLine 7370} unique __ctobpl_const_7240: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7483} unique __ctobpl_const_7270: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7481} unique __ctobpl_const_7267: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7484} unique __ctobpl_const_7275: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7484} unique __ctobpl_const_7274: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7484} unique __ctobpl_const_7273: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7489} unique __ctobpl_const_7278: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7489} unique __ctobpl_const_7281: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7469} unique __ctobpl_const_7256: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7477} unique __ctobpl_const_7259: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7491} unique __ctobpl_const_7284: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7481} unique __ctobpl_const_7265: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7490} unique __ctobpl_const_7283: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7484} unique __ctobpl_const_7272: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7489} unique __ctobpl_const_7279: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7489} unique __ctobpl_const_7276: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7478} unique __ctobpl_const_7261: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7477} unique __ctobpl_const_7258: int;

const {:extern} {:model_const "* direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7491} unique __ctobpl_const_7285: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7492} unique __ctobpl_const_7286: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7489} unique __ctobpl_const_7282: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7481} unique __ctobpl_const_7264: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7469} unique __ctobpl_const_7257: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7492} unique __ctobpl_const_7287: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7482} unique __ctobpl_const_7269: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7477} unique __ctobpl_const_7260: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7481} unique __ctobpl_const_7268: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7481} unique __ctobpl_const_7262: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7489} unique __ctobpl_const_7277: int;

const {:extern} {:model_const "* direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7483} unique __ctobpl_const_7271: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7489} unique __ctobpl_const_7280: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7481} unique __ctobpl_const_7266: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7481} unique __ctobpl_const_7263: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7516} unique __ctobpl_const_7290: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7299: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7492} unique __ctobpl_const_7288: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7524} unique __ctobpl_const_7292: int;

const {:extern} {:model_const "angle_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7302: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7303: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7524} unique __ctobpl_const_7294: int;

const {:extern} {:model_const "angle_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7301: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7516} unique __ctobpl_const_7291: int;

const {:extern} {:model_const "* omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7528} unique __ctobpl_const_7297: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7306: int;

const {:extern} {:model_const "angle_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7308: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7524} unique __ctobpl_const_7293: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7298: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7310: int;

const {:extern} {:model_const "result.anglerot"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7311: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7543} unique __ctobpl_const_7314: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7316: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7317: int;

const {:extern} {:model_const "angle_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7307: int;

const {:extern} {:model_const "phase_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7319: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7492} unique __ctobpl_const_7289: int;

const {:extern} {:model_const "* omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7543} unique __ctobpl_const_7315: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7318: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7528} unique __ctobpl_const_7296: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7537} unique __ctobpl_const_7313: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7304: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7309: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7300: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7525} unique __ctobpl_const_7295: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7531} unique __ctobpl_const_7305: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7533} unique __ctobpl_const_7312: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7546} unique __ctobpl_const_7330: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7550} unique __ctobpl_const_7331: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7323: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7557} unique __ctobpl_const_7332: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7587} unique __ctobpl_const_7347: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7595} unique __ctobpl_const_7350: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7596} unique __ctobpl_const_7351: int;

const {:extern} {:model_const "* omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7557} unique __ctobpl_const_7333: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7552} unique __ctobpl_const_7342: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7558} unique __ctobpl_const_7334: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7324: int;

const {:extern} {:model_const "result.phaserot"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7329: int;

const {:extern} {:model_const "phase_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7320: int;

const {:extern} {:model_const "phase_step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7326: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7558} unique __ctobpl_const_7336: int;

const {:extern} {:model_const "phase_start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7325: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7328: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7558} unique __ctobpl_const_7335: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7558} unique __ctobpl_const_7337: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7551} unique __ctobpl_const_7338: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7552} unique __ctobpl_const_7343: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7322: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7552} unique __ctobpl_const_7340: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7538} unique __ctobpl_const_7344: int;

const {:extern} {:model_const "* omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7551} unique __ctobpl_const_7339: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7321: int;

const {:extern} {:model_const "* omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7538} unique __ctobpl_const_7345: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7587} unique __ctobpl_const_7346: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7595} unique __ctobpl_const_7348: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7595} unique __ctobpl_const_7349: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7544} unique __ctobpl_const_7327: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 7552} unique __ctobpl_const_7341: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7602} unique __ctobpl_const_7361: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7602} unique __ctobpl_const_7358: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7377: int;

const {:extern} {:model_const "omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7599} unique __ctobpl_const_7354: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7378: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7379: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7602} unique __ctobpl_const_7362: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7608} unique __ctobpl_const_7365: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7375: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7380: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7372: int;

const {:extern} {:model_const "result.serotdir"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7381: int;

const {:extern} {:model_const "omit_angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7598} unique __ctobpl_const_7352: int;

const {:extern} {:model_const "* omit_angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7598} unique __ctobpl_const_7353: int;

const {:extern} {:model_const "* omit_phase_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7599} unique __ctobpl_const_7355: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7602} unique __ctobpl_const_7357: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7602} unique __ctobpl_const_7359: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7608} unique __ctobpl_const_7364: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7602} unique __ctobpl_const_7360: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7608} unique __ctobpl_const_7367: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7608} unique __ctobpl_const_7368: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7608} unique __ctobpl_const_7369: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 7608} unique __ctobpl_const_7370: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7609} unique __ctobpl_const_7371: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7602} unique __ctobpl_const_7356: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7373: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7608} unique __ctobpl_const_7366: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7374: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7615} unique __ctobpl_const_7376: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 7603} unique __ctobpl_const_7363: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7996} unique __ctobpl_const_7839: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 7993} unique __ctobpl_const_7842: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7995} unique __ctobpl_const_7829: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7996} unique __ctobpl_const_7836: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7996} unique __ctobpl_const_7837: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 8002} unique __ctobpl_const_7852: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7995} unique __ctobpl_const_7834: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7998} unique __ctobpl_const_7845: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8001} unique __ctobpl_const_7850: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8002} unique __ctobpl_const_7854: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7992} unique __ctobpl_const_7828: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7995} unique __ctobpl_const_7833: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 7996} unique __ctobpl_const_7835: int;

const {:extern} {:model_const "p1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 7996} unique __ctobpl_const_7840: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7996} unique __ctobpl_const_7841: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 8001} unique __ctobpl_const_7849: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8001} unique __ctobpl_const_7851: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8002} unique __ctobpl_const_7855: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 8002} unique __ctobpl_const_7856: int;

const {:extern} {:model_const "q1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 8002} unique __ctobpl_const_7857: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8002} unique __ctobpl_const_7858: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7995} unique __ctobpl_const_7832: int;

const {:extern} {:model_const "q2_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 8001} unique __ctobpl_const_7848: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 7999} unique __ctobpl_const_7859: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 8001} unique __ctobpl_const_7846: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 8002} unique __ctobpl_const_7853: int;

const {:extern} {:model_const "p1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 7995} unique __ctobpl_const_7830: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 7993} unique __ctobpl_const_7843: int;

const {:extern} {:model_const "p2_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 7995} unique __ctobpl_const_7831: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7996} unique __ctobpl_const_7838: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 7993} unique __ctobpl_const_7844: int;

const {:extern} {:model_const "q1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 8001} unique __ctobpl_const_7847: int;

const {:extern} {:model_const "B"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7890: int;

const {:extern} {:model_const "C"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7891: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7881: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7882: int;

const {:extern} {:model_const "E"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7874: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7880: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7875: int;

const {:extern} {:model_const "B"} {:sourceFile ".\v24\space.c"} {:sourceLine 8007} unique __ctobpl_const_7864: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 8007} unique __ctobpl_const_7865: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7884: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 8009} unique __ctobpl_const_7872: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7876: int;

const {:extern} {:model_const "A"} {:sourceFile ".\v24\space.c"} {:sourceLine 8006} unique __ctobpl_const_7862: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7885: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 8008} unique __ctobpl_const_7868: int;

const {:extern} {:model_const "D"} {:sourceFile ".\v24\space.c"} {:sourceLine 8009} unique __ctobpl_const_7870: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 7999} unique __ctobpl_const_7860: int;

const {:extern} {:model_const "b"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7878: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7883: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8013} unique __ctobpl_const_7886: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 8009} unique __ctobpl_const_7873: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 7999} unique __ctobpl_const_7861: int;

const {:extern} {:model_const "c"} {:sourceFile ".\v24\space.c"} {:sourceLine 8008} unique __ctobpl_const_7867: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7877: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 8010} unique __ctobpl_const_7879: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8013} unique __ctobpl_const_7887: int;

const {:extern} {:model_const "a"} {:sourceFile ".\v24\space.c"} {:sourceLine 8006} unique __ctobpl_const_7863: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8016} unique __ctobpl_const_7888: int;

const {:extern} {:model_const "d"} {:sourceFile ".\v24\space.c"} {:sourceLine 8009} unique __ctobpl_const_7871: int;

const {:extern} {:model_const "A"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7889: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 8008} unique __ctobpl_const_7869: int;

const {:extern} {:model_const "C"} {:sourceFile ".\v24\space.c"} {:sourceLine 8008} unique __ctobpl_const_7866: int;

const {:extern} {:model_const "geomnode_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8043} unique __ctobpl_const_7917: int;

const {:extern} {:model_const "geomport_app_ptr->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 8032} unique __ctobpl_const_7919: int;

const {:extern} {:model_const "phase_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 8032} unique __ctobpl_const_7920: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7905: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8043} unique __ctobpl_const_7916: int;

const {:extern} {:model_const "phase_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7907: int;

const {:extern} {:model_const "geomnode_app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7897: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8032} unique __ctobpl_const_7921: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8032} unique __ctobpl_const_7918: int;

const {:extern} {:model_const "geomnode_app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7906: int;

const {:extern} {:model_const "port_app_ptr->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 8032} unique __ctobpl_const_7922: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8034} unique __ctobpl_const_7923: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8022} unique __ctobpl_const_7910: int;

const {:extern} {:model_const "D"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7892: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7894: int;

const {:extern} {:model_const "C"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7900: int;

const {:extern} {:model_const "D"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7901: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7896: int;

const {:extern} {:model_const "geomnode_app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7895: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8027} unique __ctobpl_const_7914: int;

const {:extern} {:model_const "B"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7899: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8022} unique __ctobpl_const_7911: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8024} unique __ctobpl_const_7912: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7903: int;

const {:extern} {:model_const "A"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7898: int;

const {:extern} {:model_const "result.secorder"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7908: int;

const {:extern} {:model_const "E"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7893: int;

const {:extern} {:model_const "E"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7902: int;

const {:extern} {:model_const "geomnode_app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8019} unique __ctobpl_const_7904: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8022} unique __ctobpl_const_7909: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8024} unique __ctobpl_const_7913: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8043} unique __ctobpl_const_7915: int;

const {:extern} {:model_const "geomport_app_ptr->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8034} unique __ctobpl_const_7924: int;

const {:extern} {:model_const "sign"} {:sourceFile ".\v24\space.c"} {:sourceLine 8081} unique __ctobpl_const_7946: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8039} unique __ctobpl_const_7934: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8035} unique __ctobpl_const_7927: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8085} unique __ctobpl_const_7948: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8085} unique __ctobpl_const_7949: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->OMIT_ANGLE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8085} unique __ctobpl_const_7950: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8085} unique __ctobpl_const_7951: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8085} unique __ctobpl_const_7952: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->OMIT_PHASE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8085} unique __ctobpl_const_7953: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8096} unique __ctobpl_const_7954: int;

const {:extern} {:model_const "geomport_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8039} unique __ctobpl_const_7936: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8056} unique __ctobpl_const_7937: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8078} unique __ctobpl_const_7943: int;

const {:extern} {:model_const "sign"} {:sourceFile ".\v24\space.c"} {:sourceLine 8079} unique __ctobpl_const_7947: int;

const {:extern} {:model_const "port_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8038} unique __ctobpl_const_7933: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8070} unique __ctobpl_const_7941: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8039} unique __ctobpl_const_7935: int;

const {:extern} {:model_const "group_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8070} unique __ctobpl_const_7942: int;

const {:extern} {:model_const "geomport_app_ptr->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8035} unique __ctobpl_const_7928: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->DIRECTION"} {:sourceFile ".\v24\space.c"} {:sourceLine 8078} unique __ctobpl_const_7945: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8065} unique __ctobpl_const_7939: int;

const {:extern} {:model_const "port_app_ptr->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8034} unique __ctobpl_const_7926: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->NPORTS"} {:sourceFile ".\v24\space.c"} {:sourceLine 8065} unique __ctobpl_const_7940: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8038} unique __ctobpl_const_7931: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8034} unique __ctobpl_const_7925: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8038} unique __ctobpl_const_7932: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8065} unique __ctobpl_const_7938: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8078} unique __ctobpl_const_7944: int;

const {:extern} {:model_const "port_app_ptr->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8035} unique __ctobpl_const_7930: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8035} unique __ctobpl_const_7929: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8106} unique __ctobpl_const_7971: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8097} unique __ctobpl_const_7975: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8096} unique __ctobpl_const_7955: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8098} unique __ctobpl_const_7978: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->ANGLE_START"} {:sourceFile ".\v24\space.c"} {:sourceLine 8103} unique __ctobpl_const_7960: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8105} unique __ctobpl_const_7966: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->OMIT_PHASE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8096} unique __ctobpl_const_7956: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8104} unique __ctobpl_const_7961: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8106} unique __ctobpl_const_7969: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8097} unique __ctobpl_const_7973: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8105} unique __ctobpl_const_7965: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8098} unique __ctobpl_const_7979: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->PHASE_STEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 8106} unique __ctobpl_const_7972: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8099} unique __ctobpl_const_7981: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8100} unique __ctobpl_const_7983: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8103} unique __ctobpl_const_7958: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8098} unique __ctobpl_const_7977: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8099} unique __ctobpl_const_7982: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->ANGLE_STEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 8098} unique __ctobpl_const_7980: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8100} unique __ctobpl_const_7984: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8088} unique __ctobpl_const_7985: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8103} unique __ctobpl_const_7959: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->ANGLE_START"} {:sourceFile ".\v24\space.c"} {:sourceLine 8097} unique __ctobpl_const_7976: int;

const {:extern} {:model_const "group_ptr->NUM_OF_NODES"} {:sourceFile ".\v24\space.c"} {:sourceLine 8088} unique __ctobpl_const_7986: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8103} unique __ctobpl_const_7957: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->ANGLE_STEP"} {:sourceFile ".\v24\space.c"} {:sourceLine 8104} unique __ctobpl_const_7964: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8104} unique __ctobpl_const_7963: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8106} unique __ctobpl_const_7970: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8104} unique __ctobpl_const_7962: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8097} unique __ctobpl_const_7974: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->PHASE_START"} {:sourceFile ".\v24\space.c"} {:sourceLine 8105} unique __ctobpl_const_7968: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8105} unique __ctobpl_const_7967: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8093} unique __ctobpl_const_7992: int;

const {:extern} {:model_const "group_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8110} unique __ctobpl_const_8004: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8093} unique __ctobpl_const_7990: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8089} unique __ctobpl_const_7996: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8013: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8093} unique __ctobpl_const_7994: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8089} unique __ctobpl_const_7997: int;

const {:extern} {:model_const "group_ptr->NUM_OF_NODES"} {:sourceFile ".\v24\space.c"} {:sourceLine 8093} unique __ctobpl_const_7993: int;

const {:extern} {:model_const "group_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8112} unique __ctobpl_const_8006: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8090} unique __ctobpl_const_8001: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8014: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8015: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8093} unique __ctobpl_const_7995: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8009: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8011: int;

const {:extern} {:model_const "sign"} {:sourceFile ".\v24\space.c"} {:sourceLine 8093} unique __ctobpl_const_7991: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8016: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8092} unique __ctobpl_const_7989: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8017: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8092} unique __ctobpl_const_7987: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8092} unique __ctobpl_const_7988: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8089} unique __ctobpl_const_7998: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8090} unique __ctobpl_const_7999: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8090} unique __ctobpl_const_8002: int;

const {:extern} {:model_const "sign"} {:sourceFile ".\v24\space.c"} {:sourceLine 8090} unique __ctobpl_const_8000: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8010: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8110} unique __ctobpl_const_8003: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8007: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8018: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8012: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8112} unique __ctobpl_const_8005: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8113} unique __ctobpl_const_8008: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8025: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8128} unique __ctobpl_const_8043: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8027: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8127} unique __ctobpl_const_8039: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8023: int;

const {:extern} {:model_const "phase_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8021: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8026: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8022: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8029: int;

const {:extern} {:model_const "angle_start"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8019: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8030: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8127} unique __ctobpl_const_8035: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 8127} unique __ctobpl_const_8037: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8127} unique __ctobpl_const_8038: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8128} unique __ctobpl_const_8046: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8128} unique __ctobpl_const_8047: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8115} unique __ctobpl_const_8031: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8116} unique __ctobpl_const_8034: int;

const {:extern} {:model_const "phase_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8028: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8024: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 8127} unique __ctobpl_const_8041: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8128} unique __ctobpl_const_8042: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8128} unique __ctobpl_const_8044: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8129} unique __ctobpl_const_8049: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8129} unique __ctobpl_const_8050: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8128} unique __ctobpl_const_8048: int;

const {:extern} {:model_const "angle_step"} {:sourceFile ".\v24\space.c"} {:sourceLine 8111} unique __ctobpl_const_8020: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8115} unique __ctobpl_const_8032: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8127} unique __ctobpl_const_8040: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8115} unique __ctobpl_const_8033: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8128} unique __ctobpl_const_8045: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8127} unique __ctobpl_const_8036: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8190} unique __ctobpl_const_8074: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8133} unique __ctobpl_const_8057: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8179} unique __ctobpl_const_8077: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 8179} unique __ctobpl_const_8079: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8179} unique __ctobpl_const_8080: int;

const {:extern} {:model_const "port_app_ptr->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 8179} unique __ctobpl_const_8081: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8129} unique __ctobpl_const_8051: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8160} unique __ctobpl_const_8063: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8129} unique __ctobpl_const_8055: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8129} unique __ctobpl_const_8052: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8169} unique __ctobpl_const_8068: int;

const {:extern} {:model_const "geomnode_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8133} unique __ctobpl_const_8058: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8211: int;

const {:extern} {:model_const "grphaexc_ptr->UNIF_VAL"} {:sourceFile ".\v24\space.c"} {:sourceLine 8160} unique __ctobpl_const_8064: int;

const {:extern} {:model_const "unif_val"} {:sourceFile ".\v24\space.c"} {:sourceLine 8160} unique __ctobpl_const_8062: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8129} unique __ctobpl_const_8053: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8166} unique __ctobpl_const_8067: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8171} unique __ctobpl_const_8071: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8174} unique __ctobpl_const_8073: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8190} unique __ctobpl_const_8075: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8129} unique __ctobpl_const_8054: int;

const {:extern} {:model_const "geomnode_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8190} unique __ctobpl_const_8076: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8150} unique __ctobpl_const_8059: int;

const {:extern} {:model_const "geomport_app_ptr->PSH"} {:sourceFile ".\v24\space.c"} {:sourceLine 8179} unique __ctobpl_const_8078: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8152} unique __ctobpl_const_8061: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8163} unique __ctobpl_const_8066: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8163} unique __ctobpl_const_8065: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8169} unique __ctobpl_const_8069: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8133} unique __ctobpl_const_8056: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8169} unique __ctobpl_const_8070: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8151} unique __ctobpl_const_8060: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8171} unique __ctobpl_const_8072: int;

const {:extern} {:model_const "XD"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8111: int;

const {:extern} {:model_const "result.dcos"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8113: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8185} unique __ctobpl_const_8091: int;

const {:extern} {:model_const "YD"} {:sourceFile ".\v24\space.c"} {:sourceLine 8225} unique __ctobpl_const_8103: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8224} unique __ctobpl_const_8101: int;

const {:extern} {:model_const "start_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8215} unique __ctobpl_const_8097: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8108: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8185} unique __ctobpl_const_8090: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8186} unique __ctobpl_const_8093: int;

const {:extern} {:model_const "app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8224} unique __ctobpl_const_8102: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8109: int;

const {:extern} {:model_const "XC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8112: int;

const {:extern} {:model_const "XE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8110: int;

const {:extern} {:model_const "port_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8185} unique __ctobpl_const_8092: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8181} unique __ctobpl_const_8084: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8222} unique __ctobpl_const_8099: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8225} unique __ctobpl_const_8104: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8182} unique __ctobpl_const_8088: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8186} unique __ctobpl_const_8094: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8182} unique __ctobpl_const_8086: int;

const {:extern} {:model_const "geomport_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8186} unique __ctobpl_const_8095: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8181} unique __ctobpl_const_8082: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8215} unique __ctobpl_const_8096: int;

const {:extern} {:model_const "port_app_ptr->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8181} unique __ctobpl_const_8085: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8218} unique __ctobpl_const_8098: int;

const {:extern} {:model_const "geomport_app_ptr->PSC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8181} unique __ctobpl_const_8083: int;

const {:extern} {:model_const "port_app_ptr->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8182} unique __ctobpl_const_8089: int;

const {:extern} {:model_const "XD"} {:sourceFile ".\v24\space.c"} {:sourceLine 8224} unique __ctobpl_const_8100: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8106: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8107: int;

const {:extern} {:model_const "geomport_app_ptr->PPA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8182} unique __ctobpl_const_8087: int;

const {:extern} {:model_const "app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8225} unique __ctobpl_const_8105: int;

const {:extern} {:model_const "app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8235} unique __ctobpl_const_8131: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8267} unique __ctobpl_const_8143: int;

const {:extern} {:model_const "group_ptr->GRAMPEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8267} unique __ctobpl_const_8144: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8267} unique __ctobpl_const_8145: int;

const {:extern} {:model_const "YD"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8114: int;

const {:extern} {:model_const "XE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8235} unique __ctobpl_const_8132: int;

const {:extern} {:model_const "YE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8236} unique __ctobpl_const_8135: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8119: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8118: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8236} unique __ctobpl_const_8133: int;

const {:extern} {:model_const "XC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8117: int;

const {:extern} {:model_const "YD"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8126: int;

const {:extern} {:model_const "XD"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8123: int;

const {:extern} {:model_const "app_ptr->PHEA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8240} unique __ctobpl_const_8137: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 8240} unique __ctobpl_const_8138: int;

const {:extern} {:model_const "result.dsin"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8125: int;

const {:extern} {:model_const "result.dcos"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8128: int;

const {:extern} {:model_const "app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 8236} unique __ctobpl_const_8134: int;

const {:extern} {:model_const "YC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8129: int;

const {:extern} {:model_const "YC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8127: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8240} unique __ctobpl_const_8136: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8235} unique __ctobpl_const_8130: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8243} unique __ctobpl_const_8139: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8120: int;

const {:extern} {:model_const "app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8243} unique __ctobpl_const_8141: int;

const {:extern} {:model_const "phi"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8121: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8260} unique __ctobpl_const_8142: int;

const {:extern} {:model_const "result.dsin"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8116: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8243} unique __ctobpl_const_8140: int;

const {:extern} {:model_const "YC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8231} unique __ctobpl_const_8115: int;

const {:extern} {:model_const "YE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8122: int;

const {:extern} {:model_const "XC"} {:sourceFile ".\v24\space.c"} {:sourceLine 8232} unique __ctobpl_const_8124: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8172: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8175: int;

const {:extern} {:model_const "result.sgrampun"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8165: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8270} unique __ctobpl_const_8147: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8153: int;

const {:extern} {:model_const "group_ptr->GRAMPEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8176: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8177: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8169: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8173: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8162: int;

const {:extern} {:model_const "group_ptr->GRAMPEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8270} unique __ctobpl_const_8148: int;

const {:extern} {:model_const "group_ptr->GRAMPEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8151: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8150: int;

const {:extern} {:model_const "group_ptr->GRAMPEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8167: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8161: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8155: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8160: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8170: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8159: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8152: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8163: int;

const {:extern} {:model_const "group_ptr->GRAMPEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8158: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8171: int;

const {:extern} {:model_const "group_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8174: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8157: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8156: int;

const {:extern} {:model_const "group_ptr->GRAMPEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8267} unique __ctobpl_const_8146: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8164: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8166: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8168: int;

const {:extern} {:model_const "group_ptr->GRAMPEXC_PTR->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8270} unique __ctobpl_const_8149: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8273} unique __ctobpl_const_8154: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8184: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8300} unique __ctobpl_const_8188: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8207: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8208: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8310} unique __ctobpl_const_8193: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8333} unique __ctobpl_const_8202: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8209: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8182: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8181: int;

const {:extern} {:model_const "group_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8183: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8330} unique __ctobpl_const_8199: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8178: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8333} unique __ctobpl_const_8203: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8327} unique __ctobpl_const_8197: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8310} unique __ctobpl_const_8192: int;

const {:extern} {:model_const "result.addscan"} {:sourceFile ".\v24\space.c"} {:sourceLine 8310} unique __ctobpl_const_8194: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8180: int;

const {:extern} {:model_const "result.sgramp2n"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8185: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8307} unique __ctobpl_const_8190: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8313} unique __ctobpl_const_8196: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8330} unique __ctobpl_const_8200: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8277} unique __ctobpl_const_8179: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8284} unique __ctobpl_const_8186: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8285} unique __ctobpl_const_8187: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8307} unique __ctobpl_const_8189: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8312} unique __ctobpl_const_8195: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8330} unique __ctobpl_const_8198: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8330} unique __ctobpl_const_8201: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8333} unique __ctobpl_const_8204: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8205: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8310} unique __ctobpl_const_8191: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8206: int;

const {:extern} {:model_const "pmin_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7910} unique __ctobpl_const_7712: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7932} unique __ctobpl_const_7728: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7913} unique __ctobpl_const_7722: int;

const {:extern} {:model_const "p2_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 7933} unique __ctobpl_const_7730: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7933} unique __ctobpl_const_7731: int;

const {:extern} {:model_const "grphaexc_ptr->P2_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 7933} unique __ctobpl_const_7732: int;

const {:extern} {:model_const "grphaexc_ptr->P1_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 7932} unique __ctobpl_const_7729: int;

const {:extern} {:model_const "app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7873} unique __ctobpl_const_7703: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7873} unique __ctobpl_const_7702: int;

const {:extern} {:model_const "pmax_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7911} unique __ctobpl_const_7715: int;

const {:extern} {:model_const "grphaexc_ptr->CENTRE"} {:sourceFile ".\v24\space.c"} {:sourceLine 7931} unique __ctobpl_const_7726: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7878} unique __ctobpl_const_7706: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7907} unique __ctobpl_const_7709: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7912} unique __ctobpl_const_7719: int;

const {:extern} {:model_const "port_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7878} unique __ctobpl_const_7708: int;

const {:extern} {:model_const "qmin_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7912} unique __ctobpl_const_7720: int;

const {:extern} {:model_const "pmax_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7911} unique __ctobpl_const_7717: int;

const {:extern} {:model_const "qmax_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7913} unique __ctobpl_const_7723: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 7931} unique __ctobpl_const_7724: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8210: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7910} unique __ctobpl_const_7713: int;

const {:extern} {:model_const "ultimo_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7875} unique __ctobpl_const_7704: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7878} unique __ctobpl_const_7707: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7908} unique __ctobpl_const_7710: int;

const {:extern} {:model_const "ultimo_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7875} unique __ctobpl_const_7705: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7909} unique __ctobpl_const_7711: int;

const {:extern} {:model_const "pmin_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7910} unique __ctobpl_const_7714: int;

const {:extern} {:model_const "qmin_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7912} unique __ctobpl_const_7718: int;

const {:extern} {:model_const "qmax_tp"} {:sourceFile ".\v24\space.c"} {:sourceLine 7913} unique __ctobpl_const_7721: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7911} unique __ctobpl_const_7716: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7931} unique __ctobpl_const_7725: int;

const {:extern} {:model_const "p1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 7932} unique __ctobpl_const_7727: int;

const {:extern} {:model_const "Hx[7]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7972} unique __ctobpl_const_7755: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 7953} unique __ctobpl_const_7740: int;

const {:extern} {:model_const "Hy[4]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7975} unique __ctobpl_const_7762: int;

const {:extern} {:model_const "Hx[5]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7968} unique __ctobpl_const_7746: int;

const {:extern} {:model_const "Hx[3]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7974} unique __ctobpl_const_7760: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7956} unique __ctobpl_const_7741: int;

const {:extern} {:model_const "q1_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 7934} unique __ctobpl_const_7733: int;

const {:extern} {:model_const "p1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7969} unique __ctobpl_const_7747: int;

const {:extern} {:model_const "Hy[5]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7969} unique __ctobpl_const_7748: int;

const {:extern} {:model_const "Hy[6]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7973} unique __ctobpl_const_7757: int;

const {:extern} {:model_const "Hy[2]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7971} unique __ctobpl_const_7752: int;

const {:extern} {:model_const "q1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7972} unique __ctobpl_const_7753: int;

const {:extern} {:model_const "p2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7971} unique __ctobpl_const_7751: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7956} unique __ctobpl_const_7742: int;

const {:extern} {:model_const "p1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7968} unique __ctobpl_const_7745: int;

const {:extern} {:model_const "Hx[6]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7972} unique __ctobpl_const_7754: int;

const {:extern} {:model_const "q1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7973} unique __ctobpl_const_7756: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7934} unique __ctobpl_const_7734: int;

const {:extern} {:model_const "q2_ep"} {:sourceFile ".\v24\space.c"} {:sourceLine 7935} unique __ctobpl_const_7736: int;

const {:extern} {:model_const "group_shape"} {:sourceFile ".\v24\space.c"} {:sourceLine 7940} unique __ctobpl_const_7739: int;

const {:extern} {:model_const "p2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7970} unique __ctobpl_const_7749: int;

const {:extern} {:model_const "Hx[4]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7974} unique __ctobpl_const_7759: int;

const {:extern} {:model_const "q2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7975} unique __ctobpl_const_7761: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7976} unique __ctobpl_const_7763: int;

const {:extern} {:model_const "Hx[1]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7976} unique __ctobpl_const_7764: int;

const {:extern} {:model_const "grphaexc_ptr->Q2_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 7935} unique __ctobpl_const_7738: int;

const {:extern} {:model_const "grphaexc_ptr->Q1_EP"} {:sourceFile ".\v24\space.c"} {:sourceLine 7934} unique __ctobpl_const_7735: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7957} unique __ctobpl_const_7743: int;

const {:extern} {:model_const "q2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7974} unique __ctobpl_const_7758: int;

const {:extern} {:model_const "grphaexc_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7935} unique __ctobpl_const_7737: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7957} unique __ctobpl_const_7744: int;

const {:extern} {:model_const "Hx[2]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7970} unique __ctobpl_const_7750: int;

const {:extern} {:model_const "p1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7943} unique __ctobpl_const_7790: int;

const {:extern} {:model_const "* pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7943} unique __ctobpl_const_7792: int;

const {:extern} {:model_const "Hy[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7961} unique __ctobpl_const_7773: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7787: int;

const {:extern} {:model_const "(* pmin_ptr)->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7943} unique __ctobpl_const_7793: int;

const {:extern} {:model_const "* pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7944} unique __ctobpl_const_7796: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7961} unique __ctobpl_const_7774: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7960} unique __ctobpl_const_7770: int;

const {:extern} {:model_const "Hx[i]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7960} unique __ctobpl_const_7769: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7785: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7788: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7960} unique __ctobpl_const_7768: int;

const {:extern} {:model_const "geomnode_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 7962} unique __ctobpl_const_7778: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7782: int;

const {:extern} {:model_const "p2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7944} unique __ctobpl_const_7794: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7977} unique __ctobpl_const_7765: int;

const {:extern} {:model_const "geomnode_app_ptr->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7961} unique __ctobpl_const_7775: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7943} unique __ctobpl_const_7791: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7961} unique __ctobpl_const_7772: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7962} unique __ctobpl_const_7776: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7789: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7786: int;

const {:extern} {:model_const "pmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7944} unique __ctobpl_const_7795: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7959} unique __ctobpl_const_7767: int;

const {:extern} {:model_const "Hy[1]"} {:sourceFile ".\v24\space.c"} {:sourceLine 7977} unique __ctobpl_const_7766: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7962} unique __ctobpl_const_7777: int;

const {:extern} {:model_const "pmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7781: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7783: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7784: int;

const {:extern} {:model_const "geomnode_app_ptr->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7960} unique __ctobpl_const_7771: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 7957} unique __ctobpl_const_7779: int;

const {:extern} {:model_const "geomnode_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7942} unique __ctobpl_const_7780: int;

const {:extern} {:model_const "p1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7948} unique __ctobpl_const_7810: int;

const {:extern} {:model_const "q2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7950} unique __ctobpl_const_7814: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7986} unique __ctobpl_const_7825: int;

const {:extern} {:model_const "q2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7946} unique __ctobpl_const_7802: int;

const {:extern} {:model_const "p1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7952} unique __ctobpl_const_7819: int;

const {:extern} {:model_const "e"} {:sourceFile ".\v24\space.c"} {:sourceLine 7988} unique __ctobpl_const_7826: int;

const {:extern} {:model_const "centre"} {:sourceFile ".\v24\space.c"} {:sourceLine 7988} unique __ctobpl_const_7827: int;

const {:extern} {:model_const "q2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7947} unique __ctobpl_const_7808: int;

const {:extern} {:model_const "qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7946} unique __ctobpl_const_7803: int;

const {:extern} {:model_const "* qmax_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7946} unique __ctobpl_const_7804: int;

const {:extern} {:model_const "q1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7947} unique __ctobpl_const_7807: int;

const {:extern} {:model_const "(* qmin_ptr)->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7945} unique __ctobpl_const_7801: int;

const {:extern} {:model_const "q1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7949} unique __ctobpl_const_7811: int;

const {:extern} {:model_const "* qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7945} unique __ctobpl_const_7800: int;

const {:extern} {:model_const "(* qmax_ptr)->YA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7946} unique __ctobpl_const_7805: int;

const {:extern} {:model_const "p2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7948} unique __ctobpl_const_7809: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7951} unique __ctobpl_const_7816: int;

const {:extern} {:model_const "cey"} {:sourceFile ".\v24\space.c"} {:sourceLine 7952} unique __ctobpl_const_7818: int;

const {:extern} {:model_const "qmin_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 7945} unique __ctobpl_const_7799: int;

const {:extern} {:model_const "p1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7949} unique __ctobpl_const_7812: int;

const {:extern} {:model_const "p1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7947} unique __ctobpl_const_7806: int;

const {:extern} {:model_const "q1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7950} unique __ctobpl_const_7815: int;

const {:extern} {:model_const "q1x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7951} unique __ctobpl_const_7817: int;

const {:extern} {:model_const "(* pmax_ptr)->XA"} {:sourceFile ".\v24\space.c"} {:sourceLine 7944} unique __ctobpl_const_7797: int;

const {:extern} {:model_const "q1y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7945} unique __ctobpl_const_7798: int;

const {:extern} {:model_const "x1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7985} unique __ctobpl_const_7820: int;

const {:extern} {:model_const "p2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7985} unique __ctobpl_const_7821: int;

const {:extern} {:model_const "cex"} {:sourceFile ".\v24\space.c"} {:sourceLine 7985} unique __ctobpl_const_7822: int;

const {:extern} {:model_const "y1"} {:sourceFile ".\v24\space.c"} {:sourceLine 7986} unique __ctobpl_const_7823: int;

const {:extern} {:model_const "p2x"} {:sourceFile ".\v24\space.c"} {:sourceLine 7949} unique __ctobpl_const_7813: int;

const {:extern} {:model_const "q2y"} {:sourceFile ".\v24\space.c"} {:sourceLine 7986} unique __ctobpl_const_7824: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8344} unique __ctobpl_const_8242: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8344} unique __ctobpl_const_8243: int;

const {:extern} {:model_const "result.sgrphasr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8344} unique __ctobpl_const_8244: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8352} unique __ctobpl_const_8245: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8236: int;

const {:extern} {:model_const "group_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8229: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8218: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8227: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8224: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8219: int;

const {:extern} {:model_const "result.sgrphaun"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8220: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8215: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8233: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8221: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8232: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8222: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8214: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8226: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8230: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8235: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8237: int;

const {:extern} {:model_const "group_ptr->SHAPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8238: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8217: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8225: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8228: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8239: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8336} unique __ctobpl_const_8216: int;

const {:extern} {:model_const "result.sgrpha2n"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8240: int;

const {:extern} {:model_const "group_ptr->GRPHAEXC_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8231: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8223: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8340} unique __ctobpl_const_8234: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8344} unique __ctobpl_const_8241: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8401} unique __ctobpl_const_8267: int;

const {:extern} {:model_const "geomport_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8402} unique __ctobpl_const_8271: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8392} unique __ctobpl_const_8254: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8384} unique __ctobpl_const_8247: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8406} unique __ctobpl_const_8259: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8402} unique __ctobpl_const_8269: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8392} unique __ctobpl_const_8257: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8402} unique __ctobpl_const_8270: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8423} unique __ctobpl_const_8272: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8423} unique __ctobpl_const_8273: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8395} unique __ctobpl_const_8258: int;

const {:extern} {:model_const "geometry_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8429} unique __ctobpl_const_8274: int;

const {:extern} {:model_const "geometry"} {:sourceFile ".\v24\space.c"} {:sourceLine 8429} unique __ctobpl_const_8275: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8430} unique __ctobpl_const_8276: int;

const {:extern} {:model_const "group_ptr->GEOMNODE_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8384} unique __ctobpl_const_8249: int;

const {:extern} {:model_const "geomnode_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8406} unique __ctobpl_const_8261: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8390} unique __ctobpl_const_8252: int;

const {:extern} {:model_const "geomport_app_ptr->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 8398} unique __ctobpl_const_8263: int;

const {:extern} {:model_const "geomnode_app_ptr->GEOMPORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8390} unique __ctobpl_const_8253: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8387} unique __ctobpl_const_8250: int;

const {:extern} {:model_const "geomnode_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8406} unique __ctobpl_const_8260: int;

const {:extern} {:model_const "port_app_ptr->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 8398} unique __ctobpl_const_8265: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8390} unique __ctobpl_const_8251: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8398} unique __ctobpl_const_8264: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8384} unique __ctobpl_const_8248: int;

const {:extern} {:model_const "port_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8401} unique __ctobpl_const_8266: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8353} unique __ctobpl_const_8246: int;

const {:extern} {:model_const "group_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8392} unique __ctobpl_const_8255: int;

const {:extern} {:model_const "port_app_ptr->NEXT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8401} unique __ctobpl_const_8268: int;

const {:extern} {:model_const "group_ptr->ELEM_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8392} unique __ctobpl_const_8256: int;

const {:extern} {:model_const "geomport_app_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8398} unique __ctobpl_const_8262: int;

const {:extern} {:model_const "phepol"} {:sourceFile ".\v24\space.c"} {:sourceLine 8444} unique __ctobpl_const_8305: int;

const {:extern} {:model_const "exp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8436} unique __ctobpl_const_8289: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8446} unique __ctobpl_const_8308: int;

const {:extern} {:model_const "anglee_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8437} unique __ctobpl_const_8290: int;

const {:extern} {:model_const "exp_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8436} unique __ctobpl_const_8288: int;

const {:extern} {:model_const "anglee"} {:sourceFile ".\v24\space.c"} {:sourceLine 8437} unique __ctobpl_const_8291: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 8432} unique __ctobpl_const_8281: int;

const {:extern} {:model_const "polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8443} unique __ctobpl_const_8302: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 8433} unique __ctobpl_const_8283: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8439} unique __ctobpl_const_8295: int;

const {:extern} {:model_const "model"} {:sourceFile ".\v24\space.c"} {:sourceLine 8435} unique __ctobpl_const_8287: int;

const {:extern} {:model_const "angleh"} {:sourceFile ".\v24\space.c"} {:sourceLine 8438} unique __ctobpl_const_8293: int;

const {:extern} {:model_const "model_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8435} unique __ctobpl_const_8286: int;

const {:extern} {:model_const "pqdim_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8434} unique __ctobpl_const_8284: int;

const {:extern} {:model_const "angleh_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8438} unique __ctobpl_const_8292: int;

const {:extern} {:model_const "taperh_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8441} unique __ctobpl_const_8298: int;

const {:extern} {:model_const "taper_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8442} unique __ctobpl_const_8300: int;

const {:extern} {:model_const "taper_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8442} unique __ctobpl_const_8301: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8432} unique __ctobpl_const_8280: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8439} unique __ctobpl_const_8294: int;

const {:extern} {:model_const "tapere_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8440} unique __ctobpl_const_8296: int;

const {:extern} {:model_const "taperh"} {:sourceFile ".\v24\space.c"} {:sourceLine 8441} unique __ctobpl_const_8299: int;

const {:extern} {:model_const "polarization"} {:sourceFile ".\v24\space.c"} {:sourceLine 8443} unique __ctobpl_const_8303: int;

const {:extern} {:model_const "pqdim_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8434} unique __ctobpl_const_8285: int;

const {:extern} {:model_const "radius_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8431} unique __ctobpl_const_8278: int;

const {:extern} {:model_const "radius_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8431} unique __ctobpl_const_8279: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8444} unique __ctobpl_const_8304: int;

const {:extern} {:model_const "tapere"} {:sourceFile ".\v24\space.c"} {:sourceLine 8440} unique __ctobpl_const_8297: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8433} unique __ctobpl_const_8282: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8445} unique __ctobpl_const_8306: int;

const {:extern} {:model_const "phepol_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8445} unique __ctobpl_const_8307: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 8430} unique __ctobpl_const_8277: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8457} unique __ctobpl_const_8318: int;

const {:extern} {:model_const "gain_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8448} unique __ctobpl_const_8312: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8326: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8328: int;

const {:extern} {:model_const "gain"} {:sourceFile ".\v24\space.c"} {:sourceLine 8447} unique __ctobpl_const_8311: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8329: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8450} unique __ctobpl_const_8316: int;

const {:extern} {:model_const "pqdim_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8330: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8333: int;

const {:extern} {:model_const "geometry_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8334: int;

const {:extern} {:model_const "radius_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8335: int;

const {:extern} {:model_const "radius_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8336: int;

const {:extern} {:model_const "p_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8450} unique __ctobpl_const_8317: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8323: int;

const {:extern} {:model_const "gain_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8448} unique __ctobpl_const_8313: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8457} unique __ctobpl_const_8319: int;

const {:extern} {:model_const "geometry_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8325: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8324: int;

const {:extern} {:model_const "pdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8337: int;

const {:extern} {:model_const "nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8449} unique __ctobpl_const_8314: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8457} unique __ctobpl_const_8320: int;

const {:extern} {:model_const "pqdim_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8339: int;

const {:extern} {:model_const "qdim_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8338: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8340: int;

const {:extern} {:model_const "radius_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8327: int;

const {:extern} {:model_const "gain_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8447} unique __ctobpl_const_8310: int;

const {:extern} {:model_const "nports"} {:sourceFile ".\v24\space.c"} {:sourceLine 8449} unique __ctobpl_const_8315: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8458} unique __ctobpl_const_8321: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8322: int;

const {:extern} {:model_const "direction"} {:sourceFile ".\v24\space.c"} {:sourceLine 8446} unique __ctobpl_const_8309: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8331: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8332: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8355: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8361: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8465} unique __ctobpl_const_8342: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8353: int;

const {:extern} {:model_const "result.polspec"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8362: int;

const {:extern} {:model_const "* polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8496} unique __ctobpl_const_8366: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8497} unique __ctobpl_const_8367: int;

const {:extern} {:model_const "polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8357: int;

const {:extern} {:model_const "* phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8497} unique __ctobpl_const_8368: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8498} unique __ctobpl_const_8369: int;

const {:extern} {:model_const "* phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8498} unique __ctobpl_const_8370: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8499} unique __ctobpl_const_8371: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8359: int;

const {:extern} {:model_const "* direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8499} unique __ctobpl_const_8372: int;

const {:extern} {:model_const "* model_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8477} unique __ctobpl_const_8345: int;

const {:extern} {:model_const "model_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8477} unique __ctobpl_const_8344: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8484} unique __ctobpl_const_8346: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8348: int;

const {:extern} {:model_const "result.geomspec"} {:sourceFile ".\v24\space.c"} {:sourceLine 8462} unique __ctobpl_const_8341: int;

const {:extern} {:model_const "direction_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8360: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8351: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8347: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8356: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8349: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8354: int;

const {:extern} {:model_const "phepol_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8358: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8489} unique __ctobpl_const_8363: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8495} unique __ctobpl_const_8364: int;

const {:extern} {:model_const "polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8496} unique __ctobpl_const_8365: int;

const {:extern} {:model_const "phepol_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8352: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8469} unique __ctobpl_const_8343: int;

const {:extern} {:model_const "polarization_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8485} unique __ctobpl_const_8350: int;

const {:extern} {:model_const "result.portspec"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8390: int;

const {:extern} {:model_const "* gain_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8506} unique __ctobpl_const_8377: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8520} unique __ctobpl_const_8392: int;

const {:extern} {:model_const "* gain_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8505} unique __ctobpl_const_8375: int;

const {:extern} {:model_const "gain_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8506} unique __ctobpl_const_8376: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8511} unique __ctobpl_const_8378: int;

const {:extern} {:model_const "nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8382: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8384: int;

const {:extern} {:model_const "nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8521} unique __ctobpl_const_8393: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8522} unique __ctobpl_const_8395: int;

const {:extern} {:model_const "* port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8522} unique __ctobpl_const_8396: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8523} unique __ctobpl_const_8397: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8515} unique __ctobpl_const_8391: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8380: int;

const {:extern} {:model_const "gain_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8505} unique __ctobpl_const_8374: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8529} unique __ctobpl_const_8399: int;

const {:extern} {:model_const "(* elem_ptr)->TYPE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8529} unique __ctobpl_const_8400: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8530} unique __ctobpl_const_8401: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8530} unique __ctobpl_const_8402: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8379: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8381: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8385: int;

const {:extern} {:model_const "nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8387: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8529} unique __ctobpl_const_8398: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8530} unique __ctobpl_const_8403: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8530} unique __ctobpl_const_8404: int;

const {:extern} {:model_const "* nports_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8521} unique __ctobpl_const_8394: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8383: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8386: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8388: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8500} unique __ctobpl_const_8373: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8512} unique __ctobpl_const_8389: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8532} unique __ctobpl_const_8405: int;

const {:extern} {:model_const "geometry"} {:sourceFile ".\v24\space.c"} {:sourceLine 8532} unique __ctobpl_const_8408: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8534} unique __ctobpl_const_8413: int;

const {:extern} {:model_const "(* elem_ptr)->GEOMETRY"} {:sourceFile ".\v24\space.c"} {:sourceLine 8532} unique __ctobpl_const_8407: int;

const {:extern} {:model_const "pdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 8535} unique __ctobpl_const_8420: int;

const {:extern} {:model_const "radius"} {:sourceFile ".\v24\space.c"} {:sourceLine 8533} unique __ctobpl_const_8412: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8535} unique __ctobpl_const_8418: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8536} unique __ctobpl_const_8421: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8534} unique __ctobpl_const_8414: int;

const {:extern} {:model_const "(* elem_ptr)->QDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 8536} unique __ctobpl_const_8423: int;

const {:extern} {:model_const "pqdim_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8537} unique __ctobpl_const_8428: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8533} unique __ctobpl_const_8409: int;

const {:extern} {:model_const "(* elem_ptr)->RADIUS"} {:sourceFile ".\v24\space.c"} {:sourceLine 8533} unique __ctobpl_const_8411: int;

const {:extern} {:model_const "radius_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8534} unique __ctobpl_const_8416: int;

const {:extern} {:model_const "(* elem_ptr)->PDIM"} {:sourceFile ".\v24\space.c"} {:sourceLine 8535} unique __ctobpl_const_8419: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8538} unique __ctobpl_const_8429: int;

const {:extern} {:model_const "(* elem_ptr)->PQDIM_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8537} unique __ctobpl_const_8427: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8537} unique __ctobpl_const_8425: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8538} unique __ctobpl_const_8430: int;

const {:extern} {:model_const "(* elem_ptr)->MODEL"} {:sourceFile ".\v24\space.c"} {:sourceLine 8538} unique __ctobpl_const_8431: int;

const {:extern} {:model_const "model"} {:sourceFile ".\v24\space.c"} {:sourceLine 8538} unique __ctobpl_const_8432: int;

const {:extern} {:model_const "qdim"} {:sourceFile ".\v24\space.c"} {:sourceLine 8536} unique __ctobpl_const_8424: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8539} unique __ctobpl_const_8433: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8533} unique __ctobpl_const_8410: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8539} unique __ctobpl_const_8434: int;

const {:extern} {:model_const "(* elem_ptr)->EXP"} {:sourceFile ".\v24\space.c"} {:sourceLine 8539} unique __ctobpl_const_8435: int;

const {:extern} {:model_const "(* elem_ptr)->RADIUS_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8534} unique __ctobpl_const_8415: int;

const {:extern} {:model_const "exp"} {:sourceFile ".\v24\space.c"} {:sourceLine 8539} unique __ctobpl_const_8436: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8535} unique __ctobpl_const_8417: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8537} unique __ctobpl_const_8426: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8536} unique __ctobpl_const_8422: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8532} unique __ctobpl_const_8406: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8542} unique __ctobpl_const_8445: int;

const {:extern} {:model_const "tapere"} {:sourceFile ".\v24\space.c"} {:sourceLine 8543} unique __ctobpl_const_8452: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8547} unique __ctobpl_const_8465: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8547} unique __ctobpl_const_8466: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8543} unique __ctobpl_const_8450: int;

const {:extern} {:model_const "anglee"} {:sourceFile ".\v24\space.c"} {:sourceLine 8540} unique __ctobpl_const_8440: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8546} unique __ctobpl_const_8462: int;

const {:extern} {:model_const "polarization"} {:sourceFile ".\v24\space.c"} {:sourceLine 8546} unique __ctobpl_const_8464: int;

const {:extern} {:model_const "(* elem_ptr)->PHEPOL"} {:sourceFile ".\v24\space.c"} {:sourceLine 8547} unique __ctobpl_const_8467: int;

const {:extern} {:model_const "phepol"} {:sourceFile ".\v24\space.c"} {:sourceLine 8547} unique __ctobpl_const_8468: int;

const {:extern} {:model_const "taper_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8545} unique __ctobpl_const_8460: int;

const {:extern} {:model_const "angle_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8542} unique __ctobpl_const_8448: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8542} unique __ctobpl_const_8446: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8541} unique __ctobpl_const_8441: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8540} unique __ctobpl_const_8438: int;

const {:extern} {:model_const "(* elem_ptr)->TAPERE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8543} unique __ctobpl_const_8451: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8541} unique __ctobpl_const_8442: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8540} unique __ctobpl_const_8437: int;

const {:extern} {:model_const "(* elem_ptr)->ANGLEH"} {:sourceFile ".\v24\space.c"} {:sourceLine 8541} unique __ctobpl_const_8443: int;

const {:extern} {:model_const "(* elem_ptr)->ANGLEE"} {:sourceFile ".\v24\space.c"} {:sourceLine 8540} unique __ctobpl_const_8439: int;

const {:extern} {:model_const "(* elem_ptr)->ANGLE_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8542} unique __ctobpl_const_8447: int;

const {:extern} {:model_const "angleh"} {:sourceFile ".\v24\space.c"} {:sourceLine 8541} unique __ctobpl_const_8444: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8543} unique __ctobpl_const_8449: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8544} unique __ctobpl_const_8453: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8544} unique __ctobpl_const_8454: int;

const {:extern} {:model_const "taperh"} {:sourceFile ".\v24\space.c"} {:sourceLine 8544} unique __ctobpl_const_8456: int;

const {:extern} {:model_const "(* elem_ptr)->TAPERH"} {:sourceFile ".\v24\space.c"} {:sourceLine 8544} unique __ctobpl_const_8455: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8545} unique __ctobpl_const_8457: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8545} unique __ctobpl_const_8458: int;

const {:extern} {:model_const "(* elem_ptr)->TAPER_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8545} unique __ctobpl_const_8459: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8546} unique __ctobpl_const_8461: int;

const {:extern} {:model_const "(* elem_ptr)->POLARIZATION"} {:sourceFile ".\v24\space.c"} {:sourceLine 8546} unique __ctobpl_const_8463: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8550} unique __ctobpl_const_8477: int;

const {:extern} {:model_const "(* elem_ptr)->NPORTS"} {:sourceFile ".\v24\space.c"} {:sourceLine 8552} unique __ctobpl_const_8487: int;

const {:extern} {:model_const "(* elem_ptr)->PHEPOL_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8548} unique __ctobpl_const_8471: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8557} unique __ctobpl_const_8494: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8550} unique __ctobpl_const_8478: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8557} unique __ctobpl_const_8497: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8572} unique __ctobpl_const_8498: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8553} unique __ctobpl_const_8490: int;

const {:extern} {:model_const "(* elem_ptr)->DIRECTION"} {:sourceFile ".\v24\space.c"} {:sourceLine 8549} unique __ctobpl_const_8475: int;

const {:extern} {:model_const "(* elem_ptr)->GAIN"} {:sourceFile ".\v24\space.c"} {:sourceLine 8550} unique __ctobpl_const_8479: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8551} unique __ctobpl_const_8481: int;

const {:extern} {:model_const "* port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8553} unique __ctobpl_const_8493: int;

const {:extern} {:model_const "phepol_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8548} unique __ctobpl_const_8472: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8548} unique __ctobpl_const_8469: int;

const {:extern} {:model_const "gain"} {:sourceFile ".\v24\space.c"} {:sourceLine 8550} unique __ctobpl_const_8480: int;

const {:extern} {:model_const "port_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8553} unique __ctobpl_const_8492: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8548} unique __ctobpl_const_8470: int;

const {:extern} {:model_const "nports"} {:sourceFile ".\v24\space.c"} {:sourceLine 8552} unique __ctobpl_const_8488: int;

const {:extern} {:model_const "(* elem_ptr)->PORT_PTR"} {:sourceFile ".\v24\space.c"} {:sourceLine 8553} unique __ctobpl_const_8491: int;

const {:extern} {:model_const "direction"} {:sourceFile ".\v24\space.c"} {:sourceLine 8549} unique __ctobpl_const_8476: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8551} unique __ctobpl_const_8482: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8549} unique __ctobpl_const_8473: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8552} unique __ctobpl_const_8486: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8557} unique __ctobpl_const_8495: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8572} unique __ctobpl_const_8499: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8576} unique __ctobpl_const_8500: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8557} unique __ctobpl_const_8496: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8553} unique __ctobpl_const_8489: int;

const {:extern} {:model_const "* elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8549} unique __ctobpl_const_8474: int;

const {:extern} {:model_const "gain_unit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8551} unique __ctobpl_const_8484: int;

const {:extern} {:model_const "(* elem_ptr)->GAIN_UNIT"} {:sourceFile ".\v24\space.c"} {:sourceLine 8551} unique __ctobpl_const_8483: int;

const {:extern} {:model_const "elem_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8552} unique __ctobpl_const_8485: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8579} unique __ctobpl_const_8503: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8576} unique __ctobpl_const_8502: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8585} unique __ctobpl_const_8515: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8584} unique __ctobpl_const_8511: int;

const {:extern} {:model_const "step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8519: int;

const {:extern} {:model_const "* step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8580} unique __ctobpl_const_8505: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8584} unique __ctobpl_const_8513: int;

const {:extern} {:model_const "step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8523: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8591} unique __ctobpl_const_8526: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8576} unique __ctobpl_const_8501: int;

const {:extern} {:model_const "* step_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8581} unique __ctobpl_const_8507: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 8584} unique __ctobpl_const_8514: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8584} unique __ctobpl_const_8512: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8584} unique __ctobpl_const_8510: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8517: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8522: int;

const {:extern} {:model_const "step_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8581} unique __ctobpl_const_8506: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8524: int;

const {:extern} {:model_const "result.GetUReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8525: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8518: int;

const {:extern} {:model_const "step_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8598} unique __ctobpl_const_8528: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8520: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8598} unique __ctobpl_const_8529: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8516: int;

const {:extern} {:model_const "step_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8598} unique __ctobpl_const_8530: int;

const {:extern} {:model_const "step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8580} unique __ctobpl_const_8504: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8584} unique __ctobpl_const_8508: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8598} unique __ctobpl_const_8527: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8590} unique __ctobpl_const_8521: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8598} unique __ctobpl_const_8531: int;

const {:extern} {:model_const "result.lenunit"} {:sourceFile ".\v24\space.c"} {:sourceLine 8598} unique __ctobpl_const_8532: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8584} unique __ctobpl_const_8509: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8618} unique __ctobpl_const_8545: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8561: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 8626} unique __ctobpl_const_8559: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8562: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8603} unique __ctobpl_const_8537: int;

const {:extern} {:model_const "* pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8623} unique __ctobpl_const_8552: int;

const {:extern} {:model_const "step_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8600} unique __ctobpl_const_8534: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8614} unique __ctobpl_const_8544: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8622} unique __ctobpl_const_8549: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8626} unique __ctobpl_const_8554: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8626} unique __ctobpl_const_8555: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8627} unique __ctobpl_const_8560: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8564: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8614} unique __ctobpl_const_8543: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8618} unique __ctobpl_const_8546: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8599} unique __ctobpl_const_8533: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8618} unique __ctobpl_const_8547: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8621} unique __ctobpl_const_8548: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8593} unique __ctobpl_const_8542: int;

const {:extern} {:model_const "* step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8592} unique __ctobpl_const_8541: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8563: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8603} unique __ctobpl_const_8536: int;

const {:extern} {:model_const "* step_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8600} unique __ctobpl_const_8535: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8603} unique __ctobpl_const_8538: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8623} unique __ctobpl_const_8551: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8626} unique __ctobpl_const_8558: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8603} unique __ctobpl_const_8539: int;

const {:extern} {:model_const "step_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8592} unique __ctobpl_const_8540: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8626} unique __ctobpl_const_8553: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8626} unique __ctobpl_const_8556: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8626} unique __ctobpl_const_8557: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8622} unique __ctobpl_const_8550: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8643} unique __ctobpl_const_8580: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8645} unique __ctobpl_const_8585: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8571: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8653} unique __ctobpl_const_8577: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8646} unique __ctobpl_const_8587: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8653} unique __ctobpl_const_8576: int;

const {:extern} {:model_const "* pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8646} unique __ctobpl_const_8588: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8634} unique __ctobpl_const_8589: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8569: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8568: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8653} unique __ctobpl_const_8578: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8634} unique __ctobpl_const_8590: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8653} unique __ctobpl_const_8575: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8635} unique __ctobpl_const_8591: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8643} unique __ctobpl_const_8582: int;

const {:extern} {:model_const "result.sinstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8572: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8633} unique __ctobpl_const_8573: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8642} unique __ctobpl_const_8574: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8567: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8637} unique __ctobpl_const_8593: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8565: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8643} unique __ctobpl_const_8584: int;

const {:extern} {:model_const "pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8570: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8637} unique __ctobpl_const_8594: int;

const {:extern} {:model_const "* pstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8635} unique __ctobpl_const_8592: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8637} unique __ctobpl_const_8595: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8637} unique __ctobpl_const_8596: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8643} unique __ctobpl_const_8579: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8643} unique __ctobpl_const_8583: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8645} unique __ctobpl_const_8586: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8643} unique __ctobpl_const_8581: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8632} unique __ctobpl_const_8566: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8705} unique __ctobpl_const_8628: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8696} unique __ctobpl_const_8610: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8697} unique __ctobpl_const_8611: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8697} unique __ctobpl_const_8612: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8693} unique __ctobpl_const_8604: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8694} unique __ctobpl_const_8606: int;

const {:extern} {:model_const "* px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8698} unique __ctobpl_const_8614: int;

const {:extern} {:model_const "* qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8700} unique __ctobpl_const_8618: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8705} unique __ctobpl_const_8623: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8696} unique __ctobpl_const_8609: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8685} unique __ctobpl_const_8598: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8694} unique __ctobpl_const_8605: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8689} unique __ctobpl_const_8599: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8689} unique __ctobpl_const_8600: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8693} unique __ctobpl_const_8603: int;

const {:extern} {:model_const "* pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8702} unique __ctobpl_const_8622: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8702} unique __ctobpl_const_8621: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8705} unique __ctobpl_const_8625: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8705} unique __ctobpl_const_8626: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8685} unique __ctobpl_const_8597: int;

const {:extern} {:model_const "* py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8699} unique __ctobpl_const_8616: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8701} unique __ctobpl_const_8619: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8692} unique __ctobpl_const_8602: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8695} unique __ctobpl_const_8608: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8699} unique __ctobpl_const_8615: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8700} unique __ctobpl_const_8617: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8698} unique __ctobpl_const_8613: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8705} unique __ctobpl_const_8624: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8705} unique __ctobpl_const_8627: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8689} unique __ctobpl_const_8601: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8695} unique __ctobpl_const_8607: int;

const {:extern} {:model_const "* qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8701} unique __ctobpl_const_8620: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8659: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8653: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8660: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8655: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8645: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8646: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8642: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8656: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8632: int;

const {:extern} {:model_const "result.angstep"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8648: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8634: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8643: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8651: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8657: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8631: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8633: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 8705} unique __ctobpl_const_8629: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8706} unique __ctobpl_const_8630: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8636: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8635: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8640: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8729} unique __ctobpl_const_8650: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8638: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8717} unique __ctobpl_const_8649: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8639: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8641: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8658: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8654: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8637: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8644: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8711} unique __ctobpl_const_8647: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8652: int;

const {:extern} {:model_const "* qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8753} unique __ctobpl_const_8689: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8749} unique __ctobpl_const_8681: int;

const {:extern} {:model_const "result.versdef"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8668: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8754} unique __ctobpl_const_8690: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8663: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8665: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8748} unique __ctobpl_const_8678: int;

const {:extern} {:model_const "* pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8754} unique __ctobpl_const_8691: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8661: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8752} unique __ctobpl_const_8686: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8662: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8761} unique __ctobpl_const_8692: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8746} unique __ctobpl_const_8675: int;

const {:extern} {:model_const "* qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8752} unique __ctobpl_const_8687: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8745} unique __ctobpl_const_8672: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8732} unique __ctobpl_const_8670: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8749} unique __ctobpl_const_8680: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8750} unique __ctobpl_const_8682: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8666: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8748} unique __ctobpl_const_8679: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8753} unique __ctobpl_const_8688: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8747} unique __ctobpl_const_8676: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8747} unique __ctobpl_const_8677: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8667: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8730} unique __ctobpl_const_8664: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8732} unique __ctobpl_const_8669: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8751} unique __ctobpl_const_8684: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8744} unique __ctobpl_const_8671: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8745} unique __ctobpl_const_8673: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8746} unique __ctobpl_const_8674: int;

const {:extern} {:model_const "* px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8750} unique __ctobpl_const_8683: int;

const {:extern} {:model_const "* py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8751} unique __ctobpl_const_8685: int;

const {:extern} {:model_const "* pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8721} unique __ctobpl_const_8717: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8761} unique __ctobpl_const_8694: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8724} unique __ctobpl_const_8723: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8735} unique __ctobpl_const_8702: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8724} unique __ctobpl_const_8724: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8733} unique __ctobpl_const_8696: int;

const {:extern} {:model_const "angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8719} unique __ctobpl_const_8712: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8733} unique __ctobpl_const_8701: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8724} unique __ctobpl_const_8722: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8737} unique __ctobpl_const_8706: int;

const {:extern} {:model_const "* qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8737} unique __ctobpl_const_8707: int;

const {:extern} {:model_const "angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8720} unique __ctobpl_const_8714: int;

const {:extern} {:model_const "* angle_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8720} unique __ctobpl_const_8715: int;

const {:extern} {:model_const "pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8723} unique __ctobpl_const_8720: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8733} unique __ctobpl_const_8698: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8761} unique __ctobpl_const_8695: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8733} unique __ctobpl_const_8700: int;

const {:extern} {:model_const "* qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8738} unique __ctobpl_const_8709: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8733} unique __ctobpl_const_8697: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8739} unique __ctobpl_const_8710: int;

const {:extern} {:model_const "* angle_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8719} unique __ctobpl_const_8713: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8733} unique __ctobpl_const_8699: int;

const {:extern} {:model_const "* px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8735} unique __ctobpl_const_8703: int;

const {:extern} {:model_const "* qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8722} unique __ctobpl_const_8719: int;

const {:extern} {:model_const "* py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8736} unique __ctobpl_const_8705: int;

const {:extern} {:model_const "* pqstep_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8723} unique __ctobpl_const_8721: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8736} unique __ctobpl_const_8704: int;

const {:extern} {:model_const "pstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8721} unique __ctobpl_const_8716: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8738} unique __ctobpl_const_8708: int;

const {:extern} {:model_const "* pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8739} unique __ctobpl_const_8711: int;

const {:extern} {:model_const "qstep_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8722} unique __ctobpl_const_8718: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8761} unique __ctobpl_const_8693: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8807} unique __ctobpl_const_8743: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8779} unique __ctobpl_const_8731: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8807} unique __ctobpl_const_8739: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8807} unique __ctobpl_const_8744: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8809} unique __ctobpl_const_8746: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8748: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8807} unique __ctobpl_const_8742: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8750: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8779} unique __ctobpl_const_8730: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8800} unique __ctobpl_const_8737: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 8807} unique __ctobpl_const_8745: int;

const {:extern} {:model_const "strcpy.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8779} unique __ctobpl_const_8728: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 8778} unique __ctobpl_const_8732: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8807} unique __ctobpl_const_8740: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8792} unique __ctobpl_const_8734: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8749: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8751: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8800} unique __ctobpl_const_8736: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8752: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8753: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8803} unique __ctobpl_const_8738: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 8778} unique __ctobpl_const_8727: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8747: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8754: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 8779} unique __ctobpl_const_8729: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8755: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8724} unique __ctobpl_const_8725: int;

const {:extern} {:model_const "i"} {:sourceFile ".\v24\space.c"} {:sourceLine 8778} unique __ctobpl_const_8726: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8792} unique __ctobpl_const_8733: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8800} unique __ctobpl_const_8735: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8807} unique __ctobpl_const_8741: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8821} unique __ctobpl_const_8765: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8844} unique __ctobpl_const_8771: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8782: int;

const {:extern} {:model_const "* amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8817} unique __ctobpl_const_8763: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8787: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8851} unique __ctobpl_const_8778: int;

const {:extern} {:model_const "result.ampval"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8758: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8821} unique __ctobpl_const_8764: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8851} unique __ctobpl_const_8774: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8756: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8851} unique __ctobpl_const_8779: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 8851} unique __ctobpl_const_8780: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8783: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8784: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8785: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8836} unique __ctobpl_const_8769: int;

const {:extern} {:model_const "* unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8816} unique __ctobpl_const_8761: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8844} unique __ctobpl_const_8770: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8853} unique __ctobpl_const_8781: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8814} unique __ctobpl_const_8757: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8821} unique __ctobpl_const_8767: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8851} unique __ctobpl_const_8776: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8847} unique __ctobpl_const_8773: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8851} unique __ctobpl_const_8775: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8836} unique __ctobpl_const_8768: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8786: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8815} unique __ctobpl_const_8759: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8816} unique __ctobpl_const_8760: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8844} unique __ctobpl_const_8772: int;

const {:extern} {:model_const "amp_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8817} unique __ctobpl_const_8762: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8821} unique __ctobpl_const_8766: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8851} unique __ctobpl_const_8777: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8891} unique __ctobpl_const_8808: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8865} unique __ctobpl_const_8800: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8894} unique __ctobpl_const_8814: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8895} unique __ctobpl_const_8816: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8817: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8859} unique __ctobpl_const_8794: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8791: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8888} unique __ctobpl_const_8807: int;

const {:extern} {:model_const "* unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8860} unique __ctobpl_const_8796: int;

const {:extern} {:model_const "* phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8861} unique __ctobpl_const_8798: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8788: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8888} unique __ctobpl_const_8806: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8860} unique __ctobpl_const_8795: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8894} unique __ctobpl_const_8811: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8894} unique __ctobpl_const_8812: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8818: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8819: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8894} unique __ctobpl_const_8813: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8894} unique __ctobpl_const_8809: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 8894} unique __ctobpl_const_8815: int;

const {:extern} {:model_const "phase_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8861} unique __ctobpl_const_8797: int;

const {:extern} {:model_const "result.angval"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8793: int;

const {:extern} {:model_const "unif_val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8790: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8894} unique __ctobpl_const_8810: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8865} unique __ctobpl_const_8802: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8792: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8865} unique __ctobpl_const_8799: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8880} unique __ctobpl_const_8803: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8865} unique __ctobpl_const_8801: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8858} unique __ctobpl_const_8789: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8880} unique __ctobpl_const_8804: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8888} unique __ctobpl_const_8805: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8921} unique __ctobpl_const_8847: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8825: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8921} unique __ctobpl_const_8848: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8921} unique __ctobpl_const_8849: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8844: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8907} unique __ctobpl_const_8833: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8842: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 8907} unique __ctobpl_const_8834: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8921} unique __ctobpl_const_8850: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8907} unique __ctobpl_const_8830: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8821: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 8909} unique __ctobpl_const_8851: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8837: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8838: int;

const {:extern} {:model_const "v_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8843: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8823: int;

const {:extern} {:model_const "v_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8839: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8840: int;

const {:extern} {:model_const "u_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8820: int;

const {:extern} {:model_const "result.uvval"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8826: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8907} unique __ctobpl_const_8828: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8907} unique __ctobpl_const_8829: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8907} unique __ctobpl_const_8831: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8907} unique __ctobpl_const_8832: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8822: int;

const {:extern} {:model_const "u_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8900} unique __ctobpl_const_8824: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8901} unique __ctobpl_const_8827: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8908} unique __ctobpl_const_8835: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8836: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8841: int;

const {:extern} {:model_const "result.uvval"} {:sourceFile ".\v24\space.c"} {:sourceLine 8914} unique __ctobpl_const_8845: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8915} unique __ctobpl_const_8846: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8902} unique __ctobpl_const_8861: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 8943} unique __ctobpl_const_8872: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8940} unique __ctobpl_const_8865: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8943} unique __ctobpl_const_8868: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 8909} unique __ctobpl_const_8854: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8943} unique __ctobpl_const_8867: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8940} unique __ctobpl_const_8866: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8943} unique __ctobpl_const_8871: int;

const {:extern} {:model_const "* val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8949} unique __ctobpl_const_8875: int;

const {:extern} {:model_const "* val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8949} unique __ctobpl_const_8877: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8956} unique __ctobpl_const_8879: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8944} unique __ctobpl_const_8873: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8956} unique __ctobpl_const_8881: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8909} unique __ctobpl_const_8852: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8909} unique __ctobpl_const_8853: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 8909} unique __ctobpl_const_8857: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8902} unique __ctobpl_const_8859: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8949} unique __ctobpl_const_8876: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8950} unique __ctobpl_const_8883: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8943} unique __ctobpl_const_8870: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8909} unique __ctobpl_const_8855: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8909} unique __ctobpl_const_8856: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8902} unique __ctobpl_const_8858: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8936} unique __ctobpl_const_8863: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8936} unique __ctobpl_const_8862: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8902} unique __ctobpl_const_8860: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8949} unique __ctobpl_const_8874: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 8956} unique __ctobpl_const_8878: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8956} unique __ctobpl_const_8880: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8950} unique __ctobpl_const_8882: int;

const {:extern} {:model_const "val_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8943} unique __ctobpl_const_8869: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8940} unique __ctobpl_const_8864: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8950} unique __ctobpl_const_8885: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8975} unique __ctobpl_const_8891: int;

const {:extern} {:model_const "* qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8978} unique __ctobpl_const_8897: int;

const {:extern} {:model_const "* pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8980} unique __ctobpl_const_8901: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8983} unique __ctobpl_const_8904: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8983} unique __ctobpl_const_8905: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 8983} unique __ctobpl_const_8908: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8984} unique __ctobpl_const_8909: int;

const {:extern} {:model_const "curr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8968} unique __ctobpl_const_8887: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8972} unique __ctobpl_const_8888: int;

const {:extern} {:model_const "* qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8979} unique __ctobpl_const_8899: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8972} unique __ctobpl_const_8889: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8983} unique __ctobpl_const_8906: int;

const {:extern} {:model_const "p1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8972} unique __ctobpl_const_8890: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8976} unique __ctobpl_const_8892: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8968} unique __ctobpl_const_8886: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8989} unique __ctobpl_const_8910: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8983} unique __ctobpl_const_8902: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8983} unique __ctobpl_const_8907: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8989} unique __ctobpl_const_8911: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8989} unique __ctobpl_const_8912: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8989} unique __ctobpl_const_8913: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8989} unique __ctobpl_const_8914: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 8989} unique __ctobpl_const_8915: int;

const {:extern} {:model_const "* py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8977} unique __ctobpl_const_8895: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8950} unique __ctobpl_const_8884: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8980} unique __ctobpl_const_8900: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 8983} unique __ctobpl_const_8903: int;

const {:extern} {:model_const "* px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8976} unique __ctobpl_const_8893: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8979} unique __ctobpl_const_8898: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8977} unique __ctobpl_const_8894: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8978} unique __ctobpl_const_8896: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9031} unique __ctobpl_const_8941: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9031} unique __ctobpl_const_8942: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9031} unique __ctobpl_const_8943: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9002} unique __ctobpl_const_8919: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9023} unique __ctobpl_const_8934: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 9023} unique __ctobpl_const_8935: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 9023} unique __ctobpl_const_8932: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 9031} unique __ctobpl_const_8945: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9031} unique __ctobpl_const_8944: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9002} unique __ctobpl_const_8921: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9032} unique __ctobpl_const_8946: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 9044} unique __ctobpl_const_8947: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9010} unique __ctobpl_const_8925: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9010} unique __ctobpl_const_8927: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 9023} unique __ctobpl_const_8938: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 9002} unique __ctobpl_const_8918: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 9002} unique __ctobpl_const_8917: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 9002} unique __ctobpl_const_8920: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 9002} unique __ctobpl_const_8923: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8990} unique __ctobpl_const_8916: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9003} unique __ctobpl_const_8924: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9010} unique __ctobpl_const_8926: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9010} unique __ctobpl_const_8928: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9010} unique __ctobpl_const_8929: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9002} unique __ctobpl_const_8922: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 9010} unique __ctobpl_const_8930: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9011} unique __ctobpl_const_8931: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 9023} unique __ctobpl_const_8933: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9023} unique __ctobpl_const_8936: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9023} unique __ctobpl_const_8937: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9031} unique __ctobpl_const_8940: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9024} unique __ctobpl_const_8939: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9067} unique __ctobpl_const_8968: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9066} unique __ctobpl_const_8962: int;

const {:extern} {:model_const "* pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9068} unique __ctobpl_const_8970: int;

const {:extern} {:model_const "* pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 9071} unique __ctobpl_const_8972: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9071} unique __ctobpl_const_8973: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9071} unique __ctobpl_const_8974: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9054} unique __ctobpl_const_8977: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9052} unique __ctobpl_const_8958: int;

const {:extern} {:model_const "result.lenunit"} {:sourceFile ".\v24\space.c"} {:sourceLine 9066} unique __ctobpl_const_8967: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9054} unique __ctobpl_const_8978: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 9044} unique __ctobpl_const_8950: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9044} unique __ctobpl_const_8951: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9066} unique __ctobpl_const_8965: int;

const {:extern} {:model_const "GetKeyword.arg.1"} {:sourceFile ".\v24\space.c"} {:sourceLine 9044} unique __ctobpl_const_8948: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9052} unique __ctobpl_const_8956: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9054} unique __ctobpl_const_8975: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9054} unique __ctobpl_const_8976: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9054} unique __ctobpl_const_8979: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9052} unique __ctobpl_const_8955: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9066} unique __ctobpl_const_8963: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9044} unique __ctobpl_const_8952: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9068} unique __ctobpl_const_8969: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9044} unique __ctobpl_const_8949: int;

const {:extern} {:model_const "pp2"} {:sourceFile ".\v24\space.c"} {:sourceLine 9071} unique __ctobpl_const_8971: int;

const {:extern} {:model_const "result.GetKeyword"} {:sourceFile ".\v24\space.c"} {:sourceLine 9044} unique __ctobpl_const_8953: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9045} unique __ctobpl_const_8954: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9052} unique __ctobpl_const_8959: int;

const {:extern} {:model_const "result.GetReal"} {:sourceFile ".\v24\space.c"} {:sourceLine 9052} unique __ctobpl_const_8960: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9053} unique __ctobpl_const_8961: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9066} unique __ctobpl_const_8964: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9052} unique __ctobpl_const_8957: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9066} unique __ctobpl_const_8966: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9033} unique __ctobpl_const_9000: int;

const {:extern} {:model_const "* qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9037} unique __ctobpl_const_9011: int;

const {:extern} {:model_const "* qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9059} unique __ctobpl_const_8988: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9046} unique __ctobpl_const_8998: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 9046} unique __ctobpl_const_8999: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9035} unique __ctobpl_const_9006: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9057} unique __ctobpl_const_8983: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9036} unique __ctobpl_const_9008: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9046} unique __ctobpl_const_8996: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9037} unique __ctobpl_const_9010: int;

const {:extern} {:model_const "* px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9056} unique __ctobpl_const_8982: int;

const {:extern} {:model_const "* py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9057} unique __ctobpl_const_8984: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9054} unique __ctobpl_const_8980: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9059} unique __ctobpl_const_8987: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9060} unique __ctobpl_const_8989: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9046} unique __ctobpl_const_8994: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9058} unique __ctobpl_const_8985: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 9046} unique __ctobpl_const_8995: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9046} unique __ctobpl_const_8992: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9046} unique __ctobpl_const_8997: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9033} unique __ctobpl_const_9001: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9033} unique __ctobpl_const_9002: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9033} unique __ctobpl_const_9003: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9033} unique __ctobpl_const_9004: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9033} unique __ctobpl_const_9005: int;

const {:extern} {:model_const "* px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9035} unique __ctobpl_const_9007: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9056} unique __ctobpl_const_8981: int;

const {:extern} {:model_const "* qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9058} unique __ctobpl_const_8986: int;

const {:extern} {:model_const "* pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9060} unique __ctobpl_const_8990: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 9046} unique __ctobpl_const_8991: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9046} unique __ctobpl_const_8993: int;

const {:extern} {:model_const "* py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9036} unique __ctobpl_const_9009: int;

const {:extern} {:model_const "* py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9015} unique __ctobpl_const_9034: int;

const {:extern} {:model_const "* qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9017} unique __ctobpl_const_9038: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9018} unique __ctobpl_const_9039: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9017} unique __ctobpl_const_9037: int;

const {:extern} {:model_const "* px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9014} unique __ctobpl_const_9032: int;

const {:extern} {:model_const "* qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9038} unique __ctobpl_const_9013: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9012} unique __ctobpl_const_9026: int;

const {:extern} {:model_const "* pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9018} unique __ctobpl_const_9040: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 9004} unique __ctobpl_const_9041: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9004} unique __ctobpl_const_9042: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9025} unique __ctobpl_const_9022: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9012} unique __ctobpl_const_9028: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9004} unique __ctobpl_const_9043: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9012} unique __ctobpl_const_9025: int;

const {:extern} {:model_const "* qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9016} unique __ctobpl_const_9036: int;

const {:extern} {:model_const "* pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9039} unique __ctobpl_const_9015: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9025} unique __ctobpl_const_9018: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9038} unique __ctobpl_const_9012: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9039} unique __ctobpl_const_9014: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 9025} unique __ctobpl_const_9016: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 9025} unique __ctobpl_const_9020: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 9025} unique __ctobpl_const_9024: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9025} unique __ctobpl_const_9021: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9012} unique __ctobpl_const_9027: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9012} unique __ctobpl_const_9029: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9012} unique __ctobpl_const_9030: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9014} unique __ctobpl_const_9031: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9025} unique __ctobpl_const_9019: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9025} unique __ctobpl_const_9023: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9025} unique __ctobpl_const_9017: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9015} unique __ctobpl_const_9033: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9016} unique __ctobpl_const_9035: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9004} unique __ctobpl_const_9047: int;

const {:extern} {:model_const "* py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8994} unique __ctobpl_const_9059: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 9004} unique __ctobpl_const_9046: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8991} unique __ctobpl_const_9053: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8991} unique __ctobpl_const_9054: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9004} unique __ctobpl_const_9044: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8991} unique __ctobpl_const_9055: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 9004} unique __ctobpl_const_9045: int;

const {:extern} {:model_const "* px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8993} unique __ctobpl_const_9057: int;

const {:extern} {:model_const "py_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8994} unique __ctobpl_const_9058: int;

const {:extern} {:model_const "curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8991} unique __ctobpl_const_9050: int;

const {:extern} {:model_const "qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8995} unique __ctobpl_const_9060: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 9004} unique __ctobpl_const_9048: int;

const {:extern} {:model_const "px_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8993} unique __ctobpl_const_9056: int;

const {:extern} {:model_const "* qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8996} unique __ctobpl_const_9063: int;

const {:extern} {:model_const "* curr_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8991} unique __ctobpl_const_9051: int;

const {:extern} {:model_const "* qx_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8995} unique __ctobpl_const_9061: int;

const {:extern} {:model_const "error"} {:sourceFile ".\v24\space.c"} {:sourceLine 8991} unique __ctobpl_const_9052: int;

const {:extern} {:model_const "parserro.arg.3"} {:sourceFile ".\v24\space.c"} {:sourceLine 9004} unique __ctobpl_const_9049: int;

const {:extern} {:model_const "qy_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8996} unique __ctobpl_const_9062: int;

const {:extern} {:model_const "pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8997} unique __ctobpl_const_9064: int;

const {:extern} {:model_const "* pqxy_unit_ptr"} {:sourceFile ".\v24\space.c"} {:sourceLine 8997} unique __ctobpl_const_9065: int;

procedure {:extern} acos(__dummy_formal_acos_0.__1: int) returns (__dummy_retacos: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} asin(__dummy_formal_asin_0.__1: int) returns (__dummy_retasin: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} atan(__dummy_formal_atan_0.__1: int) returns (__dummy_retatan: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} atof(__dummy_formal_atof_0.__1: int) returns (__dummy_retatof: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} atoi(__dummy_formal_atoi_0.__1: int) returns (__dummy_retatoi: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} cos(__dummy_formal_cos_0.__1: int) returns (__dummy_retcos: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} fclose(__dummy_formal_fclose_0.__1: int) returns (__dummy_retfclose: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} fopen(__dummy_formal_fopen_0.__1: int, __dummy_formal_fopen_1.__1: int) returns (__dummy_retfopen: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} getc(__dummy_formal_getc_0.__1: int) returns (__dummy_retgetc: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} isalnum(__dummy_formal_isalnum_0.__1: int) returns (__dummy_retisalnum: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} isalpha(__dummy_formal_isalpha_0.__1: int) returns (__dummy_retisalpha: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} isdigit(__dummy_formal_isdigit_0.__1: int) returns (__dummy_retisdigit: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} isspace(__dummy_formal_isspace_0.__1: int) returns (__dummy_retisspace: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} pow(__dummy_formal_pow_0.__1: int, __dummy_formal_pow_1.__1: int) returns (__dummy_retpow: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} putchar(__dummy_formal_putchar_0.__1: int) returns (__dummy_retputchar: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} sin(__dummy_formal_sin_0.__1: int) returns (__dummy_retsin: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} sqrt(__dummy_formal_sqrt_0.__1: int) returns (__dummy_retsqrt: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} strcat(__dummy_formal_strcat_0.__1: int, __dummy_formal_strcat_1.__1: int) returns (__dummy_retstrcat: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} strcmp(__dummy_formal_strcmp_0.__1: int, __dummy_formal_strcmp_1.__1: int) returns (__dummy_retstrcmp: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} strcpy(__dummy_formal_strcpy_0.__1: int, __dummy_formal_strcpy_1.__1: int) returns (__dummy_retstrcpy: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} strlen(__dummy_formal_strlen_0.__1: int) returns (__dummy_retstrlen: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



procedure {:extern} Get1Real(p1.__1: int, pp2.__1: int, ureal_ptr.__1: int) returns (result.Get1Real$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} Get1Real(p1.__1: int, pp2.__1: int, ureal_ptr.__1: int) returns (result.Get1Real$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetReal$2: int;
  var {:extern} ureal_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(ureal_ptr.__1, alloc);
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.Get1Real$1 := 0;
    result.GetReal$2 := 0;
    ureal_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    ureal_ptr := ureal_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3177} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3177} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3177} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1, curr_ptr);
    assume value_is(__ctobpl_const_2, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3178} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3182} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_3, curr_ptr);
    assume value_is(__ctobpl_const_4, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3186} true;
    call result.GetReal$2 := GetReal(ureal_ptr, curr_ptr);
    assume value_is(__ctobpl_const_6, ureal_ptr);
    assume value_is(__ctobpl_const_7, curr_ptr);
    assume value_is(__ctobpl_const_8, ureal_ptr);
    assume value_is(__ctobpl_const_9, curr_ptr);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3186} true;
    error := result.GetReal$2;
    assume value_is(__ctobpl_const_10, error);
    assume value_is(__ctobpl_const_11, result.GetReal$2);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3187} true;
    goto label_12_true, label_12_false;

  label_12_false:
    assume error == 0;
    assume value_is(__ctobpl_const_12, error);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3196} true;
    assert ureal_ptr != 0;
    goto label_13_true, label_13_false;

  label_13_false:
    assume !INT_LT(Mem_T.FLOAT[ureal_ptr], 0);
    assume value_is(__ctobpl_const_13, ureal_ptr);
    assume value_is(__ctobpl_const_14, Mem_T.FLOAT[ureal_ptr]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3202} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_15, pp2);
    assume value_is(__ctobpl_const_16, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_17, curr_ptr);
    assume value_is(__ctobpl_const_18, Mem_T.Pcharac[curr_ptr]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3204} true;
    result.Get1Real$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3205} true;
    call __HAVOC_free(curr);
    return;

  label_13_true:
    assume INT_LT(Mem_T.FLOAT[ureal_ptr], 0);
    assume value_is(__ctobpl_const_13, ureal_ptr);
    assume value_is(__ctobpl_const_14, Mem_T.FLOAT[ureal_ptr]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3197} true;
    result.Get1Real$1 := 12;
    goto label_1;

  label_12_true:
    assume error != 0;
    assume value_is(__ctobpl_const_12, error);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3188} true;
    result.Get1Real$1 := 11;
    goto label_1;
}



procedure {:extern} GetInt(p1.__1: int, pp2.__1: int, intero.__1: int) returns (result.GetInt$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} GetInt(p1.__1: int, pp2.__1: int, intero.__1: int) returns (result.GetInt$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} ch: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} i: int;
  var {:extern} intero: int;
  var {:extern} $isdigit.arg.1$4$: int;
  var {:extern} $isdigit.arg.1$7$: int;
  var {:extern} num: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.TapeGet$2: int;
  var {:extern} result.TapeGet$5: int;
  var {:extern} result.TapeGet$8: int;
  var {:extern} result.atoi$9: int;
  var {:extern} result.isdigit$3: int;
  var {:extern} result.isdigit$6: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(intero.__1, alloc);
    ch := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    i := 0;
    intero := 0;
    $isdigit.arg.1$4$ := 0;
    $isdigit.arg.1$7$ := 0;
    call num := __HAVOC_det_malloc(6);
    p1 := 0;
    pp2 := 0;
    result.GetInt$1 := 0;
    result.TapeGet$2 := 0;
    result.TapeGet$5 := 0;
    result.TapeGet$8 := 0;
    result.atoi$9 := 0;
    result.isdigit$3 := 0;
    result.isdigit$6 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    intero := intero.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3215} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3215} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3215} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_19, curr_ptr);
    assume value_is(__ctobpl_const_20, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3216} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3216} true;
    i := 0;
    assume value_is(__ctobpl_const_21, i);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3217} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3218} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3221} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_22, curr_ptr);
    assume value_is(__ctobpl_const_23, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_24, p1);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3230} true;
    call result.TapeGet$2 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_25, curr_ptr);
    assume value_is(__ctobpl_const_26, curr_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3230} true;
    ch := result.TapeGet$2;
    assume value_is(__ctobpl_const_27, ch);
    assume value_is(__ctobpl_const_28, result.TapeGet$2);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3234} true;
    $isdigit.arg.1$4$ := ch;
    assume value_is(__ctobpl_const_29, $isdigit.arg.1$4$);
    assume value_is(__ctobpl_const_30, ch);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3234} true;
    call result.isdigit$3 := isdigit($isdigit.arg.1$4$);
    assume value_is(__ctobpl_const_31, $isdigit.arg.1$4$);
    assume value_is(__ctobpl_const_32, $isdigit.arg.1$4$);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3234} true;
    goto label_19_true, label_19_false;

  label_19_false:
    assume result.isdigit$3 == 0;
    assume value_is(__ctobpl_const_33, result.isdigit$3);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3234} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_NEQ(ch, 43);
    assume value_is(__ctobpl_const_34, ch);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3238} true;
    assert num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(num, 1, i) := ch];
    assume value_is(__ctobpl_const_36, i);
    assume value_is(__ctobpl_const_37, Mem_T.CHAR[PLUS(num, 1, i)]);
    assume value_is(__ctobpl_const_38, ch);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3244} true;
    i := PLUS(i, 1, 1);
    assume value_is(__ctobpl_const_39, i);
    assume value_is(__ctobpl_const_40, i);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3245} true;
    call result.TapeGet$5 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_41, curr_ptr);
    assume value_is(__ctobpl_const_42, curr_ptr);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3245} true;
    ch := result.TapeGet$5;
    assume value_is(__ctobpl_const_43, ch);
    assume value_is(__ctobpl_const_44, result.TapeGet$5);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3251} true;
    goto label_27_head;

  label_27_head:
    call ch, i, $isdigit.arg.1$7$, result.TapeGet$8, result.isdigit$6 := GetInt_loop_label_27_head(ch, curr_ptr, i, $isdigit.arg.1$7$, num, result.TapeGet$8, result.isdigit$6);
    goto label_27_head_last;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3251} true;
    call result.isdigit$6 := isdigit($isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_47, $isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_48, $isdigit.arg.1$7$);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3251} true;
    goto label_31_true, label_31_false;

  label_31_false:
    assume result.isdigit$6 == 0;
    assume value_is(__ctobpl_const_49, result.isdigit$6);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3266} true;
    goto label_32_true, label_32_false;

  label_32_false:
    assume !INT_LEQ(5, i);
    assume value_is(__ctobpl_const_52, i);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3271} true;
    assert num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(num, 1, i) := 0];
    assume value_is(__ctobpl_const_53, i);
    assume value_is(__ctobpl_const_54, Mem_T.CHAR[PLUS(num, 1, i)]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3279} true;
    call result.atoi$9 := atoi(num);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3279} true;
    assert intero != 0;
    Mem_T.INT4 := Mem_T.INT4[intero := result.atoi$9];
    assume value_is(__ctobpl_const_55, intero);
    assume value_is(__ctobpl_const_56, Mem_T.INT4[intero]);
    assume value_is(__ctobpl_const_57, result.atoi$9);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3285} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_58, pp2);
    assume value_is(__ctobpl_const_59, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_60, curr_ptr);
    assume value_is(__ctobpl_const_61, Mem_T.Pcharac[curr_ptr]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3286} true;
    result.GetInt$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3287} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(num);
    return;

  label_32_true:
    assume INT_LEQ(5, i);
    assume value_is(__ctobpl_const_52, i);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3267} true;
    assert num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(num, 1, 5) := 0];
    assume value_is(__ctobpl_const_62, Mem_T.CHAR[PLUS(num, 1, 5)]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3268} true;
    call parserro(p1, 43, num);
    assume value_is(__ctobpl_const_63, p1);
    assume value_is(__ctobpl_const_64, p1);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3269} true;
    result.GetInt$1 := 43;
    goto label_1;

  label_31_true:
    assume result.isdigit$6 != 0;
    assume value_is(__ctobpl_const_49, result.isdigit$6);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3251} true;
    assert curr_ptr != 0;
    goto label_33_true, label_33_false;

  label_33_false:
    assume Mem_T.Pcharac[curr_ptr] == 0;
    assume value_is(__ctobpl_const_50, curr_ptr);
    assume value_is(__ctobpl_const_51, Mem_T.Pcharac[curr_ptr]);
    goto label_32;

  label_33_true:
    assume Mem_T.Pcharac[curr_ptr] != 0;
    assume value_is(__ctobpl_const_50, curr_ptr);
    assume value_is(__ctobpl_const_51, Mem_T.Pcharac[curr_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3252} true;
    goto label_34_true, label_34_false;

  label_34_false:
    assume !INT_LT(i, 5);
    assume value_is(__ctobpl_const_65, i);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3258} true;
    i := PLUS(i, 1, 1);
    assume value_is(__ctobpl_const_69, i);
    assume value_is(__ctobpl_const_70, i);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3259} true;
    call result.TapeGet$8 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_71, curr_ptr);
    assume value_is(__ctobpl_const_72, curr_ptr);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3259} true;
    ch := result.TapeGet$8;
    assume value_is(__ctobpl_const_73, ch);
    assume value_is(__ctobpl_const_74, result.TapeGet$8);
    goto label_40_dummy;

  label_34_true:
    assume INT_LT(i, 5);
    assume value_is(__ctobpl_const_65, i);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3253} true;
    assert num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(num, 1, i) := ch];
    assume value_is(__ctobpl_const_66, i);
    assume value_is(__ctobpl_const_67, Mem_T.CHAR[PLUS(num, 1, i)]);
    assume value_is(__ctobpl_const_68, ch);
    goto label_35;

  label_20_true:
    assume INT_NEQ(ch, 43);
    assume value_is(__ctobpl_const_34, ch);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3234} true;
    goto label_53_true, label_53_false;

  label_53_false:
    assume !INT_NEQ(ch, 45);
    assume value_is(__ctobpl_const_35, ch);
    goto label_21;

  label_53_true:
    assume INT_NEQ(ch, 45);
    assume value_is(__ctobpl_const_35, ch);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3235} true;
    result.GetInt$1 := 42;
    goto label_1;

  label_19_true:
    assume result.isdigit$3 != 0;
    assume value_is(__ctobpl_const_33, result.isdigit$3);
    goto label_21;

  label_40_dummy:
    assume false;
    return;

  label_27_head_last:
    $isdigit.arg.1$7$ := ch;
    assume value_is(__ctobpl_const_45, $isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_46, ch);
    goto label_28;
}



procedure {:extern} GetKeyword(kw.__1: int, tp.__1: int) returns (result.GetKeyword$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} GetKeyword(kw.__1: int, tp.__1: int) returns (result.GetKeyword$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} ch: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} i: int;
  var {:extern} $isalnum.arg.1$4$: int;
  var {:extern} kw: int;
  var {:extern} result.TapeGet$2: int;
  var {:extern} result.TapeGet$5: int;
  var {:extern} result.isalnum$3: int;
  var {:extern} result.strcmp$6: int;
  var {:extern} tp: int;
  var {:extern} word: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(kw.__1, alloc);
    assume INT_LT(tp.__1, alloc);
    ch := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    i := 0;
    $isalnum.arg.1$4$ := 0;
    kw := 0;
    result.GetKeyword$1 := 0;
    result.TapeGet$2 := 0;
    result.TapeGet$5 := 0;
    result.isalnum$3 := 0;
    result.strcmp$6 := 0;
    tp := 0;
    call word := __HAVOC_det_malloc(21);
    kw := kw.__1;
    tp := tp.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3297} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3297} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3298} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3298} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3299} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3299} true;
    i := 0;
    assume value_is(__ctobpl_const_75, i);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3310} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_76, curr_ptr);
    assume value_is(__ctobpl_const_77, Mem_T.Pcharac[curr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3311} true;
    assert curr_ptr != 0;
    assert tp != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := Mem_T.Pcharac[tp]];
    assume value_is(__ctobpl_const_78, curr_ptr);
    assume value_is(__ctobpl_const_79, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_80, tp);
    assume value_is(__ctobpl_const_81, Mem_T.Pcharac[tp]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3315} true;
    call result.TapeGet$2 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_82, curr_ptr);
    assume value_is(__ctobpl_const_83, curr_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3315} true;
    ch := result.TapeGet$2;
    assume value_is(__ctobpl_const_84, ch);
    assume value_is(__ctobpl_const_85, result.TapeGet$2);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    goto label_15_head;

  label_15_head:
    call ch, i, $isalnum.arg.1$4$, result.TapeGet$5, result.isalnum$3 := GetKeyword_loop_label_15_head(ch, curr_ptr, i, $isalnum.arg.1$4$, result.TapeGet$5, result.isalnum$3, word);
    goto label_15_head_last;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    call result.isalnum$3 := isalnum($isalnum.arg.1$4$);
    assume value_is(__ctobpl_const_88, $isalnum.arg.1$4$);
    assume value_is(__ctobpl_const_89, $isalnum.arg.1$4$);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    goto label_19_true, label_19_false;

  label_19_false:
    assume result.isalnum$3 == 0;
    assume value_is(__ctobpl_const_90, result.isalnum$3);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_EQ(ch, 95);
    assume value_is(__ctobpl_const_91, ch);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3334} true;
    assert word != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(word, 1, i) := 0];
    assume value_is(__ctobpl_const_95, i);
    assume value_is(__ctobpl_const_96, Mem_T.CHAR[PLUS(word, 1, i)]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3341} true;
    call result.strcmp$6 := strcmp(kw, word);
    assume value_is(__ctobpl_const_97, kw);
    assume value_is(__ctobpl_const_98, kw);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3341} true;
    goto label_33_true, label_33_false;

  label_33_false:
    assume result.strcmp$6 == 0;
    assume value_is(__ctobpl_const_99, result.strcmp$6);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3342} true;
    assert tp != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[tp := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_100, tp);
    assume value_is(__ctobpl_const_101, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_102, curr_ptr);
    assume value_is(__ctobpl_const_103, Mem_T.Pcharac[curr_ptr]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3343} true;
    result.GetKeyword$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3346} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(word);
    return;

  label_33_true:
    assume result.strcmp$6 != 0;
    assume value_is(__ctobpl_const_99, result.strcmp$6);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3345} true;
    result.GetKeyword$1 := 1;
    goto label_1;

  label_20_true:
    assume INT_EQ(ch, 95);
    assume value_is(__ctobpl_const_91, ch);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    goto label_21_true, label_21_false;

  label_21_false:
    assume !INT_LT(i, 20);
    assume value_is(__ctobpl_const_92, i);
    goto label_22;

  label_21_true:
    assume INT_LT(i, 20);
    assume value_is(__ctobpl_const_92, i);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    assert curr_ptr != 0;
    goto label_23_true, label_23_false;

  label_23_false:
    assume Mem_T.Pcharac[curr_ptr] == 0;
    assume value_is(__ctobpl_const_93, curr_ptr);
    assume value_is(__ctobpl_const_94, Mem_T.Pcharac[curr_ptr]);
    goto label_22;

  label_23_true:
    assume Mem_T.Pcharac[curr_ptr] != 0;
    assume value_is(__ctobpl_const_93, curr_ptr);
    assume value_is(__ctobpl_const_94, Mem_T.Pcharac[curr_ptr]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3322} true;
    assert word != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(word, 1, i) := ch];
    assume value_is(__ctobpl_const_104, i);
    assume value_is(__ctobpl_const_105, Mem_T.CHAR[PLUS(word, 1, i)]);
    assume value_is(__ctobpl_const_106, ch);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3326} true;
    i := PLUS(i, 1, 1);
    assume value_is(__ctobpl_const_107, i);
    assume value_is(__ctobpl_const_108, i);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3327} true;
    call result.TapeGet$5 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_109, curr_ptr);
    assume value_is(__ctobpl_const_110, curr_ptr);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3327} true;
    ch := result.TapeGet$5;
    assume value_is(__ctobpl_const_111, ch);
    assume value_is(__ctobpl_const_112, result.TapeGet$5);
    goto label_29_dummy;

  label_19_true:
    assume result.isalnum$3 != 0;
    assume value_is(__ctobpl_const_90, result.isalnum$3);
    goto label_21;

  label_29_dummy:
    assume false;
    return;

  label_15_head_last:
    $isalnum.arg.1$4$ := ch;
    assume value_is(__ctobpl_const_86, $isalnum.arg.1$4$);
    assume value_is(__ctobpl_const_87, ch);
    goto label_16;
}



procedure {:extern} GetNatur(p1.__1: int, pp2.__1: int, natur_ptr.__1: int) returns (result.GetNatur$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} GetNatur(p1.__1: int, pp2.__1: int, natur_ptr.__1: int) returns (result.GetNatur$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} natur_ptr: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetInt$2: int;
  var {:extern} val: int;
  var {:extern} val_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(natur_ptr.__1, alloc);
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    natur_ptr := 0;
    p1 := 0;
    pp2 := 0;
    result.GetInt$2 := 0;
    result.GetNatur$1 := 0;
    call val := __HAVOC_det_malloc(4);
    val_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    natur_ptr := natur_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3358} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3358} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3358} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_113, curr_ptr);
    assume value_is(__ctobpl_const_114, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3359} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3360} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3360} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3360} true;
    val_ptr := val;
    assume value_is(__ctobpl_const_115, val_ptr);
    assume value_is(__ctobpl_const_116, Mem_T.INT4[val]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3363} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_117, curr_ptr);
    assume value_is(__ctobpl_const_118, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_119, p1);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3366} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.GetInt$2 := GetInt(Mem_T.Pcharac[curr_ptr], curr_ptr, val_ptr);
    assume value_is(__ctobpl_const_120, curr_ptr);
    assume value_is(__ctobpl_const_121, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_122, curr_ptr);
    assume value_is(__ctobpl_const_123, val_ptr);
    assume value_is(__ctobpl_const_124, curr_ptr);
    assume value_is(__ctobpl_const_125, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_126, curr_ptr);
    assume value_is(__ctobpl_const_127, val_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3366} true;
    error := result.GetInt$2;
    assume value_is(__ctobpl_const_128, error);
    assume value_is(__ctobpl_const_129, result.GetInt$2);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3367} true;
    goto label_15_true, label_15_false;

  label_15_false:
    assume error == 0;
    assume value_is(__ctobpl_const_130, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3376} true;
    assert val_ptr != 0;
    goto label_16_true, label_16_false;

  label_16_false:
    assume !INT_LT(Mem_T.INT4[val_ptr], 0);
    assume value_is(__ctobpl_const_131, val_ptr);
    assume value_is(__ctobpl_const_132, Mem_T.INT4[val_ptr]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3381} true;
    assert val_ptr != 0;
    goto label_18_true, label_18_false;

  label_18_false:
    assume Mem_T.INT4[val_ptr] == 0;
    assume value_is(__ctobpl_const_133, val_ptr);
    assume value_is(__ctobpl_const_134, Mem_T.INT4[val_ptr]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3382} true;
    result.GetNatur$1 := 45;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3389} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(val);
    return;

  label_18_true:
    assume Mem_T.INT4[val_ptr] != 0;
    assume value_is(__ctobpl_const_133, val_ptr);
    assume value_is(__ctobpl_const_134, Mem_T.INT4[val_ptr]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3386} true;
    assert natur_ptr != 0;
    assert val_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[natur_ptr := Mem_T.INT4[val_ptr]];
    assume value_is(__ctobpl_const_135, natur_ptr);
    assume value_is(__ctobpl_const_136, Mem_T.INT4[natur_ptr]);
    assume value_is(__ctobpl_const_137, val_ptr);
    assume value_is(__ctobpl_const_138, Mem_T.INT4[val_ptr]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3387} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_139, pp2);
    assume value_is(__ctobpl_const_140, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_141, curr_ptr);
    assume value_is(__ctobpl_const_142, Mem_T.Pcharac[curr_ptr]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3388} true;
    result.GetNatur$1 := 0;
    goto label_1;

  label_16_true:
    assume INT_LT(Mem_T.INT4[val_ptr], 0);
    assume value_is(__ctobpl_const_131, val_ptr);
    assume value_is(__ctobpl_const_132, Mem_T.INT4[val_ptr]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3377} true;
    result.GetNatur$1 := 12;
    goto label_1;

  label_15_true:
    assume error != 0;
    assume value_is(__ctobpl_const_130, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3368} true;
    result.GetNatur$1 := 44;
    goto label_1;
}



procedure {:extern} GetReal(reale.__1: int, tp.__1: int) returns (result.GetReal$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} GetReal(reale.__1: int, tp.__1: int) returns (result.GetReal$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} ch: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} i: int;
  var {:extern} $isdigit.arg.1$4$: int;
  var {:extern} $isdigit.arg.1$7$: int;
  var {:extern} num: int;
  var {:extern} reale: int;
  var {:extern} result.TapeGet$2: int;
  var {:extern} result.TapeGet$5: int;
  var {:extern} result.TapeGet$8: int;
  var {:extern} result.atof$9: int;
  var {:extern} result.isdigit$3: int;
  var {:extern} result.isdigit$6: int;
  var {:extern} tp: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(reale.__1, alloc);
    assume INT_LT(tp.__1, alloc);
    ch := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    i := 0;
    $isdigit.arg.1$4$ := 0;
    $isdigit.arg.1$7$ := 0;
    call num := __HAVOC_det_malloc(101);
    reale := 0;
    result.GetReal$1 := 0;
    result.TapeGet$2 := 0;
    result.TapeGet$5 := 0;
    result.TapeGet$8 := 0;
    result.atof$9 := 0;
    result.isdigit$3 := 0;
    result.isdigit$6 := 0;
    tp := 0;
    reale := reale.__1;
    tp := tp.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3398} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3398} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3398} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_143, curr_ptr);
    assume value_is(__ctobpl_const_144, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3399} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3399} true;
    i := 0;
    assume value_is(__ctobpl_const_145, i);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3400} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3401} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3405} true;
    assert curr_ptr != 0;
    assert tp != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := Mem_T.Pcharac[tp]];
    assume value_is(__ctobpl_const_146, curr_ptr);
    assume value_is(__ctobpl_const_147, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_148, tp);
    assume value_is(__ctobpl_const_149, Mem_T.Pcharac[tp]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3414} true;
    call result.TapeGet$2 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_150, curr_ptr);
    assume value_is(__ctobpl_const_151, curr_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3414} true;
    ch := result.TapeGet$2;
    assume value_is(__ctobpl_const_152, ch);
    assume value_is(__ctobpl_const_153, result.TapeGet$2);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3418} true;
    $isdigit.arg.1$4$ := ch;
    assume value_is(__ctobpl_const_154, $isdigit.arg.1$4$);
    assume value_is(__ctobpl_const_155, ch);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3418} true;
    call result.isdigit$3 := isdigit($isdigit.arg.1$4$);
    assume value_is(__ctobpl_const_156, $isdigit.arg.1$4$);
    assume value_is(__ctobpl_const_157, $isdigit.arg.1$4$);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3418} true;
    goto label_19_true, label_19_false;

  label_19_false:
    assume result.isdigit$3 == 0;
    assume value_is(__ctobpl_const_158, result.isdigit$3);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3418} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_NEQ(ch, 43);
    assume value_is(__ctobpl_const_159, ch);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3421} true;
    assert num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(num, 1, i) := ch];
    assume value_is(__ctobpl_const_162, i);
    assume value_is(__ctobpl_const_163, Mem_T.CHAR[PLUS(num, 1, i)]);
    assume value_is(__ctobpl_const_164, ch);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3427} true;
    i := PLUS(i, 1, 1);
    assume value_is(__ctobpl_const_165, i);
    assume value_is(__ctobpl_const_166, i);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3428} true;
    call result.TapeGet$5 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_167, curr_ptr);
    assume value_is(__ctobpl_const_168, curr_ptr);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3428} true;
    ch := result.TapeGet$5;
    assume value_is(__ctobpl_const_169, ch);
    assume value_is(__ctobpl_const_170, result.TapeGet$5);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_27_head;

  label_27_head:
    call ch, i, $isdigit.arg.1$7$, result.TapeGet$8, result.isdigit$6 := GetReal_loop_label_27_head(ch, curr_ptr, i, $isdigit.arg.1$7$, num, result.TapeGet$8, result.isdigit$6);
    goto label_27_head_last;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    call result.isdigit$6 := isdigit($isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_173, $isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_174, $isdigit.arg.1$7$);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_31_true, label_31_false;

  label_31_false:
    assume result.isdigit$6 == 0;
    assume value_is(__ctobpl_const_175, result.isdigit$6);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_32_true, label_32_false;

  label_32_false:
    assume !INT_EQ(ch, 46);
    assume value_is(__ctobpl_const_176, ch);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_50_true, label_50_false;

  label_50_false:
    assume !INT_EQ(ch, 101);
    assume value_is(__ctobpl_const_177, ch);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_51_true, label_51_false;

  label_51_false:
    assume !INT_EQ(ch, 69);
    assume value_is(__ctobpl_const_178, ch);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_52_true, label_52_false;

  label_52_false:
    assume !INT_EQ(ch, 45);
    assume value_is(__ctobpl_const_179, ch);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3447} true;
    goto label_34_true, label_34_false;

  label_34_false:
    assume !INT_LEQ(100, i);
    assume value_is(__ctobpl_const_182, i);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3450} true;
    assert num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(num, 1, i) := 0];
    assume value_is(__ctobpl_const_183, i);
    assume value_is(__ctobpl_const_184, Mem_T.CHAR[PLUS(num, 1, i)]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3458} true;
    call result.atof$9 := atof(num);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3458} true;
    assert reale != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[reale := result.atof$9];
    assume value_is(__ctobpl_const_186, reale);
    assume value_is(__ctobpl_const_187, Mem_T.FLOAT[reale]);
    assume value_is(__ctobpl_const_188, result.atof$9);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3466} true;
    assert tp != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[tp := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_189, tp);
    assume value_is(__ctobpl_const_190, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_191, curr_ptr);
    assume value_is(__ctobpl_const_192, Mem_T.Pcharac[curr_ptr]);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3468} true;
    result.GetReal$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3470} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(num);
    return;

  label_34_true:
    assume INT_LEQ(100, i);
    assume value_is(__ctobpl_const_182, i);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3448} true;
    assert num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(num, 1, 100) := 0];
    assume value_is(__ctobpl_const_185, Mem_T.CHAR[PLUS(num, 1, 100)]);
    goto label_44;

  label_52_true:
    assume INT_EQ(ch, 45);
    assume value_is(__ctobpl_const_179, ch);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    assert curr_ptr != 0;
    goto label_33_true, label_33_false;

  label_33_false:
    assume Mem_T.Pcharac[curr_ptr] == 0;
    assume value_is(__ctobpl_const_180, curr_ptr);
    assume value_is(__ctobpl_const_181, Mem_T.Pcharac[curr_ptr]);
    goto label_34;

  label_33_true:
    assume Mem_T.Pcharac[curr_ptr] != 0;
    assume value_is(__ctobpl_const_180, curr_ptr);
    assume value_is(__ctobpl_const_181, Mem_T.Pcharac[curr_ptr]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3435} true;
    goto label_35_true, label_35_false;

  label_35_false:
    assume !INT_LT(i, 100);
    assume value_is(__ctobpl_const_193, i);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3440} true;
    i := PLUS(i, 1, 1);
    assume value_is(__ctobpl_const_197, i);
    assume value_is(__ctobpl_const_198, i);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3441} true;
    call result.TapeGet$8 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_199, curr_ptr);
    assume value_is(__ctobpl_const_200, curr_ptr);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3441} true;
    ch := result.TapeGet$8;
    assume value_is(__ctobpl_const_201, ch);
    assume value_is(__ctobpl_const_202, result.TapeGet$8);
    goto label_41_dummy;

  label_35_true:
    assume INT_LT(i, 100);
    assume value_is(__ctobpl_const_193, i);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3436} true;
    assert num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(num, 1, i) := ch];
    assume value_is(__ctobpl_const_194, i);
    assume value_is(__ctobpl_const_195, Mem_T.CHAR[PLUS(num, 1, i)]);
    assume value_is(__ctobpl_const_196, ch);
    goto label_36;

  label_51_true:
    assume INT_EQ(ch, 69);
    assume value_is(__ctobpl_const_178, ch);
    goto label_33;

  label_50_true:
    assume INT_EQ(ch, 101);
    assume value_is(__ctobpl_const_177, ch);
    goto label_33;

  label_32_true:
    assume INT_EQ(ch, 46);
    assume value_is(__ctobpl_const_176, ch);
    goto label_33;

  label_31_true:
    assume result.isdigit$6 != 0;
    assume value_is(__ctobpl_const_175, result.isdigit$6);
    goto label_33;

  label_20_true:
    assume INT_NEQ(ch, 43);
    assume value_is(__ctobpl_const_159, ch);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3418} true;
    goto label_53_true, label_53_false;

  label_53_false:
    assume !INT_NEQ(ch, 45);
    assume value_is(__ctobpl_const_160, ch);
    goto label_21;

  label_53_true:
    assume INT_NEQ(ch, 45);
    assume value_is(__ctobpl_const_160, ch);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3418} true;
    goto label_54_true, label_54_false;

  label_54_false:
    assume !INT_NEQ(ch, 46);
    assume value_is(__ctobpl_const_161, ch);
    goto label_21;

  label_54_true:
    assume INT_NEQ(ch, 46);
    assume value_is(__ctobpl_const_161, ch);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3419} true;
    result.GetReal$1 := 13;
    goto label_1;

  label_19_true:
    assume result.isdigit$3 != 0;
    assume value_is(__ctobpl_const_158, result.isdigit$3);
    goto label_21;

  label_41_dummy:
    assume false;
    return;

  label_27_head_last:
    $isdigit.arg.1$7$ := ch;
    assume value_is(__ctobpl_const_171, $isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_172, ch);
    goto label_28;
}



procedure {:extern} GetUName(word.__1: int, tp.__1: int) returns (result.GetUName$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} GetUName(word.__1: int, tp.__1: int) returns (result.GetUName$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} ch: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} i: int;
  var {:extern} $isdigit.arg.1$5$: int;
  var {:extern} $isletter.arg.1$9$: int;
  var {:extern} result.InKWords$10: int;
  var {:extern} result.TapeGet$2: int;
  var {:extern} result.TapeGet$6: int;
  var {:extern} result.isdigit$4: int;
  var {:extern} result.isletter$3: int;
  var {:extern} result.isletter$8: int;
  var {:extern} result.strlen$7: int;
  var {:extern} tp: int;
  var {:extern} word: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(word.__1, alloc);
    assume INT_LT(tp.__1, alloc);
    ch := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    i := 0;
    $isdigit.arg.1$5$ := 0;
    $isletter.arg.1$9$ := 0;
    result.GetUName$1 := 0;
    result.InKWords$10 := 0;
    result.TapeGet$2 := 0;
    result.TapeGet$6 := 0;
    result.isdigit$4 := 0;
    result.isletter$3 := 0;
    result.isletter$8 := 0;
    result.strlen$7 := 0;
    tp := 0;
    word := 0;
    word := word.__1;
    tp := tp.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3479} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3479} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3480} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3481} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3481} true;
    i := 0;
    assume value_is(__ctobpl_const_203, i);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3484} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_204, curr_ptr);
    assume value_is(__ctobpl_const_205, Mem_T.Pcharac[curr]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3485} true;
    assert curr_ptr != 0;
    assert tp != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := Mem_T.Pcharac[tp]];
    assume value_is(__ctobpl_const_206, curr_ptr);
    assume value_is(__ctobpl_const_207, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_208, tp);
    assume value_is(__ctobpl_const_209, Mem_T.Pcharac[tp]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3490} true;
    call result.TapeGet$2 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_210, curr_ptr);
    assume value_is(__ctobpl_const_211, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3490} true;
    ch := result.TapeGet$2;
    assume value_is(__ctobpl_const_212, ch);
    assume value_is(__ctobpl_const_213, result.TapeGet$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    goto label_14_head;

  label_14_head:
    call ch, i, $isdigit.arg.1$5$, result.TapeGet$6, result.isdigit$4, result.isletter$3 := GetUName_loop_label_14_head(ch, curr_ptr, i, $isdigit.arg.1$5$, result.TapeGet$6, result.isdigit$4, result.isletter$3, word);
    goto label_14_head_last;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    goto label_17_true, label_17_false;

  label_17_false:
    assume result.isletter$3 == 0;
    assume value_is(__ctobpl_const_216, result.isletter$3);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    $isdigit.arg.1$5$ := ch;
    assume value_is(__ctobpl_const_217, $isdigit.arg.1$5$);
    assume value_is(__ctobpl_const_218, ch);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    call result.isdigit$4 := isdigit($isdigit.arg.1$5$);
    assume value_is(__ctobpl_const_219, $isdigit.arg.1$5$);
    assume value_is(__ctobpl_const_220, $isdigit.arg.1$5$);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    goto label_55_true, label_55_false;

  label_55_false:
    assume result.isdigit$4 == 0;
    assume value_is(__ctobpl_const_221, result.isdigit$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3502} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_LEQ(30, i);
    assume value_is(__ctobpl_const_224, i);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3505} true;
    assert word != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(word, 1, i) := 0];
    assume value_is(__ctobpl_const_225, word);
    assume value_is(__ctobpl_const_226, i);
    assume value_is(__ctobpl_const_227, Mem_T.CHAR[PLUS(word, 1, i)]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3508} true;
    goto label_30_true, label_30_false;

  label_30_false:
    assume !INT_LT(30, i);
    assume value_is(__ctobpl_const_230, i);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3518} true;
    call result.strlen$7 := strlen(word);
    assume value_is(__ctobpl_const_237, word);
    assume value_is(__ctobpl_const_238, word);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3518} true;
    goto label_37_true, label_37_false;

  label_37_false:
    assume result.strlen$7 == 0;
    assume value_is(__ctobpl_const_239, result.strlen$7);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3519} true;
    result.GetUName$1 := 2;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3533} true;
    call __HAVOC_free(curr);
    return;

  label_37_true:
    assume result.strlen$7 != 0;
    assume value_is(__ctobpl_const_239, result.strlen$7);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3521} true;
    assert word != 0;
    $isletter.arg.1$9$ := Mem_T.CHAR[PLUS(word, 1, 0)];
    assume value_is(__ctobpl_const_240, $isletter.arg.1$9$);
    assume value_is(__ctobpl_const_241, word);
    assume value_is(__ctobpl_const_242, Mem_T.CHAR[PLUS(word, 1, 0)]);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3521} true;
    call result.isletter$8 := isletter($isletter.arg.1$9$);
    assume value_is(__ctobpl_const_243, $isletter.arg.1$9$);
    assume value_is(__ctobpl_const_244, $isletter.arg.1$9$);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3521} true;
    goto label_43_true, label_43_false;

  label_43_false:
    assume result.isletter$8 == 0;
    assume value_is(__ctobpl_const_245, result.isletter$8);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3523} true;
    result.GetUName$1 := 5;
    goto label_1;

  label_43_true:
    assume result.isletter$8 != 0;
    assume value_is(__ctobpl_const_245, result.isletter$8);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3525} true;
    call result.InKWords$10 := InKWords(word);
    assume value_is(__ctobpl_const_246, word);
    assume value_is(__ctobpl_const_247, word);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3525} true;
    goto label_48_true, label_48_false;

  label_48_false:
    assume !INT_EQ(result.InKWords$10, 1);
    assume value_is(__ctobpl_const_248, result.InKWords$10);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3531} true;
    assert tp != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[tp := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_249, tp);
    assume value_is(__ctobpl_const_250, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_251, curr_ptr);
    assume value_is(__ctobpl_const_252, Mem_T.Pcharac[curr_ptr]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3532} true;
    result.GetUName$1 := 0;
    goto label_1;

  label_48_true:
    assume INT_EQ(result.InKWords$10, 1);
    assume value_is(__ctobpl_const_248, result.InKWords$10);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3527} true;
    result.GetUName$1 := 6;
    goto label_1;

  label_30_true:
    assume INT_LT(30, i);
    assume value_is(__ctobpl_const_230, i);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3509} true;
    assert tp != 0;
    assert tp != 0;
    call parserro(Mem_T.Pcharac[tp], 7, word);
    assume value_is(__ctobpl_const_231, tp);
    assume value_is(__ctobpl_const_232, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_233, word);
    assume value_is(__ctobpl_const_234, tp);
    assume value_is(__ctobpl_const_235, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_236, word);
    goto label_31;

  label_20_true:
    assume INT_LEQ(30, i);
    assume value_is(__ctobpl_const_224, i);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3503} true;
    assert word != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(word, 1, 30) := 0];
    assume value_is(__ctobpl_const_228, word);
    assume value_is(__ctobpl_const_229, Mem_T.CHAR[PLUS(word, 1, 30)]);
    goto label_30;

  label_55_true:
    assume result.isdigit$4 != 0;
    assume value_is(__ctobpl_const_221, result.isdigit$4);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    assert curr_ptr != 0;
    goto label_19_true, label_19_false;

  label_19_false:
    assume Mem_T.Pcharac[curr_ptr] == 0;
    assume value_is(__ctobpl_const_222, curr_ptr);
    assume value_is(__ctobpl_const_223, Mem_T.Pcharac[curr_ptr]);
    goto label_20;

  label_19_true:
    assume Mem_T.Pcharac[curr_ptr] != 0;
    assume value_is(__ctobpl_const_222, curr_ptr);
    assume value_is(__ctobpl_const_223, Mem_T.Pcharac[curr_ptr]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3492} true;
    goto label_21_true, label_21_false;

  label_21_false:
    assume !INT_LT(i, 30);
    assume value_is(__ctobpl_const_253, i);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3497} true;
    i := PLUS(i, 1, 1);
    assume value_is(__ctobpl_const_258, i);
    assume value_is(__ctobpl_const_259, i);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3498} true;
    call result.TapeGet$6 := TapeGet(curr_ptr);
    assume value_is(__ctobpl_const_260, curr_ptr);
    assume value_is(__ctobpl_const_261, curr_ptr);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3498} true;
    ch := result.TapeGet$6;
    assume value_is(__ctobpl_const_262, ch);
    assume value_is(__ctobpl_const_263, result.TapeGet$6);
    goto label_27_dummy;

  label_21_true:
    assume INT_LT(i, 30);
    assume value_is(__ctobpl_const_253, i);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3493} true;
    assert word != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(word, 1, i) := ch];
    assume value_is(__ctobpl_const_254, word);
    assume value_is(__ctobpl_const_255, i);
    assume value_is(__ctobpl_const_256, Mem_T.CHAR[PLUS(word, 1, i)]);
    assume value_is(__ctobpl_const_257, ch);
    goto label_22;

  label_17_true:
    assume result.isletter$3 != 0;
    assume value_is(__ctobpl_const_216, result.isletter$3);
    goto label_19;

  label_27_dummy:
    assume false;
    return;

  label_14_head_last:
    call result.isletter$3 := isletter(ch);
    assume value_is(__ctobpl_const_214, ch);
    assume value_is(__ctobpl_const_215, ch);
    goto label_17;
}



procedure {:extern} GetUReal(p1.__1: int, pp2.__1: int, ureal_ptr.__1: int) returns (result.GetUReal$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} GetUReal(p1.__1: int, pp2.__1: int, ureal_ptr.__1: int) returns (result.GetUReal$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetReal$2: int;
  var {:extern} ureal_ptr: int;
  var {:extern} val: int;
  var {:extern} val_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(ureal_ptr.__1, alloc);
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetReal$2 := 0;
    result.GetUReal$1 := 0;
    ureal_ptr := 0;
    call val := __HAVOC_det_malloc(8);
    val_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    ureal_ptr := ureal_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3544} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3544} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3544} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_264, curr_ptr);
    assume value_is(__ctobpl_const_265, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3545} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3546} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3546} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3546} true;
    val_ptr := val;
    assume value_is(__ctobpl_const_266, val_ptr);
    assume value_is(__ctobpl_const_267, Mem_T.FLOAT[val]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3551} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_268, curr_ptr);
    assume value_is(__ctobpl_const_269, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_270, p1);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3555} true;
    call result.GetReal$2 := GetReal(val_ptr, curr_ptr);
    assume value_is(__ctobpl_const_271, val_ptr);
    assume value_is(__ctobpl_const_272, curr_ptr);
    assume value_is(__ctobpl_const_273, val_ptr);
    assume value_is(__ctobpl_const_274, curr_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3555} true;
    error := result.GetReal$2;
    assume value_is(__ctobpl_const_275, error);
    assume value_is(__ctobpl_const_276, result.GetReal$2);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3556} true;
    goto label_15_true, label_15_false;

  label_15_false:
    assume error == 0;
    assume value_is(__ctobpl_const_277, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3565} true;
    assert val_ptr != 0;
    goto label_16_true, label_16_false;

  label_16_false:
    assume !INT_LT(Mem_T.FLOAT[val_ptr], 0);
    assume value_is(__ctobpl_const_278, val_ptr);
    assume value_is(__ctobpl_const_279, Mem_T.FLOAT[val_ptr]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3570} true;
    assert ureal_ptr != 0;
    assert val_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[ureal_ptr := Mem_T.FLOAT[val_ptr]];
    assume value_is(__ctobpl_const_280, ureal_ptr);
    assume value_is(__ctobpl_const_281, Mem_T.FLOAT[ureal_ptr]);
    assume value_is(__ctobpl_const_282, val_ptr);
    assume value_is(__ctobpl_const_283, Mem_T.FLOAT[val_ptr]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3573} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_284, pp2);
    assume value_is(__ctobpl_const_285, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_286, curr_ptr);
    assume value_is(__ctobpl_const_287, Mem_T.Pcharac[curr_ptr]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3576} true;
    result.GetUReal$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3577} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(val);
    return;

  label_16_true:
    assume INT_LT(Mem_T.FLOAT[val_ptr], 0);
    assume value_is(__ctobpl_const_278, val_ptr);
    assume value_is(__ctobpl_const_279, Mem_T.FLOAT[val_ptr]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3566} true;
    result.GetUReal$1 := 12;
    goto label_1;

  label_15_true:
    assume error != 0;
    assume value_is(__ctobpl_const_277, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3557} true;
    result.GetUReal$1 := 11;
    goto label_1;
}



procedure {:extern} InKWords(WORD.__1: int) returns (result.InKWords$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} InKWords(WORD.__1: int) returns (result.InKWords$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} WORD: int;
  var {:extern} i: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.strcmp$4: int;
  var {:extern} result.strlen$2: int;
  var {:extern} $strcmp.arg.2$5$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(WORD.__1, alloc);
    WORD := 0;
    i := 0;
    result.InKWords$1 := 0;
    result.printf$3 := 0;
    result.strcmp$4 := 0;
    result.strlen$2 := 0;
    $strcmp.arg.2$5$ := 0;
    WORD := WORD.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4657} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4662} true;
    call result.strlen$2 := strlen(WORD);
    assume value_is(__ctobpl_const_288, WORD);
    assume value_is(__ctobpl_const_289, WORD);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4662} true;
    goto label_7_true, label_7_false;

  label_7_false:
    assume result.strlen$2 == 0;
    assume value_is(__ctobpl_const_290, result.strlen$2);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4663} true;
    call result.printf$3 := det_choice();
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4664} true;
    return;

  label_7_true:
    assume result.strlen$2 != 0;
    assume value_is(__ctobpl_const_290, result.strlen$2);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4666} true;
    i := 0;
    assume value_is(__ctobpl_const_291, i);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4666} true;
    goto label_12_head;

  label_12_head:
    call i, result.strcmp$4, $strcmp.arg.2$5$ := InKWords_loop_label_12_head(WORD, i, result.strcmp$4, $strcmp.arg.2$5$);
    goto label_12_head_last;

  label_12_false:
    assume !INT_LEQ(i, 125);
    assume value_is(__ctobpl_const_292, i);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4673} true;
    result.InKWords$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4674} true;
    return;

  label_12_true:
    assume INT_LEQ(i, 125);
    assume value_is(__ctobpl_const_292, i);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4670} true;
    $strcmp.arg.2$5$ := PLUS(Keywords, 21, i);
    assume value_is(__ctobpl_const_293, $strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_294, i);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4670} true;
    call result.strcmp$4 := strcmp(WORD, $strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_295, WORD);
    assume value_is(__ctobpl_const_296, $strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_297, WORD);
    assume value_is(__ctobpl_const_298, $strcmp.arg.2$5$);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4670} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume result.strcmp$4 == 0;
    assume value_is(__ctobpl_const_299, result.strcmp$4);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4671} true;
    result.InKWords$1 := 1;
    goto label_1;

  label_18_true:
    assume result.strcmp$4 != 0;
    assume value_is(__ctobpl_const_299, result.strcmp$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4666} true;
    assume value_is(__ctobpl_const_300, i);
    i := PLUS(i, 1, 1);
    goto label_20_dummy;

  label_20_dummy:
    assume false;
    return;

  label_12_head_last:
    goto label_12_true, label_12_false;
}



procedure {:extern} InUNames(WORD.__1: int) returns (result.InUNames$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} InUNames(WORD.__1: int) returns (result.InUNames$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} WORD: int;
  var {:extern} i: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.strcmp$4: int;
  var {:extern} result.strlen$2: int;
  var {:extern} $strcmp.arg.2$5$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(WORD.__1, alloc);
    WORD := 0;
    i := 0;
    result.InUNames$1 := 0;
    result.printf$3 := 0;
    result.strcmp$4 := 0;
    result.strlen$2 := 0;
    $strcmp.arg.2$5$ := 0;
    WORD := WORD.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4750} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4756} true;
    call result.strlen$2 := strlen(WORD);
    assume value_is(__ctobpl_const_301, WORD);
    assume value_is(__ctobpl_const_302, WORD);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4756} true;
    goto label_7_true, label_7_false;

  label_7_false:
    assume result.strlen$2 == 0;
    assume value_is(__ctobpl_const_303, result.strlen$2);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4757} true;
    call result.printf$3 := det_choice();
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4758} true;
    return;

  label_7_true:
    assume result.strlen$2 != 0;
    assume value_is(__ctobpl_const_303, result.strlen$2);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4760} true;
    i := 0;
    assume value_is(__ctobpl_const_304, i);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4760} true;
    goto label_12_head;

  label_12_head:
    call i, result.strcmp$4, $strcmp.arg.2$5$ := InUNames_loop_label_12_head(WORD, i, result.strcmp$4, $strcmp.arg.2$5$);
    goto label_12_head_last;

  label_12_false:
    assume !INT_LEQ(i, 20);
    assume value_is(__ctobpl_const_305, i);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4767} true;
    result.InUNames$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4768} true;
    return;

  label_12_true:
    assume INT_LEQ(i, 20);
    assume value_is(__ctobpl_const_305, i);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4764} true;
    $strcmp.arg.2$5$ := PLUS(UserNames, 31, i);
    assume value_is(__ctobpl_const_306, $strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_307, i);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4764} true;
    call result.strcmp$4 := strcmp(WORD, $strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_308, WORD);
    assume value_is(__ctobpl_const_309, $strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_310, WORD);
    assume value_is(__ctobpl_const_311, $strcmp.arg.2$5$);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4764} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume result.strcmp$4 == 0;
    assume value_is(__ctobpl_const_312, result.strcmp$4);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4765} true;
    result.InUNames$1 := 1;
    goto label_1;

  label_18_true:
    assume result.strcmp$4 != 0;
    assume value_is(__ctobpl_const_312, result.strcmp$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4760} true;
    assume value_is(__ctobpl_const_313, i);
    i := PLUS(i, 1, 1);
    goto label_20_dummy;

  label_20_dummy:
    assume false;
    return;

  label_12_head_last:
    goto label_12_true, label_12_false;
}



procedure {:extern} InserUN(WORD.__1: int) returns (result.InserUN$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} InserUN(WORD.__1: int) returns (result.InserUN$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} WORD: int;
  var {:extern} i: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.printf$8: int;
  var {:extern} result.strcpy$6: int;
  var {:extern} result.strlen$2: int;
  var {:extern} result.strlen$4: int;
  var {:extern} $strcpy.arg.1$7$: int;
  var {:extern} $strlen.arg.1$5$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(WORD.__1, alloc);
    WORD := 0;
    i := 0;
    result.InserUN$1 := 0;
    result.printf$3 := 0;
    result.printf$8 := 0;
    result.strcpy$6 := 0;
    result.strlen$2 := 0;
    result.strlen$4 := 0;
    $strcpy.arg.1$7$ := 0;
    $strlen.arg.1$5$ := 0;
    WORD := WORD.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4682} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4688} true;
    call result.strlen$2 := strlen(WORD);
    assume value_is(__ctobpl_const_314, WORD);
    assume value_is(__ctobpl_const_315, WORD);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4688} true;
    goto label_7_true, label_7_false;

  label_7_false:
    assume result.strlen$2 == 0;
    assume value_is(__ctobpl_const_316, result.strlen$2);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4689} true;
    call result.printf$3 := det_choice();
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4690} true;
    return;

  label_7_true:
    assume result.strlen$2 != 0;
    assume value_is(__ctobpl_const_316, result.strlen$2);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4693} true;
    i := 0;
    assume value_is(__ctobpl_const_317, i);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4693} true;
    goto label_12_true, label_12_false;

  label_12_false:
    assume !INT_LEQ(i, 20);
    assume value_is(__ctobpl_const_318, i);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4701} true;
    call result.printf$8 := det_choice();
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4702} true;
    return;

  label_12_true:
    assume INT_LEQ(i, 20);
    assume value_is(__ctobpl_const_318, i);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4694} true;
    $strlen.arg.1$5$ := PLUS(UserNames, 31, i);
    assume value_is(__ctobpl_const_319, $strlen.arg.1$5$);
    assume value_is(__ctobpl_const_320, i);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4694} true;
    call result.strlen$4 := strlen($strlen.arg.1$5$);
    assume value_is(__ctobpl_const_321, $strlen.arg.1$5$);
    assume value_is(__ctobpl_const_322, $strlen.arg.1$5$);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4694} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume result.strlen$4 == 0;
    assume value_is(__ctobpl_const_323, result.strlen$4);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4695} true;
    $strcpy.arg.1$7$ := PLUS(UserNames, 31, i);
    assume value_is(__ctobpl_const_324, $strcpy.arg.1$7$);
    assume value_is(__ctobpl_const_325, i);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4695} true;
    call result.strcpy$6 := strcpy($strcpy.arg.1$7$, WORD);
    assume value_is(__ctobpl_const_326, $strcpy.arg.1$7$);
    assume value_is(__ctobpl_const_327, WORD);
    assume value_is(__ctobpl_const_328, $strcpy.arg.1$7$);
    assume value_is(__ctobpl_const_329, WORD);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4697} true;
    result.InserUN$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4704} true;
    return;

  label_20_true:
    assume result.strlen$4 != 0;
    assume value_is(__ctobpl_const_323, result.strlen$4);
    goto label_22;
}



procedure {:extern} TapeGet(tp.__1: int) returns (result.TapeGet$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} TapeGet(tp.__1: int) returns (result.TapeGet$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} ch: int;
  var {:extern} tp: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(tp.__1, alloc);
    ch := 0;
    result.TapeGet$1 := 0;
    tp := 0;
    tp := tp.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8664} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8666} true;
    assert tp != 0;
    goto label_4_true, label_4_false;

  label_4_false:
    assume Mem_T.Pcharac[tp] == 0;
    assume value_is(__ctobpl_const_330, tp);
    assume value_is(__ctobpl_const_331, Mem_T.Pcharac[tp]);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8667} true;
    ch := 0;
    assume value_is(__ctobpl_const_332, ch);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8672} true;
    result.TapeGet$1 := ch;
    assume value_is(__ctobpl_const_342, ch);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8673} true;
    return;

  label_4_true:
    assume Mem_T.Pcharac[tp] != 0;
    assume value_is(__ctobpl_const_330, tp);
    assume value_is(__ctobpl_const_331, Mem_T.Pcharac[tp]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8669} true;
    assert tp != 0;
    assert Mem_T.Pcharac[tp] != 0;
    ch := Mem_T.info_charac[info_charac(Mem_T.Pcharac[tp])];
    assume value_is(__ctobpl_const_333, ch);
    assume value_is(__ctobpl_const_334, tp);
    assume value_is(__ctobpl_const_335, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_336, Mem_T.info_charac[info_charac(Mem_T.Pcharac[tp])]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8670} true;
    assert tp != 0;
    assert tp != 0;
    assert Mem_T.Pcharac[tp] != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[tp := Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[tp])]];
    assume value_is(__ctobpl_const_337, tp);
    assume value_is(__ctobpl_const_338, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_339, tp);
    assume value_is(__ctobpl_const_340, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_341, Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[tp])]);
    goto label_8;
}



procedure {:extern} adddef(p1.__1: int, pp2.__1: int, addrem_ptr.__1: int) returns (result.adddef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} adddef(p1.__1: int, pp2.__1: int, addrem_ptr.__1: int) returns (result.adddef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} addrem_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} no_ptr: int;
  var {:extern} node_ptr: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.blockdef$6: int;
  var {:extern} result.hexdef$10: int;
  var {:extern} result.malloc$5: int;
  var {:extern} result.malloc$7: int;
  var {:extern} result.malloc$9: int;
  var {:extern} result.malloc$11: int;
  var {:extern} result.nodedef$4: int;
  var {:extern} result.polydef$8: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(addrem_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    addrem_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    call no_ptr := __HAVOC_det_malloc(4);
    node_ptr := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.adddef$1 := 0;
    result.blockdef$6 := 0;
    result.hexdef$10 := 0;
    result.malloc$5 := 0;
    result.malloc$7 := 0;
    result.malloc$9 := 0;
    result.malloc$11 := 0;
    result.nodedef$4 := 0;
    result.polydef$8 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    addrem_ptr := addrem_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 572} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 572} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 572} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_343, curr_ptr);
    assume value_is(__ctobpl_const_344, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 573} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 575} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 575} true;
    Mem_T.PNode := Mem_T.PNode[no_ptr := 0];
    assume value_is(__ctobpl_const_345, Mem_T.PNode[no_ptr]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 575} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 575} true;
    node_ptr := no_ptr;
    assume value_is(__ctobpl_const_346, node_ptr);
    assume value_is(__ctobpl_const_347, Mem_T.PNode[no_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 583} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_348, curr_ptr);
    assume value_is(__ctobpl_const_349, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_350, p1);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 584} true;
    error := 0;
    assume value_is(__ctobpl_const_351, error);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 587} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 79);
    assume value_is(__ctobpl_const_352, $GetKeyword.arg.1$3$);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 587} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_353, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_354, curr_ptr);
    assume value_is(__ctobpl_const_355, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_356, curr_ptr);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 587} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_357, error);
    assume value_is(__ctobpl_const_358, result.GetKeyword$2);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 588} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume error == 0;
    assume value_is(__ctobpl_const_359, error);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 598} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.nodedef$4 := nodedef(Mem_T.Pcharac[curr_ptr], curr_ptr, node_ptr);
    assume value_is(__ctobpl_const_360, curr_ptr);
    assume value_is(__ctobpl_const_361, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_362, curr_ptr);
    assume value_is(__ctobpl_const_363, node_ptr);
    assume value_is(__ctobpl_const_364, curr_ptr);
    assume value_is(__ctobpl_const_365, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_366, curr_ptr);
    assume value_is(__ctobpl_const_367, node_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 598} true;
    error := result.nodedef$4;
    assume value_is(__ctobpl_const_368, error);
    assume value_is(__ctobpl_const_369, result.nodedef$4);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 601} true;
    goto label_25_true, label_25_false;

  label_25_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_370, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 609} true;
    goto label_26_true, label_26_false;

  label_26_false:
    assume error == 0;
    assume value_is(__ctobpl_const_371, error);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 611} true;
    call result.malloc$5 := __HAVOC_det_malloc(16);
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 611} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := result.malloc$5];
    assume value_is(__ctobpl_const_372, addrem_ptr);
    assume value_is(__ctobpl_const_373, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_374, result.malloc$5);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 613} true;
    assert addrem_ptr != 0;
    goto label_125_true, label_125_false;

  label_125_false:
    assume Mem_T.PAddRem[addrem_ptr] == 0;
    assume value_is(__ctobpl_const_375, addrem_ptr);
    assume value_is(__ctobpl_const_376, Mem_T.PAddRem[addrem_ptr]);
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 614} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_377, curr_ptr);
    assume value_is(__ctobpl_const_378, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_379, curr_ptr);
    assume value_is(__ctobpl_const_380, Mem_T.Pcharac[curr_ptr]);
    goto label_135;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 616} true;
    call interror(havoc_stringTemp);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 619} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.ADDREM_TYPE_AddRem := Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_381, addrem_ptr);
    assume value_is(__ctobpl_const_382, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_383, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 620} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.BLOCK_TYPE_AddRem := Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_384, addrem_ptr);
    assume value_is(__ctobpl_const_385, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_386, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 621} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    assert node_ptr != 0;
    Mem_T.NODE_PTR_AddRem := Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr]) := Mem_T.PNode[node_ptr]];
    assume value_is(__ctobpl_const_387, addrem_ptr);
    assume value_is(__ctobpl_const_388, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_389, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    assume value_is(__ctobpl_const_390, node_ptr);
    assume value_is(__ctobpl_const_391, Mem_T.PNode[node_ptr]);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 622} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_392, addrem_ptr);
    assume value_is(__ctobpl_const_393, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_394, Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 624} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_395, pp2);
    assume value_is(__ctobpl_const_396, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_397, curr_ptr);
    assume value_is(__ctobpl_const_398, Mem_T.Pcharac[curr_ptr]);
    goto label_134;

  label_134:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 625} true;
    result.adddef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 736} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(no_ptr);
    return;

  label_125_true:
    assume Mem_T.PAddRem[addrem_ptr] != 0;
    assume value_is(__ctobpl_const_375, addrem_ptr);
    assume value_is(__ctobpl_const_376, Mem_T.PAddRem[addrem_ptr]);
    goto label_129;

  label_26_true:
    assume error != 0;
    assume value_is(__ctobpl_const_371, error);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 634} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.blockdef$6 := blockdef(Mem_T.Pcharac[curr_ptr], curr_ptr, node_ptr);
    assume value_is(__ctobpl_const_399, curr_ptr);
    assume value_is(__ctobpl_const_400, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_401, curr_ptr);
    assume value_is(__ctobpl_const_402, node_ptr);
    assume value_is(__ctobpl_const_403, curr_ptr);
    assume value_is(__ctobpl_const_404, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_405, curr_ptr);
    assume value_is(__ctobpl_const_406, node_ptr);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 634} true;
    error := result.blockdef$6;
    assume value_is(__ctobpl_const_407, error);
    assume value_is(__ctobpl_const_408, result.blockdef$6);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 636} true;
    goto label_39_true, label_39_false;

  label_39_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_409, error);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 644} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume error == 0;
    assume value_is(__ctobpl_const_410, error);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 646} true;
    call result.malloc$7 := __HAVOC_det_malloc(16);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 646} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := result.malloc$7];
    assume value_is(__ctobpl_const_411, addrem_ptr);
    assume value_is(__ctobpl_const_412, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_413, result.malloc$7);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 648} true;
    assert addrem_ptr != 0;
    goto label_111_true, label_111_false;

  label_111_false:
    assume Mem_T.PAddRem[addrem_ptr] == 0;
    assume value_is(__ctobpl_const_414, addrem_ptr);
    assume value_is(__ctobpl_const_415, Mem_T.PAddRem[addrem_ptr]);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 649} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_416, curr_ptr);
    assume value_is(__ctobpl_const_417, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_418, curr_ptr);
    assume value_is(__ctobpl_const_419, Mem_T.Pcharac[curr_ptr]);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 651} true;
    call interror(havoc_stringTemp);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 654} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.ADDREM_TYPE_AddRem := Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_420, addrem_ptr);
    assume value_is(__ctobpl_const_421, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_422, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 655} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.BLOCK_TYPE_AddRem := Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 1];
    assume value_is(__ctobpl_const_423, addrem_ptr);
    assume value_is(__ctobpl_const_424, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_425, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 656} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    assert node_ptr != 0;
    Mem_T.NODE_PTR_AddRem := Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr]) := Mem_T.PNode[node_ptr]];
    assume value_is(__ctobpl_const_426, addrem_ptr);
    assume value_is(__ctobpl_const_427, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_428, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    assume value_is(__ctobpl_const_429, node_ptr);
    assume value_is(__ctobpl_const_430, Mem_T.PNode[node_ptr]);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 657} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_431, addrem_ptr);
    assume value_is(__ctobpl_const_432, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_433, Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 659} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_434, pp2);
    assume value_is(__ctobpl_const_435, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_436, curr_ptr);
    assume value_is(__ctobpl_const_437, Mem_T.Pcharac[curr_ptr]);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 660} true;
    result.adddef$1 := 0;
    goto label_1;

  label_111_true:
    assume Mem_T.PAddRem[addrem_ptr] != 0;
    assume value_is(__ctobpl_const_414, addrem_ptr);
    assume value_is(__ctobpl_const_415, Mem_T.PAddRem[addrem_ptr]);
    goto label_115;

  label_40_true:
    assume error != 0;
    assume value_is(__ctobpl_const_410, error);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 667} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.polydef$8 := polydef(Mem_T.Pcharac[curr_ptr], curr_ptr, node_ptr);
    assume value_is(__ctobpl_const_438, curr_ptr);
    assume value_is(__ctobpl_const_439, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_440, curr_ptr);
    assume value_is(__ctobpl_const_441, node_ptr);
    assume value_is(__ctobpl_const_442, curr_ptr);
    assume value_is(__ctobpl_const_443, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_444, curr_ptr);
    assume value_is(__ctobpl_const_445, node_ptr);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 667} true;
    error := result.polydef$8;
    assume value_is(__ctobpl_const_446, error);
    assume value_is(__ctobpl_const_447, result.polydef$8);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 669} true;
    goto label_53_true, label_53_false;

  label_53_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_448, error);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 677} true;
    goto label_54_true, label_54_false;

  label_54_false:
    assume error == 0;
    assume value_is(__ctobpl_const_449, error);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 679} true;
    call result.malloc$9 := __HAVOC_det_malloc(16);
    goto label_96;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 679} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := result.malloc$9];
    assume value_is(__ctobpl_const_450, addrem_ptr);
    assume value_is(__ctobpl_const_451, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_452, result.malloc$9);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 681} true;
    assert addrem_ptr != 0;
    goto label_97_true, label_97_false;

  label_97_false:
    assume Mem_T.PAddRem[addrem_ptr] == 0;
    assume value_is(__ctobpl_const_453, addrem_ptr);
    assume value_is(__ctobpl_const_454, Mem_T.PAddRem[addrem_ptr]);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 682} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_455, curr_ptr);
    assume value_is(__ctobpl_const_456, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_457, curr_ptr);
    assume value_is(__ctobpl_const_458, Mem_T.Pcharac[curr_ptr]);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 684} true;
    call interror(havoc_stringTemp);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 687} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.ADDREM_TYPE_AddRem := Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_459, addrem_ptr);
    assume value_is(__ctobpl_const_460, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_461, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_102;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 688} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.BLOCK_TYPE_AddRem := Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 2];
    assume value_is(__ctobpl_const_462, addrem_ptr);
    assume value_is(__ctobpl_const_463, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_464, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 689} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    assert node_ptr != 0;
    Mem_T.NODE_PTR_AddRem := Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr]) := Mem_T.PNode[node_ptr]];
    assume value_is(__ctobpl_const_465, addrem_ptr);
    assume value_is(__ctobpl_const_466, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_467, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    assume value_is(__ctobpl_const_468, node_ptr);
    assume value_is(__ctobpl_const_469, Mem_T.PNode[node_ptr]);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 690} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_470, addrem_ptr);
    assume value_is(__ctobpl_const_471, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_472, Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 692} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_473, pp2);
    assume value_is(__ctobpl_const_474, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_475, curr_ptr);
    assume value_is(__ctobpl_const_476, Mem_T.Pcharac[curr_ptr]);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 693} true;
    result.adddef$1 := 0;
    goto label_1;

  label_97_true:
    assume Mem_T.PAddRem[addrem_ptr] != 0;
    assume value_is(__ctobpl_const_453, addrem_ptr);
    assume value_is(__ctobpl_const_454, Mem_T.PAddRem[addrem_ptr]);
    goto label_101;

  label_54_true:
    assume error != 0;
    assume value_is(__ctobpl_const_449, error);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 700} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.hexdef$10 := hexdef(Mem_T.Pcharac[curr_ptr], curr_ptr, node_ptr);
    assume value_is(__ctobpl_const_477, curr_ptr);
    assume value_is(__ctobpl_const_478, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_479, curr_ptr);
    assume value_is(__ctobpl_const_480, node_ptr);
    assume value_is(__ctobpl_const_481, curr_ptr);
    assume value_is(__ctobpl_const_482, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_483, curr_ptr);
    assume value_is(__ctobpl_const_484, node_ptr);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 700} true;
    error := result.hexdef$10;
    assume value_is(__ctobpl_const_485, error);
    assume value_is(__ctobpl_const_486, result.hexdef$10);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 702} true;
    goto label_67_true, label_67_false;

  label_67_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_487, error);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 710} true;
    goto label_68_true, label_68_false;

  label_68_false:
    assume error == 0;
    assume value_is(__ctobpl_const_488, error);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 712} true;
    call result.malloc$11 := __HAVOC_det_malloc(16);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 712} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := result.malloc$11];
    assume value_is(__ctobpl_const_489, addrem_ptr);
    assume value_is(__ctobpl_const_490, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_491, result.malloc$11);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 714} true;
    assert addrem_ptr != 0;
    goto label_83_true, label_83_false;

  label_83_false:
    assume Mem_T.PAddRem[addrem_ptr] == 0;
    assume value_is(__ctobpl_const_492, addrem_ptr);
    assume value_is(__ctobpl_const_493, Mem_T.PAddRem[addrem_ptr]);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 715} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_494, curr_ptr);
    assume value_is(__ctobpl_const_495, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_496, curr_ptr);
    assume value_is(__ctobpl_const_497, Mem_T.Pcharac[curr_ptr]);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 717} true;
    call interror(havoc_stringTemp);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 720} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.ADDREM_TYPE_AddRem := Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_498, addrem_ptr);
    assume value_is(__ctobpl_const_499, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_500, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 721} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.BLOCK_TYPE_AddRem := Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 3];
    assume value_is(__ctobpl_const_501, addrem_ptr);
    assume value_is(__ctobpl_const_502, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_503, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 722} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    assert node_ptr != 0;
    Mem_T.NODE_PTR_AddRem := Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr]) := Mem_T.PNode[node_ptr]];
    assume value_is(__ctobpl_const_504, addrem_ptr);
    assume value_is(__ctobpl_const_505, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_506, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    assume value_is(__ctobpl_const_507, node_ptr);
    assume value_is(__ctobpl_const_508, Mem_T.PNode[node_ptr]);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 723} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_509, addrem_ptr);
    assume value_is(__ctobpl_const_510, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_511, Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 725} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_512, pp2);
    assume value_is(__ctobpl_const_513, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_514, curr_ptr);
    assume value_is(__ctobpl_const_515, Mem_T.Pcharac[curr_ptr]);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 726} true;
    result.adddef$1 := 0;
    goto label_1;

  label_83_true:
    assume Mem_T.PAddRem[addrem_ptr] != 0;
    assume value_is(__ctobpl_const_492, addrem_ptr);
    assume value_is(__ctobpl_const_493, Mem_T.PAddRem[addrem_ptr]);
    goto label_87;

  label_68_true:
    assume error != 0;
    assume value_is(__ctobpl_const_488, error);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 732} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_516, addrem_ptr);
    assume value_is(__ctobpl_const_517, Mem_T.PAddRem[addrem_ptr]);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 733} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 62, havoc_stringTemp);
    assume value_is(__ctobpl_const_518, curr_ptr);
    assume value_is(__ctobpl_const_519, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_520, curr_ptr);
    assume value_is(__ctobpl_const_521, Mem_T.Pcharac[curr_ptr]);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 735} true;
    result.adddef$1 := 17;
    goto label_1;

  label_67_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_487, error);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 703} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_522, addrem_ptr);
    assume value_is(__ctobpl_const_523, Mem_T.PAddRem[addrem_ptr]);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 704} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 61, havoc_stringTemp);
    assume value_is(__ctobpl_const_524, curr_ptr);
    assume value_is(__ctobpl_const_525, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_526, curr_ptr);
    assume value_is(__ctobpl_const_527, Mem_T.Pcharac[curr_ptr]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 706} true;
    result.adddef$1 := 17;
    goto label_1;

  label_53_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_448, error);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 670} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_528, addrem_ptr);
    assume value_is(__ctobpl_const_529, Mem_T.PAddRem[addrem_ptr]);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 671} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 60, havoc_stringTemp);
    assume value_is(__ctobpl_const_530, curr_ptr);
    assume value_is(__ctobpl_const_531, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_532, curr_ptr);
    assume value_is(__ctobpl_const_533, Mem_T.Pcharac[curr_ptr]);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 673} true;
    result.adddef$1 := 17;
    goto label_1;

  label_39_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_409, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 637} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_534, addrem_ptr);
    assume value_is(__ctobpl_const_535, Mem_T.PAddRem[addrem_ptr]);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 638} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 59, havoc_stringTemp);
    assume value_is(__ctobpl_const_536, curr_ptr);
    assume value_is(__ctobpl_const_537, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_538, curr_ptr);
    assume value_is(__ctobpl_const_539, Mem_T.Pcharac[curr_ptr]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 640} true;
    result.adddef$1 := 17;
    goto label_1;

  label_25_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_370, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 602} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_540, addrem_ptr);
    assume value_is(__ctobpl_const_541, Mem_T.PAddRem[addrem_ptr]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 603} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 58, havoc_stringTemp);
    assume value_is(__ctobpl_const_542, curr_ptr);
    assume value_is(__ctobpl_const_543, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_544, curr_ptr);
    assume value_is(__ctobpl_const_545, Mem_T.Pcharac[curr_ptr]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 605} true;
    result.adddef$1 := 17;
    goto label_1;

  label_18_true:
    assume error != 0;
    assume value_is(__ctobpl_const_359, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 589} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_546, addrem_ptr);
    assume value_is(__ctobpl_const_547, Mem_T.PAddRem[addrem_ptr]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 590} true;
    result.adddef$1 := 1;
    goto label_1;
}



procedure {:extern} addscan(group_ptr.__1: int) returns (result.addscan$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} addscan(group_ptr.__1: int) returns (result.addscan$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} add_ptr: int;
  var {:extern} angle: int;
  var {:extern} ap1_ptr: int;
  var {:extern} ap2_ptr: int;
  var {:extern} app1_ptr: int;
  var {:extern} app2_ptr: int;
  var {:extern} elem_pdim: int;
  var {:extern} elem_qdim: int;
  var {:extern} elem_shape: int;
  var {:extern} group_psize: int;
  var {:extern} group_psize_ptr: int;
  var {:extern} group_ptr: int;
  var {:extern} group_qsize: int;
  var {:extern} group_qsize_ptr: int;
  var {:extern} group_shape: int;
  var {:extern} new_nodes: int;
  var {:extern} new_nodes_ptr: int;
  var {:extern} nodes_num: int;
  var {:extern} pnum: int;
  var {:extern} pnum_ptr: int;
  var {:extern} primo_ptr: int;
  var {:extern} $printf.arg.2$6$: int;
  var {:extern} pstep: int;
  var {:extern} qnum: int;
  var {:extern} qnum_ptr: int;
  var {:extern} qstep: int;
  var {:extern} result.extremes$9: int;
  var {:extern} result.extsize$10: int;
  var {:extern} result.mksblock$3: int;
  var {:extern} result.mkshex$7: int;
  var {:extern} result.mksnode$2: int;
  var {:extern} result.printf$4: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.sgrrot$8: int;
  var {:extern} rot_angle: int;
  var {:extern} ultimo_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(group_ptr.__1, alloc);
    add_ptr := 0;
    angle := 0;
    call ap1_ptr := __HAVOC_det_malloc(4);
    call ap2_ptr := __HAVOC_det_malloc(4);
    app1_ptr := 0;
    app2_ptr := 0;
    elem_pdim := 0;
    elem_qdim := 0;
    elem_shape := 0;
    call group_psize := __HAVOC_det_malloc(8);
    group_psize_ptr := 0;
    group_ptr := 0;
    call group_qsize := __HAVOC_det_malloc(8);
    group_qsize_ptr := 0;
    group_shape := 0;
    call new_nodes := __HAVOC_det_malloc(4);
    new_nodes_ptr := 0;
    nodes_num := 0;
    call pnum := __HAVOC_det_malloc(4);
    pnum_ptr := 0;
    primo_ptr := 0;
    $printf.arg.2$6$ := 0;
    pstep := 0;
    call qnum := __HAVOC_det_malloc(4);
    qnum_ptr := 0;
    qstep := 0;
    result.addscan$1 := 0;
    result.extremes$9 := 0;
    result.extsize$10 := 0;
    result.mksblock$3 := 0;
    result.mkshex$7 := 0;
    result.mksnode$2 := 0;
    result.printf$4 := 0;
    result.printf$5 := 0;
    result.sgrrot$8 := 0;
    rot_angle := 0;
    ultimo_ptr := 0;
    group_ptr := group_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 745} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 745} true;
    add_ptr := 0;
    assume value_is(__ctobpl_const_548, add_ptr);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 746} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 746} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[ap1_ptr := 0];
    assume value_is(__ctobpl_const_549, Mem_T.PGeomnode[ap1_ptr]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 746} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 746} true;
    app1_ptr := ap1_ptr;
    assume value_is(__ctobpl_const_550, app1_ptr);
    assume value_is(__ctobpl_const_551, Mem_T.PGeomnode[ap1_ptr]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 746} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 746} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[ap2_ptr := 0];
    assume value_is(__ctobpl_const_552, Mem_T.PGeomnode[ap2_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 746} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 746} true;
    app2_ptr := ap2_ptr;
    assume value_is(__ctobpl_const_553, app2_ptr);
    assume value_is(__ctobpl_const_554, Mem_T.PGeomnode[ap2_ptr]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 747} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 747} true;
    primo_ptr := 0;
    assume value_is(__ctobpl_const_555, primo_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 747} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 747} true;
    ultimo_ptr := 0;
    assume value_is(__ctobpl_const_556, ultimo_ptr);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 749} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 749} true;
    Mem_T.INT4 := Mem_T.INT4[new_nodes := 0];
    assume value_is(__ctobpl_const_557, Mem_T.INT4[new_nodes]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 749} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 749} true;
    new_nodes_ptr := new_nodes;
    assume value_is(__ctobpl_const_558, new_nodes_ptr);
    assume value_is(__ctobpl_const_559, Mem_T.INT4[new_nodes]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 750} true;
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 750} true;
    Mem_T.INT4 := Mem_T.INT4[pnum := 0];
    assume value_is(__ctobpl_const_560, Mem_T.INT4[pnum]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 750} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 750} true;
    pnum_ptr := pnum;
    assume value_is(__ctobpl_const_561, pnum_ptr);
    assume value_is(__ctobpl_const_562, Mem_T.INT4[pnum]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 750} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 750} true;
    Mem_T.INT4 := Mem_T.INT4[qnum := 0];
    assume value_is(__ctobpl_const_563, Mem_T.INT4[qnum]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 750} true;
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 750} true;
    qnum_ptr := qnum;
    assume value_is(__ctobpl_const_564, qnum_ptr);
    assume value_is(__ctobpl_const_565, Mem_T.INT4[qnum]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 753} true;
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 754} true;
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 754} true;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 756} true;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 756} true;
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 756} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 756} true;
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 758} true;
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 758} true;
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 759} true;
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 759} true;
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 759} true;
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 759} true;
    group_psize_ptr := group_psize;
    assume value_is(__ctobpl_const_566, group_psize_ptr);
    assume value_is(__ctobpl_const_567, Mem_T.FLOAT[group_psize]);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 759} true;
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 759} true;
    group_qsize_ptr := group_qsize;
    assume value_is(__ctobpl_const_568, group_qsize_ptr);
    assume value_is(__ctobpl_const_569, Mem_T.FLOAT[group_qsize]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 766} true;
    assert group_ptr != 0;
    assert Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)] != 0;
    pstep := Mem_T.PSTEP_Grid[PSTEP_Grid(Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_570, pstep);
    assume value_is(__ctobpl_const_571, group_ptr);
    assume value_is(__ctobpl_const_572, Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_573, Mem_T.PSTEP_Grid[PSTEP_Grid(Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)])]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 767} true;
    assert group_ptr != 0;
    assert Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)] != 0;
    qstep := Mem_T.QSTEP_Grid[QSTEP_Grid(Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_574, qstep);
    assume value_is(__ctobpl_const_575, group_ptr);
    assume value_is(__ctobpl_const_576, Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_577, Mem_T.QSTEP_Grid[QSTEP_Grid(Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)])]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 768} true;
    assert group_ptr != 0;
    assert Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)] != 0;
    angle := Mem_T.ANGLE_Grid[ANGLE_Grid(Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_578, angle);
    assume value_is(__ctobpl_const_579, group_ptr);
    assume value_is(__ctobpl_const_580, Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_581, Mem_T.ANGLE_Grid[ANGLE_Grid(Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)])]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 769} true;
    assert group_ptr != 0;
    assert Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)] != 0;
    rot_angle := Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_582, rot_angle);
    assume value_is(__ctobpl_const_583, group_ptr);
    assume value_is(__ctobpl_const_584, Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_585, Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)])]);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 770} true;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    elem_pdim := Mem_T.PDIM_Elem[PDIM_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_586, elem_pdim);
    assume value_is(__ctobpl_const_587, group_ptr);
    assume value_is(__ctobpl_const_588, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_589, Mem_T.PDIM_Elem[PDIM_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 771} true;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    elem_qdim := Mem_T.QDIM_Elem[QDIM_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_590, elem_qdim);
    assume value_is(__ctobpl_const_591, group_ptr);
    assume value_is(__ctobpl_const_592, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_593, Mem_T.QDIM_Elem[QDIM_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 773} true;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    goto label_50_true, label_50_false;

  label_50_false:
    assume Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])] == 0;
    assume value_is(__ctobpl_const_594, group_ptr);
    assume value_is(__ctobpl_const_595, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_596, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 774} true;
    elem_shape := 3;
    assume value_is(__ctobpl_const_597, elem_shape);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 779} true;
    assert group_ptr != 0;
    add_ptr := Mem_T.ADDREM_PTR_Group[ADDREM_PTR_Group(group_ptr)];
    assume value_is(__ctobpl_const_599, add_ptr);
    assume value_is(__ctobpl_const_600, group_ptr);
    assume value_is(__ctobpl_const_601, Mem_T.ADDREM_PTR_Group[ADDREM_PTR_Group(group_ptr)]);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 782} true;
    nodes_num := 0;
    assume value_is(__ctobpl_const_602, nodes_num);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 783} true;
    group_shape := 0;
    assume value_is(__ctobpl_const_603, group_shape);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 786} true;
    goto label_56_head;

  label_56_head:
    call add_ptr, group_shape, nodes_num, primo_ptr, result.mksblock$3, result.mkshex$7, result.mksnode$2, ultimo_ptr := addscan_loop_label_56_head(havoc_stringTemp, add_ptr, angle, app1_ptr, app2_ptr, elem_pdim, elem_qdim, elem_shape, group_ptr, group_shape, new_nodes_ptr, nodes_num, primo_ptr, pstep, qstep, result.mksblock$3, result.mkshex$7, result.mksnode$2, ultimo_ptr);
    goto label_56_head_last;

  label_56_false:
    assume add_ptr == 0;
    assume value_is(__ctobpl_const_604, add_ptr);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 878} true;
    goto label_57_true, label_57_false;

  label_57_false:
    assume !INT_NEQ(rot_angle, 0);
    assume value_is(__ctobpl_const_605, rot_angle);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 885} true;
    goto label_109_true, label_109_false;

  label_109_false:
    assume !INT_EQ(group_shape, 2);
    assume value_is(__ctobpl_const_611, group_shape);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 888} true;
    goto label_114_true, label_114_false;

  label_114_false:
    assume !INT_EQ(group_shape, 3);
    assume value_is(__ctobpl_const_612, group_shape);
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 895} true;
    call result.extsize$10 := extsize(primo_ptr, elem_pdim, elem_qdim, group_psize_ptr, group_qsize_ptr);
    assume value_is(__ctobpl_const_613, primo_ptr);
    assume value_is(__ctobpl_const_614, elem_pdim);
    assume value_is(__ctobpl_const_615, elem_qdim);
    assume value_is(__ctobpl_const_616, group_psize_ptr);
    assume value_is(__ctobpl_const_617, group_qsize_ptr);
    assume value_is(__ctobpl_const_618, primo_ptr);
    assume value_is(__ctobpl_const_619, elem_pdim);
    assume value_is(__ctobpl_const_620, elem_qdim);
    assume value_is(__ctobpl_const_621, group_psize_ptr);
    assume value_is(__ctobpl_const_622, group_qsize_ptr);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 899} true;
    assert group_ptr != 0;
    Mem_T.NUM_OF_NODES_Group := Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr) := nodes_num];
    assume value_is(__ctobpl_const_644, group_ptr);
    assume value_is(__ctobpl_const_645, Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr)]);
    assume value_is(__ctobpl_const_646, nodes_num);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 900} true;
    assert group_ptr != 0;
    Mem_T.SHAPE_Group := Mem_T.SHAPE_Group[SHAPE_Group(group_ptr) := group_shape];
    assume value_is(__ctobpl_const_647, group_ptr);
    assume value_is(__ctobpl_const_648, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    assume value_is(__ctobpl_const_649, group_shape);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 901} true;
    assert group_ptr != 0;
    Mem_T.PSIZE_Group := Mem_T.PSIZE_Group[PSIZE_Group(group_ptr) := Mem_T.FLOAT[group_psize]];
    assume value_is(__ctobpl_const_650, group_ptr);
    assume value_is(__ctobpl_const_651, Mem_T.PSIZE_Group[PSIZE_Group(group_ptr)]);
    assume value_is(__ctobpl_const_652, Mem_T.FLOAT[group_psize]);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 902} true;
    assert group_ptr != 0;
    Mem_T.QSIZE_Group := Mem_T.QSIZE_Group[QSIZE_Group(group_ptr) := Mem_T.FLOAT[group_qsize]];
    assume value_is(__ctobpl_const_653, group_ptr);
    assume value_is(__ctobpl_const_654, Mem_T.QSIZE_Group[QSIZE_Group(group_ptr)]);
    assume value_is(__ctobpl_const_655, Mem_T.FLOAT[group_qsize]);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 903} true;
    assert group_ptr != 0;
    Mem_T.GEOMNODE_PTR_Group := Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr) := primo_ptr];
    assume value_is(__ctobpl_const_656, group_ptr);
    assume value_is(__ctobpl_const_657, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_658, primo_ptr);
    goto label_122;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 905} true;
    result.addscan$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 906} true;
    call __HAVOC_free(ap1_ptr);
    call __HAVOC_free(ap2_ptr);
    call __HAVOC_free(group_psize);
    call __HAVOC_free(group_qsize);
    call __HAVOC_free(new_nodes);
    call __HAVOC_free(pnum);
    call __HAVOC_free(qnum);
    return;

  label_114_true:
    assume INT_EQ(group_shape, 3);
    assume value_is(__ctobpl_const_612, group_shape);
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 890} true;
    call result.extremes$9 := extremes(primo_ptr, pnum_ptr, qnum_ptr);
    assume value_is(__ctobpl_const_623, primo_ptr);
    assume value_is(__ctobpl_const_624, pnum_ptr);
    assume value_is(__ctobpl_const_625, qnum_ptr);
    assume value_is(__ctobpl_const_626, primo_ptr);
    assume value_is(__ctobpl_const_627, pnum_ptr);
    assume value_is(__ctobpl_const_628, qnum_ptr);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 892} true;
    assert pnum_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[group_psize := PLUS(MULT(MINUS_BOTH_PTR_OR_BOTH_INT(Mem_T.INT4[pnum_ptr], 1, 1), pstep), 1, MULT(2, BINARY_BOTH_INT(elem_pdim, 2)))];
    assume value_is(__ctobpl_const_629, Mem_T.FLOAT[group_psize]);
    assume value_is(__ctobpl_const_630, pnum_ptr);
    assume value_is(__ctobpl_const_631, Mem_T.INT4[pnum_ptr]);
    assume value_is(__ctobpl_const_632, pstep);
    assume value_is(__ctobpl_const_633, elem_pdim);
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 893} true;
    assert qnum_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[group_qsize := PLUS(MULT(MINUS_BOTH_PTR_OR_BOTH_INT(Mem_T.INT4[qnum_ptr], 1, 1), qstep), 1, MULT(2, BINARY_BOTH_INT(elem_qdim, 2)))];
    assume value_is(__ctobpl_const_634, Mem_T.FLOAT[group_qsize]);
    assume value_is(__ctobpl_const_635, qnum_ptr);
    assume value_is(__ctobpl_const_636, Mem_T.INT4[qnum_ptr]);
    assume value_is(__ctobpl_const_637, qstep);
    assume value_is(__ctobpl_const_638, elem_qdim);
    goto label_117;

  label_109_true:
    assume INT_EQ(group_shape, 2);
    assume value_is(__ctobpl_const_611, group_shape);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 886} true;
    Mem_T.FLOAT := Mem_T.FLOAT[group_psize := PLUS(MULT(2, pstep), 1, MULT(2, BINARY_BOTH_INT(elem_pdim, 2)))];
    assume value_is(__ctobpl_const_639, Mem_T.FLOAT[group_psize]);
    assume value_is(__ctobpl_const_640, pstep);
    assume value_is(__ctobpl_const_641, elem_pdim);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 887} true;
    Mem_T.FLOAT := Mem_T.FLOAT[group_qsize := Mem_T.FLOAT[group_psize]];
    assume value_is(__ctobpl_const_642, Mem_T.FLOAT[group_qsize]);
    assume value_is(__ctobpl_const_643, Mem_T.FLOAT[group_psize]);
    goto label_117;

  label_57_true:
    assume INT_NEQ(rot_angle, 0);
    assume value_is(__ctobpl_const_605, rot_angle);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 879} true;
    call result.sgrrot$8 := sgrrot(primo_ptr, 0, 0, rot_angle);
    assume value_is(__ctobpl_const_606, primo_ptr);
    assume value_is(__ctobpl_const_607, rot_angle);
    assume value_is(__ctobpl_const_608, primo_ptr);
    assume value_is(__ctobpl_const_609, rot_angle);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 880} true;
    group_shape := 5;
    assume value_is(__ctobpl_const_610, group_shape);
    goto label_109;

  label_56_true:
    assume add_ptr != 0;
    assume value_is(__ctobpl_const_604, add_ptr);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 793} true;
    assert add_ptr != 0;
    goto label_58_true, label_58_false;

  label_58_false:
    assume !INT_EQ(Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(add_ptr)], 1);
    assume value_is(__ctobpl_const_659, add_ptr);
    assume value_is(__ctobpl_const_660, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(add_ptr)]);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 807} true;
    assert add_ptr != 0;
    goto label_59_case_0, label_59_case_1, label_59_case_2, label_59_case_3, label_59_case_4;

  label_59_case_4:
    assume INT_EQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)], 3);
    assume value_is(__ctobpl_const_661, add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)]);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 837} true;
    goto label_75_true, label_75_false;

  label_75_false:
    assume !INT_NEQ(elem_shape, 2);
    assume value_is(__ctobpl_const_714, elem_shape);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 841} true;
    call result.mkshex$7 := mkshex(add_ptr, app1_ptr, app2_ptr, pstep, qstep, angle, new_nodes_ptr, elem_shape, elem_pdim, elem_qdim);
    assume value_is(__ctobpl_const_715, add_ptr);
    assume value_is(__ctobpl_const_716, app1_ptr);
    assume value_is(__ctobpl_const_717, app2_ptr);
    assume value_is(__ctobpl_const_718, pstep);
    assume value_is(__ctobpl_const_719, qstep);
    assume value_is(__ctobpl_const_720, angle);
    assume value_is(__ctobpl_const_721, new_nodes_ptr);
    assume value_is(__ctobpl_const_722, elem_shape);
    assume value_is(__ctobpl_const_723, elem_pdim);
    assume value_is(__ctobpl_const_724, elem_qdim);
    assume value_is(__ctobpl_const_725, add_ptr);
    assume value_is(__ctobpl_const_726, app1_ptr);
    assume value_is(__ctobpl_const_727, app2_ptr);
    assume value_is(__ctobpl_const_728, pstep);
    assume value_is(__ctobpl_const_729, qstep);
    assume value_is(__ctobpl_const_730, angle);
    assume value_is(__ctobpl_const_731, new_nodes_ptr);
    assume value_is(__ctobpl_const_732, elem_shape);
    assume value_is(__ctobpl_const_733, elem_pdim);
    assume value_is(__ctobpl_const_734, elem_qdim);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 842} true;
    goto label_84_true, label_84_false;

  label_84_false:
    assume group_shape == 0;
    assume value_is(__ctobpl_const_735, group_shape);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 843} true;
    group_shape := 2;
    assume value_is(__ctobpl_const_736, group_shape);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 846} true;
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 853} true;
    assert new_nodes_ptr != 0;
    nodes_num := PLUS(nodes_num, 1, Mem_T.INT4[new_nodes_ptr]);
    assume value_is(__ctobpl_const_738, nodes_num);
    assume value_is(__ctobpl_const_739, nodes_num);
    assume value_is(__ctobpl_const_740, new_nodes_ptr);
    assume value_is(__ctobpl_const_741, Mem_T.INT4[new_nodes_ptr]);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 862} true;
    goto label_89_true, label_89_false;

  label_89_false:
    assume primo_ptr == 0;
    assume value_is(__ctobpl_const_742, primo_ptr);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 863} true;
    assert app1_ptr != 0;
    primo_ptr := Mem_T.PGeomnode[app1_ptr];
    assume value_is(__ctobpl_const_743, primo_ptr);
    assume value_is(__ctobpl_const_744, app1_ptr);
    assume value_is(__ctobpl_const_745, Mem_T.PGeomnode[app1_ptr]);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 868} true;
    assert app2_ptr != 0;
    ultimo_ptr := Mem_T.PGeomnode[app2_ptr];
    assume value_is(__ctobpl_const_750, ultimo_ptr);
    assume value_is(__ctobpl_const_751, app2_ptr);
    assume value_is(__ctobpl_const_752, Mem_T.PGeomnode[app2_ptr]);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 870} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_753, ultimo_ptr);
    assume value_is(__ctobpl_const_754, Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr)]);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 873} true;
    assert add_ptr != 0;
    add_ptr := Mem_T.NEXT_AddRem[NEXT_AddRem(add_ptr)];
    assume value_is(__ctobpl_const_755, add_ptr);
    assume value_is(__ctobpl_const_756, add_ptr);
    assume value_is(__ctobpl_const_757, Mem_T.NEXT_AddRem[NEXT_AddRem(add_ptr)]);
    goto label_94_dummy;

  label_89_true:
    assume primo_ptr != 0;
    assume value_is(__ctobpl_const_742, primo_ptr);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 865} true;
    assert ultimo_ptr != 0;
    assert app1_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr) := Mem_T.PGeomnode[app1_ptr]];
    assume value_is(__ctobpl_const_746, ultimo_ptr);
    assume value_is(__ctobpl_const_747, Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr)]);
    assume value_is(__ctobpl_const_748, app1_ptr);
    assume value_is(__ctobpl_const_749, Mem_T.PGeomnode[app1_ptr]);
    goto label_92;

  label_84_true:
    assume group_shape != 0;
    assume value_is(__ctobpl_const_735, group_shape);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 845} true;
    group_shape := 5;
    assume value_is(__ctobpl_const_737, group_shape);
    goto label_87;

  label_75_true:
    assume INT_NEQ(elem_shape, 2);
    assume value_is(__ctobpl_const_714, elem_shape);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 838} true;
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 838} true;
    call result.printf$5 := det_choice();
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 839} true;
    result.addscan$1 := 7;
    goto label_1;

  label_59_case_3:
    assume INT_EQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)], 2);
    assume value_is(__ctobpl_const_661, add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)]);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 831} true;
    call result.printf$4 := det_choice();
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 833} true;
    return;

  label_59_case_2:
    assume INT_EQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)], 1);
    assume value_is(__ctobpl_const_661, add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)]);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 822} true;
    call result.mksblock$3 := mksblock(add_ptr, app1_ptr, app2_ptr, pstep, qstep, angle, new_nodes_ptr, elem_shape, elem_pdim, elem_qdim);
    assume value_is(__ctobpl_const_690, add_ptr);
    assume value_is(__ctobpl_const_691, app1_ptr);
    assume value_is(__ctobpl_const_692, app2_ptr);
    assume value_is(__ctobpl_const_693, pstep);
    assume value_is(__ctobpl_const_694, qstep);
    assume value_is(__ctobpl_const_695, angle);
    assume value_is(__ctobpl_const_696, new_nodes_ptr);
    assume value_is(__ctobpl_const_697, elem_shape);
    assume value_is(__ctobpl_const_698, elem_pdim);
    assume value_is(__ctobpl_const_699, elem_qdim);
    assume value_is(__ctobpl_const_700, add_ptr);
    assume value_is(__ctobpl_const_701, app1_ptr);
    assume value_is(__ctobpl_const_702, app2_ptr);
    assume value_is(__ctobpl_const_703, pstep);
    assume value_is(__ctobpl_const_704, qstep);
    assume value_is(__ctobpl_const_705, angle);
    assume value_is(__ctobpl_const_706, new_nodes_ptr);
    assume value_is(__ctobpl_const_707, elem_shape);
    assume value_is(__ctobpl_const_708, elem_pdim);
    assume value_is(__ctobpl_const_709, elem_qdim);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 824} true;
    goto label_98_true, label_98_false;

  label_98_false:
    assume group_shape == 0;
    assume value_is(__ctobpl_const_710, group_shape);
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 824} true;
    goto label_99_true, label_99_false;

  label_99_false:
    assume !INT_EQ(angle, 90);
    assume value_is(__ctobpl_const_711, angle);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 827} true;
    group_shape := 5;
    assume value_is(__ctobpl_const_713, group_shape);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 828} true;
    goto label_88;

  label_99_true:
    assume INT_EQ(angle, 90);
    assume value_is(__ctobpl_const_711, angle);
    goto label_102;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 825} true;
    group_shape := 3;
    assume value_is(__ctobpl_const_712, group_shape);
    goto label_101;

  label_98_true:
    assume group_shape != 0;
    assume value_is(__ctobpl_const_710, group_shape);
    goto label_100;

  label_59_case_1:
    assume INT_EQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)], 0);
    assume value_is(__ctobpl_const_661, add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)]);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 810} true;
    call result.mksnode$2 := mksnode(add_ptr, app1_ptr, app2_ptr, pstep, qstep, angle, new_nodes_ptr, elem_shape, elem_pdim, elem_qdim);
    assume value_is(__ctobpl_const_663, add_ptr);
    assume value_is(__ctobpl_const_664, app1_ptr);
    assume value_is(__ctobpl_const_665, app2_ptr);
    assume value_is(__ctobpl_const_666, pstep);
    assume value_is(__ctobpl_const_667, qstep);
    assume value_is(__ctobpl_const_668, angle);
    assume value_is(__ctobpl_const_669, new_nodes_ptr);
    assume value_is(__ctobpl_const_670, elem_shape);
    assume value_is(__ctobpl_const_671, elem_pdim);
    assume value_is(__ctobpl_const_672, elem_qdim);
    assume value_is(__ctobpl_const_673, add_ptr);
    assume value_is(__ctobpl_const_674, app1_ptr);
    assume value_is(__ctobpl_const_675, app2_ptr);
    assume value_is(__ctobpl_const_676, pstep);
    assume value_is(__ctobpl_const_677, qstep);
    assume value_is(__ctobpl_const_678, angle);
    assume value_is(__ctobpl_const_679, new_nodes_ptr);
    assume value_is(__ctobpl_const_680, elem_shape);
    assume value_is(__ctobpl_const_681, elem_pdim);
    assume value_is(__ctobpl_const_682, elem_qdim);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 812} true;
    goto label_103_true, label_103_false;

  label_103_false:
    assume group_shape == 0;
    assume value_is(__ctobpl_const_683, group_shape);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 813} true;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    goto label_104_true, label_104_false;

  label_104_false:
    assume Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])] == 0;
    assume value_is(__ctobpl_const_684, group_ptr);
    assume value_is(__ctobpl_const_685, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_686, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 814} true;
    group_shape := 3;
    assume value_is(__ctobpl_const_687, group_shape);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 819} true;
    goto label_88;

  label_104_true:
    assume Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])] != 0;
    assume value_is(__ctobpl_const_684, group_ptr);
    assume value_is(__ctobpl_const_685, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_686, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 816} true;
    group_shape := 2;
    assume value_is(__ctobpl_const_688, group_shape);
    goto label_106;

  label_103_true:
    assume group_shape != 0;
    assume value_is(__ctobpl_const_683, group_shape);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 818} true;
    group_shape := 5;
    assume value_is(__ctobpl_const_689, group_shape);
    goto label_106;

  label_59_case_0:
    assume INT_NEQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)], 0);
    assume INT_NEQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)], 1);
    assume INT_NEQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)], 2);
    assume INT_NEQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)], 3);
    assume value_is(__ctobpl_const_661, add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(add_ptr)]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 849} true;
    call interror(havoc_stringTemp);
    goto label_88;

  label_58_true:
    assume INT_EQ(Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(add_ptr)], 1);
    assume value_is(__ctobpl_const_659, add_ptr);
    assume value_is(__ctobpl_const_660, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(add_ptr)]);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 795} true;
    group_shape := 5;
    assume value_is(__ctobpl_const_758, group_shape);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 797} true;
    assert add_ptr != 0;
    add_ptr := Mem_T.NEXT_AddRem[NEXT_AddRem(add_ptr)];
    assume value_is(__ctobpl_const_759, add_ptr);
    assume value_is(__ctobpl_const_760, add_ptr);
    assume value_is(__ctobpl_const_761, Mem_T.NEXT_AddRem[NEXT_AddRem(add_ptr)]);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 799} true;
    goto label_62_dummy;

  label_50_true:
    assume Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])] != 0;
    assume value_is(__ctobpl_const_594, group_ptr);
    assume value_is(__ctobpl_const_595, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_596, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 776} true;
    elem_shape := 2;
    assume value_is(__ctobpl_const_598, elem_shape);
    goto label_53;

  label_94_dummy:
    assume false;
    return;

  label_62_dummy:
    assume false;
    return;

  label_56_head_last:
    goto label_56_true, label_56_false;
}



procedure {:extern} adremdef(p1.__1: int, pp2.__1: int, addrem_ptr.__1: int) returns (result.adremdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} adremdef(p1.__1: int, pp2.__1: int, addrem_ptr.__1: int) returns (result.adremdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} addrem_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$4$: int;
  var {:extern} $printf.arg.2$7$: int;
  var {:extern} result.adddef$2: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.printf$6: int;
  var {:extern} result.remdef$5: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(addrem_ptr.__1, alloc);
    addrem_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    $printf.arg.2$4$ := 0;
    $printf.arg.2$7$ := 0;
    result.adddef$2 := 0;
    result.adremdef$1 := 0;
    result.printf$3 := 0;
    result.printf$6 := 0;
    result.remdef$5 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    addrem_ptr := addrem_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 926} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 926} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 926} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_762, curr_ptr);
    assume value_is(__ctobpl_const_763, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 927} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 935} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_764, curr_ptr);
    assume value_is(__ctobpl_const_765, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_766, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 936} true;
    error := 0;
    assume value_is(__ctobpl_const_767, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 941} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_768, addrem_ptr);
    assume value_is(__ctobpl_const_769, Mem_T.PAddRem[addrem_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 947} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.adddef$2 := adddef(Mem_T.Pcharac[curr_ptr], curr_ptr, addrem_ptr);
    assume value_is(__ctobpl_const_770, curr_ptr);
    assume value_is(__ctobpl_const_771, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_772, curr_ptr);
    assume value_is(__ctobpl_const_773, addrem_ptr);
    assume value_is(__ctobpl_const_774, curr_ptr);
    assume value_is(__ctobpl_const_775, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_776, curr_ptr);
    assume value_is(__ctobpl_const_777, addrem_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 947} true;
    error := result.adddef$2;
    assume value_is(__ctobpl_const_778, error);
    assume value_is(__ctobpl_const_779, result.adddef$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 949} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_780, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 950} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_781, pp2);
    assume value_is(__ctobpl_const_782, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_783, curr_ptr);
    assume value_is(__ctobpl_const_784, Mem_T.Pcharac[curr_ptr]);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 951} true;
    result.adremdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 978} true;
    call __HAVOC_free(curr);
    return;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_780, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 954} true;
    goto label_16_true, label_16_false;

  label_16_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_785, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 960} true;
    goto label_17_true, label_17_false;

  label_17_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_786, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 964} true;
    goto label_23_true, label_23_false;

  label_23_false:
    assume error == 0;
    assume value_is(__ctobpl_const_797, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 965} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_798, pp2);
    assume value_is(__ctobpl_const_799, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_800, curr_ptr);
    assume value_is(__ctobpl_const_801, Mem_T.Pcharac[curr_ptr]);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 966} true;
    result.adremdef$1 := 0;
    goto label_1;

  label_23_true:
    assume error != 0;
    assume value_is(__ctobpl_const_797, error);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 969} true;
    goto label_29_true, label_29_false;

  label_29_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_802, error);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 974} true;
    goto label_30_true, label_30_false;

  label_30_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_803, error);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 977} true;
    result.adremdef$1 := 17;
    goto label_1;

  label_30_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_803, error);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 975} true;
    result.adremdef$1 := 1;
    goto label_1;

  label_29_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_802, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 970} true;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 970} true;
    call result.printf$6 := det_choice();
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 971} true;
    result.adremdef$1 := 17;
    goto label_1;

  label_17_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_786, error);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 961} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.remdef$5 := remdef(Mem_T.Pcharac[curr_ptr], curr_ptr, addrem_ptr);
    assume value_is(__ctobpl_const_787, curr_ptr);
    assume value_is(__ctobpl_const_788, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_789, curr_ptr);
    assume value_is(__ctobpl_const_790, addrem_ptr);
    assume value_is(__ctobpl_const_791, curr_ptr);
    assume value_is(__ctobpl_const_792, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_793, curr_ptr);
    assume value_is(__ctobpl_const_794, addrem_ptr);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 961} true;
    error := result.remdef$5;
    assume value_is(__ctobpl_const_795, error);
    assume value_is(__ctobpl_const_796, result.remdef$5);
    goto label_23;

  label_16_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_785, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 955} true;
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 955} true;
    call result.printf$3 := det_choice();
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 956} true;
    result.adremdef$1 := 17;
    goto label_1;
}



procedure {:extern} ampunit(tp.__1: int, unit_ptr.__1: int) returns (result.ampunit$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} ampunit(tp.__1: int, unit_ptr.__1: int) returns (result.ampunit$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$7$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$6: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} tp: int;
  var {:extern} unit_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(tp.__1, alloc);
    assume INT_LT(unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$7$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$6 := 0;
    result.GetKeyword$2 := 0;
    result.ampunit$1 := 0;
    tp := 0;
    unit_ptr := 0;
    tp := tp.__1;
    unit_ptr := unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 986} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 986} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 993} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_804, curr_ptr);
    assume value_is(__ctobpl_const_805, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 994} true;
    assert curr_ptr != 0;
    assert tp != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := Mem_T.Pcharac[tp]];
    assume value_is(__ctobpl_const_806, curr_ptr);
    assume value_is(__ctobpl_const_807, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_808, tp);
    assume value_is(__ctobpl_const_809, Mem_T.Pcharac[tp]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 997} true;
    assert unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[unit_ptr := 0];
    assume value_is(__ctobpl_const_810, unit_ptr);
    assume value_is(__ctobpl_const_811, Mem_T.INT4[unit_ptr]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 998} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 15);
    assume value_is(__ctobpl_const_812, $GetKeyword.arg.1$3$);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 998} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_813, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_814, curr_ptr);
    assume value_is(__ctobpl_const_815, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_816, curr_ptr);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 998} true;
    goto label_12_true, label_12_false;

  label_12_false:
    assume result.GetKeyword$2 == 0;
    assume value_is(__ctobpl_const_817, result.GetKeyword$2);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 999} true;
    assert unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[unit_ptr := 0];
    assume value_is(__ctobpl_const_818, unit_ptr);
    assume value_is(__ctobpl_const_819, Mem_T.INT4[unit_ptr]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1009} true;
    assert tp != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[tp := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_836, tp);
    assume value_is(__ctobpl_const_837, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_838, curr_ptr);
    assume value_is(__ctobpl_const_839, Mem_T.Pcharac[curr_ptr]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1010} true;
    result.ampunit$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1011} true;
    call __HAVOC_free(curr);
    return;

  label_12_true:
    assume result.GetKeyword$2 != 0;
    assume value_is(__ctobpl_const_817, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1000} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 63);
    assume value_is(__ctobpl_const_820, $GetKeyword.arg.1$5$);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1000} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_821, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_822, curr_ptr);
    assume value_is(__ctobpl_const_823, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_824, curr_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1000} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume result.GetKeyword$4 == 0;
    assume value_is(__ctobpl_const_825, result.GetKeyword$4);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1001} true;
    assert unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[unit_ptr := 1];
    assume value_is(__ctobpl_const_826, unit_ptr);
    assume value_is(__ctobpl_const_827, Mem_T.INT4[unit_ptr]);
    goto label_27;

  label_18_true:
    assume result.GetKeyword$4 != 0;
    assume value_is(__ctobpl_const_825, result.GetKeyword$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1002} true;
    $GetKeyword.arg.1$7$ := PLUS(Keywords, 21, 64);
    assume value_is(__ctobpl_const_828, $GetKeyword.arg.1$7$);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1002} true;
    call result.GetKeyword$6 := GetKeyword($GetKeyword.arg.1$7$, curr_ptr);
    assume value_is(__ctobpl_const_829, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_830, curr_ptr);
    assume value_is(__ctobpl_const_831, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_832, curr_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1002} true;
    goto label_24_true, label_24_false;

  label_24_false:
    assume result.GetKeyword$6 == 0;
    assume value_is(__ctobpl_const_833, result.GetKeyword$6);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1003} true;
    assert unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[unit_ptr := 2];
    assume value_is(__ctobpl_const_834, unit_ptr);
    assume value_is(__ctobpl_const_835, Mem_T.INT4[unit_ptr]);
    goto label_27;

  label_24_true:
    assume result.GetKeyword$6 != 0;
    assume value_is(__ctobpl_const_833, result.GetKeyword$6);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1005} true;
    result.ampunit$1 := 1;
    goto label_1;
}



procedure {:extern} ampval(p1.__1: int, pp2.__1: int, amp_ptr.__1: int, amp_unit_ptr.__1: int) returns (result.ampval$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} ampval(p1.__1: int, pp2.__1: int, amp_ptr.__1: int, amp_unit_ptr.__1: int) returns (result.ampval$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} amp_ptr: int;
  var {:extern} amp_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetReal$2: int;
  var {:extern} result.ampunit$3: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(amp_ptr.__1, alloc);
    assume INT_LT(amp_unit_ptr.__1, alloc);
    amp_ptr := 0;
    amp_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetReal$2 := 0;
    result.ampunit$3 := 0;
    result.ampval$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    amp_ptr := amp_ptr.__1;
    amp_unit_ptr := amp_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1023} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1023} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1023} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_840, curr_ptr);
    assume value_is(__ctobpl_const_841, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1024} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1031} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_842, curr_ptr);
    assume value_is(__ctobpl_const_843, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_844, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1032} true;
    error := 0;
    assume value_is(__ctobpl_const_845, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1035} true;
    call result.GetReal$2 := GetReal(amp_ptr, curr_ptr);
    assume value_is(__ctobpl_const_846, amp_ptr);
    assume value_is(__ctobpl_const_847, curr_ptr);
    assume value_is(__ctobpl_const_848, amp_ptr);
    assume value_is(__ctobpl_const_849, curr_ptr);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1035} true;
    error := result.GetReal$2;
    assume value_is(__ctobpl_const_850, error);
    assume value_is(__ctobpl_const_851, result.GetReal$2);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1036} true;
    goto label_13_true, label_13_false;

  label_13_false:
    assume error == 0;
    assume value_is(__ctobpl_const_852, error);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1041} true;
    call result.ampunit$3 := ampunit(curr_ptr, amp_unit_ptr);
    assume value_is(__ctobpl_const_853, curr_ptr);
    assume value_is(__ctobpl_const_854, amp_unit_ptr);
    assume value_is(__ctobpl_const_855, curr_ptr);
    assume value_is(__ctobpl_const_856, amp_unit_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1041} true;
    error := result.ampunit$3;
    assume value_is(__ctobpl_const_857, error);
    assume value_is(__ctobpl_const_858, result.ampunit$3);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1045} true;
    goto label_19_true, label_19_false;

  label_19_false:
    assume error == 0;
    assume value_is(__ctobpl_const_859, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1049} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_862, pp2);
    assume value_is(__ctobpl_const_863, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_864, curr_ptr);
    assume value_is(__ctobpl_const_865, Mem_T.Pcharac[curr_ptr]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1050} true;
    result.ampval$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1051} true;
    call __HAVOC_free(curr);
    return;

  label_19_true:
    assume error != 0;
    assume value_is(__ctobpl_const_859, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1046} true;
    assert amp_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[amp_unit_ptr := 0];
    assume value_is(__ctobpl_const_860, amp_unit_ptr);
    assume value_is(__ctobpl_const_861, Mem_T.INT4[amp_unit_ptr]);
    goto label_20;

  label_13_true:
    assume error != 0;
    assume value_is(__ctobpl_const_852, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1037} true;
    result.ampval$1 := 1;
    goto label_1;
}



procedure {:extern} angclaus(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.angclaus$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} angclaus(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.angclaus$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} angle_ptr: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetReal$4: int;
  var {:extern} result.angunit$5: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(angle_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    angle_ptr := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetReal$4 := 0;
    result.angclaus$1 := 0;
    result.angunit$5 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    angle_ptr := angle_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1059} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1059} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1059} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_866, curr_ptr);
    assume value_is(__ctobpl_const_867, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1060} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1063} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_868, curr_ptr);
    assume value_is(__ctobpl_const_869, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_870, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1066} true;
    error := 0;
    assume value_is(__ctobpl_const_871, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1067} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_872, angle_ptr);
    assume value_is(__ctobpl_const_873, Mem_T.FLOAT[angle_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1068} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_874, angle_unit_ptr);
    assume value_is(__ctobpl_const_875, Mem_T.INT4[angle_unit_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1071} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 23);
    assume value_is(__ctobpl_const_876, $GetKeyword.arg.1$3$);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1071} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_877, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_878, curr_ptr);
    assume value_is(__ctobpl_const_879, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_880, curr_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1071} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_881, error);
    assume value_is(__ctobpl_const_882, result.GetKeyword$2);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1072} true;
    goto label_16_true, label_16_false;

  label_16_false:
    assume error == 0;
    assume value_is(__ctobpl_const_883, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1077} true;
    call result.GetReal$4 := GetReal(angle_ptr, curr_ptr);
    assume value_is(__ctobpl_const_884, angle_ptr);
    assume value_is(__ctobpl_const_885, curr_ptr);
    assume value_is(__ctobpl_const_886, angle_ptr);
    assume value_is(__ctobpl_const_887, curr_ptr);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1077} true;
    error := result.GetReal$4;
    assume value_is(__ctobpl_const_888, error);
    assume value_is(__ctobpl_const_889, result.GetReal$4);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1078} true;
    goto label_22_true, label_22_false;

  label_22_false:
    assume error == 0;
    assume value_is(__ctobpl_const_890, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1085} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angunit$5 := angunit(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_891, curr_ptr);
    assume value_is(__ctobpl_const_892, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_893, curr_ptr);
    assume value_is(__ctobpl_const_894, angle_unit_ptr);
    assume value_is(__ctobpl_const_895, curr_ptr);
    assume value_is(__ctobpl_const_896, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_897, curr_ptr);
    assume value_is(__ctobpl_const_898, angle_unit_ptr);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1085} true;
    error := result.angunit$5;
    assume value_is(__ctobpl_const_899, error);
    assume value_is(__ctobpl_const_900, result.angunit$5);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1086} true;
    goto label_29_true, label_29_false;

  label_29_false:
    assume error == 0;
    assume value_is(__ctobpl_const_901, error);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1090} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_904, pp2);
    assume value_is(__ctobpl_const_905, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_906, curr_ptr);
    assume value_is(__ctobpl_const_907, Mem_T.Pcharac[curr_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1091} true;
    result.angclaus$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1092} true;
    call __HAVOC_free(curr);
    return;

  label_29_true:
    assume error != 0;
    assume value_is(__ctobpl_const_901, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1087} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_902, angle_unit_ptr);
    assume value_is(__ctobpl_const_903, Mem_T.INT4[angle_unit_ptr]);
    goto label_30;

  label_22_true:
    assume error != 0;
    assume value_is(__ctobpl_const_890, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1079} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_908, angle_ptr);
    assume value_is(__ctobpl_const_909, Mem_T.FLOAT[angle_ptr]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1080} true;
    result.angclaus$1 := 19;
    goto label_1;

  label_16_true:
    assume error != 0;
    assume value_is(__ctobpl_const_883, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1073} true;
    result.angclaus$1 := 1;
    goto label_1;
}



procedure {:extern} angledir(p1.__1: int, pp2.__1: int, theta_ptr.__1: int, phi_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.angledir$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} angledir(p1.__1: int, pp2.__1: int, theta_ptr.__1: int, phi_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.angledir$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$6$: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} $parserro.arg.3$7$: int;
  var {:extern} phi_ptr: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$5: int;
  var {:extern} result.GetReal$4: int;
  var {:extern} result.angval$8: int;
  var {:extern} theta_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(theta_ptr.__1, alloc);
    assume INT_LT(phi_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$6$ := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    $parserro.arg.3$7$ := 0;
    phi_ptr := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$5 := 0;
    result.GetReal$4 := 0;
    result.angledir$1 := 0;
    result.angval$8 := 0;
    theta_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    theta_ptr := theta_ptr.__1;
    phi_ptr := phi_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1113} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1113} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1113} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_910, curr_ptr);
    assume value_is(__ctobpl_const_911, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1114} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1121} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_912, curr_ptr);
    assume value_is(__ctobpl_const_913, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_914, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1124} true;
    error := 0;
    assume value_is(__ctobpl_const_915, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1127} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 70);
    assume value_is(__ctobpl_const_916, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1127} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_917, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_918, curr_ptr);
    assume value_is(__ctobpl_const_919, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_920, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1127} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_921, error);
    assume value_is(__ctobpl_const_922, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1128} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_923, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1133} true;
    call result.GetReal$4 := GetReal(theta_ptr, curr_ptr);
    assume value_is(__ctobpl_const_924, theta_ptr);
    assume value_is(__ctobpl_const_925, curr_ptr);
    assume value_is(__ctobpl_const_926, theta_ptr);
    assume value_is(__ctobpl_const_927, curr_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1133} true;
    error := result.GetReal$4;
    assume value_is(__ctobpl_const_928, error);
    assume value_is(__ctobpl_const_929, result.GetReal$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1134} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume error == 0;
    assume value_is(__ctobpl_const_930, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1141} true;
    $GetKeyword.arg.1$6$ := PLUS(Keywords, 21, 71);
    assume value_is(__ctobpl_const_931, $GetKeyword.arg.1$6$);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1141} true;
    call result.GetKeyword$5 := GetKeyword($GetKeyword.arg.1$6$, curr_ptr);
    assume value_is(__ctobpl_const_932, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_933, curr_ptr);
    assume value_is(__ctobpl_const_934, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_935, curr_ptr);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1141} true;
    error := result.GetKeyword$5;
    assume value_is(__ctobpl_const_936, error);
    assume value_is(__ctobpl_const_937, result.GetKeyword$5);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1142} true;
    goto label_30_true, label_30_false;

  label_30_false:
    assume error == 0;
    assume value_is(__ctobpl_const_938, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1148} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$8 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, phi_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_939, curr_ptr);
    assume value_is(__ctobpl_const_940, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_941, curr_ptr);
    assume value_is(__ctobpl_const_942, phi_ptr);
    assume value_is(__ctobpl_const_943, angle_unit_ptr);
    assume value_is(__ctobpl_const_944, curr_ptr);
    assume value_is(__ctobpl_const_945, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_946, curr_ptr);
    assume value_is(__ctobpl_const_947, phi_ptr);
    assume value_is(__ctobpl_const_948, angle_unit_ptr);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1148} true;
    error := result.angval$8;
    assume value_is(__ctobpl_const_949, error);
    assume value_is(__ctobpl_const_950, result.angval$8);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1149} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume error == 0;
    assume value_is(__ctobpl_const_951, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1160} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_952, pp2);
    assume value_is(__ctobpl_const_953, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_954, curr_ptr);
    assume value_is(__ctobpl_const_955, Mem_T.Pcharac[curr_ptr]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1161} true;
    result.angledir$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1162} true;
    call __HAVOC_free(curr);
    return;

  label_40_true:
    assume error != 0;
    assume value_is(__ctobpl_const_951, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1150} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 73, havoc_stringTemp);
    assume value_is(__ctobpl_const_956, curr_ptr);
    assume value_is(__ctobpl_const_957, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_958, curr_ptr);
    assume value_is(__ctobpl_const_959, Mem_T.Pcharac[curr_ptr]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1152} true;
    result.angledir$1 := 17;
    goto label_1;

  label_30_true:
    assume error != 0;
    assume value_is(__ctobpl_const_938, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1143} true;
    $parserro.arg.3$7$ := PLUS(Keywords, 21, 71);
    assume value_is(__ctobpl_const_960, $parserro.arg.3$7$);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1143} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 1, $parserro.arg.3$7$);
    assume value_is(__ctobpl_const_961, curr_ptr);
    assume value_is(__ctobpl_const_962, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_963, $parserro.arg.3$7$);
    assume value_is(__ctobpl_const_964, curr_ptr);
    assume value_is(__ctobpl_const_965, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_966, $parserro.arg.3$7$);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1144} true;
    result.angledir$1 := 17;
    goto label_1;

  label_20_true:
    assume error != 0;
    assume value_is(__ctobpl_const_930, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1135} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 73, havoc_stringTemp);
    assume value_is(__ctobpl_const_967, curr_ptr);
    assume value_is(__ctobpl_const_968, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_969, curr_ptr);
    assume value_is(__ctobpl_const_970, Mem_T.Pcharac[curr_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1137} true;
    result.angledir$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_923, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1129} true;
    result.angledir$1 := 1;
    goto label_1;
}



procedure {:extern} anglerot(p1.__1: int, pp2.__1: int, angle_start_ptr.__1: int, angle_step_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.anglerot$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} anglerot(p1.__1: int, pp2.__1: int, angle_start_ptr.__1: int, angle_step_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.anglerot$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$8$: int;
  var {:extern} angle_start_ptr: int;
  var {:extern} angle_step_ptr: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$7: int;
  var {:extern} result.GetReal$6: int;
  var {:extern} result.angval$9: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(angle_start_ptr.__1, alloc);
    assume INT_LT(angle_step_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$8$ := 0;
    angle_start_ptr := 0;
    angle_step_ptr := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$7 := 0;
    result.GetReal$6 := 0;
    result.anglerot$1 := 0;
    result.angval$9 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    angle_start_ptr := angle_start_ptr.__1;
    angle_step_ptr := angle_step_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1176} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1176} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1176} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_971, curr_ptr);
    assume value_is(__ctobpl_const_972, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1177} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1184} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_973, curr_ptr);
    assume value_is(__ctobpl_const_974, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_975, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1187} true;
    error := 0;
    assume value_is(__ctobpl_const_976, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1190} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 23);
    assume value_is(__ctobpl_const_977, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1190} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_978, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_979, curr_ptr);
    assume value_is(__ctobpl_const_980, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_981, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1190} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_982, error);
    assume value_is(__ctobpl_const_983, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1191} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_984, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1196} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 95);
    assume value_is(__ctobpl_const_985, $GetKeyword.arg.1$5$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1196} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_986, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_987, curr_ptr);
    assume value_is(__ctobpl_const_988, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_989, curr_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1196} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_990, error);
    assume value_is(__ctobpl_const_991, result.GetKeyword$4);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1197} true;
    error := 0;
    assume value_is(__ctobpl_const_992, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1200} true;
    call result.GetReal$6 := GetReal(angle_start_ptr, curr_ptr);
    assume value_is(__ctobpl_const_993, angle_start_ptr);
    assume value_is(__ctobpl_const_994, curr_ptr);
    assume value_is(__ctobpl_const_995, angle_start_ptr);
    assume value_is(__ctobpl_const_996, curr_ptr);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1200} true;
    error := result.GetReal$6;
    assume value_is(__ctobpl_const_997, error);
    assume value_is(__ctobpl_const_998, result.GetReal$6);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1201} true;
    goto label_26_true, label_26_false;

  label_26_false:
    assume error == 0;
    assume value_is(__ctobpl_const_999, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1208} true;
    $GetKeyword.arg.1$8$ := PLUS(Keywords, 21, 16);
    assume value_is(__ctobpl_const_1000, $GetKeyword.arg.1$8$);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1208} true;
    call result.GetKeyword$7 := GetKeyword($GetKeyword.arg.1$8$, curr_ptr);
    assume value_is(__ctobpl_const_1001, $GetKeyword.arg.1$8$);
    assume value_is(__ctobpl_const_1002, curr_ptr);
    assume value_is(__ctobpl_const_1003, $GetKeyword.arg.1$8$);
    assume value_is(__ctobpl_const_1004, curr_ptr);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1208} true;
    error := result.GetKeyword$7;
    assume value_is(__ctobpl_const_1005, error);
    assume value_is(__ctobpl_const_1006, result.GetKeyword$7);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1209} true;
    error := 0;
    assume value_is(__ctobpl_const_1007, error);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1212} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$9 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_step_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_1008, curr_ptr);
    assume value_is(__ctobpl_const_1009, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1010, curr_ptr);
    assume value_is(__ctobpl_const_1011, angle_step_ptr);
    assume value_is(__ctobpl_const_1012, angle_unit_ptr);
    assume value_is(__ctobpl_const_1013, curr_ptr);
    assume value_is(__ctobpl_const_1014, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1015, curr_ptr);
    assume value_is(__ctobpl_const_1016, angle_step_ptr);
    assume value_is(__ctobpl_const_1017, angle_unit_ptr);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1212} true;
    error := result.angval$9;
    assume value_is(__ctobpl_const_1018, error);
    assume value_is(__ctobpl_const_1019, result.angval$9);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1213} true;
    goto label_41_true, label_41_false;

  label_41_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1020, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1224} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1021, pp2);
    assume value_is(__ctobpl_const_1022, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1023, curr_ptr);
    assume value_is(__ctobpl_const_1024, Mem_T.Pcharac[curr_ptr]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1225} true;
    result.anglerot$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1226} true;
    call __HAVOC_free(curr);
    return;

  label_41_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1020, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1214} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 75, havoc_stringTemp);
    assume value_is(__ctobpl_const_1025, curr_ptr);
    assume value_is(__ctobpl_const_1026, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1027, curr_ptr);
    assume value_is(__ctobpl_const_1028, Mem_T.Pcharac[curr_ptr]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1216} true;
    result.anglerot$1 := 17;
    goto label_1;

  label_26_true:
    assume error != 0;
    assume value_is(__ctobpl_const_999, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1202} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 75, havoc_stringTemp);
    assume value_is(__ctobpl_const_1029, curr_ptr);
    assume value_is(__ctobpl_const_1030, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1031, curr_ptr);
    assume value_is(__ctobpl_const_1032, Mem_T.Pcharac[curr_ptr]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1204} true;
    result.anglerot$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_984, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1192} true;
    result.anglerot$1 := 1;
    goto label_1;
}



procedure {:extern} angstep(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int, pstep_ptr.__1: int, qstep_ptr.__1: int, pqstep_unit_ptr.__1: int) returns (result.angstep$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} angstep(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int, pstep_ptr.__1: int, qstep_ptr.__1: int, pqstep_unit_ptr.__1: int) returns (result.angstep$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle_ptr: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error1: int;
  var {:extern} error2: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} pqstep_unit_ptr: int;
  var {:extern} pstep_ptr: int;
  var {:extern} qstep_ptr: int;
  var {:extern} result.angclaus$2: int;
  var {:extern} result.doubstep$3: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(angle_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    assume INT_LT(pstep_ptr.__1, alloc);
    assume INT_LT(qstep_ptr.__1, alloc);
    assume INT_LT(pqstep_unit_ptr.__1, alloc);
    angle_ptr := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error1 := 0;
    error2 := 0;
    p1 := 0;
    pp2 := 0;
    pqstep_unit_ptr := 0;
    pstep_ptr := 0;
    qstep_ptr := 0;
    result.angclaus$2 := 0;
    result.angstep$1 := 0;
    result.doubstep$3 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    angle_ptr := angle_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    pstep_ptr := pstep_ptr.__1;
    qstep_ptr := qstep_ptr.__1;
    pqstep_unit_ptr := pqstep_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1237} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1237} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1237} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1033, curr_ptr);
    assume value_is(__ctobpl_const_1034, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1238} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1238} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1241} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_1035, curr_ptr);
    assume value_is(__ctobpl_const_1036, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1037, p1);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1244} true;
    error1 := 0;
    assume value_is(__ctobpl_const_1038, error1);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1245} true;
    error2 := 0;
    assume value_is(__ctobpl_const_1039, error2);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1246} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_1040, angle_ptr);
    assume value_is(__ctobpl_const_1041, Mem_T.FLOAT[angle_ptr]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1247} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_1042, angle_unit_ptr);
    assume value_is(__ctobpl_const_1043, Mem_T.INT4[angle_unit_ptr]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1248} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_1044, pstep_ptr);
    assume value_is(__ctobpl_const_1045, Mem_T.FLOAT[pstep_ptr]);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1249} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_1046, qstep_ptr);
    assume value_is(__ctobpl_const_1047, Mem_T.FLOAT[qstep_ptr]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1250} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_1048, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1049, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1255} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angclaus$2 := angclaus(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_1050, curr_ptr);
    assume value_is(__ctobpl_const_1051, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1052, curr_ptr);
    assume value_is(__ctobpl_const_1053, angle_ptr);
    assume value_is(__ctobpl_const_1054, angle_unit_ptr);
    assume value_is(__ctobpl_const_1055, curr_ptr);
    assume value_is(__ctobpl_const_1056, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1057, curr_ptr);
    assume value_is(__ctobpl_const_1058, angle_ptr);
    assume value_is(__ctobpl_const_1059, angle_unit_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1255} true;
    error1 := result.angclaus$2;
    assume value_is(__ctobpl_const_1060, error1);
    assume value_is(__ctobpl_const_1061, result.angclaus$2);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1256} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_EQ(error1, 1);
    assume value_is(__ctobpl_const_1062, error1);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1262} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.doubstep$3 := doubstep(Mem_T.Pcharac[curr_ptr], curr_ptr, pstep_ptr, qstep_ptr, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1067, curr_ptr);
    assume value_is(__ctobpl_const_1068, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1069, curr_ptr);
    assume value_is(__ctobpl_const_1070, pstep_ptr);
    assume value_is(__ctobpl_const_1071, qstep_ptr);
    assume value_is(__ctobpl_const_1072, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1073, curr_ptr);
    assume value_is(__ctobpl_const_1074, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1075, curr_ptr);
    assume value_is(__ctobpl_const_1076, pstep_ptr);
    assume value_is(__ctobpl_const_1077, qstep_ptr);
    assume value_is(__ctobpl_const_1078, pqstep_unit_ptr);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1262} true;
    error2 := result.doubstep$3;
    assume value_is(__ctobpl_const_1079, error2);
    assume value_is(__ctobpl_const_1080, result.doubstep$3);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1265} true;
    goto label_27_true, label_27_false;

  label_27_false:
    assume !INT_EQ(error1, 1);
    assume value_is(__ctobpl_const_1081, error1);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1275} true;
    goto label_28_true, label_28_false;

  label_28_false:
    assume error2 == 0;
    assume value_is(__ctobpl_const_1083, error2);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1289} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1084, pp2);
    assume value_is(__ctobpl_const_1085, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1086, curr_ptr);
    assume value_is(__ctobpl_const_1087, Mem_T.Pcharac[curr_ptr]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1290} true;
    result.angstep$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1291} true;
    call __HAVOC_free(curr);
    return;

  label_28_true:
    assume error2 != 0;
    assume value_is(__ctobpl_const_1083, error2);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1276} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error2, havoc_stringTemp);
    assume value_is(__ctobpl_const_1088, curr_ptr);
    assume value_is(__ctobpl_const_1089, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1090, error2);
    assume value_is(__ctobpl_const_1091, curr_ptr);
    assume value_is(__ctobpl_const_1092, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1093, error2);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1278} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_1094, angle_ptr);
    assume value_is(__ctobpl_const_1095, Mem_T.FLOAT[angle_ptr]);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1279} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_1096, angle_unit_ptr);
    assume value_is(__ctobpl_const_1097, Mem_T.INT4[angle_unit_ptr]);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1280} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_1098, pstep_ptr);
    assume value_is(__ctobpl_const_1099, Mem_T.FLOAT[pstep_ptr]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1281} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_1100, qstep_ptr);
    assume value_is(__ctobpl_const_1101, Mem_T.FLOAT[qstep_ptr]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1282} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_1102, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1103, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1283} true;
    result.angstep$1 := 17;
    goto label_1;

  label_27_true:
    assume INT_EQ(error1, 1);
    assume value_is(__ctobpl_const_1081, error1);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1265} true;
    goto label_29_true, label_29_false;

  label_29_false:
    assume !INT_EQ(error2, 1);
    assume value_is(__ctobpl_const_1082, error2);
    goto label_28;

  label_29_true:
    assume INT_EQ(error2, 1);
    assume value_is(__ctobpl_const_1082, error2);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1266} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_1104, angle_ptr);
    assume value_is(__ctobpl_const_1105, Mem_T.FLOAT[angle_ptr]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1267} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_1106, angle_unit_ptr);
    assume value_is(__ctobpl_const_1107, Mem_T.INT4[angle_unit_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1268} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_1108, pstep_ptr);
    assume value_is(__ctobpl_const_1109, Mem_T.FLOAT[pstep_ptr]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1269} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_1110, qstep_ptr);
    assume value_is(__ctobpl_const_1111, Mem_T.FLOAT[qstep_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1270} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_1112, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1113, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1271} true;
    result.angstep$1 := 1;
    goto label_1;

  label_20_true:
    assume INT_EQ(error1, 1);
    assume value_is(__ctobpl_const_1062, error1);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1257} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_1063, angle_ptr);
    assume value_is(__ctobpl_const_1064, Mem_T.FLOAT[angle_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1258} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_1065, angle_unit_ptr);
    assume value_is(__ctobpl_const_1066, Mem_T.INT4[angle_unit_ptr]);
    goto label_21;
}



procedure {:extern} angunit(p1.__1: int, pp2.__1: int, angle_unit_ptr.__1: int) returns (result.angunit$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} angunit(p1.__1: int, pp2.__1: int, angle_unit_ptr.__1: int) returns (result.angunit$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.angunit$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1300} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1300} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1300} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1114, curr_ptr);
    assume value_is(__ctobpl_const_1115, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1307} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_1116, curr_ptr);
    assume value_is(__ctobpl_const_1117, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1118, p1);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1311} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_1119, angle_unit_ptr);
    assume value_is(__ctobpl_const_1120, Mem_T.INT4[angle_unit_ptr]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1312} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 51);
    assume value_is(__ctobpl_const_1121, $GetKeyword.arg.1$3$);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1312} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_1122, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1123, curr_ptr);
    assume value_is(__ctobpl_const_1124, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1125, curr_ptr);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1312} true;
    goto label_12_true, label_12_false;

  label_12_false:
    assume result.GetKeyword$2 == 0;
    assume value_is(__ctobpl_const_1126, result.GetKeyword$2);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1313} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_1127, angle_unit_ptr);
    assume value_is(__ctobpl_const_1128, Mem_T.INT4[angle_unit_ptr]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1320} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1137, pp2);
    assume value_is(__ctobpl_const_1138, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1139, curr_ptr);
    assume value_is(__ctobpl_const_1140, Mem_T.Pcharac[curr_ptr]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1321} true;
    result.angunit$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1322} true;
    call __HAVOC_free(curr);
    return;

  label_12_true:
    assume result.GetKeyword$2 != 0;
    assume value_is(__ctobpl_const_1126, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1314} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 52);
    assume value_is(__ctobpl_const_1129, $GetKeyword.arg.1$5$);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1314} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_1130, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_1131, curr_ptr);
    assume value_is(__ctobpl_const_1132, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_1133, curr_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1314} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume result.GetKeyword$4 == 0;
    assume value_is(__ctobpl_const_1134, result.GetKeyword$4);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1315} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 1];
    assume value_is(__ctobpl_const_1135, angle_unit_ptr);
    assume value_is(__ctobpl_const_1136, Mem_T.INT4[angle_unit_ptr]);
    goto label_21;

  label_18_true:
    assume result.GetKeyword$4 != 0;
    assume value_is(__ctobpl_const_1134, result.GetKeyword$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1317} true;
    result.angunit$1 := 20;
    goto label_1;
}



procedure {:extern} angval(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.angval$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} angval(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.angval$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle_ptr: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetReal$2: int;
  var {:extern} result.angunit$3: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(angle_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    angle_ptr := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetReal$2 := 0;
    result.angunit$3 := 0;
    result.angval$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    angle_ptr := angle_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1334} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1334} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1334} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1141, curr_ptr);
    assume value_is(__ctobpl_const_1142, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1335} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1338} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_1143, curr_ptr);
    assume value_is(__ctobpl_const_1144, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1145, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1339} true;
    error := 0;
    assume value_is(__ctobpl_const_1146, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1342} true;
    call result.GetReal$2 := GetReal(angle_ptr, curr_ptr);
    assume value_is(__ctobpl_const_1147, angle_ptr);
    assume value_is(__ctobpl_const_1148, curr_ptr);
    assume value_is(__ctobpl_const_1149, angle_ptr);
    assume value_is(__ctobpl_const_1150, curr_ptr);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1342} true;
    error := result.GetReal$2;
    assume value_is(__ctobpl_const_1151, error);
    assume value_is(__ctobpl_const_1152, result.GetReal$2);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1343} true;
    goto label_13_true, label_13_false;

  label_13_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1153, error);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1349} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angunit$3 := angunit(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_1154, curr_ptr);
    assume value_is(__ctobpl_const_1155, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1156, curr_ptr);
    assume value_is(__ctobpl_const_1157, angle_unit_ptr);
    assume value_is(__ctobpl_const_1158, curr_ptr);
    assume value_is(__ctobpl_const_1159, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1160, curr_ptr);
    assume value_is(__ctobpl_const_1161, angle_unit_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1349} true;
    error := result.angunit$3;
    assume value_is(__ctobpl_const_1162, error);
    assume value_is(__ctobpl_const_1163, result.angunit$3);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1353} true;
    goto label_19_true, label_19_false;

  label_19_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1164, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1357} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1167, pp2);
    assume value_is(__ctobpl_const_1168, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1169, curr_ptr);
    assume value_is(__ctobpl_const_1170, Mem_T.Pcharac[curr_ptr]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1358} true;
    result.angval$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1359} true;
    call __HAVOC_free(curr);
    return;

  label_19_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1164, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1354} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_1165, angle_unit_ptr);
    assume value_is(__ctobpl_const_1166, Mem_T.INT4[angle_unit_ptr]);
    goto label_20;

  label_13_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1153, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1344} true;
    result.angval$1 := 1;
    goto label_1;
}



procedure {:extern} beampha(p1.__1: int, pp2.__1: int, u_ptr.__1: int, v_ptr.__1: int, theta_ptr.__1: int, phi_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.beampha$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} beampha(p1.__1: int, pp2.__1: int, u_ptr.__1: int, v_ptr.__1: int, theta_ptr.__1: int, phi_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.beampha$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} phi_ptr: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$6$: int;
  var {:extern} $printf.arg.2$9$: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.angledir$7: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.printf$8: int;
  var {:extern} result.uvdir$4: int;
  var {:extern} theta_ptr: int;
  var {:extern} u_ptr: int;
  var {:extern} v_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(u_ptr.__1, alloc);
    assume INT_LT(v_ptr.__1, alloc);
    assume INT_LT(theta_ptr.__1, alloc);
    assume INT_LT(phi_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    phi_ptr := 0;
    pp2 := 0;
    $printf.arg.2$6$ := 0;
    $printf.arg.2$9$ := 0;
    result.GetKeyword$2 := 0;
    result.angledir$7 := 0;
    result.beampha$1 := 0;
    result.printf$5 := 0;
    result.printf$8 := 0;
    result.uvdir$4 := 0;
    theta_ptr := 0;
    u_ptr := 0;
    v_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    u_ptr := u_ptr.__1;
    v_ptr := v_ptr.__1;
    theta_ptr := theta_ptr.__1;
    phi_ptr := phi_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1387} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1387} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1387} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1171, curr_ptr);
    assume value_is(__ctobpl_const_1172, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1388} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1395} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_1173, curr_ptr);
    assume value_is(__ctobpl_const_1174, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1175, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1398} true;
    error := 0;
    assume value_is(__ctobpl_const_1176, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1401} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 96);
    assume value_is(__ctobpl_const_1177, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1401} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_1178, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1179, curr_ptr);
    assume value_is(__ctobpl_const_1180, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1181, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1401} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_1182, error);
    assume value_is(__ctobpl_const_1183, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1402} true;
    error := 0;
    assume value_is(__ctobpl_const_1184, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1405} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.uvdir$4 := uvdir(Mem_T.Pcharac[curr_ptr], curr_ptr, u_ptr, v_ptr);
    assume value_is(__ctobpl_const_1185, curr_ptr);
    assume value_is(__ctobpl_const_1186, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1187, curr_ptr);
    assume value_is(__ctobpl_const_1188, u_ptr);
    assume value_is(__ctobpl_const_1189, v_ptr);
    assume value_is(__ctobpl_const_1190, curr_ptr);
    assume value_is(__ctobpl_const_1191, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1192, curr_ptr);
    assume value_is(__ctobpl_const_1193, u_ptr);
    assume value_is(__ctobpl_const_1194, v_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1405} true;
    error := result.uvdir$4;
    assume value_is(__ctobpl_const_1195, error);
    assume value_is(__ctobpl_const_1196, result.uvdir$4);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1408} true;
    goto label_19_true, label_19_false;

  label_19_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1197, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1409} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1198, pp2);
    assume value_is(__ctobpl_const_1199, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1200, curr_ptr);
    assume value_is(__ctobpl_const_1201, Mem_T.Pcharac[curr_ptr]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1410} true;
    result.beampha$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1437} true;
    call __HAVOC_free(curr);
    return;

  label_19_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1197, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1413} true;
    goto label_21_true, label_21_false;

  label_21_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_1202, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1419} true;
    goto label_22_true, label_22_false;

  label_22_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_1203, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1423} true;
    goto label_28_true, label_28_false;

  label_28_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1218, error);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1424} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1219, pp2);
    assume value_is(__ctobpl_const_1220, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1221, curr_ptr);
    assume value_is(__ctobpl_const_1222, Mem_T.Pcharac[curr_ptr]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1425} true;
    result.beampha$1 := 0;
    goto label_1;

  label_28_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1218, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1428} true;
    goto label_34_true, label_34_false;

  label_34_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_1223, error);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1434} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 73, havoc_stringTemp);
    assume value_is(__ctobpl_const_1224, curr_ptr);
    assume value_is(__ctobpl_const_1225, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1226, curr_ptr);
    assume value_is(__ctobpl_const_1227, Mem_T.Pcharac[curr_ptr]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1436} true;
    result.beampha$1 := 17;
    goto label_1;

  label_34_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_1223, error);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1429} true;
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1429} true;
    call result.printf$8 := det_choice();
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1430} true;
    result.beampha$1 := 17;
    goto label_1;

  label_22_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_1203, error);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1420} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angledir$7 := angledir(Mem_T.Pcharac[curr_ptr], curr_ptr, theta_ptr, phi_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_1204, curr_ptr);
    assume value_is(__ctobpl_const_1205, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1206, curr_ptr);
    assume value_is(__ctobpl_const_1207, theta_ptr);
    assume value_is(__ctobpl_const_1208, phi_ptr);
    assume value_is(__ctobpl_const_1209, angle_unit_ptr);
    assume value_is(__ctobpl_const_1210, curr_ptr);
    assume value_is(__ctobpl_const_1211, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1212, curr_ptr);
    assume value_is(__ctobpl_const_1213, theta_ptr);
    assume value_is(__ctobpl_const_1214, phi_ptr);
    assume value_is(__ctobpl_const_1215, angle_unit_ptr);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1420} true;
    error := result.angledir$7;
    assume value_is(__ctobpl_const_1216, error);
    assume value_is(__ctobpl_const_1217, result.angledir$7);
    goto label_28;

  label_21_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_1202, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1414} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1414} true;
    call result.printf$5 := det_choice();
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1415} true;
    result.beampha$1 := 17;
    goto label_1;
}



procedure {:extern} blockdef(p1.__1: int, pp2.__1: int, node_ptr.__1: int) returns (result.blockdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} blockdef(p1.__1: int, pp2.__1: int, node_ptr.__1: int) returns (result.blockdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} app_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} node_ptr: int;
  var {:extern} p1: int;
  var {:extern} pcoord: int;
  var {:extern} pcoord_ptr: int;
  var {:extern} pp2: int;
  var {:extern} primo_ptr: int;
  var {:extern} qcoord: int;
  var {:extern} qcoord_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.malloc$5: int;
  var {:extern} result.malloc$7: int;
  var {:extern} result.nodecoor$4: int;
  var {:extern} result.nodecoor$6: int;
  var {:extern} ultimo_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(node_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    app_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    node_ptr := 0;
    p1 := 0;
    call pcoord := __HAVOC_det_malloc(4);
    pcoord_ptr := 0;
    pp2 := 0;
    primo_ptr := 0;
    call qcoord := __HAVOC_det_malloc(4);
    qcoord_ptr := 0;
    result.GetKeyword$2 := 0;
    result.blockdef$1 := 0;
    result.malloc$5 := 0;
    result.malloc$7 := 0;
    result.nodecoor$4 := 0;
    result.nodecoor$6 := 0;
    ultimo_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    node_ptr := node_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1455} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1455} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1455} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1228, curr_ptr);
    assume value_is(__ctobpl_const_1229, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1456} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1461} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1461} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1461} true;
    pcoord_ptr := pcoord;
    assume value_is(__ctobpl_const_1230, pcoord_ptr);
    assume value_is(__ctobpl_const_1231, Mem_T.INT4[pcoord]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1462} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1462} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1462} true;
    qcoord_ptr := qcoord;
    assume value_is(__ctobpl_const_1232, qcoord_ptr);
    assume value_is(__ctobpl_const_1233, Mem_T.INT4[qcoord]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1465} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1465} true;
    primo_ptr := 0;
    assume value_is(__ctobpl_const_1234, primo_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1465} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1465} true;
    ultimo_ptr := 0;
    assume value_is(__ctobpl_const_1235, ultimo_ptr);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1465} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1465} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_1236, app_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1473} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_1237, curr_ptr);
    assume value_is(__ctobpl_const_1238, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1239, p1);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1474} true;
    error := 0;
    assume value_is(__ctobpl_const_1240, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1476} true;
    assert node_ptr != 0;
    Mem_T.PNode := Mem_T.PNode[node_ptr := 0];
    assume value_is(__ctobpl_const_1241, node_ptr);
    assume value_is(__ctobpl_const_1242, Mem_T.PNode[node_ptr]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1479} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 76);
    assume value_is(__ctobpl_const_1243, $GetKeyword.arg.1$3$);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1479} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_1244, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1245, curr_ptr);
    assume value_is(__ctobpl_const_1246, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1247, curr_ptr);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1479} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_1248, error);
    assume value_is(__ctobpl_const_1249, result.GetKeyword$2);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1480} true;
    goto label_27_true, label_27_false;

  label_27_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1250, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1485} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.nodecoor$4 := nodecoor(Mem_T.Pcharac[curr_ptr], curr_ptr, pcoord_ptr, qcoord_ptr);
    assume value_is(__ctobpl_const_1251, curr_ptr);
    assume value_is(__ctobpl_const_1252, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1253, curr_ptr);
    assume value_is(__ctobpl_const_1254, pcoord_ptr);
    assume value_is(__ctobpl_const_1255, qcoord_ptr);
    assume value_is(__ctobpl_const_1256, curr_ptr);
    assume value_is(__ctobpl_const_1257, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1258, curr_ptr);
    assume value_is(__ctobpl_const_1259, pcoord_ptr);
    assume value_is(__ctobpl_const_1260, qcoord_ptr);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1485} true;
    error := result.nodecoor$4;
    assume value_is(__ctobpl_const_1261, error);
    assume value_is(__ctobpl_const_1262, result.nodecoor$4);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1487} true;
    goto label_33_true, label_33_false;

  label_33_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_1263, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1493} true;
    goto label_34_true, label_34_false;

  label_34_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_1264, error);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1500} true;
    call result.malloc$5 := __HAVOC_det_malloc(48);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1500} true;
    app_ptr := result.malloc$5;
    assume value_is(__ctobpl_const_1265, app_ptr);
    assume value_is(__ctobpl_const_1266, result.malloc$5);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1502} true;
    goto label_47_true, label_47_false;

  label_47_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_1267, app_ptr);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1503} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_1268, curr_ptr);
    assume value_is(__ctobpl_const_1269, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1270, curr_ptr);
    assume value_is(__ctobpl_const_1271, Mem_T.Pcharac[curr_ptr]);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1505} true;
    call interror(havoc_stringTemp);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1506} true;
    return;

  label_47_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_1267, app_ptr);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1511} true;
    assert app_ptr != 0;
    Mem_T.PCOORD_Node := Mem_T.PCOORD_Node[PCOORD_Node(app_ptr) := Mem_T.INT4[pcoord]];
    assume value_is(__ctobpl_const_1272, app_ptr);
    assume value_is(__ctobpl_const_1273, Mem_T.PCOORD_Node[PCOORD_Node(app_ptr)]);
    assume value_is(__ctobpl_const_1274, Mem_T.INT4[pcoord]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1512} true;
    assert app_ptr != 0;
    Mem_T.QCOORD_Node := Mem_T.QCOORD_Node[QCOORD_Node(app_ptr) := Mem_T.INT4[qcoord]];
    assume value_is(__ctobpl_const_1275, app_ptr);
    assume value_is(__ctobpl_const_1276, Mem_T.QCOORD_Node[QCOORD_Node(app_ptr)]);
    assume value_is(__ctobpl_const_1277, Mem_T.INT4[qcoord]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1513} true;
    assert app_ptr != 0;
    Mem_T.THEA_Node := Mem_T.THEA_Node[THEA_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1278, app_ptr);
    assume value_is(__ctobpl_const_1279, Mem_T.THEA_Node[THEA_Node(app_ptr)]);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1514} true;
    assert app_ptr != 0;
    Mem_T.PHEA_Node := Mem_T.PHEA_Node[PHEA_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1280, app_ptr);
    assume value_is(__ctobpl_const_1281, Mem_T.PHEA_Node[PHEA_Node(app_ptr)]);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1515} true;
    assert app_ptr != 0;
    Mem_T.PSEA_Node := Mem_T.PSEA_Node[PSEA_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1282, app_ptr);
    assume value_is(__ctobpl_const_1283, Mem_T.PSEA_Node[PSEA_Node(app_ptr)]);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1516} true;
    assert app_ptr != 0;
    Mem_T.ANGLE_UNIT_Node := Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1284, app_ptr);
    assume value_is(__ctobpl_const_1285, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(app_ptr)]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1517} true;
    assert app_ptr != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1286, app_ptr);
    assume value_is(__ctobpl_const_1287, Mem_T.NEXT_Node[NEXT_Node(app_ptr)]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1520} true;
    primo_ptr := app_ptr;
    assume value_is(__ctobpl_const_1288, primo_ptr);
    assume value_is(__ctobpl_const_1289, app_ptr);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1521} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_1290, ultimo_ptr);
    assume value_is(__ctobpl_const_1291, app_ptr);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1524} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.nodecoor$6 := nodecoor(Mem_T.Pcharac[curr_ptr], curr_ptr, pcoord_ptr, qcoord_ptr);
    assume value_is(__ctobpl_const_1292, curr_ptr);
    assume value_is(__ctobpl_const_1293, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1294, curr_ptr);
    assume value_is(__ctobpl_const_1295, pcoord_ptr);
    assume value_is(__ctobpl_const_1296, qcoord_ptr);
    assume value_is(__ctobpl_const_1297, curr_ptr);
    assume value_is(__ctobpl_const_1298, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1299, curr_ptr);
    assume value_is(__ctobpl_const_1300, pcoord_ptr);
    assume value_is(__ctobpl_const_1301, qcoord_ptr);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1524} true;
    error := result.nodecoor$6;
    assume value_is(__ctobpl_const_1302, error);
    assume value_is(__ctobpl_const_1303, result.nodecoor$6);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1526} true;
    goto label_64_true, label_64_false;

  label_64_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_1304, error);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1532} true;
    goto label_65_true, label_65_false;

  label_65_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_1305, error);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1539} true;
    call result.malloc$7 := __HAVOC_det_malloc(48);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1539} true;
    app_ptr := result.malloc$7;
    assume value_is(__ctobpl_const_1306, app_ptr);
    assume value_is(__ctobpl_const_1307, result.malloc$7);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1541} true;
    goto label_78_true, label_78_false;

  label_78_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_1308, app_ptr);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1542} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_1309, curr_ptr);
    assume value_is(__ctobpl_const_1310, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1311, curr_ptr);
    assume value_is(__ctobpl_const_1312, Mem_T.Pcharac[curr_ptr]);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1544} true;
    call interror(havoc_stringTemp);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1545} true;
    return;

  label_78_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_1308, app_ptr);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1549} true;
    assert app_ptr != 0;
    Mem_T.PCOORD_Node := Mem_T.PCOORD_Node[PCOORD_Node(app_ptr) := Mem_T.INT4[pcoord]];
    assume value_is(__ctobpl_const_1313, app_ptr);
    assume value_is(__ctobpl_const_1314, Mem_T.PCOORD_Node[PCOORD_Node(app_ptr)]);
    assume value_is(__ctobpl_const_1315, Mem_T.INT4[pcoord]);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1550} true;
    assert app_ptr != 0;
    Mem_T.QCOORD_Node := Mem_T.QCOORD_Node[QCOORD_Node(app_ptr) := Mem_T.INT4[qcoord]];
    assume value_is(__ctobpl_const_1316, app_ptr);
    assume value_is(__ctobpl_const_1317, Mem_T.QCOORD_Node[QCOORD_Node(app_ptr)]);
    assume value_is(__ctobpl_const_1318, Mem_T.INT4[qcoord]);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1551} true;
    assert app_ptr != 0;
    Mem_T.THEA_Node := Mem_T.THEA_Node[THEA_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1319, app_ptr);
    assume value_is(__ctobpl_const_1320, Mem_T.THEA_Node[THEA_Node(app_ptr)]);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1552} true;
    assert app_ptr != 0;
    Mem_T.PHEA_Node := Mem_T.PHEA_Node[PHEA_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1321, app_ptr);
    assume value_is(__ctobpl_const_1322, Mem_T.PHEA_Node[PHEA_Node(app_ptr)]);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1553} true;
    assert app_ptr != 0;
    Mem_T.PSEA_Node := Mem_T.PSEA_Node[PSEA_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1323, app_ptr);
    assume value_is(__ctobpl_const_1324, Mem_T.PSEA_Node[PSEA_Node(app_ptr)]);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1554} true;
    assert app_ptr != 0;
    Mem_T.ANGLE_UNIT_Node := Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1325, app_ptr);
    assume value_is(__ctobpl_const_1326, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(app_ptr)]);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1555} true;
    assert app_ptr != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_1327, app_ptr);
    assume value_is(__ctobpl_const_1328, Mem_T.NEXT_Node[NEXT_Node(app_ptr)]);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1558} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(ultimo_ptr) := app_ptr];
    assume value_is(__ctobpl_const_1329, ultimo_ptr);
    assume value_is(__ctobpl_const_1330, Mem_T.NEXT_Node[NEXT_Node(ultimo_ptr)]);
    assume value_is(__ctobpl_const_1331, app_ptr);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1559} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_1332, ultimo_ptr);
    assume value_is(__ctobpl_const_1333, app_ptr);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1562} true;
    assert node_ptr != 0;
    Mem_T.PNode := Mem_T.PNode[node_ptr := primo_ptr];
    assume value_is(__ctobpl_const_1334, node_ptr);
    assume value_is(__ctobpl_const_1335, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_1336, primo_ptr);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1565} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1337, pp2);
    assume value_is(__ctobpl_const_1338, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1339, curr_ptr);
    assume value_is(__ctobpl_const_1340, Mem_T.Pcharac[curr_ptr]);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1566} true;
    result.blockdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1567} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(pcoord);
    call __HAVOC_free(qcoord);
    return;

  label_65_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_1305, error);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1533} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 57, havoc_stringTemp);
    assume value_is(__ctobpl_const_1341, curr_ptr);
    assume value_is(__ctobpl_const_1342, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1343, curr_ptr);
    assume value_is(__ctobpl_const_1344, Mem_T.Pcharac[curr_ptr]);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1535} true;
    result.blockdef$1 := 17;
    goto label_1;

  label_64_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_1304, error);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1527} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 56, havoc_stringTemp);
    assume value_is(__ctobpl_const_1345, curr_ptr);
    assume value_is(__ctobpl_const_1346, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1347, curr_ptr);
    assume value_is(__ctobpl_const_1348, Mem_T.Pcharac[curr_ptr]);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1529} true;
    result.blockdef$1 := 17;
    goto label_1;

  label_34_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_1264, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1494} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 56, havoc_stringTemp);
    assume value_is(__ctobpl_const_1349, curr_ptr);
    assume value_is(__ctobpl_const_1350, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1351, curr_ptr);
    assume value_is(__ctobpl_const_1352, Mem_T.Pcharac[curr_ptr]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1496} true;
    result.blockdef$1 := 17;
    goto label_1;

  label_33_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_1263, error);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1488} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 56, havoc_stringTemp);
    assume value_is(__ctobpl_const_1353, curr_ptr);
    assume value_is(__ctobpl_const_1354, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1355, curr_ptr);
    assume value_is(__ctobpl_const_1356, Mem_T.Pcharac[curr_ptr]);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1490} true;
    result.blockdef$1 := 17;
    goto label_1;

  label_27_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1250, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1481} true;
    result.blockdef$1 := 1;
    goto label_1;
}



procedure {:extern} circpol(p1.__1: int, pp2.__1: int, direction_ptr.__1: int) returns (result.circpol$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} circpol(p1.__1: int, pp2.__1: int, direction_ptr.__1: int) returns (result.circpol$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$7$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} direction_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$6: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(direction_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$7$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    direction_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$6 := 0;
    result.circpol$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    direction_ptr := direction_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1577} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1577} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1577} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1357, curr_ptr);
    assume value_is(__ctobpl_const_1358, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1578} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1578} true;
    error := 0;
    assume value_is(__ctobpl_const_1359, error);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1585} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_1360, curr_ptr);
    assume value_is(__ctobpl_const_1361, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1362, p1);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1586} true;
    assert direction_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[direction_ptr := 0];
    assume value_is(__ctobpl_const_1363, direction_ptr);
    assume value_is(__ctobpl_const_1364, Mem_T.INT4[direction_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1589} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 38);
    assume value_is(__ctobpl_const_1365, $GetKeyword.arg.1$3$);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1589} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_1366, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1367, curr_ptr);
    assume value_is(__ctobpl_const_1368, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1369, curr_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1589} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_1370, error);
    assume value_is(__ctobpl_const_1371, result.GetKeyword$2);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1590} true;
    goto label_15_true, label_15_false;

  label_15_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1372, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1595} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 65);
    assume value_is(__ctobpl_const_1373, $GetKeyword.arg.1$5$);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1595} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_1374, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_1375, curr_ptr);
    assume value_is(__ctobpl_const_1376, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_1377, curr_ptr);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1595} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_1378, error);
    assume value_is(__ctobpl_const_1379, result.GetKeyword$4);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1596} true;
    goto label_22_true, label_22_false;

  label_22_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1380, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1597} true;
    assert direction_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[direction_ptr := 0];
    assume value_is(__ctobpl_const_1381, direction_ptr);
    assume value_is(__ctobpl_const_1382, Mem_T.INT4[direction_ptr]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1598} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1383, pp2);
    assume value_is(__ctobpl_const_1384, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1385, curr_ptr);
    assume value_is(__ctobpl_const_1386, Mem_T.Pcharac[curr_ptr]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1599} true;
    result.circpol$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1613} true;
    call __HAVOC_free(curr);
    return;

  label_22_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1380, error);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1603} true;
    $GetKeyword.arg.1$7$ := PLUS(Keywords, 21, 66);
    assume value_is(__ctobpl_const_1387, $GetKeyword.arg.1$7$);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1603} true;
    call result.GetKeyword$6 := GetKeyword($GetKeyword.arg.1$7$, curr_ptr);
    assume value_is(__ctobpl_const_1388, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_1389, curr_ptr);
    assume value_is(__ctobpl_const_1390, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_1391, curr_ptr);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1603} true;
    error := result.GetKeyword$6;
    assume value_is(__ctobpl_const_1392, error);
    assume value_is(__ctobpl_const_1393, result.GetKeyword$6);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1604} true;
    goto label_29_true, label_29_false;

  label_29_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1394, error);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1605} true;
    assert direction_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[direction_ptr := 1];
    assume value_is(__ctobpl_const_1395, direction_ptr);
    assume value_is(__ctobpl_const_1396, Mem_T.INT4[direction_ptr]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1606} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1397, pp2);
    assume value_is(__ctobpl_const_1398, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1399, curr_ptr);
    assume value_is(__ctobpl_const_1400, Mem_T.Pcharac[curr_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1607} true;
    result.circpol$1 := 0;
    goto label_1;

  label_29_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1394, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1611} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1401, pp2);
    assume value_is(__ctobpl_const_1402, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1403, curr_ptr);
    assume value_is(__ctobpl_const_1404, Mem_T.Pcharac[curr_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1612} true;
    result.circpol$1 := 0;
    goto label_1;

  label_15_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1372, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1591} true;
    result.circpol$1 := 1;
    goto label_1;
}



procedure {:extern} circspec(p1.__1: int, pp2.__1: int, radius_ptr.__1: int, radius_unit_ptr.__1: int) returns (result.circspec$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} circspec(p1.__1: int, pp2.__1: int, radius_ptr.__1: int, radius_unit_ptr.__1: int) returns (result.circspec$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} radius_ptr: int;
  var {:extern} radius_unit_ptr: int;
  var {:extern} result.Get1Real$6: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.lenunit$7: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(radius_ptr.__1, alloc);
    assume INT_LT(radius_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    radius_ptr := 0;
    radius_unit_ptr := 0;
    result.Get1Real$6 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.circspec$1 := 0;
    result.lenunit$7 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    radius_ptr := radius_ptr.__1;
    radius_unit_ptr := radius_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1623} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1623} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1623} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1405, curr_ptr);
    assume value_is(__ctobpl_const_1406, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1624} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1624} true;
    error := 0;
    assume value_is(__ctobpl_const_1407, error);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1627} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_1408, curr_ptr);
    assume value_is(__ctobpl_const_1409, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1410, p1);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1630} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 38);
    assume value_is(__ctobpl_const_1411, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1630} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_1412, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1413, curr_ptr);
    assume value_is(__ctobpl_const_1414, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1415, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1630} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_1416, error);
    assume value_is(__ctobpl_const_1417, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1631} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1418, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1636} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 5);
    assume value_is(__ctobpl_const_1419, $GetKeyword.arg.1$5$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1636} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_1420, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_1421, curr_ptr);
    assume value_is(__ctobpl_const_1422, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_1423, curr_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1636} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_1424, error);
    assume value_is(__ctobpl_const_1425, result.GetKeyword$4);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1637} true;
    error := 0;
    assume value_is(__ctobpl_const_1426, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1640} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.Get1Real$6 := Get1Real(Mem_T.Pcharac[curr_ptr], curr_ptr, radius_ptr);
    assume value_is(__ctobpl_const_1427, curr_ptr);
    assume value_is(__ctobpl_const_1428, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1429, curr_ptr);
    assume value_is(__ctobpl_const_1430, radius_ptr);
    assume value_is(__ctobpl_const_1431, curr_ptr);
    assume value_is(__ctobpl_const_1432, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1433, curr_ptr);
    assume value_is(__ctobpl_const_1434, radius_ptr);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1640} true;
    error := result.Get1Real$6;
    assume value_is(__ctobpl_const_1435, error);
    assume value_is(__ctobpl_const_1436, result.Get1Real$6);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1641} true;
    goto label_26_true, label_26_false;

  label_26_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1437, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1648} true;
    call result.lenunit$7 := lenunit(curr_ptr, radius_unit_ptr);
    assume value_is(__ctobpl_const_1438, curr_ptr);
    assume value_is(__ctobpl_const_1439, radius_unit_ptr);
    assume value_is(__ctobpl_const_1440, curr_ptr);
    assume value_is(__ctobpl_const_1441, radius_unit_ptr);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1648} true;
    error := result.lenunit$7;
    assume value_is(__ctobpl_const_1442, error);
    assume value_is(__ctobpl_const_1443, result.lenunit$7);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1652} true;
    goto label_35_true, label_35_false;

  label_35_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1444, error);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1656} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1447, pp2);
    assume value_is(__ctobpl_const_1448, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1449, curr_ptr);
    assume value_is(__ctobpl_const_1450, Mem_T.Pcharac[curr_ptr]);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1657} true;
    result.circspec$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1658} true;
    call __HAVOC_free(curr);
    return;

  label_35_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1444, error);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1653} true;
    assert radius_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[radius_unit_ptr := 0];
    assume value_is(__ctobpl_const_1445, radius_unit_ptr);
    assume value_is(__ctobpl_const_1446, Mem_T.INT4[radius_unit_ptr]);
    goto label_36;

  label_26_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1437, error);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1642} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_1451, curr_ptr);
    assume value_is(__ctobpl_const_1452, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1453, error);
    assume value_is(__ctobpl_const_1454, curr_ptr);
    assume value_is(__ctobpl_const_1455, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1456, error);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1644} true;
    result.circspec$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1418, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1632} true;
    result.circspec$1 := 1;
    goto label_1;
}



procedure {:extern} dacos(x.__1: int) returns (result.dacos$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} dacos(x.__1: int) returns (result.dacos$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} result.acos$2: int;
  var {:extern} x: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    result.acos$2 := 0;
    result.dacos$1 := 0;
    x := 0;
    x := x.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1702} true;
    call result.acos$2 := acos(x);
    assume value_is(__ctobpl_const_1457, x);
    assume value_is(__ctobpl_const_1458, x);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1702} true;
    result.dacos$1 := BINARY_BOTH_INT(MULT(result.acos$2, 180), BOOGIE_FLOAT_CONST_3.14159);
    assume value_is(__ctobpl_const_1459, result.acos$2);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1704} true;
    return;
}



procedure {:extern} dasin(x.__1: int) returns (result.dasin$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} dasin(x.__1: int) returns (result.dasin$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} result.asin$2: int;
  var {:extern} x: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    result.asin$2 := 0;
    result.dasin$1 := 0;
    x := 0;
    x := x.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1713} true;
    call result.asin$2 := asin(x);
    assume value_is(__ctobpl_const_1460, x);
    assume value_is(__ctobpl_const_1461, x);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1713} true;
    result.dasin$1 := BINARY_BOTH_INT(MULT(result.asin$2, 180), BOOGIE_FLOAT_CONST_3.14159);
    assume value_is(__ctobpl_const_1462, result.asin$2);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1715} true;
    return;
}



procedure {:extern} datan(x.__1: int) returns (result.datan$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} datan(x.__1: int) returns (result.datan$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} result.atan$2: int;
  var {:extern} x: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    result.atan$2 := 0;
    result.datan$1 := 0;
    x := 0;
    x := x.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1724} true;
    call result.atan$2 := atan(x);
    assume value_is(__ctobpl_const_1463, x);
    assume value_is(__ctobpl_const_1464, x);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1724} true;
    result.datan$1 := BINARY_BOTH_INT(MULT(result.atan$2, 180), BOOGIE_FLOAT_CONST_3.14159);
    assume value_is(__ctobpl_const_1465, result.atan$2);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1726} true;
    return;
}



procedure {:extern} dcos(x.__1: int) returns (result.dcos$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} dcos(x.__1: int) returns (result.dcos$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $cos.arg.1$3$: int;
  var {:extern} result.cos$2: int;
  var {:extern} x: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    $cos.arg.1$3$ := 0;
    result.cos$2 := 0;
    result.dcos$1 := 0;
    x := 0;
    x := x.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1734} true;
    $cos.arg.1$3$ := BINARY_BOTH_INT(MULT(x, BOOGIE_FLOAT_CONST_3.14159), 180);
    assume value_is(__ctobpl_const_1466, $cos.arg.1$3$);
    assume value_is(__ctobpl_const_1467, x);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1734} true;
    call result.cos$2 := cos($cos.arg.1$3$);
    assume value_is(__ctobpl_const_1468, $cos.arg.1$3$);
    assume value_is(__ctobpl_const_1469, $cos.arg.1$3$);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1734} true;
    result.dcos$1 := result.cos$2;
    assume value_is(__ctobpl_const_1470, result.cos$2);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1736} true;
    return;
}



procedure {:extern} degconv(x_ptr.__1: int, unit.__1: int) returns (result.degconv$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} degconv(x_ptr.__1: int, unit.__1: int) returns (result.degconv$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} unit: int;
  var {:extern} x_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(x_ptr.__1, alloc);
    result.degconv$1 := 0;
    unit := 0;
    x_ptr := 0;
    x_ptr := x_ptr.__1;
    unit := unit.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1742} true;
    goto label_3_case_0, label_3_case_1, label_3_case_2;

  label_3_case_2:
    assume INT_EQ(unit, 1);
    assume value_is(__ctobpl_const_1471, unit);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1748} true;
    assert x_ptr != 0;
    tempBoogie0 := INT_MULT(Mem_T.FLOAT[x_ptr], BOOGIE_FLOAT_CONST_57.2958);
    Mem_T.FLOAT := Mem_T.FLOAT[x_ptr := tempBoogie0];
    assume value_is(__ctobpl_const_1472, x_ptr);
    assume value_is(__ctobpl_const_1473, Mem_T.FLOAT[x_ptr]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1749} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1756} true;
    result.degconv$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1757} true;
    return;

  label_3_case_1:
    assume INT_EQ(unit, 0);
    assume value_is(__ctobpl_const_1471, unit);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1745} true;
    goto label_10;

  label_3_case_0:
    assume INT_NEQ(unit, 0);
    assume INT_NEQ(unit, 1);
    assume value_is(__ctobpl_const_1471, unit);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1752} true;
    call interror(havoc_stringTemp);
    goto label_10;
}



procedure {:extern} doubmax(a.__1: int, b.__1: int) returns (result.doubmax$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} doubmax(a.__1: int, b.__1: int) returns (result.doubmax$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} a: int;
  var {:extern} b: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    a := 0;
    b := 0;
    result.doubmax$1 := 0;
    a := a.__1;
    b := b.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1765} true;
    goto label_3_true, label_3_false;

  label_3_false:
    assume !INT_LT(b, a);
    assume value_is(__ctobpl_const_1474, b);
    assume value_is(__ctobpl_const_1475, a);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1768} true;
    result.doubmax$1 := b;
    assume value_is(__ctobpl_const_1476, b);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1770} true;
    return;

  label_3_true:
    assume INT_LT(b, a);
    assume value_is(__ctobpl_const_1474, b);
    assume value_is(__ctobpl_const_1475, a);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1766} true;
    result.doubmax$1 := a;
    assume value_is(__ctobpl_const_1477, a);
    goto label_1;
}



procedure {:extern} doubstep(p1.__1: int, pp2.__1: int, pstep_ptr.__1: int, qstep_ptr.__1: int, pqstep_unit_ptr.__1: int) returns (result.doubstep$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} doubstep(p1.__1: int, pp2.__1: int, pstep_ptr.__1: int, qstep_ptr.__1: int, pqstep_unit_ptr.__1: int) returns (result.doubstep$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$6$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} pqstep_unit_ptr: int;
  var {:extern} pstep_ptr: int;
  var {:extern} qstep_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$5: int;
  var {:extern} result.GetUReal$4: int;
  var {:extern} result.GetUReal$7: int;
  var {:extern} result.lenunit$8: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(pstep_ptr.__1, alloc);
    assume INT_LT(qstep_ptr.__1, alloc);
    assume INT_LT(pqstep_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$6$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    pqstep_unit_ptr := 0;
    pstep_ptr := 0;
    qstep_ptr := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$5 := 0;
    result.GetUReal$4 := 0;
    result.GetUReal$7 := 0;
    result.doubstep$1 := 0;
    result.lenunit$8 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    pstep_ptr := pstep_ptr.__1;
    qstep_ptr := qstep_ptr.__1;
    pqstep_unit_ptr := pqstep_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1793} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1793} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1793} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1478, curr_ptr);
    assume value_is(__ctobpl_const_1479, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1794} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1797} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_1480, curr_ptr);
    assume value_is(__ctobpl_const_1481, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1482, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1800} true;
    error := 0;
    assume value_is(__ctobpl_const_1483, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1801} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_1484, pstep_ptr);
    assume value_is(__ctobpl_const_1485, Mem_T.FLOAT[pstep_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1802} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_1486, qstep_ptr);
    assume value_is(__ctobpl_const_1487, Mem_T.FLOAT[qstep_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1803} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_1488, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1489, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1806} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 19);
    assume value_is(__ctobpl_const_1490, $GetKeyword.arg.1$3$);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1806} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_1491, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1492, curr_ptr);
    assume value_is(__ctobpl_const_1493, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_1494, curr_ptr);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1806} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_1495, error);
    assume value_is(__ctobpl_const_1496, result.GetKeyword$2);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1807} true;
    goto label_17_true, label_17_false;

  label_17_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1497, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1812} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.GetUReal$4 := GetUReal(Mem_T.Pcharac[curr_ptr], curr_ptr, pstep_ptr);
    assume value_is(__ctobpl_const_1498, curr_ptr);
    assume value_is(__ctobpl_const_1499, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1500, curr_ptr);
    assume value_is(__ctobpl_const_1501, pstep_ptr);
    assume value_is(__ctobpl_const_1502, curr_ptr);
    assume value_is(__ctobpl_const_1503, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1504, curr_ptr);
    assume value_is(__ctobpl_const_1505, pstep_ptr);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1812} true;
    error := result.GetUReal$4;
    assume value_is(__ctobpl_const_1506, error);
    assume value_is(__ctobpl_const_1507, result.GetUReal$4);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1813} true;
    goto label_23_true, label_23_false;

  label_23_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1508, error);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1821} true;
    $GetKeyword.arg.1$6$ := PLUS(Keywords, 21, 20);
    assume value_is(__ctobpl_const_1509, $GetKeyword.arg.1$6$);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1821} true;
    call result.GetKeyword$5 := GetKeyword($GetKeyword.arg.1$6$, curr_ptr);
    assume value_is(__ctobpl_const_1510, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_1511, curr_ptr);
    assume value_is(__ctobpl_const_1512, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_1513, curr_ptr);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1821} true;
    error := result.GetKeyword$5;
    assume value_is(__ctobpl_const_1514, error);
    assume value_is(__ctobpl_const_1515, result.GetKeyword$5);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1822} true;
    goto label_33_true, label_33_false;

  label_33_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1516, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1827} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.GetUReal$7 := GetUReal(Mem_T.Pcharac[curr_ptr], curr_ptr, qstep_ptr);
    assume value_is(__ctobpl_const_1517, curr_ptr);
    assume value_is(__ctobpl_const_1518, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1519, curr_ptr);
    assume value_is(__ctobpl_const_1520, qstep_ptr);
    assume value_is(__ctobpl_const_1521, curr_ptr);
    assume value_is(__ctobpl_const_1522, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1523, curr_ptr);
    assume value_is(__ctobpl_const_1524, qstep_ptr);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1827} true;
    error := result.GetUReal$7;
    assume value_is(__ctobpl_const_1525, error);
    assume value_is(__ctobpl_const_1526, result.GetUReal$7);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1828} true;
    goto label_39_true, label_39_false;

  label_39_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1527, error);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1837} true;
    call result.lenunit$8 := lenunit(curr_ptr, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1528, curr_ptr);
    assume value_is(__ctobpl_const_1529, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1530, curr_ptr);
    assume value_is(__ctobpl_const_1531, pqstep_unit_ptr);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1837} true;
    error := result.lenunit$8;
    assume value_is(__ctobpl_const_1532, error);
    assume value_is(__ctobpl_const_1533, result.lenunit$8);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1838} true;
    goto label_48_true, label_48_false;

  label_48_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1534, error);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1842} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1537, pp2);
    assume value_is(__ctobpl_const_1538, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1539, curr_ptr);
    assume value_is(__ctobpl_const_1540, Mem_T.Pcharac[curr_ptr]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1843} true;
    result.doubstep$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1844} true;
    call __HAVOC_free(curr);
    return;

  label_48_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1534, error);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1839} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_1535, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1536, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_49;

  label_39_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1527, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1829} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_1541, pstep_ptr);
    assume value_is(__ctobpl_const_1542, Mem_T.FLOAT[pstep_ptr]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1830} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_1543, qstep_ptr);
    assume value_is(__ctobpl_const_1544, Mem_T.FLOAT[qstep_ptr]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1831} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_1545, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1546, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1832} true;
    result.doubstep$1 := error;
    assume value_is(__ctobpl_const_1547, error);
    goto label_1;

  label_33_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1516, error);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1823} true;
    result.doubstep$1 := 17;
    goto label_1;

  label_23_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1508, error);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1814} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_1548, pstep_ptr);
    assume value_is(__ctobpl_const_1549, Mem_T.FLOAT[pstep_ptr]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1815} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_1550, qstep_ptr);
    assume value_is(__ctobpl_const_1551, Mem_T.FLOAT[qstep_ptr]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1816} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_1552, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_1553, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1817} true;
    result.doubstep$1 := error;
    assume value_is(__ctobpl_const_1554, error);
    goto label_1;

  label_17_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1497, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1808} true;
    result.doubstep$1 := 1;
    goto label_1;
}



procedure {:extern} dsin(x.__1: int) returns (result.dsin$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} dsin(x.__1: int) returns (result.dsin$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} result.sin$2: int;
  var {:extern} $sin.arg.1$3$: int;
  var {:extern} x: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    result.dsin$1 := 0;
    result.sin$2 := 0;
    $sin.arg.1$3$ := 0;
    x := 0;
    x := x.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1853} true;
    $sin.arg.1$3$ := BINARY_BOTH_INT(MULT(x, BOOGIE_FLOAT_CONST_3.14159), 180);
    assume value_is(__ctobpl_const_1555, $sin.arg.1$3$);
    assume value_is(__ctobpl_const_1556, x);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1853} true;
    call result.sin$2 := sin($sin.arg.1$3$);
    assume value_is(__ctobpl_const_1557, $sin.arg.1$3$);
    assume value_is(__ctobpl_const_1558, $sin.arg.1$3$);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1853} true;
    result.dsin$1 := result.sin$2;
    assume value_is(__ctobpl_const_1559, result.sin$2);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1855} true;
    return;
}



procedure {:extern} elemdef(p1.__1: int, pp2.__1: int, elem_ptr.__1: int) returns (result.elemdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} elemdef(p1.__1: int, pp2.__1: int, elem_ptr.__1: int) returns (result.elemdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$4$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} elem_ptr: int;
  var {:extern} error: int;
  var {:extern} name: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$3: int;
  var {:extern} result.GetUName$5: int;
  var {:extern} result.malloc$2: int;
  var {:extern} result.sinelem$7: int;
  var {:extern} result.strcpy$6: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(elem_ptr.__1, alloc);
    $GetKeyword.arg.1$4$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    elem_ptr := 0;
    error := 0;
    call name := __HAVOC_det_malloc(31);
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$3 := 0;
    result.GetUName$5 := 0;
    result.elemdef$1 := 0;
    result.malloc$2 := 0;
    result.sinelem$7 := 0;
    result.strcpy$6 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    elem_ptr := elem_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1866} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1866} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1866} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_1560, curr_ptr);
    assume value_is(__ctobpl_const_1561, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1867} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1868} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1875} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_1562, curr_ptr);
    assume value_is(__ctobpl_const_1563, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1564, p1);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1876} true;
    error := 0;
    assume value_is(__ctobpl_const_1565, error);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1880} true;
    call result.malloc$2 := __HAVOC_det_malloc(184);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1880} true;
    assert elem_ptr != 0;
    Mem_T.PElem := Mem_T.PElem[elem_ptr := result.malloc$2];
    assume value_is(__ctobpl_const_1566, elem_ptr);
    assume value_is(__ctobpl_const_1567, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_1568, result.malloc$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1882} true;
    assert elem_ptr != 0;
    goto label_14_true, label_14_false;

  label_14_false:
    assume Mem_T.PElem[elem_ptr] == 0;
    assume value_is(__ctobpl_const_1569, elem_ptr);
    assume value_is(__ctobpl_const_1570, Mem_T.PElem[elem_ptr]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1883} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_1571, curr_ptr);
    assume value_is(__ctobpl_const_1572, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1573, curr_ptr);
    assume value_is(__ctobpl_const_1574, Mem_T.Pcharac[curr_ptr]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1884} true;
    call interror(havoc_stringTemp);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1888} true;
    $GetKeyword.arg.1$4$ := PLUS(Keywords, 21, 28);
    assume value_is(__ctobpl_const_1575, $GetKeyword.arg.1$4$);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1888} true;
    call result.GetKeyword$3 := GetKeyword($GetKeyword.arg.1$4$, curr_ptr);
    assume value_is(__ctobpl_const_1576, $GetKeyword.arg.1$4$);
    assume value_is(__ctobpl_const_1577, curr_ptr);
    assume value_is(__ctobpl_const_1578, $GetKeyword.arg.1$4$);
    assume value_is(__ctobpl_const_1579, curr_ptr);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1888} true;
    error := result.GetKeyword$3;
    assume value_is(__ctobpl_const_1580, error);
    assume value_is(__ctobpl_const_1581, result.GetKeyword$3);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1889} true;
    goto label_23_true, label_23_false;

  label_23_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1582, error);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1895} true;
    call result.GetUName$5 := GetUName(name, curr_ptr);
    assume value_is(__ctobpl_const_1583, curr_ptr);
    assume value_is(__ctobpl_const_1584, curr_ptr);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1895} true;
    error := result.GetUName$5;
    assume value_is(__ctobpl_const_1585, error);
    assume value_is(__ctobpl_const_1586, result.GetUName$5);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1897} true;
    goto label_30_true, label_30_false;

  label_30_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1587, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1898} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    assume Mem_T.NAME_Elem[NAME_Elem(Mem_T.PElem[elem_ptr])] == Mem_T.A31CHAR[NAME_Elem(Mem_T.PElem[elem_ptr])];
    call result.strcpy$6 := strcpy(NAME_Elem(Mem_T.PElem[elem_ptr]), name);
    Mem_T.NAME_Elem := Mem_T.NAME_Elem[NAME_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.A31CHAR[NAME_Elem(Mem_T.PElem[elem_ptr])]];
    assume value_is(__ctobpl_const_1588, elem_ptr);
    assume value_is(__ctobpl_const_1589, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_1590, elem_ptr);
    assume value_is(__ctobpl_const_1591, Mem_T.PElem[elem_ptr]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1899} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.TYPE_Elem := Mem_T.TYPE_Elem[TYPE_Elem(Mem_T.PElem[elem_ptr]) := 1];
    assume value_is(__ctobpl_const_1592, elem_ptr);
    assume value_is(__ctobpl_const_1593, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_1594, Mem_T.TYPE_Elem[TYPE_Elem(Mem_T.PElem[elem_ptr])]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1900} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1595, pp2);
    assume value_is(__ctobpl_const_1596, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1597, curr_ptr);
    assume value_is(__ctobpl_const_1598, Mem_T.Pcharac[curr_ptr]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1901} true;
    result.elemdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1915} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(name);
    return;

  label_30_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1587, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1905} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.sinelem$7 := sinelem(Mem_T.Pcharac[curr_ptr], curr_ptr, elem_ptr);
    assume value_is(__ctobpl_const_1599, curr_ptr);
    assume value_is(__ctobpl_const_1600, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1601, curr_ptr);
    assume value_is(__ctobpl_const_1602, elem_ptr);
    assume value_is(__ctobpl_const_1603, curr_ptr);
    assume value_is(__ctobpl_const_1604, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_1605, curr_ptr);
    assume value_is(__ctobpl_const_1606, elem_ptr);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1905} true;
    error := result.sinelem$7;
    assume value_is(__ctobpl_const_1607, error);
    assume value_is(__ctobpl_const_1608, result.sinelem$7);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1907} true;
    goto label_38_true, label_38_false;

  label_38_false:
    assume error == 0;
    assume value_is(__ctobpl_const_1609, error);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1908} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_1610, pp2);
    assume value_is(__ctobpl_const_1611, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_1612, curr_ptr);
    assume value_is(__ctobpl_const_1613, Mem_T.Pcharac[curr_ptr]);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1909} true;
    result.elemdef$1 := 0;
    goto label_1;

  label_38_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1609, error);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1913} true;
    assert elem_ptr != 0;
    assume value_is(__ctobpl_const_1614, elem_ptr);
    assume value_is(__ctobpl_const_1615, Mem_T.PElem[elem_ptr]);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1914} true;
    result.elemdef$1 := 17;
    goto label_1;

  label_23_true:
    assume error != 0;
    assume value_is(__ctobpl_const_1582, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1890} true;
    assert elem_ptr != 0;
    Mem_T.PElem := Mem_T.PElem[elem_ptr := 0];
    assume value_is(__ctobpl_const_1616, elem_ptr);
    assume value_is(__ctobpl_const_1617, Mem_T.PElem[elem_ptr]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1891} true;
    result.elemdef$1 := 1;
    goto label_1;

  label_14_true:
    assume Mem_T.PElem[elem_ptr] != 0;
    assume value_is(__ctobpl_const_1569, elem_ptr);
    assume value_is(__ctobpl_const_1570, Mem_T.PElem[elem_ptr]);
    goto label_18;
}



procedure {:extern} emsginit();
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} emsginit()
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} i: int;
  var {:extern} result.strcpy$1: int;
  var {:extern} result.strcpy$3: int;
  var {:extern} result.strcpy$5: int;
  var {:extern} result.strcpy$7: int;
  var {:extern} result.strcpy$9: int;
  var {:extern} result.strcpy$11: int;
  var {:extern} result.strcpy$13: int;
  var {:extern} result.strcpy$15: int;
  var {:extern} result.strcpy$17: int;
  var {:extern} result.strcpy$19: int;
  var {:extern} result.strcpy$21: int;
  var {:extern} result.strcpy$23: int;
  var {:extern} result.strcpy$25: int;
  var {:extern} result.strcpy$27: int;
  var {:extern} result.strcpy$29: int;
  var {:extern} result.strcpy$31: int;
  var {:extern} result.strcpy$33: int;
  var {:extern} result.strcpy$35: int;
  var {:extern} result.strcpy$37: int;
  var {:extern} result.strcpy$39: int;
  var {:extern} result.strcpy$41: int;
  var {:extern} result.strcpy$43: int;
  var {:extern} result.strcpy$45: int;
  var {:extern} result.strcpy$47: int;
  var {:extern} result.strcpy$49: int;
  var {:extern} result.strcpy$51: int;
  var {:extern} result.strcpy$53: int;
  var {:extern} result.strcpy$55: int;
  var {:extern} result.strcpy$57: int;
  var {:extern} result.strcpy$59: int;
  var {:extern} result.strcpy$61: int;
  var {:extern} result.strcpy$63: int;
  var {:extern} result.strcpy$65: int;
  var {:extern} result.strcpy$67: int;
  var {:extern} result.strcpy$69: int;
  var {:extern} result.strcpy$71: int;
  var {:extern} result.strcpy$73: int;
  var {:extern} result.strcpy$75: int;
  var {:extern} result.strcpy$77: int;
  var {:extern} result.strcpy$79: int;
  var {:extern} result.strcpy$81: int;
  var {:extern} result.strcpy$83: int;
  var {:extern} result.strcpy$85: int;
  var {:extern} result.strcpy$87: int;
  var {:extern} result.strcpy$89: int;
  var {:extern} result.strcpy$91: int;
  var {:extern} result.strcpy$93: int;
  var {:extern} result.strcpy$95: int;
  var {:extern} result.strcpy$97: int;
  var {:extern} result.strcpy$99: int;
  var {:extern} result.strcpy$101: int;
  var {:extern} result.strcpy$103: int;
  var {:extern} result.strcpy$105: int;
  var {:extern} result.strcpy$107: int;
  var {:extern} result.strcpy$109: int;
  var {:extern} result.strcpy$111: int;
  var {:extern} result.strcpy$113: int;
  var {:extern} result.strcpy$115: int;
  var {:extern} result.strcpy$117: int;
  var {:extern} result.strcpy$119: int;
  var {:extern} result.strcpy$121: int;
  var {:extern} result.strcpy$123: int;
  var {:extern} result.strcpy$125: int;
  var {:extern} result.strcpy$127: int;
  var {:extern} result.strcpy$129: int;
  var {:extern} result.strcpy$131: int;
  var {:extern} result.strcpy$133: int;
  var {:extern} result.strcpy$135: int;
  var {:extern} result.strcpy$137: int;
  var {:extern} result.strcpy$139: int;
  var {:extern} result.strcpy$141: int;
  var {:extern} result.strcpy$143: int;
  var {:extern} result.strcpy$145: int;
  var {:extern} result.strcpy$147: int;
  var {:extern} result.strcpy$149: int;
  var {:extern} result.strcpy$151: int;
  var {:extern} result.strcpy$153: int;
  var {:extern} result.strcpy$155: int;
  var {:extern} result.strcpy$157: int;
  var {:extern} result.strcpy$159: int;
  var {:extern} result.strcpy$161: int;
  var {:extern} result.strcpy$163: int;
  var {:extern} result.strcpy$165: int;
  var {:extern} result.strcpy$167: int;
  var {:extern} result.strcpy$169: int;
  var {:extern} result.strcpy$171: int;
  var {:extern} result.strcpy$173: int;
  var {:extern} result.strcpy$175: int;
  var {:extern} result.strcpy$177: int;
  var {:extern} result.strcpy$179: int;
  var {:extern} result.strcpy$181: int;
  var {:extern} result.strcpy$183: int;
  var {:extern} result.strcpy$185: int;
  var {:extern} result.strcpy$187: int;
  var {:extern} result.strcpy$189: int;
  var {:extern} result.strcpy$191: int;
  var {:extern} result.strcpy$193: int;
  var {:extern} result.strcpy$195: int;
  var {:extern} result.strcpy$197: int;
  var {:extern} result.strcpy$199: int;
  var {:extern} $strcpy.arg.1$10$: int;
  var {:extern} $strcpy.arg.1$100$: int;
  var {:extern} $strcpy.arg.1$102$: int;
  var {:extern} $strcpy.arg.1$104$: int;
  var {:extern} $strcpy.arg.1$106$: int;
  var {:extern} $strcpy.arg.1$108$: int;
  var {:extern} $strcpy.arg.1$110$: int;
  var {:extern} $strcpy.arg.1$112$: int;
  var {:extern} $strcpy.arg.1$114$: int;
  var {:extern} $strcpy.arg.1$116$: int;
  var {:extern} $strcpy.arg.1$118$: int;
  var {:extern} $strcpy.arg.1$12$: int;
  var {:extern} $strcpy.arg.1$120$: int;
  var {:extern} $strcpy.arg.1$122$: int;
  var {:extern} $strcpy.arg.1$124$: int;
  var {:extern} $strcpy.arg.1$126$: int;
  var {:extern} $strcpy.arg.1$128$: int;
  var {:extern} $strcpy.arg.1$130$: int;
  var {:extern} $strcpy.arg.1$132$: int;
  var {:extern} $strcpy.arg.1$134$: int;
  var {:extern} $strcpy.arg.1$136$: int;
  var {:extern} $strcpy.arg.1$138$: int;
  var {:extern} $strcpy.arg.1$14$: int;
  var {:extern} $strcpy.arg.1$140$: int;
  var {:extern} $strcpy.arg.1$142$: int;
  var {:extern} $strcpy.arg.1$144$: int;
  var {:extern} $strcpy.arg.1$146$: int;
  var {:extern} $strcpy.arg.1$148$: int;
  var {:extern} $strcpy.arg.1$150$: int;
  var {:extern} $strcpy.arg.1$152$: int;
  var {:extern} $strcpy.arg.1$154$: int;
  var {:extern} $strcpy.arg.1$156$: int;
  var {:extern} $strcpy.arg.1$158$: int;
  var {:extern} $strcpy.arg.1$16$: int;
  var {:extern} $strcpy.arg.1$160$: int;
  var {:extern} $strcpy.arg.1$162$: int;
  var {:extern} $strcpy.arg.1$164$: int;
  var {:extern} $strcpy.arg.1$166$: int;
  var {:extern} $strcpy.arg.1$168$: int;
  var {:extern} $strcpy.arg.1$170$: int;
  var {:extern} $strcpy.arg.1$172$: int;
  var {:extern} $strcpy.arg.1$174$: int;
  var {:extern} $strcpy.arg.1$176$: int;
  var {:extern} $strcpy.arg.1$178$: int;
  var {:extern} $strcpy.arg.1$18$: int;
  var {:extern} $strcpy.arg.1$180$: int;
  var {:extern} $strcpy.arg.1$182$: int;
  var {:extern} $strcpy.arg.1$184$: int;
  var {:extern} $strcpy.arg.1$186$: int;
  var {:extern} $strcpy.arg.1$188$: int;
  var {:extern} $strcpy.arg.1$190$: int;
  var {:extern} $strcpy.arg.1$192$: int;
  var {:extern} $strcpy.arg.1$194$: int;
  var {:extern} $strcpy.arg.1$196$: int;
  var {:extern} $strcpy.arg.1$198$: int;
  var {:extern} $strcpy.arg.1$2$: int;
  var {:extern} $strcpy.arg.1$20$: int;
  var {:extern} $strcpy.arg.1$200$: int;
  var {:extern} $strcpy.arg.1$22$: int;
  var {:extern} $strcpy.arg.1$24$: int;
  var {:extern} $strcpy.arg.1$26$: int;
  var {:extern} $strcpy.arg.1$28$: int;
  var {:extern} $strcpy.arg.1$30$: int;
  var {:extern} $strcpy.arg.1$32$: int;
  var {:extern} $strcpy.arg.1$34$: int;
  var {:extern} $strcpy.arg.1$36$: int;
  var {:extern} $strcpy.arg.1$38$: int;
  var {:extern} $strcpy.arg.1$4$: int;
  var {:extern} $strcpy.arg.1$40$: int;
  var {:extern} $strcpy.arg.1$42$: int;
  var {:extern} $strcpy.arg.1$44$: int;
  var {:extern} $strcpy.arg.1$46$: int;
  var {:extern} $strcpy.arg.1$48$: int;
  var {:extern} $strcpy.arg.1$50$: int;
  var {:extern} $strcpy.arg.1$52$: int;
  var {:extern} $strcpy.arg.1$54$: int;
  var {:extern} $strcpy.arg.1$56$: int;
  var {:extern} $strcpy.arg.1$58$: int;
  var {:extern} $strcpy.arg.1$6$: int;
  var {:extern} $strcpy.arg.1$60$: int;
  var {:extern} $strcpy.arg.1$62$: int;
  var {:extern} $strcpy.arg.1$64$: int;
  var {:extern} $strcpy.arg.1$66$: int;
  var {:extern} $strcpy.arg.1$68$: int;
  var {:extern} $strcpy.arg.1$70$: int;
  var {:extern} $strcpy.arg.1$72$: int;
  var {:extern} $strcpy.arg.1$74$: int;
  var {:extern} $strcpy.arg.1$76$: int;
  var {:extern} $strcpy.arg.1$78$: int;
  var {:extern} $strcpy.arg.1$8$: int;
  var {:extern} $strcpy.arg.1$80$: int;
  var {:extern} $strcpy.arg.1$82$: int;
  var {:extern} $strcpy.arg.1$84$: int;
  var {:extern} $strcpy.arg.1$86$: int;
  var {:extern} $strcpy.arg.1$88$: int;
  var {:extern} $strcpy.arg.1$90$: int;
  var {:extern} $strcpy.arg.1$92$: int;
  var {:extern} $strcpy.arg.1$94$: int;
  var {:extern} $strcpy.arg.1$96$: int;
  var {:extern} $strcpy.arg.1$98$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    i := 0;
    result.strcpy$1 := 0;
    result.strcpy$3 := 0;
    result.strcpy$5 := 0;
    result.strcpy$7 := 0;
    result.strcpy$9 := 0;
    result.strcpy$11 := 0;
    result.strcpy$13 := 0;
    result.strcpy$15 := 0;
    result.strcpy$17 := 0;
    result.strcpy$19 := 0;
    result.strcpy$21 := 0;
    result.strcpy$23 := 0;
    result.strcpy$25 := 0;
    result.strcpy$27 := 0;
    result.strcpy$29 := 0;
    result.strcpy$31 := 0;
    result.strcpy$33 := 0;
    result.strcpy$35 := 0;
    result.strcpy$37 := 0;
    result.strcpy$39 := 0;
    result.strcpy$41 := 0;
    result.strcpy$43 := 0;
    result.strcpy$45 := 0;
    result.strcpy$47 := 0;
    result.strcpy$49 := 0;
    result.strcpy$51 := 0;
    result.strcpy$53 := 0;
    result.strcpy$55 := 0;
    result.strcpy$57 := 0;
    result.strcpy$59 := 0;
    result.strcpy$61 := 0;
    result.strcpy$63 := 0;
    result.strcpy$65 := 0;
    result.strcpy$67 := 0;
    result.strcpy$69 := 0;
    result.strcpy$71 := 0;
    result.strcpy$73 := 0;
    result.strcpy$75 := 0;
    result.strcpy$77 := 0;
    result.strcpy$79 := 0;
    result.strcpy$81 := 0;
    result.strcpy$83 := 0;
    result.strcpy$85 := 0;
    result.strcpy$87 := 0;
    result.strcpy$89 := 0;
    result.strcpy$91 := 0;
    result.strcpy$93 := 0;
    result.strcpy$95 := 0;
    result.strcpy$97 := 0;
    result.strcpy$99 := 0;
    result.strcpy$101 := 0;
    result.strcpy$103 := 0;
    result.strcpy$105 := 0;
    result.strcpy$107 := 0;
    result.strcpy$109 := 0;
    result.strcpy$111 := 0;
    result.strcpy$113 := 0;
    result.strcpy$115 := 0;
    result.strcpy$117 := 0;
    result.strcpy$119 := 0;
    result.strcpy$121 := 0;
    result.strcpy$123 := 0;
    result.strcpy$125 := 0;
    result.strcpy$127 := 0;
    result.strcpy$129 := 0;
    result.strcpy$131 := 0;
    result.strcpy$133 := 0;
    result.strcpy$135 := 0;
    result.strcpy$137 := 0;
    result.strcpy$139 := 0;
    result.strcpy$141 := 0;
    result.strcpy$143 := 0;
    result.strcpy$145 := 0;
    result.strcpy$147 := 0;
    result.strcpy$149 := 0;
    result.strcpy$151 := 0;
    result.strcpy$153 := 0;
    result.strcpy$155 := 0;
    result.strcpy$157 := 0;
    result.strcpy$159 := 0;
    result.strcpy$161 := 0;
    result.strcpy$163 := 0;
    result.strcpy$165 := 0;
    result.strcpy$167 := 0;
    result.strcpy$169 := 0;
    result.strcpy$171 := 0;
    result.strcpy$173 := 0;
    result.strcpy$175 := 0;
    result.strcpy$177 := 0;
    result.strcpy$179 := 0;
    result.strcpy$181 := 0;
    result.strcpy$183 := 0;
    result.strcpy$185 := 0;
    result.strcpy$187 := 0;
    result.strcpy$189 := 0;
    result.strcpy$191 := 0;
    result.strcpy$193 := 0;
    result.strcpy$195 := 0;
    result.strcpy$197 := 0;
    result.strcpy$199 := 0;
    $strcpy.arg.1$10$ := 0;
    $strcpy.arg.1$100$ := 0;
    $strcpy.arg.1$102$ := 0;
    $strcpy.arg.1$104$ := 0;
    $strcpy.arg.1$106$ := 0;
    $strcpy.arg.1$108$ := 0;
    $strcpy.arg.1$110$ := 0;
    $strcpy.arg.1$112$ := 0;
    $strcpy.arg.1$114$ := 0;
    $strcpy.arg.1$116$ := 0;
    $strcpy.arg.1$118$ := 0;
    $strcpy.arg.1$12$ := 0;
    $strcpy.arg.1$120$ := 0;
    $strcpy.arg.1$122$ := 0;
    $strcpy.arg.1$124$ := 0;
    $strcpy.arg.1$126$ := 0;
    $strcpy.arg.1$128$ := 0;
    $strcpy.arg.1$130$ := 0;
    $strcpy.arg.1$132$ := 0;
    $strcpy.arg.1$134$ := 0;
    $strcpy.arg.1$136$ := 0;
    $strcpy.arg.1$138$ := 0;
    $strcpy.arg.1$14$ := 0;
    $strcpy.arg.1$140$ := 0;
    $strcpy.arg.1$142$ := 0;
    $strcpy.arg.1$144$ := 0;
    $strcpy.arg.1$146$ := 0;
    $strcpy.arg.1$148$ := 0;
    $strcpy.arg.1$150$ := 0;
    $strcpy.arg.1$152$ := 0;
    $strcpy.arg.1$154$ := 0;
    $strcpy.arg.1$156$ := 0;
    $strcpy.arg.1$158$ := 0;
    $strcpy.arg.1$16$ := 0;
    $strcpy.arg.1$160$ := 0;
    $strcpy.arg.1$162$ := 0;
    $strcpy.arg.1$164$ := 0;
    $strcpy.arg.1$166$ := 0;
    $strcpy.arg.1$168$ := 0;
    $strcpy.arg.1$170$ := 0;
    $strcpy.arg.1$172$ := 0;
    $strcpy.arg.1$174$ := 0;
    $strcpy.arg.1$176$ := 0;
    $strcpy.arg.1$178$ := 0;
    $strcpy.arg.1$18$ := 0;
    $strcpy.arg.1$180$ := 0;
    $strcpy.arg.1$182$ := 0;
    $strcpy.arg.1$184$ := 0;
    $strcpy.arg.1$186$ := 0;
    $strcpy.arg.1$188$ := 0;
    $strcpy.arg.1$190$ := 0;
    $strcpy.arg.1$192$ := 0;
    $strcpy.arg.1$194$ := 0;
    $strcpy.arg.1$196$ := 0;
    $strcpy.arg.1$198$ := 0;
    $strcpy.arg.1$2$ := 0;
    $strcpy.arg.1$20$ := 0;
    $strcpy.arg.1$200$ := 0;
    $strcpy.arg.1$22$ := 0;
    $strcpy.arg.1$24$ := 0;
    $strcpy.arg.1$26$ := 0;
    $strcpy.arg.1$28$ := 0;
    $strcpy.arg.1$30$ := 0;
    $strcpy.arg.1$32$ := 0;
    $strcpy.arg.1$34$ := 0;
    $strcpy.arg.1$36$ := 0;
    $strcpy.arg.1$38$ := 0;
    $strcpy.arg.1$4$ := 0;
    $strcpy.arg.1$40$ := 0;
    $strcpy.arg.1$42$ := 0;
    $strcpy.arg.1$44$ := 0;
    $strcpy.arg.1$46$ := 0;
    $strcpy.arg.1$48$ := 0;
    $strcpy.arg.1$50$ := 0;
    $strcpy.arg.1$52$ := 0;
    $strcpy.arg.1$54$ := 0;
    $strcpy.arg.1$56$ := 0;
    $strcpy.arg.1$58$ := 0;
    $strcpy.arg.1$6$ := 0;
    $strcpy.arg.1$60$ := 0;
    $strcpy.arg.1$62$ := 0;
    $strcpy.arg.1$64$ := 0;
    $strcpy.arg.1$66$ := 0;
    $strcpy.arg.1$68$ := 0;
    $strcpy.arg.1$70$ := 0;
    $strcpy.arg.1$72$ := 0;
    $strcpy.arg.1$74$ := 0;
    $strcpy.arg.1$76$ := 0;
    $strcpy.arg.1$78$ := 0;
    $strcpy.arg.1$8$ := 0;
    $strcpy.arg.1$80$ := 0;
    $strcpy.arg.1$82$ := 0;
    $strcpy.arg.1$84$ := 0;
    $strcpy.arg.1$86$ := 0;
    $strcpy.arg.1$88$ := 0;
    $strcpy.arg.1$90$ := 0;
    $strcpy.arg.1$92$ := 0;
    $strcpy.arg.1$94$ := 0;
    $strcpy.arg.1$96$ := 0;
    $strcpy.arg.1$98$ := 0;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1925} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1931} true;
    i := 0;
    assume value_is(__ctobpl_const_1618, i);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1931} true;
    goto label_5_head;

  label_5_head:
    call i := emsginit_loop_label_5_head(i);
    goto label_5_head_last;

  label_5_false:
    assume !INT_LEQ(i, 100);
    assume value_is(__ctobpl_const_1619, i);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1934} true;
    $strcpy.arg.1$2$ := PLUS(ErrorMessages, 101, 0);
    assume value_is(__ctobpl_const_1620, $strcpy.arg.1$2$);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1934} true;
    call result.strcpy$1 := strcpy($strcpy.arg.1$2$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1621, $strcpy.arg.1$2$);
    assume value_is(__ctobpl_const_1622, $strcpy.arg.1$2$);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1935} true;
    $strcpy.arg.1$4$ := PLUS(ErrorMessages, 101, 1);
    assume value_is(__ctobpl_const_1623, $strcpy.arg.1$4$);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1935} true;
    call result.strcpy$3 := strcpy($strcpy.arg.1$4$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1624, $strcpy.arg.1$4$);
    assume value_is(__ctobpl_const_1625, $strcpy.arg.1$4$);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1936} true;
    $strcpy.arg.1$6$ := PLUS(ErrorMessages, 101, 2);
    assume value_is(__ctobpl_const_1626, $strcpy.arg.1$6$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1936} true;
    call result.strcpy$5 := strcpy($strcpy.arg.1$6$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1627, $strcpy.arg.1$6$);
    assume value_is(__ctobpl_const_1628, $strcpy.arg.1$6$);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1937} true;
    $strcpy.arg.1$8$ := PLUS(ErrorMessages, 101, 3);
    assume value_is(__ctobpl_const_1629, $strcpy.arg.1$8$);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1937} true;
    call result.strcpy$7 := strcpy($strcpy.arg.1$8$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1630, $strcpy.arg.1$8$);
    assume value_is(__ctobpl_const_1631, $strcpy.arg.1$8$);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1938} true;
    $strcpy.arg.1$10$ := PLUS(ErrorMessages, 101, 4);
    assume value_is(__ctobpl_const_1632, $strcpy.arg.1$10$);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1938} true;
    call result.strcpy$9 := strcpy($strcpy.arg.1$10$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1633, $strcpy.arg.1$10$);
    assume value_is(__ctobpl_const_1634, $strcpy.arg.1$10$);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1939} true;
    $strcpy.arg.1$12$ := PLUS(ErrorMessages, 101, 5);
    assume value_is(__ctobpl_const_1635, $strcpy.arg.1$12$);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1939} true;
    call result.strcpy$11 := strcpy($strcpy.arg.1$12$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1636, $strcpy.arg.1$12$);
    assume value_is(__ctobpl_const_1637, $strcpy.arg.1$12$);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1940} true;
    $strcpy.arg.1$14$ := PLUS(ErrorMessages, 101, 6);
    assume value_is(__ctobpl_const_1638, $strcpy.arg.1$14$);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1940} true;
    call result.strcpy$13 := strcpy($strcpy.arg.1$14$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1639, $strcpy.arg.1$14$);
    assume value_is(__ctobpl_const_1640, $strcpy.arg.1$14$);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1941} true;
    $strcpy.arg.1$16$ := PLUS(ErrorMessages, 101, 7);
    assume value_is(__ctobpl_const_1641, $strcpy.arg.1$16$);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1941} true;
    call result.strcpy$15 := strcpy($strcpy.arg.1$16$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1642, $strcpy.arg.1$16$);
    assume value_is(__ctobpl_const_1643, $strcpy.arg.1$16$);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1942} true;
    $strcpy.arg.1$18$ := PLUS(ErrorMessages, 101, 8);
    assume value_is(__ctobpl_const_1644, $strcpy.arg.1$18$);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1942} true;
    call result.strcpy$17 := strcpy($strcpy.arg.1$18$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1645, $strcpy.arg.1$18$);
    assume value_is(__ctobpl_const_1646, $strcpy.arg.1$18$);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1943} true;
    $strcpy.arg.1$20$ := PLUS(ErrorMessages, 101, 9);
    assume value_is(__ctobpl_const_1647, $strcpy.arg.1$20$);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1943} true;
    call result.strcpy$19 := strcpy($strcpy.arg.1$20$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1648, $strcpy.arg.1$20$);
    assume value_is(__ctobpl_const_1649, $strcpy.arg.1$20$);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1944} true;
    $strcpy.arg.1$22$ := PLUS(ErrorMessages, 101, 10);
    assume value_is(__ctobpl_const_1650, $strcpy.arg.1$22$);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1944} true;
    call result.strcpy$21 := strcpy($strcpy.arg.1$22$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1651, $strcpy.arg.1$22$);
    assume value_is(__ctobpl_const_1652, $strcpy.arg.1$22$);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1945} true;
    $strcpy.arg.1$24$ := PLUS(ErrorMessages, 101, 11);
    assume value_is(__ctobpl_const_1653, $strcpy.arg.1$24$);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1945} true;
    call result.strcpy$23 := strcpy($strcpy.arg.1$24$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1654, $strcpy.arg.1$24$);
    assume value_is(__ctobpl_const_1655, $strcpy.arg.1$24$);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1946} true;
    $strcpy.arg.1$26$ := PLUS(ErrorMessages, 101, 12);
    assume value_is(__ctobpl_const_1656, $strcpy.arg.1$26$);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1946} true;
    call result.strcpy$25 := strcpy($strcpy.arg.1$26$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1657, $strcpy.arg.1$26$);
    assume value_is(__ctobpl_const_1658, $strcpy.arg.1$26$);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1947} true;
    $strcpy.arg.1$28$ := PLUS(ErrorMessages, 101, 13);
    assume value_is(__ctobpl_const_1659, $strcpy.arg.1$28$);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1947} true;
    call result.strcpy$27 := strcpy($strcpy.arg.1$28$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1660, $strcpy.arg.1$28$);
    assume value_is(__ctobpl_const_1661, $strcpy.arg.1$28$);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1948} true;
    $strcpy.arg.1$30$ := PLUS(ErrorMessages, 101, 14);
    assume value_is(__ctobpl_const_1662, $strcpy.arg.1$30$);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1948} true;
    call result.strcpy$29 := strcpy($strcpy.arg.1$30$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1663, $strcpy.arg.1$30$);
    assume value_is(__ctobpl_const_1664, $strcpy.arg.1$30$);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1949} true;
    $strcpy.arg.1$32$ := PLUS(ErrorMessages, 101, 15);
    assume value_is(__ctobpl_const_1665, $strcpy.arg.1$32$);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1949} true;
    call result.strcpy$31 := strcpy($strcpy.arg.1$32$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1666, $strcpy.arg.1$32$);
    assume value_is(__ctobpl_const_1667, $strcpy.arg.1$32$);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1950} true;
    $strcpy.arg.1$34$ := PLUS(ErrorMessages, 101, 16);
    assume value_is(__ctobpl_const_1668, $strcpy.arg.1$34$);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1950} true;
    call result.strcpy$33 := strcpy($strcpy.arg.1$34$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1669, $strcpy.arg.1$34$);
    assume value_is(__ctobpl_const_1670, $strcpy.arg.1$34$);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1951} true;
    $strcpy.arg.1$36$ := PLUS(ErrorMessages, 101, 17);
    assume value_is(__ctobpl_const_1671, $strcpy.arg.1$36$);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1951} true;
    call result.strcpy$35 := strcpy($strcpy.arg.1$36$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1672, $strcpy.arg.1$36$);
    assume value_is(__ctobpl_const_1673, $strcpy.arg.1$36$);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1952} true;
    $strcpy.arg.1$38$ := PLUS(ErrorMessages, 101, 18);
    assume value_is(__ctobpl_const_1674, $strcpy.arg.1$38$);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1952} true;
    call result.strcpy$37 := strcpy($strcpy.arg.1$38$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1675, $strcpy.arg.1$38$);
    assume value_is(__ctobpl_const_1676, $strcpy.arg.1$38$);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1953} true;
    $strcpy.arg.1$40$ := PLUS(ErrorMessages, 101, 19);
    assume value_is(__ctobpl_const_1677, $strcpy.arg.1$40$);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1953} true;
    call result.strcpy$39 := strcpy($strcpy.arg.1$40$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1678, $strcpy.arg.1$40$);
    assume value_is(__ctobpl_const_1679, $strcpy.arg.1$40$);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1954} true;
    $strcpy.arg.1$42$ := PLUS(ErrorMessages, 101, 20);
    assume value_is(__ctobpl_const_1680, $strcpy.arg.1$42$);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1954} true;
    call result.strcpy$41 := strcpy($strcpy.arg.1$42$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1681, $strcpy.arg.1$42$);
    assume value_is(__ctobpl_const_1682, $strcpy.arg.1$42$);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1955} true;
    $strcpy.arg.1$44$ := PLUS(ErrorMessages, 101, 21);
    assume value_is(__ctobpl_const_1683, $strcpy.arg.1$44$);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1955} true;
    call result.strcpy$43 := strcpy($strcpy.arg.1$44$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1684, $strcpy.arg.1$44$);
    assume value_is(__ctobpl_const_1685, $strcpy.arg.1$44$);
    goto label_96;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1956} true;
    $strcpy.arg.1$46$ := PLUS(ErrorMessages, 101, 22);
    assume value_is(__ctobpl_const_1686, $strcpy.arg.1$46$);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1956} true;
    call result.strcpy$45 := strcpy($strcpy.arg.1$46$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1687, $strcpy.arg.1$46$);
    assume value_is(__ctobpl_const_1688, $strcpy.arg.1$46$);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1957} true;
    $strcpy.arg.1$48$ := PLUS(ErrorMessages, 101, 23);
    assume value_is(__ctobpl_const_1689, $strcpy.arg.1$48$);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1957} true;
    call result.strcpy$47 := strcpy($strcpy.arg.1$48$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1690, $strcpy.arg.1$48$);
    assume value_is(__ctobpl_const_1691, $strcpy.arg.1$48$);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1958} true;
    $strcpy.arg.1$50$ := PLUS(ErrorMessages, 101, 24);
    assume value_is(__ctobpl_const_1692, $strcpy.arg.1$50$);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1958} true;
    call result.strcpy$49 := strcpy($strcpy.arg.1$50$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1693, $strcpy.arg.1$50$);
    assume value_is(__ctobpl_const_1694, $strcpy.arg.1$50$);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1959} true;
    $strcpy.arg.1$52$ := PLUS(ErrorMessages, 101, 25);
    assume value_is(__ctobpl_const_1695, $strcpy.arg.1$52$);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1959} true;
    call result.strcpy$51 := strcpy($strcpy.arg.1$52$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1696, $strcpy.arg.1$52$);
    assume value_is(__ctobpl_const_1697, $strcpy.arg.1$52$);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1960} true;
    $strcpy.arg.1$54$ := PLUS(ErrorMessages, 101, 26);
    assume value_is(__ctobpl_const_1698, $strcpy.arg.1$54$);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1960} true;
    call result.strcpy$53 := strcpy($strcpy.arg.1$54$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1699, $strcpy.arg.1$54$);
    assume value_is(__ctobpl_const_1700, $strcpy.arg.1$54$);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1961} true;
    $strcpy.arg.1$56$ := PLUS(ErrorMessages, 101, 27);
    assume value_is(__ctobpl_const_1701, $strcpy.arg.1$56$);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1961} true;
    call result.strcpy$55 := strcpy($strcpy.arg.1$56$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1702, $strcpy.arg.1$56$);
    assume value_is(__ctobpl_const_1703, $strcpy.arg.1$56$);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1962} true;
    $strcpy.arg.1$58$ := PLUS(ErrorMessages, 101, 28);
    assume value_is(__ctobpl_const_1704, $strcpy.arg.1$58$);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1962} true;
    call result.strcpy$57 := strcpy($strcpy.arg.1$58$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1705, $strcpy.arg.1$58$);
    assume value_is(__ctobpl_const_1706, $strcpy.arg.1$58$);
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1963} true;
    $strcpy.arg.1$60$ := PLUS(ErrorMessages, 101, 29);
    assume value_is(__ctobpl_const_1707, $strcpy.arg.1$60$);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1963} true;
    call result.strcpy$59 := strcpy($strcpy.arg.1$60$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1708, $strcpy.arg.1$60$);
    assume value_is(__ctobpl_const_1709, $strcpy.arg.1$60$);
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1964} true;
    $strcpy.arg.1$62$ := PLUS(ErrorMessages, 101, 30);
    assume value_is(__ctobpl_const_1710, $strcpy.arg.1$62$);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1964} true;
    call result.strcpy$61 := strcpy($strcpy.arg.1$62$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1711, $strcpy.arg.1$62$);
    assume value_is(__ctobpl_const_1712, $strcpy.arg.1$62$);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1965} true;
    $strcpy.arg.1$64$ := PLUS(ErrorMessages, 101, 31);
    assume value_is(__ctobpl_const_1713, $strcpy.arg.1$64$);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1965} true;
    call result.strcpy$63 := strcpy($strcpy.arg.1$64$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1714, $strcpy.arg.1$64$);
    assume value_is(__ctobpl_const_1715, $strcpy.arg.1$64$);
    goto label_136;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1966} true;
    $strcpy.arg.1$66$ := PLUS(ErrorMessages, 101, 32);
    assume value_is(__ctobpl_const_1716, $strcpy.arg.1$66$);
    goto label_137;

  label_137:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1966} true;
    call result.strcpy$65 := strcpy($strcpy.arg.1$66$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1717, $strcpy.arg.1$66$);
    assume value_is(__ctobpl_const_1718, $strcpy.arg.1$66$);
    goto label_140;

  label_140:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1967} true;
    $strcpy.arg.1$68$ := PLUS(ErrorMessages, 101, 33);
    assume value_is(__ctobpl_const_1719, $strcpy.arg.1$68$);
    goto label_141;

  label_141:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1967} true;
    call result.strcpy$67 := strcpy($strcpy.arg.1$68$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1720, $strcpy.arg.1$68$);
    assume value_is(__ctobpl_const_1721, $strcpy.arg.1$68$);
    goto label_144;

  label_144:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1968} true;
    $strcpy.arg.1$70$ := PLUS(ErrorMessages, 101, 34);
    assume value_is(__ctobpl_const_1722, $strcpy.arg.1$70$);
    goto label_145;

  label_145:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1968} true;
    call result.strcpy$69 := strcpy($strcpy.arg.1$70$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1723, $strcpy.arg.1$70$);
    assume value_is(__ctobpl_const_1724, $strcpy.arg.1$70$);
    goto label_148;

  label_148:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1969} true;
    $strcpy.arg.1$72$ := PLUS(ErrorMessages, 101, 35);
    assume value_is(__ctobpl_const_1725, $strcpy.arg.1$72$);
    goto label_149;

  label_149:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1969} true;
    call result.strcpy$71 := strcpy($strcpy.arg.1$72$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1726, $strcpy.arg.1$72$);
    assume value_is(__ctobpl_const_1727, $strcpy.arg.1$72$);
    goto label_152;

  label_152:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1970} true;
    $strcpy.arg.1$74$ := PLUS(ErrorMessages, 101, 36);
    assume value_is(__ctobpl_const_1728, $strcpy.arg.1$74$);
    goto label_153;

  label_153:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1970} true;
    call result.strcpy$73 := strcpy($strcpy.arg.1$74$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1729, $strcpy.arg.1$74$);
    assume value_is(__ctobpl_const_1730, $strcpy.arg.1$74$);
    goto label_156;

  label_156:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1971} true;
    $strcpy.arg.1$76$ := PLUS(ErrorMessages, 101, 37);
    assume value_is(__ctobpl_const_1731, $strcpy.arg.1$76$);
    goto label_157;

  label_157:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1971} true;
    call result.strcpy$75 := strcpy($strcpy.arg.1$76$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1732, $strcpy.arg.1$76$);
    assume value_is(__ctobpl_const_1733, $strcpy.arg.1$76$);
    goto label_160;

  label_160:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1972} true;
    $strcpy.arg.1$78$ := PLUS(ErrorMessages, 101, 38);
    assume value_is(__ctobpl_const_1734, $strcpy.arg.1$78$);
    goto label_161;

  label_161:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1972} true;
    call result.strcpy$77 := strcpy($strcpy.arg.1$78$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1735, $strcpy.arg.1$78$);
    assume value_is(__ctobpl_const_1736, $strcpy.arg.1$78$);
    goto label_164;

  label_164:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1973} true;
    $strcpy.arg.1$80$ := PLUS(ErrorMessages, 101, 39);
    assume value_is(__ctobpl_const_1737, $strcpy.arg.1$80$);
    goto label_165;

  label_165:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1973} true;
    call result.strcpy$79 := strcpy($strcpy.arg.1$80$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1738, $strcpy.arg.1$80$);
    assume value_is(__ctobpl_const_1739, $strcpy.arg.1$80$);
    goto label_168;

  label_168:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1974} true;
    $strcpy.arg.1$82$ := PLUS(ErrorMessages, 101, 40);
    assume value_is(__ctobpl_const_1740, $strcpy.arg.1$82$);
    goto label_169;

  label_169:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1974} true;
    call result.strcpy$81 := strcpy($strcpy.arg.1$82$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1741, $strcpy.arg.1$82$);
    assume value_is(__ctobpl_const_1742, $strcpy.arg.1$82$);
    goto label_172;

  label_172:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1975} true;
    $strcpy.arg.1$84$ := PLUS(ErrorMessages, 101, 41);
    assume value_is(__ctobpl_const_1743, $strcpy.arg.1$84$);
    goto label_173;

  label_173:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1975} true;
    call result.strcpy$83 := strcpy($strcpy.arg.1$84$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1744, $strcpy.arg.1$84$);
    assume value_is(__ctobpl_const_1745, $strcpy.arg.1$84$);
    goto label_176;

  label_176:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1976} true;
    $strcpy.arg.1$86$ := PLUS(ErrorMessages, 101, 42);
    assume value_is(__ctobpl_const_1746, $strcpy.arg.1$86$);
    goto label_177;

  label_177:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1976} true;
    call result.strcpy$85 := strcpy($strcpy.arg.1$86$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1747, $strcpy.arg.1$86$);
    assume value_is(__ctobpl_const_1748, $strcpy.arg.1$86$);
    goto label_180;

  label_180:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1977} true;
    $strcpy.arg.1$88$ := PLUS(ErrorMessages, 101, 43);
    assume value_is(__ctobpl_const_1749, $strcpy.arg.1$88$);
    goto label_181;

  label_181:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1977} true;
    call result.strcpy$87 := strcpy($strcpy.arg.1$88$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1750, $strcpy.arg.1$88$);
    assume value_is(__ctobpl_const_1751, $strcpy.arg.1$88$);
    goto label_184;

  label_184:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1978} true;
    $strcpy.arg.1$90$ := PLUS(ErrorMessages, 101, 44);
    assume value_is(__ctobpl_const_1752, $strcpy.arg.1$90$);
    goto label_185;

  label_185:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1978} true;
    call result.strcpy$89 := strcpy($strcpy.arg.1$90$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1753, $strcpy.arg.1$90$);
    assume value_is(__ctobpl_const_1754, $strcpy.arg.1$90$);
    goto label_188;

  label_188:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1979} true;
    $strcpy.arg.1$92$ := PLUS(ErrorMessages, 101, 45);
    assume value_is(__ctobpl_const_1755, $strcpy.arg.1$92$);
    goto label_189;

  label_189:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1979} true;
    call result.strcpy$91 := strcpy($strcpy.arg.1$92$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1756, $strcpy.arg.1$92$);
    assume value_is(__ctobpl_const_1757, $strcpy.arg.1$92$);
    goto label_192;

  label_192:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1980} true;
    $strcpy.arg.1$94$ := PLUS(ErrorMessages, 101, 46);
    assume value_is(__ctobpl_const_1758, $strcpy.arg.1$94$);
    goto label_193;

  label_193:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1980} true;
    call result.strcpy$93 := strcpy($strcpy.arg.1$94$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1759, $strcpy.arg.1$94$);
    assume value_is(__ctobpl_const_1760, $strcpy.arg.1$94$);
    goto label_196;

  label_196:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1981} true;
    $strcpy.arg.1$96$ := PLUS(ErrorMessages, 101, 47);
    assume value_is(__ctobpl_const_1761, $strcpy.arg.1$96$);
    goto label_197;

  label_197:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1981} true;
    call result.strcpy$95 := strcpy($strcpy.arg.1$96$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1762, $strcpy.arg.1$96$);
    assume value_is(__ctobpl_const_1763, $strcpy.arg.1$96$);
    goto label_200;

  label_200:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1982} true;
    $strcpy.arg.1$98$ := PLUS(ErrorMessages, 101, 48);
    assume value_is(__ctobpl_const_1764, $strcpy.arg.1$98$);
    goto label_201;

  label_201:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1982} true;
    call result.strcpy$97 := strcpy($strcpy.arg.1$98$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1765, $strcpy.arg.1$98$);
    assume value_is(__ctobpl_const_1766, $strcpy.arg.1$98$);
    goto label_204;

  label_204:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1983} true;
    $strcpy.arg.1$100$ := PLUS(ErrorMessages, 101, 49);
    assume value_is(__ctobpl_const_1767, $strcpy.arg.1$100$);
    goto label_205;

  label_205:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1983} true;
    call result.strcpy$99 := strcpy($strcpy.arg.1$100$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1768, $strcpy.arg.1$100$);
    assume value_is(__ctobpl_const_1769, $strcpy.arg.1$100$);
    goto label_208;

  label_208:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1984} true;
    $strcpy.arg.1$102$ := PLUS(ErrorMessages, 101, 50);
    assume value_is(__ctobpl_const_1770, $strcpy.arg.1$102$);
    goto label_209;

  label_209:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1984} true;
    call result.strcpy$101 := strcpy($strcpy.arg.1$102$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1771, $strcpy.arg.1$102$);
    assume value_is(__ctobpl_const_1772, $strcpy.arg.1$102$);
    goto label_212;

  label_212:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1985} true;
    $strcpy.arg.1$104$ := PLUS(ErrorMessages, 101, 51);
    assume value_is(__ctobpl_const_1773, $strcpy.arg.1$104$);
    goto label_213;

  label_213:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1985} true;
    call result.strcpy$103 := strcpy($strcpy.arg.1$104$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1774, $strcpy.arg.1$104$);
    assume value_is(__ctobpl_const_1775, $strcpy.arg.1$104$);
    goto label_216;

  label_216:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1986} true;
    $strcpy.arg.1$106$ := PLUS(ErrorMessages, 101, 52);
    assume value_is(__ctobpl_const_1776, $strcpy.arg.1$106$);
    goto label_217;

  label_217:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1986} true;
    call result.strcpy$105 := strcpy($strcpy.arg.1$106$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1777, $strcpy.arg.1$106$);
    assume value_is(__ctobpl_const_1778, $strcpy.arg.1$106$);
    goto label_220;

  label_220:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1987} true;
    $strcpy.arg.1$108$ := PLUS(ErrorMessages, 101, 53);
    assume value_is(__ctobpl_const_1779, $strcpy.arg.1$108$);
    goto label_221;

  label_221:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1987} true;
    call result.strcpy$107 := strcpy($strcpy.arg.1$108$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1780, $strcpy.arg.1$108$);
    assume value_is(__ctobpl_const_1781, $strcpy.arg.1$108$);
    goto label_224;

  label_224:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1988} true;
    $strcpy.arg.1$110$ := PLUS(ErrorMessages, 101, 54);
    assume value_is(__ctobpl_const_1782, $strcpy.arg.1$110$);
    goto label_225;

  label_225:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1988} true;
    call result.strcpy$109 := strcpy($strcpy.arg.1$110$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1783, $strcpy.arg.1$110$);
    assume value_is(__ctobpl_const_1784, $strcpy.arg.1$110$);
    goto label_228;

  label_228:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1989} true;
    $strcpy.arg.1$112$ := PLUS(ErrorMessages, 101, 55);
    assume value_is(__ctobpl_const_1785, $strcpy.arg.1$112$);
    goto label_229;

  label_229:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1989} true;
    call result.strcpy$111 := strcpy($strcpy.arg.1$112$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1786, $strcpy.arg.1$112$);
    assume value_is(__ctobpl_const_1787, $strcpy.arg.1$112$);
    goto label_232;

  label_232:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1990} true;
    $strcpy.arg.1$114$ := PLUS(ErrorMessages, 101, 56);
    assume value_is(__ctobpl_const_1788, $strcpy.arg.1$114$);
    goto label_233;

  label_233:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1990} true;
    call result.strcpy$113 := strcpy($strcpy.arg.1$114$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1789, $strcpy.arg.1$114$);
    assume value_is(__ctobpl_const_1790, $strcpy.arg.1$114$);
    goto label_236;

  label_236:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1991} true;
    $strcpy.arg.1$116$ := PLUS(ErrorMessages, 101, 57);
    assume value_is(__ctobpl_const_1791, $strcpy.arg.1$116$);
    goto label_237;

  label_237:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1991} true;
    call result.strcpy$115 := strcpy($strcpy.arg.1$116$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1792, $strcpy.arg.1$116$);
    assume value_is(__ctobpl_const_1793, $strcpy.arg.1$116$);
    goto label_240;

  label_240:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1992} true;
    $strcpy.arg.1$118$ := PLUS(ErrorMessages, 101, 58);
    assume value_is(__ctobpl_const_1794, $strcpy.arg.1$118$);
    goto label_241;

  label_241:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1992} true;
    call result.strcpy$117 := strcpy($strcpy.arg.1$118$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1795, $strcpy.arg.1$118$);
    assume value_is(__ctobpl_const_1796, $strcpy.arg.1$118$);
    goto label_244;

  label_244:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1993} true;
    $strcpy.arg.1$120$ := PLUS(ErrorMessages, 101, 59);
    assume value_is(__ctobpl_const_1797, $strcpy.arg.1$120$);
    goto label_245;

  label_245:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1993} true;
    call result.strcpy$119 := strcpy($strcpy.arg.1$120$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1798, $strcpy.arg.1$120$);
    assume value_is(__ctobpl_const_1799, $strcpy.arg.1$120$);
    goto label_248;

  label_248:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1994} true;
    $strcpy.arg.1$122$ := PLUS(ErrorMessages, 101, 60);
    assume value_is(__ctobpl_const_1800, $strcpy.arg.1$122$);
    goto label_249;

  label_249:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1994} true;
    call result.strcpy$121 := strcpy($strcpy.arg.1$122$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1801, $strcpy.arg.1$122$);
    assume value_is(__ctobpl_const_1802, $strcpy.arg.1$122$);
    goto label_252;

  label_252:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1995} true;
    $strcpy.arg.1$124$ := PLUS(ErrorMessages, 101, 61);
    assume value_is(__ctobpl_const_1803, $strcpy.arg.1$124$);
    goto label_253;

  label_253:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1995} true;
    call result.strcpy$123 := strcpy($strcpy.arg.1$124$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1804, $strcpy.arg.1$124$);
    assume value_is(__ctobpl_const_1805, $strcpy.arg.1$124$);
    goto label_256;

  label_256:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1996} true;
    $strcpy.arg.1$126$ := PLUS(ErrorMessages, 101, 62);
    assume value_is(__ctobpl_const_1806, $strcpy.arg.1$126$);
    goto label_257;

  label_257:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1996} true;
    call result.strcpy$125 := strcpy($strcpy.arg.1$126$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1807, $strcpy.arg.1$126$);
    assume value_is(__ctobpl_const_1808, $strcpy.arg.1$126$);
    goto label_260;

  label_260:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1997} true;
    $strcpy.arg.1$128$ := PLUS(ErrorMessages, 101, 63);
    assume value_is(__ctobpl_const_1809, $strcpy.arg.1$128$);
    goto label_261;

  label_261:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1997} true;
    call result.strcpy$127 := strcpy($strcpy.arg.1$128$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1810, $strcpy.arg.1$128$);
    assume value_is(__ctobpl_const_1811, $strcpy.arg.1$128$);
    goto label_264;

  label_264:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1998} true;
    $strcpy.arg.1$130$ := PLUS(ErrorMessages, 101, 64);
    assume value_is(__ctobpl_const_1812, $strcpy.arg.1$130$);
    goto label_265;

  label_265:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1998} true;
    call result.strcpy$129 := strcpy($strcpy.arg.1$130$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1813, $strcpy.arg.1$130$);
    assume value_is(__ctobpl_const_1814, $strcpy.arg.1$130$);
    goto label_268;

  label_268:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1999} true;
    $strcpy.arg.1$132$ := PLUS(ErrorMessages, 101, 65);
    assume value_is(__ctobpl_const_1815, $strcpy.arg.1$132$);
    goto label_269;

  label_269:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1999} true;
    call result.strcpy$131 := strcpy($strcpy.arg.1$132$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1816, $strcpy.arg.1$132$);
    assume value_is(__ctobpl_const_1817, $strcpy.arg.1$132$);
    goto label_272;

  label_272:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2000} true;
    $strcpy.arg.1$134$ := PLUS(ErrorMessages, 101, 66);
    assume value_is(__ctobpl_const_1818, $strcpy.arg.1$134$);
    goto label_273;

  label_273:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2000} true;
    call result.strcpy$133 := strcpy($strcpy.arg.1$134$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1819, $strcpy.arg.1$134$);
    assume value_is(__ctobpl_const_1820, $strcpy.arg.1$134$);
    goto label_276;

  label_276:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2001} true;
    $strcpy.arg.1$136$ := PLUS(ErrorMessages, 101, 67);
    assume value_is(__ctobpl_const_1821, $strcpy.arg.1$136$);
    goto label_277;

  label_277:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2001} true;
    call result.strcpy$135 := strcpy($strcpy.arg.1$136$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1822, $strcpy.arg.1$136$);
    assume value_is(__ctobpl_const_1823, $strcpy.arg.1$136$);
    goto label_280;

  label_280:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2002} true;
    $strcpy.arg.1$138$ := PLUS(ErrorMessages, 101, 68);
    assume value_is(__ctobpl_const_1824, $strcpy.arg.1$138$);
    goto label_281;

  label_281:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2002} true;
    call result.strcpy$137 := strcpy($strcpy.arg.1$138$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1825, $strcpy.arg.1$138$);
    assume value_is(__ctobpl_const_1826, $strcpy.arg.1$138$);
    goto label_284;

  label_284:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2003} true;
    $strcpy.arg.1$140$ := PLUS(ErrorMessages, 101, 69);
    assume value_is(__ctobpl_const_1827, $strcpy.arg.1$140$);
    goto label_285;

  label_285:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2003} true;
    call result.strcpy$139 := strcpy($strcpy.arg.1$140$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1828, $strcpy.arg.1$140$);
    assume value_is(__ctobpl_const_1829, $strcpy.arg.1$140$);
    goto label_288;

  label_288:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2004} true;
    $strcpy.arg.1$142$ := PLUS(ErrorMessages, 101, 70);
    assume value_is(__ctobpl_const_1830, $strcpy.arg.1$142$);
    goto label_289;

  label_289:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2004} true;
    call result.strcpy$141 := strcpy($strcpy.arg.1$142$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1831, $strcpy.arg.1$142$);
    assume value_is(__ctobpl_const_1832, $strcpy.arg.1$142$);
    goto label_292;

  label_292:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2005} true;
    $strcpy.arg.1$144$ := PLUS(ErrorMessages, 101, 71);
    assume value_is(__ctobpl_const_1833, $strcpy.arg.1$144$);
    goto label_293;

  label_293:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2005} true;
    call result.strcpy$143 := strcpy($strcpy.arg.1$144$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1834, $strcpy.arg.1$144$);
    assume value_is(__ctobpl_const_1835, $strcpy.arg.1$144$);
    goto label_296;

  label_296:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2006} true;
    $strcpy.arg.1$146$ := PLUS(ErrorMessages, 101, 72);
    assume value_is(__ctobpl_const_1836, $strcpy.arg.1$146$);
    goto label_297;

  label_297:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2006} true;
    call result.strcpy$145 := strcpy($strcpy.arg.1$146$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1837, $strcpy.arg.1$146$);
    assume value_is(__ctobpl_const_1838, $strcpy.arg.1$146$);
    goto label_300;

  label_300:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2007} true;
    $strcpy.arg.1$148$ := PLUS(ErrorMessages, 101, 73);
    assume value_is(__ctobpl_const_1839, $strcpy.arg.1$148$);
    goto label_301;

  label_301:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2007} true;
    call result.strcpy$147 := strcpy($strcpy.arg.1$148$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1840, $strcpy.arg.1$148$);
    assume value_is(__ctobpl_const_1841, $strcpy.arg.1$148$);
    goto label_304;

  label_304:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2008} true;
    $strcpy.arg.1$150$ := PLUS(ErrorMessages, 101, 74);
    assume value_is(__ctobpl_const_1842, $strcpy.arg.1$150$);
    goto label_305;

  label_305:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2008} true;
    call result.strcpy$149 := strcpy($strcpy.arg.1$150$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1843, $strcpy.arg.1$150$);
    assume value_is(__ctobpl_const_1844, $strcpy.arg.1$150$);
    goto label_308;

  label_308:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2009} true;
    $strcpy.arg.1$152$ := PLUS(ErrorMessages, 101, 75);
    assume value_is(__ctobpl_const_1845, $strcpy.arg.1$152$);
    goto label_309;

  label_309:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2009} true;
    call result.strcpy$151 := strcpy($strcpy.arg.1$152$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1846, $strcpy.arg.1$152$);
    assume value_is(__ctobpl_const_1847, $strcpy.arg.1$152$);
    goto label_312;

  label_312:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2010} true;
    $strcpy.arg.1$154$ := PLUS(ErrorMessages, 101, 76);
    assume value_is(__ctobpl_const_1848, $strcpy.arg.1$154$);
    goto label_313;

  label_313:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2010} true;
    call result.strcpy$153 := strcpy($strcpy.arg.1$154$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1849, $strcpy.arg.1$154$);
    assume value_is(__ctobpl_const_1850, $strcpy.arg.1$154$);
    goto label_316;

  label_316:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2011} true;
    $strcpy.arg.1$156$ := PLUS(ErrorMessages, 101, 77);
    assume value_is(__ctobpl_const_1851, $strcpy.arg.1$156$);
    goto label_317;

  label_317:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2011} true;
    call result.strcpy$155 := strcpy($strcpy.arg.1$156$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1852, $strcpy.arg.1$156$);
    assume value_is(__ctobpl_const_1853, $strcpy.arg.1$156$);
    goto label_320;

  label_320:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2012} true;
    $strcpy.arg.1$158$ := PLUS(ErrorMessages, 101, 78);
    assume value_is(__ctobpl_const_1854, $strcpy.arg.1$158$);
    goto label_321;

  label_321:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2012} true;
    call result.strcpy$157 := strcpy($strcpy.arg.1$158$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1855, $strcpy.arg.1$158$);
    assume value_is(__ctobpl_const_1856, $strcpy.arg.1$158$);
    goto label_324;

  label_324:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2013} true;
    $strcpy.arg.1$160$ := PLUS(ErrorMessages, 101, 79);
    assume value_is(__ctobpl_const_1857, $strcpy.arg.1$160$);
    goto label_325;

  label_325:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2013} true;
    call result.strcpy$159 := strcpy($strcpy.arg.1$160$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1858, $strcpy.arg.1$160$);
    assume value_is(__ctobpl_const_1859, $strcpy.arg.1$160$);
    goto label_328;

  label_328:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2014} true;
    $strcpy.arg.1$162$ := PLUS(ErrorMessages, 101, 80);
    assume value_is(__ctobpl_const_1860, $strcpy.arg.1$162$);
    goto label_329;

  label_329:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2014} true;
    call result.strcpy$161 := strcpy($strcpy.arg.1$162$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1861, $strcpy.arg.1$162$);
    assume value_is(__ctobpl_const_1862, $strcpy.arg.1$162$);
    goto label_332;

  label_332:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2015} true;
    $strcpy.arg.1$164$ := PLUS(ErrorMessages, 101, 81);
    assume value_is(__ctobpl_const_1863, $strcpy.arg.1$164$);
    goto label_333;

  label_333:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2015} true;
    call result.strcpy$163 := strcpy($strcpy.arg.1$164$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1864, $strcpy.arg.1$164$);
    assume value_is(__ctobpl_const_1865, $strcpy.arg.1$164$);
    goto label_336;

  label_336:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2016} true;
    $strcpy.arg.1$166$ := PLUS(ErrorMessages, 101, 82);
    assume value_is(__ctobpl_const_1866, $strcpy.arg.1$166$);
    goto label_337;

  label_337:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2016} true;
    call result.strcpy$165 := strcpy($strcpy.arg.1$166$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1867, $strcpy.arg.1$166$);
    assume value_is(__ctobpl_const_1868, $strcpy.arg.1$166$);
    goto label_340;

  label_340:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2017} true;
    $strcpy.arg.1$168$ := PLUS(ErrorMessages, 101, 83);
    assume value_is(__ctobpl_const_1869, $strcpy.arg.1$168$);
    goto label_341;

  label_341:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2017} true;
    call result.strcpy$167 := strcpy($strcpy.arg.1$168$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1870, $strcpy.arg.1$168$);
    assume value_is(__ctobpl_const_1871, $strcpy.arg.1$168$);
    goto label_344;

  label_344:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2018} true;
    $strcpy.arg.1$170$ := PLUS(ErrorMessages, 101, 84);
    assume value_is(__ctobpl_const_1872, $strcpy.arg.1$170$);
    goto label_345;

  label_345:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2018} true;
    call result.strcpy$169 := strcpy($strcpy.arg.1$170$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1873, $strcpy.arg.1$170$);
    assume value_is(__ctobpl_const_1874, $strcpy.arg.1$170$);
    goto label_348;

  label_348:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2019} true;
    $strcpy.arg.1$172$ := PLUS(ErrorMessages, 101, 85);
    assume value_is(__ctobpl_const_1875, $strcpy.arg.1$172$);
    goto label_349;

  label_349:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2019} true;
    call result.strcpy$171 := strcpy($strcpy.arg.1$172$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1876, $strcpy.arg.1$172$);
    assume value_is(__ctobpl_const_1877, $strcpy.arg.1$172$);
    goto label_352;

  label_352:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2020} true;
    $strcpy.arg.1$174$ := PLUS(ErrorMessages, 101, 86);
    assume value_is(__ctobpl_const_1878, $strcpy.arg.1$174$);
    goto label_353;

  label_353:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2020} true;
    call result.strcpy$173 := strcpy($strcpy.arg.1$174$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1879, $strcpy.arg.1$174$);
    assume value_is(__ctobpl_const_1880, $strcpy.arg.1$174$);
    goto label_356;

  label_356:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2021} true;
    $strcpy.arg.1$176$ := PLUS(ErrorMessages, 101, 87);
    assume value_is(__ctobpl_const_1881, $strcpy.arg.1$176$);
    goto label_357;

  label_357:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2021} true;
    call result.strcpy$175 := strcpy($strcpy.arg.1$176$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1882, $strcpy.arg.1$176$);
    assume value_is(__ctobpl_const_1883, $strcpy.arg.1$176$);
    goto label_360;

  label_360:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2022} true;
    $strcpy.arg.1$178$ := PLUS(ErrorMessages, 101, 88);
    assume value_is(__ctobpl_const_1884, $strcpy.arg.1$178$);
    goto label_361;

  label_361:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2022} true;
    call result.strcpy$177 := strcpy($strcpy.arg.1$178$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1885, $strcpy.arg.1$178$);
    assume value_is(__ctobpl_const_1886, $strcpy.arg.1$178$);
    goto label_364;

  label_364:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2023} true;
    $strcpy.arg.1$180$ := PLUS(ErrorMessages, 101, 89);
    assume value_is(__ctobpl_const_1887, $strcpy.arg.1$180$);
    goto label_365;

  label_365:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2023} true;
    call result.strcpy$179 := strcpy($strcpy.arg.1$180$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1888, $strcpy.arg.1$180$);
    assume value_is(__ctobpl_const_1889, $strcpy.arg.1$180$);
    goto label_368;

  label_368:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2024} true;
    $strcpy.arg.1$182$ := PLUS(ErrorMessages, 101, 90);
    assume value_is(__ctobpl_const_1890, $strcpy.arg.1$182$);
    goto label_369;

  label_369:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2024} true;
    call result.strcpy$181 := strcpy($strcpy.arg.1$182$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1891, $strcpy.arg.1$182$);
    assume value_is(__ctobpl_const_1892, $strcpy.arg.1$182$);
    goto label_372;

  label_372:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2025} true;
    $strcpy.arg.1$184$ := PLUS(ErrorMessages, 101, 91);
    assume value_is(__ctobpl_const_1893, $strcpy.arg.1$184$);
    goto label_373;

  label_373:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2025} true;
    call result.strcpy$183 := strcpy($strcpy.arg.1$184$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1894, $strcpy.arg.1$184$);
    assume value_is(__ctobpl_const_1895, $strcpy.arg.1$184$);
    goto label_376;

  label_376:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2026} true;
    $strcpy.arg.1$186$ := PLUS(ErrorMessages, 101, 92);
    assume value_is(__ctobpl_const_1896, $strcpy.arg.1$186$);
    goto label_377;

  label_377:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2026} true;
    call result.strcpy$185 := strcpy($strcpy.arg.1$186$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1897, $strcpy.arg.1$186$);
    assume value_is(__ctobpl_const_1898, $strcpy.arg.1$186$);
    goto label_380;

  label_380:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2027} true;
    $strcpy.arg.1$188$ := PLUS(ErrorMessages, 101, 93);
    assume value_is(__ctobpl_const_1899, $strcpy.arg.1$188$);
    goto label_381;

  label_381:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2027} true;
    call result.strcpy$187 := strcpy($strcpy.arg.1$188$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1900, $strcpy.arg.1$188$);
    assume value_is(__ctobpl_const_1901, $strcpy.arg.1$188$);
    goto label_384;

  label_384:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2028} true;
    $strcpy.arg.1$190$ := PLUS(ErrorMessages, 101, 94);
    assume value_is(__ctobpl_const_1902, $strcpy.arg.1$190$);
    goto label_385;

  label_385:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2028} true;
    call result.strcpy$189 := strcpy($strcpy.arg.1$190$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1903, $strcpy.arg.1$190$);
    assume value_is(__ctobpl_const_1904, $strcpy.arg.1$190$);
    goto label_388;

  label_388:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2029} true;
    $strcpy.arg.1$192$ := PLUS(ErrorMessages, 101, 95);
    assume value_is(__ctobpl_const_1905, $strcpy.arg.1$192$);
    goto label_389;

  label_389:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2029} true;
    call result.strcpy$191 := strcpy($strcpy.arg.1$192$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1906, $strcpy.arg.1$192$);
    assume value_is(__ctobpl_const_1907, $strcpy.arg.1$192$);
    goto label_392;

  label_392:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2030} true;
    $strcpy.arg.1$194$ := PLUS(ErrorMessages, 101, 96);
    assume value_is(__ctobpl_const_1908, $strcpy.arg.1$194$);
    goto label_393;

  label_393:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2030} true;
    call result.strcpy$193 := strcpy($strcpy.arg.1$194$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1909, $strcpy.arg.1$194$);
    assume value_is(__ctobpl_const_1910, $strcpy.arg.1$194$);
    goto label_396;

  label_396:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2031} true;
    $strcpy.arg.1$196$ := PLUS(ErrorMessages, 101, 97);
    assume value_is(__ctobpl_const_1911, $strcpy.arg.1$196$);
    goto label_397;

  label_397:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2031} true;
    call result.strcpy$195 := strcpy($strcpy.arg.1$196$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1912, $strcpy.arg.1$196$);
    assume value_is(__ctobpl_const_1913, $strcpy.arg.1$196$);
    goto label_400;

  label_400:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2032} true;
    $strcpy.arg.1$198$ := PLUS(ErrorMessages, 101, 98);
    assume value_is(__ctobpl_const_1914, $strcpy.arg.1$198$);
    goto label_401;

  label_401:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2032} true;
    call result.strcpy$197 := strcpy($strcpy.arg.1$198$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1915, $strcpy.arg.1$198$);
    assume value_is(__ctobpl_const_1916, $strcpy.arg.1$198$);
    goto label_404;

  label_404:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2033} true;
    $strcpy.arg.1$200$ := PLUS(ErrorMessages, 101, 99);
    assume value_is(__ctobpl_const_1917, $strcpy.arg.1$200$);
    goto label_405;

  label_405:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2033} true;
    call result.strcpy$199 := strcpy($strcpy.arg.1$200$, havoc_stringTemp);
    assume value_is(__ctobpl_const_1918, $strcpy.arg.1$200$);
    assume value_is(__ctobpl_const_1919, $strcpy.arg.1$200$);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2041} true;
    return;

  label_5_true:
    assume INT_LEQ(i, 100);
    assume value_is(__ctobpl_const_1619, i);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1932} true;
    assert PLUS(ErrorMessages, 101, i) != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(PLUS(ErrorMessages, 101, i), 1, 0) := 0];
    assume value_is(__ctobpl_const_1920, i);
    assume value_is(__ctobpl_const_1921, Mem_T.CHAR[PLUS(PLUS(ErrorMessages, 101, i), 1, 0)]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1931} true;
    assume value_is(__ctobpl_const_1922, i);
    i := PLUS(i, 1, 1);
    goto label_8_dummy;

  label_8_dummy:
    assume false;
    return;

  label_5_head_last:
    goto label_5_true, label_5_false;
}



procedure {:extern} extremes(gnode_ptr.__1: int, pnum_ptr.__1: int, qnum_ptr.__1: int) returns (result.extremes$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} extremes(gnode_ptr.__1: int, pnum_ptr.__1: int, qnum_ptr.__1: int) returns (result.extremes$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} app_ptr: int;
  var {:extern} gnode_ptr: int;
  var {:extern} pmax: int;
  var {:extern} pmin: int;
  var {:extern} pnum_ptr: int;
  var {:extern} qmax: int;
  var {:extern} qmin: int;
  var {:extern} qnum_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(gnode_ptr.__1, alloc);
    assume INT_LT(pnum_ptr.__1, alloc);
    assume INT_LT(qnum_ptr.__1, alloc);
    app_ptr := 0;
    gnode_ptr := 0;
    pmax := 0;
    pmin := 0;
    pnum_ptr := 0;
    qmax := 0;
    qmin := 0;
    qnum_ptr := 0;
    result.extremes$1 := 0;
    gnode_ptr := gnode_ptr.__1;
    pnum_ptr := pnum_ptr.__1;
    qnum_ptr := qnum_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2088} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2089} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2089} true;
    pmin := 2147483647;
    assume value_is(__ctobpl_const_1923, pmin);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2089} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2089} true;
    pmax := BOOGIE_LARGE_INT_NEG_2147483648;
    assume value_is(__ctobpl_const_1924, pmax);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2089} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2089} true;
    qmin := 2147483647;
    assume value_is(__ctobpl_const_1925, qmin);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2089} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2089} true;
    qmax := BOOGIE_LARGE_INT_NEG_2147483648;
    assume value_is(__ctobpl_const_1926, qmax);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2095} true;
    app_ptr := gnode_ptr;
    assume value_is(__ctobpl_const_1927, app_ptr);
    assume value_is(__ctobpl_const_1928, gnode_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2097} true;
    goto label_13_head;

  label_13_head:
    call app_ptr, pmax, pmin, qmax, qmin := extremes_loop_label_13_head(app_ptr, pmax, pmin, qmax, qmin);
    goto label_13_head_last;

  label_13_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_1929, app_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2111} true;
    assert pnum_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pnum_ptr := PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(pmax, pmin, 1), 1, 1)];
    assume value_is(__ctobpl_const_1930, pnum_ptr);
    assume value_is(__ctobpl_const_1931, Mem_T.INT4[pnum_ptr]);
    assume value_is(__ctobpl_const_1932, pmax);
    assume value_is(__ctobpl_const_1933, pmin);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2112} true;
    assert qnum_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[qnum_ptr := PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(qmax, qmin, 1), 1, 1)];
    assume value_is(__ctobpl_const_1934, qnum_ptr);
    assume value_is(__ctobpl_const_1935, Mem_T.INT4[qnum_ptr]);
    assume value_is(__ctobpl_const_1936, qmax);
    assume value_is(__ctobpl_const_1937, qmin);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2113} true;
    result.extremes$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2114} true;
    return;

  label_13_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_1929, app_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2099} true;
    assert app_ptr != 0;
    goto label_15_true, label_15_false;

  label_15_false:
    assume !INT_LT(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)], pmin);
    assume value_is(__ctobpl_const_1938, app_ptr);
    assume value_is(__ctobpl_const_1939, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1940, pmin);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2101} true;
    assert app_ptr != 0;
    goto label_16_true, label_16_false;

  label_16_false:
    assume !INT_LT(pmax, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1944, pmax);
    assume value_is(__ctobpl_const_1945, app_ptr);
    assume value_is(__ctobpl_const_1946, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2103} true;
    assert app_ptr != 0;
    goto label_18_true, label_18_false;

  label_18_false:
    assume !INT_LT(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)], qmin);
    assume value_is(__ctobpl_const_1950, app_ptr);
    assume value_is(__ctobpl_const_1951, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1952, qmin);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2105} true;
    assert app_ptr != 0;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_LT(qmax, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1956, qmax);
    assume value_is(__ctobpl_const_1957, app_ptr);
    assume value_is(__ctobpl_const_1958, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2108} true;
    assert app_ptr != 0;
    app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_1962, app_ptr);
    assume value_is(__ctobpl_const_1963, app_ptr);
    assume value_is(__ctobpl_const_1964, Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr)]);
    goto label_22_dummy;

  label_20_true:
    assume INT_LT(qmax, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1956, qmax);
    assume value_is(__ctobpl_const_1957, app_ptr);
    assume value_is(__ctobpl_const_1958, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2106} true;
    assert app_ptr != 0;
    qmax := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_1959, qmax);
    assume value_is(__ctobpl_const_1960, app_ptr);
    assume value_is(__ctobpl_const_1961, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    goto label_22;

  label_18_true:
    assume INT_LT(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)], qmin);
    assume value_is(__ctobpl_const_1950, app_ptr);
    assume value_is(__ctobpl_const_1951, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1952, qmin);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2104} true;
    assert app_ptr != 0;
    qmin := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_1953, qmin);
    assume value_is(__ctobpl_const_1954, app_ptr);
    assume value_is(__ctobpl_const_1955, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    goto label_20;

  label_16_true:
    assume INT_LT(pmax, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1944, pmax);
    assume value_is(__ctobpl_const_1945, app_ptr);
    assume value_is(__ctobpl_const_1946, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2102} true;
    assert app_ptr != 0;
    pmax := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_1947, pmax);
    assume value_is(__ctobpl_const_1948, app_ptr);
    assume value_is(__ctobpl_const_1949, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    goto label_18;

  label_15_true:
    assume INT_LT(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)], pmin);
    assume value_is(__ctobpl_const_1938, app_ptr);
    assume value_is(__ctobpl_const_1939, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1940, pmin);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2100} true;
    assert app_ptr != 0;
    pmin := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_1941, pmin);
    assume value_is(__ctobpl_const_1942, app_ptr);
    assume value_is(__ctobpl_const_1943, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    goto label_16;

  label_22_dummy:
    assume false;
    return;

  label_13_head_last:
    goto label_13_true, label_13_false;
}



procedure {:extern} extsize(gnode_ptr.__1: int, elem_pdim.__1: int, elem_qdim.__1: int, xsize_ptr.__1: int, ysize_ptr.__1: int) returns (result.extsize$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} extsize(gnode_ptr.__1: int, elem_pdim.__1: int, elem_qdim.__1: int, xsize_ptr.__1: int, ysize_ptr.__1: int) returns (result.extsize$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} app_ptr: int;
  var {:extern} elem_pdim: int;
  var {:extern} elem_qdim: int;
  var {:extern} gnode_ptr: int;
  var {:extern} xmax: int;
  var {:extern} xmin: int;
  var {:extern} xsize_ptr: int;
  var {:extern} ymax: int;
  var {:extern} ymin: int;
  var {:extern} ysize_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(gnode_ptr.__1, alloc);
    assume INT_LT(xsize_ptr.__1, alloc);
    assume INT_LT(ysize_ptr.__1, alloc);
    app_ptr := 0;
    elem_pdim := 0;
    elem_qdim := 0;
    gnode_ptr := 0;
    result.extsize$1 := 0;
    xmax := 0;
    xmin := 0;
    xsize_ptr := 0;
    ymax := 0;
    ymin := 0;
    ysize_ptr := 0;
    gnode_ptr := gnode_ptr.__1;
    elem_pdim := elem_pdim.__1;
    elem_qdim := elem_qdim.__1;
    xsize_ptr := xsize_ptr.__1;
    ysize_ptr := ysize_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2128} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2129} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2129} true;
    xmin := BOOGIE_FLOAT_CONST_1.79769e__308;
    assume value_is(__ctobpl_const_1965, xmin);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2129} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2129} true;
    xmax := BOOGIE_FLOAT_CONST_2.22507e__308;
    assume value_is(__ctobpl_const_1966, xmax);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2129} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2129} true;
    ymin := BOOGIE_FLOAT_CONST_1.79769e__308;
    assume value_is(__ctobpl_const_1967, ymin);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2129} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2129} true;
    ymax := BOOGIE_FLOAT_CONST_2.22507e__308;
    assume value_is(__ctobpl_const_1968, ymax);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2135} true;
    app_ptr := gnode_ptr;
    assume value_is(__ctobpl_const_1969, app_ptr);
    assume value_is(__ctobpl_const_1970, gnode_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2137} true;
    goto label_13_head;

  label_13_head:
    call app_ptr, xmax, xmin, ymax, ymin := extsize_loop_label_13_head(app_ptr, xmax, xmin, ymax, ymin);
    goto label_13_head_last;

  label_13_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_1971, app_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2153} true;
    assert xsize_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[xsize_ptr := PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(xmax, xmin, 1), 1, MULT(2, BINARY_BOTH_INT(elem_pdim, 2)))];
    assume value_is(__ctobpl_const_1972, xsize_ptr);
    assume value_is(__ctobpl_const_1973, Mem_T.FLOAT[xsize_ptr]);
    assume value_is(__ctobpl_const_1974, xmax);
    assume value_is(__ctobpl_const_1975, xmin);
    assume value_is(__ctobpl_const_1976, elem_pdim);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2154} true;
    assert ysize_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[ysize_ptr := PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(ymax, ymin, 1), 1, MULT(2, BINARY_BOTH_INT(elem_qdim, 2)))];
    assume value_is(__ctobpl_const_1977, ysize_ptr);
    assume value_is(__ctobpl_const_1978, Mem_T.FLOAT[ysize_ptr]);
    assume value_is(__ctobpl_const_1979, ymax);
    assume value_is(__ctobpl_const_1980, ymin);
    assume value_is(__ctobpl_const_1981, elem_qdim);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2155} true;
    result.extsize$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2156} true;
    return;

  label_13_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_1971, app_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2139} true;
    assert app_ptr != 0;
    goto label_15_true, label_15_false;

  label_15_false:
    assume !INT_LT(Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)], xmin);
    assume value_is(__ctobpl_const_1982, app_ptr);
    assume value_is(__ctobpl_const_1983, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1984, xmin);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2141} true;
    assert app_ptr != 0;
    goto label_16_true, label_16_false;

  label_16_false:
    assume !INT_LT(xmax, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1988, xmax);
    assume value_is(__ctobpl_const_1989, app_ptr);
    assume value_is(__ctobpl_const_1990, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2143} true;
    assert app_ptr != 0;
    goto label_18_true, label_18_false;

  label_18_false:
    assume !INT_LT(Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)], ymin);
    assume value_is(__ctobpl_const_1994, app_ptr);
    assume value_is(__ctobpl_const_1995, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1996, ymin);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2145} true;
    assert app_ptr != 0;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_LT(ymax, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_2000, ymax);
    assume value_is(__ctobpl_const_2001, app_ptr);
    assume value_is(__ctobpl_const_2002, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2148} true;
    assert app_ptr != 0;
    app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_2006, app_ptr);
    assume value_is(__ctobpl_const_2007, app_ptr);
    assume value_is(__ctobpl_const_2008, Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr)]);
    goto label_22_dummy;

  label_20_true:
    assume INT_LT(ymax, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_2000, ymax);
    assume value_is(__ctobpl_const_2001, app_ptr);
    assume value_is(__ctobpl_const_2002, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2146} true;
    assert app_ptr != 0;
    ymax := Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_2003, ymax);
    assume value_is(__ctobpl_const_2004, app_ptr);
    assume value_is(__ctobpl_const_2005, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    goto label_22;

  label_18_true:
    assume INT_LT(Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)], ymin);
    assume value_is(__ctobpl_const_1994, app_ptr);
    assume value_is(__ctobpl_const_1995, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1996, ymin);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2144} true;
    assert app_ptr != 0;
    ymin := Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_1997, ymin);
    assume value_is(__ctobpl_const_1998, app_ptr);
    assume value_is(__ctobpl_const_1999, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    goto label_20;

  label_16_true:
    assume INT_LT(xmax, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1988, xmax);
    assume value_is(__ctobpl_const_1989, app_ptr);
    assume value_is(__ctobpl_const_1990, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2142} true;
    assert app_ptr != 0;
    xmax := Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_1991, xmax);
    assume value_is(__ctobpl_const_1992, app_ptr);
    assume value_is(__ctobpl_const_1993, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    goto label_18;

  label_15_true:
    assume INT_LT(Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)], xmin);
    assume value_is(__ctobpl_const_1982, app_ptr);
    assume value_is(__ctobpl_const_1983, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_1984, xmin);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2140} true;
    assert app_ptr != 0;
    xmin := Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_1985, xmin);
    assume value_is(__ctobpl_const_1986, app_ptr);
    assume value_is(__ctobpl_const_1987, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    goto label_16;

  label_22_dummy:
    assume false;
    return;

  label_13_head_last:
    goto label_13_true, label_13_false;
}



procedure {:extern} fixgramp(g.__1: int) returns (result.fixgramp$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} fixgramp(g.__1: int) returns (result.fixgramp$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} amp_unit: int;
  var {:extern} centre: int;
  var {:extern} centre_ptr: int;
  var {:extern} g: int;
  var {:extern} p1_et: int;
  var {:extern} p1_et_ptr: int;
  var {:extern} p2_et: int;
  var {:extern} p2_et_ptr: int;
  var {:extern} q1_et: int;
  var {:extern} q1_et_ptr: int;
  var {:extern} q2_et: int;
  var {:extern} q2_et_ptr: int;
  var {:extern} result.linconv$2: int;
  var {:extern} result.linconv$3: int;
  var {:extern} result.linconv$4: int;
  var {:extern} result.linconv$5: int;
  var {:extern} result.linconv$6: int;
  var {:extern} result.linconv$7: int;
  var {:extern} result.printf$8: int;
  var {:extern} unif_val: int;
  var {:extern} unif_val_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(g.__1, alloc);
    amp_unit := 0;
    call centre := __HAVOC_det_malloc(8);
    centre_ptr := 0;
    g := 0;
    call p1_et := __HAVOC_det_malloc(8);
    p1_et_ptr := 0;
    call p2_et := __HAVOC_det_malloc(8);
    p2_et_ptr := 0;
    call q1_et := __HAVOC_det_malloc(8);
    q1_et_ptr := 0;
    call q2_et := __HAVOC_det_malloc(8);
    q2_et_ptr := 0;
    result.fixgramp$1 := 0;
    result.linconv$2 := 0;
    result.linconv$3 := 0;
    result.linconv$4 := 0;
    result.linconv$5 := 0;
    result.linconv$6 := 0;
    result.linconv$7 := 0;
    result.printf$8 := 0;
    call unif_val := __HAVOC_det_malloc(8);
    unif_val_ptr := 0;
    g := g.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2165} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2165} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2165} true;
    unif_val_ptr := unif_val;
    assume value_is(__ctobpl_const_2009, unif_val_ptr);
    assume value_is(__ctobpl_const_2010, Mem_T.FLOAT[unif_val]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2166} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2166} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2166} true;
    centre_ptr := centre;
    assume value_is(__ctobpl_const_2011, centre_ptr);
    assume value_is(__ctobpl_const_2012, Mem_T.FLOAT[centre]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2167} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2167} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2167} true;
    p1_et_ptr := p1_et;
    assume value_is(__ctobpl_const_2013, p1_et_ptr);
    assume value_is(__ctobpl_const_2014, Mem_T.FLOAT[p1_et]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2168} true;
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2168} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2168} true;
    p2_et_ptr := p2_et;
    assume value_is(__ctobpl_const_2015, p2_et_ptr);
    assume value_is(__ctobpl_const_2016, Mem_T.FLOAT[p2_et]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2169} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2169} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2169} true;
    q1_et_ptr := q1_et;
    assume value_is(__ctobpl_const_2017, q1_et_ptr);
    assume value_is(__ctobpl_const_2018, Mem_T.FLOAT[q1_et]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2170} true;
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2170} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2170} true;
    q2_et_ptr := q2_et;
    assume value_is(__ctobpl_const_2019, q2_et_ptr);
    assume value_is(__ctobpl_const_2020, Mem_T.FLOAT[q2_et]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2171} true;
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2174} true;
    assert g != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[unif_val := Mem_T.UNIF_VAL_GrAmpExc[UNIF_VAL_GrAmpExc(g)]];
    assume value_is(__ctobpl_const_2021, Mem_T.FLOAT[unif_val]);
    assume value_is(__ctobpl_const_2022, g);
    assume value_is(__ctobpl_const_2023, Mem_T.UNIF_VAL_GrAmpExc[UNIF_VAL_GrAmpExc(g)]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2175} true;
    assert g != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[centre := Mem_T.CENTRE_GrAmpExc[CENTRE_GrAmpExc(g)]];
    assume value_is(__ctobpl_const_2024, Mem_T.FLOAT[centre]);
    assume value_is(__ctobpl_const_2025, g);
    assume value_is(__ctobpl_const_2026, Mem_T.CENTRE_GrAmpExc[CENTRE_GrAmpExc(g)]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2176} true;
    assert g != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[p1_et := Mem_T.P1_ET_GrAmpExc[P1_ET_GrAmpExc(g)]];
    assume value_is(__ctobpl_const_2027, Mem_T.FLOAT[p1_et]);
    assume value_is(__ctobpl_const_2028, g);
    assume value_is(__ctobpl_const_2029, Mem_T.P1_ET_GrAmpExc[P1_ET_GrAmpExc(g)]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2177} true;
    assert g != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[p2_et := Mem_T.P2_ET_GrAmpExc[P2_ET_GrAmpExc(g)]];
    assume value_is(__ctobpl_const_2030, Mem_T.FLOAT[p2_et]);
    assume value_is(__ctobpl_const_2031, g);
    assume value_is(__ctobpl_const_2032, Mem_T.P2_ET_GrAmpExc[P2_ET_GrAmpExc(g)]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2178} true;
    assert g != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[q1_et := Mem_T.Q1_ET_GrAmpExc[Q1_ET_GrAmpExc(g)]];
    assume value_is(__ctobpl_const_2033, Mem_T.FLOAT[q1_et]);
    assume value_is(__ctobpl_const_2034, g);
    assume value_is(__ctobpl_const_2035, Mem_T.Q1_ET_GrAmpExc[Q1_ET_GrAmpExc(g)]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2179} true;
    assert g != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[q2_et := Mem_T.Q2_ET_GrAmpExc[Q2_ET_GrAmpExc(g)]];
    assume value_is(__ctobpl_const_2036, Mem_T.FLOAT[q2_et]);
    assume value_is(__ctobpl_const_2037, g);
    assume value_is(__ctobpl_const_2038, Mem_T.Q2_ET_GrAmpExc[Q2_ET_GrAmpExc(g)]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2180} true;
    assert g != 0;
    amp_unit := Mem_T.AMP_UNIT_GrAmpExc[AMP_UNIT_GrAmpExc(g)];
    assume value_is(__ctobpl_const_2039, amp_unit);
    assume value_is(__ctobpl_const_2040, g);
    assume value_is(__ctobpl_const_2041, Mem_T.AMP_UNIT_GrAmpExc[AMP_UNIT_GrAmpExc(g)]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2183} true;
    assert g != 0;
    goto label_29_case_0, label_29_case_1, label_29_case_2, label_29_case_3;

  label_29_case_3:
    assume INT_EQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)], 2);
    assume value_is(__ctobpl_const_2042, g);
    assume value_is(__ctobpl_const_2043, Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2203} true;
    call result.printf$8 := det_choice();
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2204} true;
    return;

  label_29_case_2:
    assume INT_EQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)], 1);
    assume value_is(__ctobpl_const_2042, g);
    assume value_is(__ctobpl_const_2043, Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2195} true;
    call result.linconv$3 := linconv(centre_ptr, amp_unit);
    assume value_is(__ctobpl_const_2050, centre_ptr);
    assume value_is(__ctobpl_const_2051, amp_unit);
    assume value_is(__ctobpl_const_2052, centre_ptr);
    assume value_is(__ctobpl_const_2053, amp_unit);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2196} true;
    call result.linconv$4 := linconv(p1_et_ptr, amp_unit);
    assume value_is(__ctobpl_const_2054, p1_et_ptr);
    assume value_is(__ctobpl_const_2055, amp_unit);
    assume value_is(__ctobpl_const_2056, p1_et_ptr);
    assume value_is(__ctobpl_const_2057, amp_unit);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2197} true;
    call result.linconv$5 := linconv(p2_et_ptr, amp_unit);
    assume value_is(__ctobpl_const_2058, p2_et_ptr);
    assume value_is(__ctobpl_const_2059, amp_unit);
    assume value_is(__ctobpl_const_2060, p2_et_ptr);
    assume value_is(__ctobpl_const_2061, amp_unit);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2198} true;
    call result.linconv$6 := linconv(q1_et_ptr, amp_unit);
    assume value_is(__ctobpl_const_2062, q1_et_ptr);
    assume value_is(__ctobpl_const_2063, amp_unit);
    assume value_is(__ctobpl_const_2064, q1_et_ptr);
    assume value_is(__ctobpl_const_2065, amp_unit);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2199} true;
    call result.linconv$7 := linconv(q2_et_ptr, amp_unit);
    assume value_is(__ctobpl_const_2066, q2_et_ptr);
    assume value_is(__ctobpl_const_2067, amp_unit);
    assume value_is(__ctobpl_const_2068, q2_et_ptr);
    assume value_is(__ctobpl_const_2069, amp_unit);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2200} true;
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2215} true;
    assert g != 0;
    Mem_T.UNIF_VAL_GrAmpExc := Mem_T.UNIF_VAL_GrAmpExc[UNIF_VAL_GrAmpExc(g) := Mem_T.FLOAT[unif_val]];
    assume value_is(__ctobpl_const_2070, g);
    assume value_is(__ctobpl_const_2071, Mem_T.UNIF_VAL_GrAmpExc[UNIF_VAL_GrAmpExc(g)]);
    assume value_is(__ctobpl_const_2072, Mem_T.FLOAT[unif_val]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2216} true;
    assert g != 0;
    Mem_T.CENTRE_GrAmpExc := Mem_T.CENTRE_GrAmpExc[CENTRE_GrAmpExc(g) := Mem_T.FLOAT[centre]];
    assume value_is(__ctobpl_const_2073, g);
    assume value_is(__ctobpl_const_2074, Mem_T.CENTRE_GrAmpExc[CENTRE_GrAmpExc(g)]);
    assume value_is(__ctobpl_const_2075, Mem_T.FLOAT[centre]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2217} true;
    assert g != 0;
    Mem_T.P1_ET_GrAmpExc := Mem_T.P1_ET_GrAmpExc[P1_ET_GrAmpExc(g) := Mem_T.FLOAT[p1_et]];
    assume value_is(__ctobpl_const_2076, g);
    assume value_is(__ctobpl_const_2077, Mem_T.P1_ET_GrAmpExc[P1_ET_GrAmpExc(g)]);
    assume value_is(__ctobpl_const_2078, Mem_T.FLOAT[p1_et]);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2218} true;
    assert g != 0;
    Mem_T.P2_ET_GrAmpExc := Mem_T.P2_ET_GrAmpExc[P2_ET_GrAmpExc(g) := Mem_T.FLOAT[p2_et]];
    assume value_is(__ctobpl_const_2079, g);
    assume value_is(__ctobpl_const_2080, Mem_T.P2_ET_GrAmpExc[P2_ET_GrAmpExc(g)]);
    assume value_is(__ctobpl_const_2081, Mem_T.FLOAT[p2_et]);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2219} true;
    assert g != 0;
    Mem_T.Q1_ET_GrAmpExc := Mem_T.Q1_ET_GrAmpExc[Q1_ET_GrAmpExc(g) := Mem_T.FLOAT[q1_et]];
    assume value_is(__ctobpl_const_2082, g);
    assume value_is(__ctobpl_const_2083, Mem_T.Q1_ET_GrAmpExc[Q1_ET_GrAmpExc(g)]);
    assume value_is(__ctobpl_const_2084, Mem_T.FLOAT[q1_et]);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2220} true;
    assert g != 0;
    Mem_T.Q2_ET_GrAmpExc := Mem_T.Q2_ET_GrAmpExc[Q2_ET_GrAmpExc(g) := Mem_T.FLOAT[q2_et]];
    assume value_is(__ctobpl_const_2085, g);
    assume value_is(__ctobpl_const_2086, Mem_T.Q2_ET_GrAmpExc[Q2_ET_GrAmpExc(g)]);
    assume value_is(__ctobpl_const_2087, Mem_T.FLOAT[q2_et]);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2221} true;
    assert g != 0;
    Mem_T.AMP_UNIT_GrAmpExc := Mem_T.AMP_UNIT_GrAmpExc[AMP_UNIT_GrAmpExc(g) := 0];
    assume value_is(__ctobpl_const_2088, g);
    assume value_is(__ctobpl_const_2089, Mem_T.AMP_UNIT_GrAmpExc[AMP_UNIT_GrAmpExc(g)]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2222} true;
    result.fixgramp$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2223} true;
    call __HAVOC_free(centre);
    call __HAVOC_free(p1_et);
    call __HAVOC_free(p2_et);
    call __HAVOC_free(q1_et);
    call __HAVOC_free(q2_et);
    call __HAVOC_free(unif_val);
    return;

  label_29_case_1:
    assume INT_EQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)], 0);
    assume value_is(__ctobpl_const_2042, g);
    assume value_is(__ctobpl_const_2043, Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2187} true;
    goto label_33_true, label_33_false;

  label_33_false:
    assume !INT_EQ(Mem_T.FLOAT[unif_val], 0);
    assume value_is(__ctobpl_const_2044, Mem_T.FLOAT[unif_val]);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2191} true;
    call result.linconv$2 := linconv(unif_val_ptr, amp_unit);
    assume value_is(__ctobpl_const_2046, unif_val_ptr);
    assume value_is(__ctobpl_const_2047, amp_unit);
    assume value_is(__ctobpl_const_2048, unif_val_ptr);
    assume value_is(__ctobpl_const_2049, amp_unit);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2192} true;
    goto label_56;

  label_33_true:
    assume INT_EQ(Mem_T.FLOAT[unif_val], 0);
    assume value_is(__ctobpl_const_2044, Mem_T.FLOAT[unif_val]);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2188} true;
    Mem_T.FLOAT := Mem_T.FLOAT[unif_val := 1];
    assume value_is(__ctobpl_const_2045, Mem_T.FLOAT[unif_val]);
    goto label_64;

  label_29_case_0:
    assume INT_NEQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)], 0);
    assume INT_NEQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)], 1);
    assume INT_NEQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)], 2);
    assume value_is(__ctobpl_const_2042, g);
    assume value_is(__ctobpl_const_2043, Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(g)]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2210} true;
    call interror(havoc_stringTemp);
    goto label_56;
}



procedure {:extern} fixgrpha(g.__1: int) returns (result.fixgrpha$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} fixgrpha(g.__1: int) returns (result.fixgrpha$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} g: int;
  var {:extern} result.degconv$2: int;
  var {:extern} result.degconv$3: int;
  var {:extern} result.degconv$4: int;
  var {:extern} result.degconv$5: int;
  var {:extern} result.degconv$6: int;
  var {:extern} result.degconv$7: int;
  var {:extern} result.degconv$9: int;
  var {:extern} result.degconv$10: int;
  var {:extern} result.degconv$11: int;
  var {:extern} result.degconv$12: int;
  var {:extern} result.degconv$13: int;
  var {:extern} result.degconv$14: int;
  var {:extern} result.printf$8: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(g.__1, alloc);
    g := 0;
    result.degconv$2 := 0;
    result.degconv$3 := 0;
    result.degconv$4 := 0;
    result.degconv$5 := 0;
    result.degconv$6 := 0;
    result.degconv$7 := 0;
    result.degconv$9 := 0;
    result.degconv$10 := 0;
    result.degconv$11 := 0;
    result.degconv$12 := 0;
    result.degconv$13 := 0;
    result.degconv$14 := 0;
    result.fixgrpha$1 := 0;
    result.printf$8 := 0;
    g := g.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2237} true;
    assert g != 0;
    goto label_3_case_0, label_3_case_1, label_3_case_2, label_3_case_3, label_3_case_4, label_3_case_5;

  label_3_case_5:
    assume INT_EQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 4);
    assume value_is(__ctobpl_const_2090, g);
    assume value_is(__ctobpl_const_2091, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2280} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.THETA_GrPhaExc[THETA_GrPhaExc(g)] == Mem_T.FLOAT[THETA_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$13 := degconv(THETA_GrPhaExc(g), Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    Mem_T.THETA_GrPhaExc := Mem_T.THETA_GrPhaExc[THETA_GrPhaExc(g) := Mem_T.FLOAT[THETA_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2180, g);
    assume value_is(__ctobpl_const_2181, Mem_T.THETA_GrPhaExc[THETA_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2182, g);
    assume value_is(__ctobpl_const_2183, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2184, g);
    assume value_is(__ctobpl_const_2185, Mem_T.THETA_GrPhaExc[THETA_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2186, g);
    assume value_is(__ctobpl_const_2187, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2281} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.PHI_GrPhaExc[PHI_GrPhaExc(g)] == Mem_T.FLOAT[PHI_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$14 := degconv(PHI_GrPhaExc(g), Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    Mem_T.PHI_GrPhaExc := Mem_T.PHI_GrPhaExc[PHI_GrPhaExc(g) := Mem_T.FLOAT[PHI_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2188, g);
    assume value_is(__ctobpl_const_2189, Mem_T.PHI_GrPhaExc[PHI_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2190, g);
    assume value_is(__ctobpl_const_2191, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2192, g);
    assume value_is(__ctobpl_const_2193, Mem_T.PHI_GrPhaExc[PHI_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2194, g);
    assume value_is(__ctobpl_const_2195, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2282} true;
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2291} true;
    assert g != 0;
    Mem_T.PHASE_UNIT_GrPhaExc := Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g) := 0];
    assume value_is(__ctobpl_const_2196, g);
    assume value_is(__ctobpl_const_2197, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2293} true;
    result.fixgrpha$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2294} true;
    return;

  label_3_case_4:
    assume INT_EQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 3);
    assume value_is(__ctobpl_const_2090, g);
    assume value_is(__ctobpl_const_2091, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)]);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2269} true;
    assert g != 0;
    goto label_14_true, label_14_false;

  label_14_false:
    assume Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(g)] == 0;
    assume value_is(__ctobpl_const_2144, g);
    assume value_is(__ctobpl_const_2145, Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(g)]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2270} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(g)] == Mem_T.FLOAT[ANGLE_START_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$9 := degconv(ANGLE_START_GrPhaExc(g), Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    Mem_T.ANGLE_START_GrPhaExc := Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(g) := Mem_T.FLOAT[ANGLE_START_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2146, g);
    assume value_is(__ctobpl_const_2147, Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2148, g);
    assume value_is(__ctobpl_const_2149, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2150, g);
    assume value_is(__ctobpl_const_2151, Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2152, g);
    assume value_is(__ctobpl_const_2153, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2271} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(g)] == Mem_T.FLOAT[ANGLE_STEP_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$10 := degconv(ANGLE_STEP_GrPhaExc(g), Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    Mem_T.ANGLE_STEP_GrPhaExc := Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(g) := Mem_T.FLOAT[ANGLE_STEP_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2154, g);
    assume value_is(__ctobpl_const_2155, Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2156, g);
    assume value_is(__ctobpl_const_2157, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2158, g);
    assume value_is(__ctobpl_const_2159, Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2160, g);
    assume value_is(__ctobpl_const_2161, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(g)]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2273} true;
    assert g != 0;
    goto label_27_true, label_27_false;

  label_27_false:
    assume Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(g)] == 0;
    assume value_is(__ctobpl_const_2162, g);
    assume value_is(__ctobpl_const_2163, Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(g)]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2274} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.PHASE_START_GrPhaExc[PHASE_START_GrPhaExc(g)] == Mem_T.FLOAT[PHASE_START_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$11 := degconv(PHASE_START_GrPhaExc(g), Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    Mem_T.PHASE_START_GrPhaExc := Mem_T.PHASE_START_GrPhaExc[PHASE_START_GrPhaExc(g) := Mem_T.FLOAT[PHASE_START_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2164, g);
    assume value_is(__ctobpl_const_2165, Mem_T.PHASE_START_GrPhaExc[PHASE_START_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2166, g);
    assume value_is(__ctobpl_const_2167, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2168, g);
    assume value_is(__ctobpl_const_2169, Mem_T.PHASE_START_GrPhaExc[PHASE_START_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2170, g);
    assume value_is(__ctobpl_const_2171, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2275} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.PHASE_STEP_GrPhaExc[PHASE_STEP_GrPhaExc(g)] == Mem_T.FLOAT[PHASE_STEP_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$12 := degconv(PHASE_STEP_GrPhaExc(g), Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    Mem_T.PHASE_STEP_GrPhaExc := Mem_T.PHASE_STEP_GrPhaExc[PHASE_STEP_GrPhaExc(g) := Mem_T.FLOAT[PHASE_STEP_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2172, g);
    assume value_is(__ctobpl_const_2173, Mem_T.PHASE_STEP_GrPhaExc[PHASE_STEP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2174, g);
    assume value_is(__ctobpl_const_2175, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2176, g);
    assume value_is(__ctobpl_const_2177, Mem_T.PHASE_STEP_GrPhaExc[PHASE_STEP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2178, g);
    assume value_is(__ctobpl_const_2179, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2277} true;
    goto label_22;

  label_27_true:
    assume Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(g)] != 0;
    assume value_is(__ctobpl_const_2162, g);
    assume value_is(__ctobpl_const_2163, Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(g)]);
    goto label_31;

  label_14_true:
    assume Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(g)] != 0;
    assume value_is(__ctobpl_const_2144, g);
    assume value_is(__ctobpl_const_2145, Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(g)]);
    goto label_27;

  label_3_case_3:
    assume INT_EQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 2);
    assume value_is(__ctobpl_const_2090, g);
    assume value_is(__ctobpl_const_2091, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2262} true;
    call result.printf$8 := det_choice();
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2263} true;
    return;

  label_3_case_2:
    assume INT_EQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 1);
    assume value_is(__ctobpl_const_2090, g);
    assume value_is(__ctobpl_const_2091, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2254} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.CENTRE_GrPhaExc[CENTRE_GrPhaExc(g)] == Mem_T.FLOAT[CENTRE_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$3 := degconv(CENTRE_GrPhaExc(g), Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    Mem_T.CENTRE_GrPhaExc := Mem_T.CENTRE_GrPhaExc[CENTRE_GrPhaExc(g) := Mem_T.FLOAT[CENTRE_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2104, g);
    assume value_is(__ctobpl_const_2105, Mem_T.CENTRE_GrPhaExc[CENTRE_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2106, g);
    assume value_is(__ctobpl_const_2107, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2108, g);
    assume value_is(__ctobpl_const_2109, Mem_T.CENTRE_GrPhaExc[CENTRE_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2110, g);
    assume value_is(__ctobpl_const_2111, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2255} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.P1_EP_GrPhaExc[P1_EP_GrPhaExc(g)] == Mem_T.FLOAT[P1_EP_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$4 := degconv(P1_EP_GrPhaExc(g), Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    Mem_T.P1_EP_GrPhaExc := Mem_T.P1_EP_GrPhaExc[P1_EP_GrPhaExc(g) := Mem_T.FLOAT[P1_EP_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2112, g);
    assume value_is(__ctobpl_const_2113, Mem_T.P1_EP_GrPhaExc[P1_EP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2114, g);
    assume value_is(__ctobpl_const_2115, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2116, g);
    assume value_is(__ctobpl_const_2117, Mem_T.P1_EP_GrPhaExc[P1_EP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2118, g);
    assume value_is(__ctobpl_const_2119, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2256} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.P2_EP_GrPhaExc[P2_EP_GrPhaExc(g)] == Mem_T.FLOAT[P2_EP_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$5 := degconv(P2_EP_GrPhaExc(g), Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    Mem_T.P2_EP_GrPhaExc := Mem_T.P2_EP_GrPhaExc[P2_EP_GrPhaExc(g) := Mem_T.FLOAT[P2_EP_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2120, g);
    assume value_is(__ctobpl_const_2121, Mem_T.P2_EP_GrPhaExc[P2_EP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2122, g);
    assume value_is(__ctobpl_const_2123, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2124, g);
    assume value_is(__ctobpl_const_2125, Mem_T.P2_EP_GrPhaExc[P2_EP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2126, g);
    assume value_is(__ctobpl_const_2127, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2257} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.Q1_EP_GrPhaExc[Q1_EP_GrPhaExc(g)] == Mem_T.FLOAT[Q1_EP_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$6 := degconv(Q1_EP_GrPhaExc(g), Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    Mem_T.Q1_EP_GrPhaExc := Mem_T.Q1_EP_GrPhaExc[Q1_EP_GrPhaExc(g) := Mem_T.FLOAT[Q1_EP_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2128, g);
    assume value_is(__ctobpl_const_2129, Mem_T.Q1_EP_GrPhaExc[Q1_EP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2130, g);
    assume value_is(__ctobpl_const_2131, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2132, g);
    assume value_is(__ctobpl_const_2133, Mem_T.Q1_EP_GrPhaExc[Q1_EP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2134, g);
    assume value_is(__ctobpl_const_2135, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2258} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.Q2_EP_GrPhaExc[Q2_EP_GrPhaExc(g)] == Mem_T.FLOAT[Q2_EP_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$7 := degconv(Q2_EP_GrPhaExc(g), Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    Mem_T.Q2_EP_GrPhaExc := Mem_T.Q2_EP_GrPhaExc[Q2_EP_GrPhaExc(g) := Mem_T.FLOAT[Q2_EP_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2136, g);
    assume value_is(__ctobpl_const_2137, Mem_T.Q2_EP_GrPhaExc[Q2_EP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2138, g);
    assume value_is(__ctobpl_const_2139, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2140, g);
    assume value_is(__ctobpl_const_2141, Mem_T.Q2_EP_GrPhaExc[Q2_EP_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2142, g);
    assume value_is(__ctobpl_const_2143, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2259} true;
    goto label_22;

  label_3_case_1:
    assume INT_EQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 0);
    assume value_is(__ctobpl_const_2090, g);
    assume value_is(__ctobpl_const_2091, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2241} true;
    assert g != 0;
    goto label_7_true, label_7_false;

  label_7_false:
    assume !INT_EQ(Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g)], 0);
    assume value_is(__ctobpl_const_2092, g);
    assume value_is(__ctobpl_const_2093, Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g)]);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2244} true;
    assert g != 0;
    assert g != 0;
    assert g != 0;
    assume Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g)] == Mem_T.FLOAT[UNIF_VAL_GrPhaExc(g)];
    assert g != 0;
    call result.degconv$2 := degconv(UNIF_VAL_GrPhaExc(g), Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    Mem_T.UNIF_VAL_GrPhaExc := Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g) := Mem_T.FLOAT[UNIF_VAL_GrPhaExc(g)]];
    assume value_is(__ctobpl_const_2096, g);
    assume value_is(__ctobpl_const_2097, Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2098, g);
    assume value_is(__ctobpl_const_2099, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2100, g);
    assume value_is(__ctobpl_const_2101, Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g)]);
    assume value_is(__ctobpl_const_2102, g);
    assume value_is(__ctobpl_const_2103, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(g)]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2251} true;
    goto label_22;

  label_7_true:
    assume INT_EQ(Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g)], 0);
    assume value_is(__ctobpl_const_2092, g);
    assume value_is(__ctobpl_const_2093, Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g)]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2242} true;
    assert g != 0;
    Mem_T.UNIF_VAL_GrPhaExc := Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g) := 0];
    assume value_is(__ctobpl_const_2094, g);
    assume value_is(__ctobpl_const_2095, Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(g)]);
    goto label_54;

  label_3_case_0:
    assume INT_NEQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 0);
    assume INT_NEQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 1);
    assume INT_NEQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 2);
    assume INT_NEQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 3);
    assume INT_NEQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)], 4);
    assume value_is(__ctobpl_const_2090, g);
    assume value_is(__ctobpl_const_2091, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(g)]);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2285} true;
    call interror(havoc_stringTemp);
    goto label_22;
}



procedure {:extern} fixnodor(node_ptr.__1: int) returns (result.fixnodor$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} fixnodor(node_ptr.__1: int) returns (result.fixnodor$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} node_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(node_ptr.__1, alloc);
    node_ptr := 0;
    result.fixnodor$1 := 0;
    node_ptr := node_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2304} true;
    assert node_ptr != 0;
    goto label_3_true, label_3_false;

  label_3_false:
    assume !INT_EQ(Mem_T.OMIT_ORIENT_Node[OMIT_ORIENT_Node(node_ptr)], 1);
    assume value_is(__ctobpl_const_2198, node_ptr);
    assume value_is(__ctobpl_const_2199, Mem_T.OMIT_ORIENT_Node[OMIT_ORIENT_Node(node_ptr)]);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2309} true;
    assert node_ptr != 0;
    goto label_4_true, label_4_false;

  label_4_false:
    assume !INT_EQ(Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(node_ptr)], 1);
    assume value_is(__ctobpl_const_2200, node_ptr);
    assume value_is(__ctobpl_const_2201, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(node_ptr)]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2315} true;
    result.fixnodor$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2316} true;
    return;

  label_4_true:
    assume INT_EQ(Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(node_ptr)], 1);
    assume value_is(__ctobpl_const_2200, node_ptr);
    assume value_is(__ctobpl_const_2201, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(node_ptr)]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2310} true;
    assert node_ptr != 0;
    tempBoogie0 := INT_MULT(Mem_T.THEA_Node[THEA_Node(node_ptr)], BOOGIE_FLOAT_CONST_57.2958);
    Mem_T.THEA_Node := Mem_T.THEA_Node[THEA_Node(node_ptr) := tempBoogie0];
    assume value_is(__ctobpl_const_2202, node_ptr);
    assume value_is(__ctobpl_const_2203, Mem_T.THEA_Node[THEA_Node(node_ptr)]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2311} true;
    assert node_ptr != 0;
    tempBoogie0 := INT_MULT(Mem_T.PHEA_Node[PHEA_Node(node_ptr)], BOOGIE_FLOAT_CONST_57.2958);
    Mem_T.PHEA_Node := Mem_T.PHEA_Node[PHEA_Node(node_ptr) := tempBoogie0];
    assume value_is(__ctobpl_const_2204, node_ptr);
    assume value_is(__ctobpl_const_2205, Mem_T.PHEA_Node[PHEA_Node(node_ptr)]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2312} true;
    assert node_ptr != 0;
    tempBoogie0 := INT_MULT(Mem_T.PSEA_Node[PSEA_Node(node_ptr)], BOOGIE_FLOAT_CONST_57.2958);
    Mem_T.PSEA_Node := Mem_T.PSEA_Node[PSEA_Node(node_ptr) := tempBoogie0];
    assume value_is(__ctobpl_const_2206, node_ptr);
    assume value_is(__ctobpl_const_2207, Mem_T.PSEA_Node[PSEA_Node(node_ptr)]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2313} true;
    assert node_ptr != 0;
    Mem_T.ANGLE_UNIT_Node := Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(node_ptr) := 0];
    assume value_is(__ctobpl_const_2208, node_ptr);
    assume value_is(__ctobpl_const_2209, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(node_ptr)]);
    goto label_9;

  label_3_true:
    assume INT_EQ(Mem_T.OMIT_ORIENT_Node[OMIT_ORIENT_Node(node_ptr)], 1);
    assume value_is(__ctobpl_const_2198, node_ptr);
    assume value_is(__ctobpl_const_2199, Mem_T.OMIT_ORIENT_Node[OMIT_ORIENT_Node(node_ptr)]);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2305} true;
    assert node_ptr != 0;
    Mem_T.THEA_Node := Mem_T.THEA_Node[THEA_Node(node_ptr) := 0];
    assume value_is(__ctobpl_const_2210, node_ptr);
    assume value_is(__ctobpl_const_2211, Mem_T.THEA_Node[THEA_Node(node_ptr)]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2306} true;
    assert node_ptr != 0;
    Mem_T.PHEA_Node := Mem_T.PHEA_Node[PHEA_Node(node_ptr) := 0];
    assume value_is(__ctobpl_const_2212, node_ptr);
    assume value_is(__ctobpl_const_2213, Mem_T.PHEA_Node[PHEA_Node(node_ptr)]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2307} true;
    assert node_ptr != 0;
    Mem_T.PSEA_Node := Mem_T.PSEA_Node[PSEA_Node(node_ptr) := 0];
    assume value_is(__ctobpl_const_2214, node_ptr);
    assume value_is(__ctobpl_const_2215, Mem_T.PSEA_Node[PSEA_Node(node_ptr)]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2308} true;
    assert node_ptr != 0;
    Mem_T.ANGLE_UNIT_Node := Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(node_ptr) := 0];
    assume value_is(__ctobpl_const_2216, node_ptr);
    assume value_is(__ctobpl_const_2217, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(node_ptr)]);
    goto label_9;
}



procedure {:extern} fixport(elem_ptr.__1: int) returns (result.fixport$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} fixport(elem_ptr.__1: int) returns (result.fixport$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} amp: int;
  var {:extern} amp_ptr: int;
  var {:extern} ang: int;
  var {:extern} ang_ptr: int;
  var {:extern} app_ptr: int;
  var {:extern} elem_ptr: int;
  var {:extern} result.degconv$3: int;
  var {:extern} result.degconv$4: int;
  var {:extern} result.degconv$5: int;
  var {:extern} result.degconv$6: int;
  var {:extern} result.linconv$2: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(elem_ptr.__1, alloc);
    call amp := __HAVOC_det_malloc(8);
    amp_ptr := 0;
    call ang := __HAVOC_det_malloc(8);
    ang_ptr := 0;
    app_ptr := 0;
    elem_ptr := 0;
    result.degconv$3 := 0;
    result.degconv$4 := 0;
    result.degconv$5 := 0;
    result.degconv$6 := 0;
    result.fixport$1 := 0;
    result.linconv$2 := 0;
    elem_ptr := elem_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2325} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2326} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2326} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2326} true;
    amp_ptr := amp;
    assume value_is(__ctobpl_const_2218, amp_ptr);
    assume value_is(__ctobpl_const_2219, Mem_T.FLOAT[amp]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2327} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2327} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2327} true;
    ang_ptr := ang;
    assume value_is(__ctobpl_const_2220, ang_ptr);
    assume value_is(__ctobpl_const_2221, Mem_T.FLOAT[ang]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2329} true;
    assert elem_ptr != 0;
    app_ptr := Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(elem_ptr)];
    assume value_is(__ctobpl_const_2222, app_ptr);
    assume value_is(__ctobpl_const_2223, elem_ptr);
    assume value_is(__ctobpl_const_2224, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(elem_ptr)]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2332} true;
    goto label_11_head;

  label_11_head:
    call app_ptr, result.degconv$3, result.degconv$4, result.degconv$5, result.degconv$6, result.linconv$2 := fixport_loop_label_11_head(amp, amp_ptr, ang, ang_ptr, app_ptr, elem_ptr, result.degconv$3, result.degconv$4, result.degconv$5, result.degconv$6, result.linconv$2);
    goto label_11_head_last;

  label_11_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_2225, app_ptr);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2372} true;
    result.fixport$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2373} true;
    call __HAVOC_free(amp);
    call __HAVOC_free(ang);
    return;

  label_11_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_2225, app_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2333} true;
    assert app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[amp := Mem_T.AMP_Port[AMP_Port(app_ptr)]];
    assume value_is(__ctobpl_const_2226, Mem_T.FLOAT[amp]);
    assume value_is(__ctobpl_const_2227, app_ptr);
    assume value_is(__ctobpl_const_2228, Mem_T.AMP_Port[AMP_Port(app_ptr)]);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2334} true;
    assert app_ptr != 0;
    assert app_ptr != 0;
    call result.linconv$2 := linconv(amp_ptr, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2229, amp_ptr);
    assume value_is(__ctobpl_const_2230, app_ptr);
    assume value_is(__ctobpl_const_2231, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2232, amp_ptr);
    assume value_is(__ctobpl_const_2233, app_ptr);
    assume value_is(__ctobpl_const_2234, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(app_ptr)]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2335} true;
    assert app_ptr != 0;
    Mem_T.AMP_Port := Mem_T.AMP_Port[AMP_Port(app_ptr) := Mem_T.FLOAT[amp]];
    assume value_is(__ctobpl_const_2235, app_ptr);
    assume value_is(__ctobpl_const_2236, Mem_T.AMP_Port[AMP_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2237, Mem_T.FLOAT[amp]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2337} true;
    assert app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[ang := Mem_T.PSC_Port[PSC_Port(app_ptr)]];
    assume value_is(__ctobpl_const_2238, Mem_T.FLOAT[ang]);
    assume value_is(__ctobpl_const_2239, app_ptr);
    assume value_is(__ctobpl_const_2240, Mem_T.PSC_Port[PSC_Port(app_ptr)]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2338} true;
    assert app_ptr != 0;
    assert app_ptr != 0;
    call result.degconv$3 := degconv(ang_ptr, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2241, ang_ptr);
    assume value_is(__ctobpl_const_2242, app_ptr);
    assume value_is(__ctobpl_const_2243, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2244, ang_ptr);
    assume value_is(__ctobpl_const_2245, app_ptr);
    assume value_is(__ctobpl_const_2246, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(app_ptr)]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2339} true;
    assert app_ptr != 0;
    Mem_T.PSC_Port := Mem_T.PSC_Port[PSC_Port(app_ptr) := Mem_T.FLOAT[ang]];
    assume value_is(__ctobpl_const_2247, app_ptr);
    assume value_is(__ctobpl_const_2248, Mem_T.PSC_Port[PSC_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2249, Mem_T.FLOAT[ang]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2341} true;
    assert app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[ang := Mem_T.PSH_Port[PSH_Port(app_ptr)]];
    assume value_is(__ctobpl_const_2250, Mem_T.FLOAT[ang]);
    assume value_is(__ctobpl_const_2251, app_ptr);
    assume value_is(__ctobpl_const_2252, Mem_T.PSH_Port[PSH_Port(app_ptr)]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2342} true;
    assert app_ptr != 0;
    assert app_ptr != 0;
    call result.degconv$4 := degconv(ang_ptr, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2253, ang_ptr);
    assume value_is(__ctobpl_const_2254, app_ptr);
    assume value_is(__ctobpl_const_2255, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2256, ang_ptr);
    assume value_is(__ctobpl_const_2257, app_ptr);
    assume value_is(__ctobpl_const_2258, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(app_ptr)]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2343} true;
    assert app_ptr != 0;
    Mem_T.PSH_Port := Mem_T.PSH_Port[PSH_Port(app_ptr) := Mem_T.FLOAT[ang]];
    assume value_is(__ctobpl_const_2259, app_ptr);
    assume value_is(__ctobpl_const_2260, Mem_T.PSH_Port[PSH_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2261, Mem_T.FLOAT[ang]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2345} true;
    assert app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[ang := Mem_T.PPA_Port[PPA_Port(app_ptr)]];
    assume value_is(__ctobpl_const_2262, Mem_T.FLOAT[ang]);
    assume value_is(__ctobpl_const_2263, app_ptr);
    assume value_is(__ctobpl_const_2264, Mem_T.PPA_Port[PPA_Port(app_ptr)]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2346} true;
    assert app_ptr != 0;
    assert app_ptr != 0;
    call result.degconv$5 := degconv(ang_ptr, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2265, ang_ptr);
    assume value_is(__ctobpl_const_2266, app_ptr);
    assume value_is(__ctobpl_const_2267, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2268, ang_ptr);
    assume value_is(__ctobpl_const_2269, app_ptr);
    assume value_is(__ctobpl_const_2270, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(app_ptr)]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2347} true;
    assert app_ptr != 0;
    Mem_T.PPA_Port := Mem_T.PPA_Port[PPA_Port(app_ptr) := Mem_T.FLOAT[ang]];
    assume value_is(__ctobpl_const_2271, app_ptr);
    assume value_is(__ctobpl_const_2272, Mem_T.PPA_Port[PPA_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2273, Mem_T.FLOAT[ang]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2350} true;
    assert elem_ptr != 0;
    goto label_33_true, label_33_false;

  label_33_false:
    assume Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(elem_ptr)] == 0;
    assume value_is(__ctobpl_const_2274, elem_ptr);
    assume value_is(__ctobpl_const_2275, Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(elem_ptr)]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2351} true;
    assert app_ptr != 0;
    goto label_34_true, label_34_false;

  label_34_false:
    assume !INT_EQ(Mem_T.OMIT_POL_Port[OMIT_POL_Port(app_ptr)], 1);
    assume value_is(__ctobpl_const_2276, app_ptr);
    assume value_is(__ctobpl_const_2277, Mem_T.OMIT_POL_Port[OMIT_POL_Port(app_ptr)]);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2356} true;
    assert app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[ang := Mem_T.PHEPOL_Port[PHEPOL_Port(app_ptr)]];
    assume value_is(__ctobpl_const_2286, Mem_T.FLOAT[ang]);
    assume value_is(__ctobpl_const_2287, app_ptr);
    assume value_is(__ctobpl_const_2288, Mem_T.PHEPOL_Port[PHEPOL_Port(app_ptr)]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2357} true;
    assert app_ptr != 0;
    assert app_ptr != 0;
    call result.degconv$6 := degconv(ang_ptr, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2289, ang_ptr);
    assume value_is(__ctobpl_const_2290, app_ptr);
    assume value_is(__ctobpl_const_2291, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2292, ang_ptr);
    assume value_is(__ctobpl_const_2293, app_ptr);
    assume value_is(__ctobpl_const_2294, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(app_ptr)]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2358} true;
    assert app_ptr != 0;
    Mem_T.PHEPOL_Port := Mem_T.PHEPOL_Port[PHEPOL_Port(app_ptr) := Mem_T.FLOAT[ang]];
    assume value_is(__ctobpl_const_2295, app_ptr);
    assume value_is(__ctobpl_const_2296, Mem_T.PHEPOL_Port[PHEPOL_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2297, Mem_T.FLOAT[ang]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2362} true;
    assert app_ptr != 0;
    Mem_T.AMP_UNIT_Port := Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(app_ptr) := 0];
    assume value_is(__ctobpl_const_2298, app_ptr);
    assume value_is(__ctobpl_const_2299, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(app_ptr)]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2363} true;
    assert app_ptr != 0;
    Mem_T.PSC_UNIT_Port := Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(app_ptr) := 0];
    assume value_is(__ctobpl_const_2300, app_ptr);
    assume value_is(__ctobpl_const_2301, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(app_ptr)]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2364} true;
    assert app_ptr != 0;
    Mem_T.PSH_UNIT_Port := Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(app_ptr) := 0];
    assume value_is(__ctobpl_const_2302, app_ptr);
    assume value_is(__ctobpl_const_2303, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(app_ptr)]);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2365} true;
    assert app_ptr != 0;
    Mem_T.PPA_UNIT_Port := Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(app_ptr) := 0];
    assume value_is(__ctobpl_const_2304, app_ptr);
    assume value_is(__ctobpl_const_2305, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(app_ptr)]);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2366} true;
    assert app_ptr != 0;
    Mem_T.PHEPOL_UNIT_Port := Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(app_ptr) := 0];
    assume value_is(__ctobpl_const_2306, app_ptr);
    assume value_is(__ctobpl_const_2307, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(app_ptr)]);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2368} true;
    assert app_ptr != 0;
    app_ptr := Mem_T.NEXT_Port[NEXT_Port(app_ptr)];
    assume value_is(__ctobpl_const_2308, app_ptr);
    assume value_is(__ctobpl_const_2309, app_ptr);
    assume value_is(__ctobpl_const_2310, Mem_T.NEXT_Port[NEXT_Port(app_ptr)]);
    goto label_40_dummy;

  label_34_true:
    assume INT_EQ(Mem_T.OMIT_POL_Port[OMIT_POL_Port(app_ptr)], 1);
    assume value_is(__ctobpl_const_2276, app_ptr);
    assume value_is(__ctobpl_const_2277, Mem_T.OMIT_POL_Port[OMIT_POL_Port(app_ptr)]);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2352} true;
    assert app_ptr != 0;
    assert elem_ptr != 0;
    Mem_T.PHEPOL_Port := Mem_T.PHEPOL_Port[PHEPOL_Port(app_ptr) := Mem_T.PHEPOL_Elem[PHEPOL_Elem(elem_ptr)]];
    assume value_is(__ctobpl_const_2278, app_ptr);
    assume value_is(__ctobpl_const_2279, Mem_T.PHEPOL_Port[PHEPOL_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2280, elem_ptr);
    assume value_is(__ctobpl_const_2281, Mem_T.PHEPOL_Elem[PHEPOL_Elem(elem_ptr)]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2353} true;
    assert app_ptr != 0;
    assert elem_ptr != 0;
    Mem_T.PHEPOL_UNIT_Port := Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(app_ptr) := Mem_T.PHEPOL_UNIT_Elem[PHEPOL_UNIT_Elem(elem_ptr)]];
    assume value_is(__ctobpl_const_2282, app_ptr);
    assume value_is(__ctobpl_const_2283, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(app_ptr)]);
    assume value_is(__ctobpl_const_2284, elem_ptr);
    assume value_is(__ctobpl_const_2285, Mem_T.PHEPOL_UNIT_Elem[PHEPOL_UNIT_Elem(elem_ptr)]);
    goto label_41;

  label_33_true:
    assume Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(elem_ptr)] != 0;
    assume value_is(__ctobpl_const_2274, elem_ptr);
    assume value_is(__ctobpl_const_2275, Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(elem_ptr)]);
    goto label_35;

  label_40_dummy:
    assume false;
    return;

  label_11_head_last:
    goto label_11_true, label_11_false;
}



procedure {:extern} fixselem(elem_ptr.__1: int) returns (result.fixselem$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} fixselem(elem_ptr.__1: int) returns (result.fixselem$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} elem_ptr: int;
  var {:extern} pdim: int;
  var {:extern} pdim_ptr: int;
  var {:extern} port_ptr: int;
  var {:extern} pqdim_unit: int;
  var {:extern} $printf.arg.2$9$: int;
  var {:extern} qdim: int;
  var {:extern} qdim_ptr: int;
  var {:extern} radius: int;
  var {:extern} radius_ptr: int;
  var {:extern} radius_unit: int;
  var {:extern} result.fixport$10: int;
  var {:extern} result.malloc$7: int;
  var {:extern} result.mmconv$2: int;
  var {:extern} result.mmconv$3: int;
  var {:extern} result.mmconv$6: int;
  var {:extern} result.printf$8: int;
  var {:extern} result.sqrt$4: int;
  var {:extern} $sqrt.arg.1$5$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(elem_ptr.__1, alloc);
    elem_ptr := 0;
    call pdim := __HAVOC_det_malloc(8);
    pdim_ptr := 0;
    port_ptr := 0;
    pqdim_unit := 0;
    $printf.arg.2$9$ := 0;
    call qdim := __HAVOC_det_malloc(8);
    qdim_ptr := 0;
    call radius := __HAVOC_det_malloc(8);
    radius_ptr := 0;
    radius_unit := 0;
    result.fixport$10 := 0;
    result.fixselem$1 := 0;
    result.malloc$7 := 0;
    result.mmconv$2 := 0;
    result.mmconv$3 := 0;
    result.mmconv$6 := 0;
    result.printf$8 := 0;
    result.sqrt$4 := 0;
    $sqrt.arg.1$5$ := 0;
    elem_ptr := elem_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2382} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2382} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2382} true;
    radius_ptr := radius;
    assume value_is(__ctobpl_const_2311, radius_ptr);
    assume value_is(__ctobpl_const_2312, Mem_T.FLOAT[radius]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2383} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2384} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2384} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2384} true;
    pdim_ptr := pdim;
    assume value_is(__ctobpl_const_2313, pdim_ptr);
    assume value_is(__ctobpl_const_2314, Mem_T.FLOAT[pdim]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2385} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2385} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2385} true;
    qdim_ptr := qdim;
    assume value_is(__ctobpl_const_2315, qdim_ptr);
    assume value_is(__ctobpl_const_2316, Mem_T.FLOAT[qdim]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2386} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2388} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2388} true;
    port_ptr := 0;
    assume value_is(__ctobpl_const_2317, port_ptr);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2399} true;
    assert elem_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[radius := Mem_T.RADIUS_Elem[RADIUS_Elem(elem_ptr)]];
    assume value_is(__ctobpl_const_2318, Mem_T.FLOAT[radius]);
    assume value_is(__ctobpl_const_2319, elem_ptr);
    assume value_is(__ctobpl_const_2320, Mem_T.RADIUS_Elem[RADIUS_Elem(elem_ptr)]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2400} true;
    assert elem_ptr != 0;
    radius_unit := Mem_T.RADIUS_UNIT_Elem[RADIUS_UNIT_Elem(elem_ptr)];
    assume value_is(__ctobpl_const_2321, radius_unit);
    assume value_is(__ctobpl_const_2322, elem_ptr);
    assume value_is(__ctobpl_const_2323, Mem_T.RADIUS_UNIT_Elem[RADIUS_UNIT_Elem(elem_ptr)]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2401} true;
    assert elem_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pdim := Mem_T.PDIM_Elem[PDIM_Elem(elem_ptr)]];
    assume value_is(__ctobpl_const_2324, Mem_T.FLOAT[pdim]);
    assume value_is(__ctobpl_const_2325, elem_ptr);
    assume value_is(__ctobpl_const_2326, Mem_T.PDIM_Elem[PDIM_Elem(elem_ptr)]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2402} true;
    assert elem_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qdim := Mem_T.QDIM_Elem[QDIM_Elem(elem_ptr)]];
    assume value_is(__ctobpl_const_2327, Mem_T.FLOAT[qdim]);
    assume value_is(__ctobpl_const_2328, elem_ptr);
    assume value_is(__ctobpl_const_2329, Mem_T.QDIM_Elem[QDIM_Elem(elem_ptr)]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2403} true;
    assert elem_ptr != 0;
    pqdim_unit := Mem_T.PQDIM_UNIT_Elem[PQDIM_UNIT_Elem(elem_ptr)];
    assume value_is(__ctobpl_const_2330, pqdim_unit);
    assume value_is(__ctobpl_const_2331, elem_ptr);
    assume value_is(__ctobpl_const_2332, Mem_T.PQDIM_UNIT_Elem[PQDIM_UNIT_Elem(elem_ptr)]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2405} true;
    assert elem_ptr != 0;
    goto label_21_case_0, label_21_case_1, label_21_case_2;

  label_21_case_2:
    assume INT_EQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem_ptr)], 1);
    assume value_is(__ctobpl_const_2333, elem_ptr);
    assume value_is(__ctobpl_const_2334, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem_ptr)]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2414} true;
    call result.mmconv$6 := mmconv(radius_ptr, radius_unit);
    assume value_is(__ctobpl_const_2352, radius_ptr);
    assume value_is(__ctobpl_const_2353, radius_unit);
    assume value_is(__ctobpl_const_2354, radius_ptr);
    assume value_is(__ctobpl_const_2355, radius_unit);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2415} true;
    Mem_T.FLOAT := Mem_T.FLOAT[pdim := MULT(2, Mem_T.FLOAT[radius])];
    assume value_is(__ctobpl_const_2356, Mem_T.FLOAT[pdim]);
    assume value_is(__ctobpl_const_2357, Mem_T.FLOAT[radius]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2416} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qdim := MULT(2, Mem_T.FLOAT[radius])];
    assume value_is(__ctobpl_const_2358, Mem_T.FLOAT[qdim]);
    assume value_is(__ctobpl_const_2359, Mem_T.FLOAT[radius]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2417} true;
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2424} true;
    radius_unit := 0;
    assume value_is(__ctobpl_const_2360, radius_unit);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2425} true;
    pqdim_unit := 0;
    assume value_is(__ctobpl_const_2361, pqdim_unit);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2430} true;
    assert elem_ptr != 0;
    goto label_36_true, label_36_false;

  label_36_false:
    assume Mem_T.NPORTS_Elem[NPORTS_Elem(elem_ptr)] == 0;
    assume value_is(__ctobpl_const_2362, elem_ptr);
    assume value_is(__ctobpl_const_2363, Mem_T.NPORTS_Elem[NPORTS_Elem(elem_ptr)]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2433} true;
    call result.malloc$7 := __HAVOC_det_malloc(96);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2433} true;
    port_ptr := result.malloc$7;
    assume value_is(__ctobpl_const_2364, port_ptr);
    assume value_is(__ctobpl_const_2365, result.malloc$7);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2435} true;
    goto label_50_true, label_50_false;

  label_50_false:
    assume port_ptr == 0;
    assume value_is(__ctobpl_const_2366, port_ptr);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2436} true;
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2436} true;
    call result.printf$8 := det_choice();
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2437} true;
    call interror(havoc_stringTemp);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2441} true;
    assert port_ptr != 0;
    Mem_T.PORTNUM_Port := Mem_T.PORTNUM_Port[PORTNUM_Port(port_ptr) := 1];
    assume value_is(__ctobpl_const_2367, port_ptr);
    assume value_is(__ctobpl_const_2368, Mem_T.PORTNUM_Port[PORTNUM_Port(port_ptr)]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2442} true;
    assert port_ptr != 0;
    Mem_T.AMP_Port := Mem_T.AMP_Port[AMP_Port(port_ptr) := 1];
    assume value_is(__ctobpl_const_2369, port_ptr);
    assume value_is(__ctobpl_const_2370, Mem_T.AMP_Port[AMP_Port(port_ptr)]);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2443} true;
    assert port_ptr != 0;
    Mem_T.AMP_UNIT_Port := Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(port_ptr) := 0];
    assume value_is(__ctobpl_const_2371, port_ptr);
    assume value_is(__ctobpl_const_2372, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(port_ptr)]);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2444} true;
    assert port_ptr != 0;
    Mem_T.PSC_Port := Mem_T.PSC_Port[PSC_Port(port_ptr) := 0];
    assume value_is(__ctobpl_const_2373, port_ptr);
    assume value_is(__ctobpl_const_2374, Mem_T.PSC_Port[PSC_Port(port_ptr)]);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2445} true;
    assert port_ptr != 0;
    Mem_T.PSC_UNIT_Port := Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(port_ptr) := 0];
    assume value_is(__ctobpl_const_2375, port_ptr);
    assume value_is(__ctobpl_const_2376, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(port_ptr)]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2446} true;
    assert port_ptr != 0;
    Mem_T.PSH_Port := Mem_T.PSH_Port[PSH_Port(port_ptr) := 0];
    assume value_is(__ctobpl_const_2377, port_ptr);
    assume value_is(__ctobpl_const_2378, Mem_T.PSH_Port[PSH_Port(port_ptr)]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2447} true;
    assert port_ptr != 0;
    Mem_T.PSH_UNIT_Port := Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(port_ptr) := 0];
    assume value_is(__ctobpl_const_2379, port_ptr);
    assume value_is(__ctobpl_const_2380, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(port_ptr)]);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2448} true;
    assert port_ptr != 0;
    Mem_T.PPA_Port := Mem_T.PPA_Port[PPA_Port(port_ptr) := 0];
    assume value_is(__ctobpl_const_2381, port_ptr);
    assume value_is(__ctobpl_const_2382, Mem_T.PPA_Port[PPA_Port(port_ptr)]);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2449} true;
    assert port_ptr != 0;
    Mem_T.PPA_UNIT_Port := Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(port_ptr) := 0];
    assume value_is(__ctobpl_const_2383, port_ptr);
    assume value_is(__ctobpl_const_2384, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(port_ptr)]);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2450} true;
    assert port_ptr != 0;
    Mem_T.PHEPOL_Port := Mem_T.PHEPOL_Port[PHEPOL_Port(port_ptr) := 90];
    assume value_is(__ctobpl_const_2385, port_ptr);
    assume value_is(__ctobpl_const_2386, Mem_T.PHEPOL_Port[PHEPOL_Port(port_ptr)]);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2451} true;
    assert port_ptr != 0;
    Mem_T.PHEPOL_UNIT_Port := Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(port_ptr) := 0];
    assume value_is(__ctobpl_const_2387, port_ptr);
    assume value_is(__ctobpl_const_2388, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(port_ptr)]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2453} true;
    assert port_ptr != 0;
    Mem_T.OMIT_POL_Port := Mem_T.OMIT_POL_Port[OMIT_POL_Port(port_ptr) := 1];
    assume value_is(__ctobpl_const_2389, port_ptr);
    assume value_is(__ctobpl_const_2390, Mem_T.OMIT_POL_Port[OMIT_POL_Port(port_ptr)]);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2455} true;
    assert port_ptr != 0;
    Mem_T.NEXT_Port := Mem_T.NEXT_Port[NEXT_Port(port_ptr) := 0];
    assume value_is(__ctobpl_const_2391, port_ptr);
    assume value_is(__ctobpl_const_2392, Mem_T.NEXT_Port[NEXT_Port(port_ptr)]);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2457} true;
    assert elem_ptr != 0;
    Mem_T.NPORTS_Elem := Mem_T.NPORTS_Elem[NPORTS_Elem(elem_ptr) := 1];
    assume value_is(__ctobpl_const_2393, elem_ptr);
    assume value_is(__ctobpl_const_2394, Mem_T.NPORTS_Elem[NPORTS_Elem(elem_ptr)]);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2458} true;
    assert elem_ptr != 0;
    Mem_T.PORT_PTR_Elem := Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(elem_ptr) := port_ptr];
    assume value_is(__ctobpl_const_2395, elem_ptr);
    assume value_is(__ctobpl_const_2396, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(elem_ptr)]);
    assume value_is(__ctobpl_const_2397, port_ptr);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2462} true;
    call result.fixport$10 := fixport(elem_ptr);
    assume value_is(__ctobpl_const_2398, elem_ptr);
    assume value_is(__ctobpl_const_2399, elem_ptr);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2465} true;
    assert elem_ptr != 0;
    Mem_T.RADIUS_Elem := Mem_T.RADIUS_Elem[RADIUS_Elem(elem_ptr) := Mem_T.FLOAT[radius]];
    assume value_is(__ctobpl_const_2400, elem_ptr);
    assume value_is(__ctobpl_const_2401, Mem_T.RADIUS_Elem[RADIUS_Elem(elem_ptr)]);
    assume value_is(__ctobpl_const_2402, Mem_T.FLOAT[radius]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2466} true;
    assert elem_ptr != 0;
    Mem_T.RADIUS_UNIT_Elem := Mem_T.RADIUS_UNIT_Elem[RADIUS_UNIT_Elem(elem_ptr) := radius_unit];
    assume value_is(__ctobpl_const_2403, elem_ptr);
    assume value_is(__ctobpl_const_2404, Mem_T.RADIUS_UNIT_Elem[RADIUS_UNIT_Elem(elem_ptr)]);
    assume value_is(__ctobpl_const_2405, radius_unit);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2467} true;
    assert elem_ptr != 0;
    Mem_T.PDIM_Elem := Mem_T.PDIM_Elem[PDIM_Elem(elem_ptr) := Mem_T.FLOAT[pdim]];
    assume value_is(__ctobpl_const_2406, elem_ptr);
    assume value_is(__ctobpl_const_2407, Mem_T.PDIM_Elem[PDIM_Elem(elem_ptr)]);
    assume value_is(__ctobpl_const_2408, Mem_T.FLOAT[pdim]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2468} true;
    assert elem_ptr != 0;
    Mem_T.QDIM_Elem := Mem_T.QDIM_Elem[QDIM_Elem(elem_ptr) := Mem_T.FLOAT[qdim]];
    assume value_is(__ctobpl_const_2409, elem_ptr);
    assume value_is(__ctobpl_const_2410, Mem_T.QDIM_Elem[QDIM_Elem(elem_ptr)]);
    assume value_is(__ctobpl_const_2411, Mem_T.FLOAT[qdim]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2469} true;
    assert elem_ptr != 0;
    Mem_T.PQDIM_UNIT_Elem := Mem_T.PQDIM_UNIT_Elem[PQDIM_UNIT_Elem(elem_ptr) := pqdim_unit];
    assume value_is(__ctobpl_const_2412, elem_ptr);
    assume value_is(__ctobpl_const_2413, Mem_T.PQDIM_UNIT_Elem[PQDIM_UNIT_Elem(elem_ptr)]);
    assume value_is(__ctobpl_const_2414, pqdim_unit);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2471} true;
    result.fixselem$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2472} true;
    call __HAVOC_free(pdim);
    call __HAVOC_free(qdim);
    call __HAVOC_free(radius);
    return;

  label_50_true:
    assume port_ptr != 0;
    assume value_is(__ctobpl_const_2366, port_ptr);
    goto label_52;

  label_36_true:
    assume Mem_T.NPORTS_Elem[NPORTS_Elem(elem_ptr)] != 0;
    assume value_is(__ctobpl_const_2362, elem_ptr);
    assume value_is(__ctobpl_const_2363, Mem_T.NPORTS_Elem[NPORTS_Elem(elem_ptr)]);
    goto label_40;

  label_21_case_1:
    assume INT_EQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem_ptr)], 0);
    assume value_is(__ctobpl_const_2333, elem_ptr);
    assume value_is(__ctobpl_const_2334, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem_ptr)]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2408} true;
    call result.mmconv$2 := mmconv(pdim_ptr, pqdim_unit);
    assume value_is(__ctobpl_const_2335, pdim_ptr);
    assume value_is(__ctobpl_const_2336, pqdim_unit);
    assume value_is(__ctobpl_const_2337, pdim_ptr);
    assume value_is(__ctobpl_const_2338, pqdim_unit);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2409} true;
    call result.mmconv$3 := mmconv(qdim_ptr, pqdim_unit);
    assume value_is(__ctobpl_const_2339, qdim_ptr);
    assume value_is(__ctobpl_const_2340, pqdim_unit);
    assume value_is(__ctobpl_const_2341, qdim_ptr);
    assume value_is(__ctobpl_const_2342, pqdim_unit);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2410} true;
    $sqrt.arg.1$5$ := PLUS(MULT(Mem_T.FLOAT[pdim], Mem_T.FLOAT[pdim]), 1, MULT(Mem_T.FLOAT[qdim], Mem_T.FLOAT[qdim]));
    assume value_is(__ctobpl_const_2343, $sqrt.arg.1$5$);
    assume value_is(__ctobpl_const_2344, Mem_T.FLOAT[pdim]);
    assume value_is(__ctobpl_const_2345, Mem_T.FLOAT[pdim]);
    assume value_is(__ctobpl_const_2346, Mem_T.FLOAT[qdim]);
    assume value_is(__ctobpl_const_2347, Mem_T.FLOAT[qdim]);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2410} true;
    call result.sqrt$4 := sqrt($sqrt.arg.1$5$);
    assume value_is(__ctobpl_const_2348, $sqrt.arg.1$5$);
    assume value_is(__ctobpl_const_2349, $sqrt.arg.1$5$);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2410} true;
    Mem_T.FLOAT := Mem_T.FLOAT[radius := result.sqrt$4];
    assume value_is(__ctobpl_const_2350, Mem_T.FLOAT[radius]);
    assume value_is(__ctobpl_const_2351, result.sqrt$4);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2411} true;
    goto label_34;

  label_21_case_0:
    assume INT_NEQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem_ptr)], 0);
    assume INT_NEQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem_ptr)], 1);
    assume value_is(__ctobpl_const_2333, elem_ptr);
    assume value_is(__ctobpl_const_2334, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem_ptr)]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2421} true;
    call interror(havoc_stringTemp);
    goto label_34;
}



procedure {:extern} fixsgrel(group_ptr.__1: int) returns (result.fixsgrel$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} fixsgrel(group_ptr.__1: int) returns (result.fixsgrel$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle: int;
  var {:extern} $dacos.arg.1$24$: int;
  var {:extern} $dacos.arg.1$26$: int;
  var {:extern} $dacos.arg.1$35$: int;
  var {:extern} $dasin.arg.1$40$: int;
  var {:extern} $datan.arg.1$29$: int;
  var {:extern} $datan.arg.1$51$: int;
  var {:extern} elem: int;
  var {:extern} grid: int;
  var {:extern} group_ptr: int;
  var {:extern} pdim: int;
  var {:extern} $printf.arg.2$12$: int;
  var {:extern} $printf.arg.2$15$: int;
  var {:extern} $printf.arg.2$18$: int;
  var {:extern} $printf.arg.2$33$: int;
  var {:extern} $printf.arg.2$38$: int;
  var {:extern} $printf.arg.2$43$: int;
  var {:extern} $printf.arg.2$46$: int;
  var {:extern} $printf.arg.2$49$: int;
  var {:extern} $printf.arg.2$54$: int;
  var {:extern} $printf.arg.2$56$: int;
  var {:extern} $printf.arg.2$59$: int;
  var {:extern} $printf.arg.2$61$: int;
  var {:extern} $printf.arg.2$63$: int;
  var {:extern} $printf.arg.2$9$: int;
  var {:extern} $printf.arg.3$11$: int;
  var {:extern} $printf.arg.3$14$: int;
  var {:extern} $printf.arg.3$17$: int;
  var {:extern} $printf.arg.3$32$: int;
  var {:extern} $printf.arg.3$37$: int;
  var {:extern} $printf.arg.3$42$: int;
  var {:extern} $printf.arg.3$45$: int;
  var {:extern} $printf.arg.3$48$: int;
  var {:extern} $printf.arg.3$53$: int;
  var {:extern} $printf.arg.3$58$: int;
  var {:extern} $printf.arg.3$8$: int;
  var {:extern} pstep: int;
  var {:extern} px: int;
  var {:extern} py: int;
  var {:extern} qdim: int;
  var {:extern} qstep: int;
  var {:extern} qx: int;
  var {:extern} qy: int;
  var {:extern} radius: int;
  var {:extern} result.dacos$23: int;
  var {:extern} result.dacos$25: int;
  var {:extern} result.dacos$34: int;
  var {:extern} result.dasin$39: int;
  var {:extern} result.datan$28: int;
  var {:extern} result.datan$50: int;
  var {:extern} result.dcos$27: int;
  var {:extern} result.doubmax$4: int;
  var {:extern} result.doubmax$5: int;
  var {:extern} result.doubmax$6: int;
  var {:extern} result.dsin$30: int;
  var {:extern} result.fixselem$2: int;
  var {:extern} result.fixsgrid$3: int;
  var {:extern} result.printf$7: int;
  var {:extern} result.printf$10: int;
  var {:extern} result.printf$13: int;
  var {:extern} result.printf$16: int;
  var {:extern} result.printf$31: int;
  var {:extern} result.printf$36: int;
  var {:extern} result.printf$41: int;
  var {:extern} result.printf$44: int;
  var {:extern} result.printf$47: int;
  var {:extern} result.printf$52: int;
  var {:extern} result.printf$55: int;
  var {:extern} result.printf$57: int;
  var {:extern} result.printf$60: int;
  var {:extern} result.printf$62: int;
  var {:extern} result.sqrt$19: int;
  var {:extern} result.sqrt$21: int;
  var {:extern} rot_angle: int;
  var {:extern} $sqrt.arg.1$20$: int;
  var {:extern} $sqrt.arg.1$22$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(group_ptr.__1, alloc);
    angle := 0;
    $dacos.arg.1$24$ := 0;
    $dacos.arg.1$26$ := 0;
    $dacos.arg.1$35$ := 0;
    $dasin.arg.1$40$ := 0;
    $datan.arg.1$29$ := 0;
    $datan.arg.1$51$ := 0;
    elem := 0;
    grid := 0;
    group_ptr := 0;
    pdim := 0;
    $printf.arg.2$12$ := 0;
    $printf.arg.2$15$ := 0;
    $printf.arg.2$18$ := 0;
    $printf.arg.2$33$ := 0;
    $printf.arg.2$38$ := 0;
    $printf.arg.2$43$ := 0;
    $printf.arg.2$46$ := 0;
    $printf.arg.2$49$ := 0;
    $printf.arg.2$54$ := 0;
    $printf.arg.2$56$ := 0;
    $printf.arg.2$59$ := 0;
    $printf.arg.2$61$ := 0;
    $printf.arg.2$63$ := 0;
    $printf.arg.2$9$ := 0;
    $printf.arg.3$11$ := 0;
    $printf.arg.3$14$ := 0;
    $printf.arg.3$17$ := 0;
    $printf.arg.3$32$ := 0;
    $printf.arg.3$37$ := 0;
    $printf.arg.3$42$ := 0;
    $printf.arg.3$45$ := 0;
    $printf.arg.3$48$ := 0;
    $printf.arg.3$53$ := 0;
    $printf.arg.3$58$ := 0;
    $printf.arg.3$8$ := 0;
    pstep := 0;
    px := 0;
    py := 0;
    qdim := 0;
    qstep := 0;
    qx := 0;
    qy := 0;
    radius := 0;
    result.dacos$23 := 0;
    result.dacos$25 := 0;
    result.dacos$34 := 0;
    result.dasin$39 := 0;
    result.datan$28 := 0;
    result.datan$50 := 0;
    result.dcos$27 := 0;
    result.doubmax$4 := 0;
    result.doubmax$5 := 0;
    result.doubmax$6 := 0;
    result.dsin$30 := 0;
    result.fixselem$2 := 0;
    result.fixsgrel$1 := 0;
    result.fixsgrid$3 := 0;
    result.printf$7 := 0;
    result.printf$10 := 0;
    result.printf$13 := 0;
    result.printf$16 := 0;
    result.printf$31 := 0;
    result.printf$36 := 0;
    result.printf$41 := 0;
    result.printf$44 := 0;
    result.printf$47 := 0;
    result.printf$52 := 0;
    result.printf$55 := 0;
    result.printf$57 := 0;
    result.printf$60 := 0;
    result.printf$62 := 0;
    result.sqrt$19 := 0;
    result.sqrt$21 := 0;
    rot_angle := 0;
    $sqrt.arg.1$20$ := 0;
    $sqrt.arg.1$22$ := 0;
    group_ptr := group_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2482} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2483} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2484} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2484} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2484} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2484} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2485} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2485} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2485} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2486} true;
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2486} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2486} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2486} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2498} true;
    assert group_ptr != 0;
    grid := Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)];
    assume value_is(__ctobpl_const_2415, grid);
    assume value_is(__ctobpl_const_2416, group_ptr);
    assume value_is(__ctobpl_const_2417, Mem_T.GRID_PTR_Group[GRID_PTR_Group(group_ptr)]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2499} true;
    assert group_ptr != 0;
    elem := Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)];
    assume value_is(__ctobpl_const_2418, elem);
    assume value_is(__ctobpl_const_2419, group_ptr);
    assume value_is(__ctobpl_const_2420, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2502} true;
    call result.fixselem$2 := fixselem(elem);
    assume value_is(__ctobpl_const_2421, elem);
    assume value_is(__ctobpl_const_2422, elem);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2504} true;
    call result.fixsgrid$3 := fixsgrid(grid);
    assume value_is(__ctobpl_const_2423, grid);
    assume value_is(__ctobpl_const_2424, grid);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2508} true;
    assert grid != 0;
    Mem_T.ROT_ANGLE_Grid := Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid) := 0];
    assume value_is(__ctobpl_const_2425, grid);
    assume value_is(__ctobpl_const_2426, Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid)]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2510} true;
    assert grid != 0;
    goto label_25_case_0, label_25_case_1, label_25_case_2, label_25_case_3, label_25_case_4;

  label_25_case_4:
    assume INT_EQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 3);
    assume value_is(__ctobpl_const_2427, grid);
    assume value_is(__ctobpl_const_2428, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2607} true;
    assert grid != 0;
    goto label_30_true, label_30_false;

  label_30_false:
    assume !INT_NEQ(Mem_T.PX_Grid[PX_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2508, grid);
    assume value_is(__ctobpl_const_2509, Mem_T.PX_Grid[PX_Grid(grid)]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2627} true;
    assert grid != 0;
    goto label_31_true, label_31_false;

  label_31_false:
    assume !INT_EQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2510, grid);
    assume value_is(__ctobpl_const_2511, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2673} true;
    assert grid != 0;
    goto label_108_true, label_108_false;

  label_108_false:
    assume !INT_NEQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2516, grid);
    assume value_is(__ctobpl_const_2517, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2708} true;
    assert elem != 0;
    goto label_60_case_0, label_60_case_1, label_60_case_2;

  label_60_case_2:
    assume INT_EQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 1);
    assume value_is(__ctobpl_const_2706, elem);
    assume value_is(__ctobpl_const_2707, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2711} true;
    assert grid != 0;
    pstep := Mem_T.PSTEP_Grid[PSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2740, pstep);
    assume value_is(__ctobpl_const_2741, grid);
    assume value_is(__ctobpl_const_2742, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2712} true;
    assert grid != 0;
    qstep := Mem_T.QSTEP_Grid[QSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2743, qstep);
    assume value_is(__ctobpl_const_2744, grid);
    assume value_is(__ctobpl_const_2745, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2713} true;
    assert elem != 0;
    radius := BINARY_BOTH_INT(Mem_T.PDIM_Elem[PDIM_Elem(elem)], 2);
    assume value_is(__ctobpl_const_2746, radius);
    assume value_is(__ctobpl_const_2747, elem);
    assume value_is(__ctobpl_const_2748, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2715} true;
    goto label_65_true, label_65_false;

  label_65_false:
    assume !INT_LT(pstep, MULT(2, radius));
    assume value_is(__ctobpl_const_2749, pstep);
    assume value_is(__ctobpl_const_2750, radius);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2715} true;
    goto label_66_true, label_66_false;

  label_66_false:
    assume !INT_LT(qstep, MULT(2, radius));
    assume value_is(__ctobpl_const_2751, qstep);
    assume value_is(__ctobpl_const_2752, radius);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2719} true;
    assert grid != 0;
    goto label_72_true, label_72_false;

  label_72_false:
    assume !INT_LEQ(Mem_T.ANGLE_Grid[ANGLE_Grid(grid)], 45);
    assume value_is(__ctobpl_const_2754, grid);
    assume value_is(__ctobpl_const_2755, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2719} true;
    assert grid != 0;
    goto label_73_true, label_73_false;

  label_73_false:
    assume !INT_LT(90, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2756, grid);
    assume value_is(__ctobpl_const_2757, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2723} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2746} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_2758, group_ptr);
    goto label_235;

  label_235:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2746} true;
    call result.printf$55 := det_choice();
    goto label_238;

  label_238:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2747} true;
    assert grid != 0;
    $printf.arg.3$58$ := Mem_T.QSTEP_Grid[QSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2759, $printf.arg.3$58$);
    assume value_is(__ctobpl_const_2760, grid);
    assume value_is(__ctobpl_const_2761, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_239;

  label_239:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2747} true;
    assert grid != 0;
    $printf.arg.2$59$ := Mem_T.PSTEP_Grid[PSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2762, $printf.arg.2$59$);
    assume value_is(__ctobpl_const_2763, grid);
    assume value_is(__ctobpl_const_2764, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_240;

  label_240:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2747} true;
    call result.printf$57 := det_choice();
    goto label_243;

  label_243:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2748} true;
    assert grid != 0;
    $printf.arg.2$61$ := Mem_T.ANGLE_Grid[ANGLE_Grid(grid)];
    assume value_is(__ctobpl_const_2765, $printf.arg.2$61$);
    assume value_is(__ctobpl_const_2766, grid);
    assume value_is(__ctobpl_const_2767, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_244;

  label_244:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2748} true;
    call result.printf$60 := det_choice();
    goto label_247;

  label_247:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2749} true;
    assert grid != 0;
    $printf.arg.2$63$ := Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid)];
    assume value_is(__ctobpl_const_2768, $printf.arg.2$63$);
    assume value_is(__ctobpl_const_2769, grid);
    assume value_is(__ctobpl_const_2770, Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid)]);
    goto label_248;

  label_248:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2749} true;
    call result.printf$62 := det_choice();
    goto label_251;

  label_251:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2751} true;
    result.fixsgrel$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2752} true;
    return;

  label_73_true:
    assume INT_LT(90, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2756, grid);
    assume value_is(__ctobpl_const_2757, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2720} true;
    assert grid != 0;
    $printf.arg.3$45$ := Mem_T.ANGLE_Grid[ANGLE_Grid(grid)];
    assume value_is(__ctobpl_const_2771, $printf.arg.3$45$);
    assume value_is(__ctobpl_const_2772, grid);
    assume value_is(__ctobpl_const_2773, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2720} true;
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2720} true;
    call result.printf$44 := det_choice();
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2721} true;
    return;

  label_72_true:
    assume INT_LEQ(Mem_T.ANGLE_Grid[ANGLE_Grid(grid)], 45);
    assume value_is(__ctobpl_const_2754, grid);
    assume value_is(__ctobpl_const_2755, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_74;

  label_66_true:
    assume INT_LT(qstep, MULT(2, radius));
    assume value_is(__ctobpl_const_2751, qstep);
    assume value_is(__ctobpl_const_2752, radius);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2716} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_2753, group_ptr);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2716} true;
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2716} true;
    call result.printf$41 := det_choice();
    goto label_72;

  label_65_true:
    assume INT_LT(pstep, MULT(2, radius));
    assume value_is(__ctobpl_const_2749, pstep);
    assume value_is(__ctobpl_const_2750, radius);
    goto label_67;

  label_60_case_1:
    assume INT_EQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 0);
    assume value_is(__ctobpl_const_2706, elem);
    assume value_is(__ctobpl_const_2707, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2726} true;
    assert grid != 0;
    pstep := Mem_T.PSTEP_Grid[PSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2708, pstep);
    assume value_is(__ctobpl_const_2709, grid);
    assume value_is(__ctobpl_const_2710, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2727} true;
    assert grid != 0;
    qstep := Mem_T.QSTEP_Grid[QSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2711, qstep);
    assume value_is(__ctobpl_const_2712, grid);
    assume value_is(__ctobpl_const_2713, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2728} true;
    assert elem != 0;
    pdim := Mem_T.PDIM_Elem[PDIM_Elem(elem)];
    assume value_is(__ctobpl_const_2714, pdim);
    assume value_is(__ctobpl_const_2715, elem);
    assume value_is(__ctobpl_const_2716, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2729} true;
    assert elem != 0;
    qdim := Mem_T.QDIM_Elem[QDIM_Elem(elem)];
    assume value_is(__ctobpl_const_2717, qdim);
    assume value_is(__ctobpl_const_2718, elem);
    assume value_is(__ctobpl_const_2719, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2731} true;
    goto label_86_true, label_86_false;

  label_86_false:
    assume !INT_LT(qstep, qdim);
    assume value_is(__ctobpl_const_2720, qstep);
    assume value_is(__ctobpl_const_2721, qdim);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2731} true;
    goto label_87_true, label_87_false;

  label_87_false:
    assume !INT_LT(pstep, pdim);
    assume value_is(__ctobpl_const_2722, pstep);
    assume value_is(__ctobpl_const_2723, pdim);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2736} true;
    assert elem != 0;
    assert elem != 0;
    $datan.arg.1$51$ := BINARY_BOTH_INT(Mem_T.QDIM_Elem[QDIM_Elem(elem)], Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2725, $datan.arg.1$51$);
    assume value_is(__ctobpl_const_2726, elem);
    assume value_is(__ctobpl_const_2727, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2728, elem);
    assume value_is(__ctobpl_const_2729, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2736} true;
    call result.datan$50 := datan($datan.arg.1$51$);
    assume value_is(__ctobpl_const_2730, $datan.arg.1$51$);
    assume value_is(__ctobpl_const_2731, $datan.arg.1$51$);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2736} true;
    assert grid != 0;
    goto label_97_true, label_97_false;

  label_97_false:
    assume !INT_LEQ(Mem_T.ANGLE_Grid[ANGLE_Grid(grid)], result.datan$50);
    assume value_is(__ctobpl_const_2732, grid);
    assume value_is(__ctobpl_const_2733, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2734, result.datan$50);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2736} true;
    assert grid != 0;
    goto label_98_true, label_98_false;

  label_98_false:
    assume !INT_LT(90, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2735, grid);
    assume value_is(__ctobpl_const_2736, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2741} true;
    goto label_26;

  label_98_true:
    assume INT_LT(90, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2735, grid);
    assume value_is(__ctobpl_const_2736, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2738} true;
    assert grid != 0;
    $printf.arg.3$53$ := Mem_T.ANGLE_Grid[ANGLE_Grid(grid)];
    assume value_is(__ctobpl_const_2737, $printf.arg.3$53$);
    assume value_is(__ctobpl_const_2738, grid);
    assume value_is(__ctobpl_const_2739, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2738} true;
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2738} true;
    call result.printf$52 := det_choice();
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2739} true;
    return;

  label_97_true:
    assume INT_LEQ(Mem_T.ANGLE_Grid[ANGLE_Grid(grid)], result.datan$50);
    assume value_is(__ctobpl_const_2732, grid);
    assume value_is(__ctobpl_const_2733, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2734, result.datan$50);
    goto label_99;

  label_87_true:
    assume INT_LT(pstep, pdim);
    assume value_is(__ctobpl_const_2722, pstep);
    assume value_is(__ctobpl_const_2723, pdim);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2732} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_2724, group_ptr);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2732} true;
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2732} true;
    call result.printf$47 := det_choice();
    goto label_93;

  label_86_true:
    assume INT_LT(qstep, qdim);
    assume value_is(__ctobpl_const_2720, qstep);
    assume value_is(__ctobpl_const_2721, qdim);
    goto label_88;

  label_60_case_0:
    assume INT_NEQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 0);
    assume INT_NEQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 1);
    assume value_is(__ctobpl_const_2706, elem);
    assume value_is(__ctobpl_const_2707, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_26;

  label_108_true:
    assume INT_NEQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2516, grid);
    assume value_is(__ctobpl_const_2517, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_146;

  label_146:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2673} true;
    assert grid != 0;
    goto label_146_true, label_146_false;

  label_146_false:
    assume !INT_NEQ(Mem_T.QSTEP_Grid[QSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2518, grid);
    assume value_is(__ctobpl_const_2519, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_60;

  label_146_true:
    assume INT_NEQ(Mem_T.QSTEP_Grid[QSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2518, grid);
    assume value_is(__ctobpl_const_2519, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_147;

  label_147:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2673} true;
    assert grid != 0;
    goto label_147_true, label_147_false;

  label_147_false:
    assume !INT_EQ(Mem_T.ANGLE_Grid[ANGLE_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2520, grid);
    assume value_is(__ctobpl_const_2521, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_60;

  label_147_true:
    assume INT_EQ(Mem_T.ANGLE_Grid[ANGLE_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2520, grid);
    assume value_is(__ctobpl_const_2521, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_148;

  label_148:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2675} true;
    assert elem != 0;
    goto label_148_true, label_148_false;

  label_148_false:
    assume !INT_EQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 1);
    assume value_is(__ctobpl_const_2522, elem);
    assume value_is(__ctobpl_const_2523, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_149;

  label_149:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2690} true;
    assert elem != 0;
    goto label_149_true, label_149_false;

  label_149_false:
    assume Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)] == 0;
    assume value_is(__ctobpl_const_2524, elem);
    assume value_is(__ctobpl_const_2525, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_168;

  label_168:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2692} true;
    assert grid != 0;
    pstep := Mem_T.PSTEP_Grid[PSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2526, pstep);
    assume value_is(__ctobpl_const_2527, grid);
    assume value_is(__ctobpl_const_2528, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_169;

  label_169:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2693} true;
    assert grid != 0;
    qstep := Mem_T.QSTEP_Grid[QSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2529, qstep);
    assume value_is(__ctobpl_const_2530, grid);
    assume value_is(__ctobpl_const_2531, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_170;

  label_170:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2694} true;
    assert elem != 0;
    pdim := Mem_T.PDIM_Elem[PDIM_Elem(elem)];
    assume value_is(__ctobpl_const_2532, pdim);
    assume value_is(__ctobpl_const_2533, elem);
    assume value_is(__ctobpl_const_2534, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_171;

  label_171:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2695} true;
    assert elem != 0;
    qdim := Mem_T.QDIM_Elem[QDIM_Elem(elem)];
    assume value_is(__ctobpl_const_2535, qdim);
    assume value_is(__ctobpl_const_2536, elem);
    assume value_is(__ctobpl_const_2537, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    goto label_172;

  label_172:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2697} true;
    goto label_172_true, label_172_false;

  label_172_false:
    assume !INT_LT(qstep, qdim);
    assume value_is(__ctobpl_const_2538, qstep);
    assume value_is(__ctobpl_const_2539, qdim);
    goto label_173;

  label_173:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2697} true;
    goto label_173_true, label_173_false;

  label_173_false:
    assume !INT_LT(pstep, pdim);
    assume value_is(__ctobpl_const_2540, pstep);
    assume value_is(__ctobpl_const_2541, pdim);
    goto label_180;

  label_180:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2702} true;
    $dasin.arg.1$40$ := BINARY_BOTH_INT(qdim, qstep);
    assume value_is(__ctobpl_const_2545, $dasin.arg.1$40$);
    assume value_is(__ctobpl_const_2546, qdim);
    assume value_is(__ctobpl_const_2547, qstep);
    goto label_181;

  label_181:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2702} true;
    call result.dasin$39 := dasin($dasin.arg.1$40$);
    assume value_is(__ctobpl_const_2548, $dasin.arg.1$40$);
    assume value_is(__ctobpl_const_2549, $dasin.arg.1$40$);
    goto label_184;

  label_184:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2702} true;
    angle := result.dasin$39;
    assume value_is(__ctobpl_const_2550, angle);
    assume value_is(__ctobpl_const_2551, result.dasin$39);
    goto label_185;

  label_185:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2704} true;
    assert grid != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(grid) := angle];
    assume value_is(__ctobpl_const_2552, grid);
    assume value_is(__ctobpl_const_2553, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2554, angle);
    goto label_60;

  label_173_true:
    assume INT_LT(pstep, pdim);
    assume value_is(__ctobpl_const_2540, pstep);
    assume value_is(__ctobpl_const_2541, pdim);
    goto label_174;

  label_174:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2698} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_2542, group_ptr);
    goto label_175;

  label_175:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2698} true;
    goto label_176;

  label_176:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2698} true;
    call result.printf$36 := det_choice();
    goto label_179;

  label_179:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2699} true;
    qstep := qdim;
    assume value_is(__ctobpl_const_2543, qstep);
    assume value_is(__ctobpl_const_2544, qdim);
    goto label_180;

  label_172_true:
    assume INT_LT(qstep, qdim);
    assume value_is(__ctobpl_const_2538, qstep);
    assume value_is(__ctobpl_const_2539, qdim);
    goto label_174;

  label_149_true:
    assume Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)] != 0;
    assume value_is(__ctobpl_const_2524, elem);
    assume value_is(__ctobpl_const_2525, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_60;

  label_148_true:
    assume INT_EQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 1);
    assume value_is(__ctobpl_const_2522, elem);
    assume value_is(__ctobpl_const_2523, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_150;

  label_150:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2677} true;
    assert grid != 0;
    pstep := Mem_T.PSTEP_Grid[PSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2555, pstep);
    assume value_is(__ctobpl_const_2556, grid);
    assume value_is(__ctobpl_const_2557, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_151;

  label_151:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2678} true;
    assert grid != 0;
    qstep := Mem_T.QSTEP_Grid[QSTEP_Grid(grid)];
    assume value_is(__ctobpl_const_2558, qstep);
    assume value_is(__ctobpl_const_2559, grid);
    assume value_is(__ctobpl_const_2560, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_152;

  label_152:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2679} true;
    assert elem != 0;
    radius := BINARY_BOTH_INT(Mem_T.PDIM_Elem[PDIM_Elem(elem)], 2);
    assume value_is(__ctobpl_const_2561, radius);
    assume value_is(__ctobpl_const_2562, elem);
    assume value_is(__ctobpl_const_2563, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_153;

  label_153:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2681} true;
    goto label_153_true, label_153_false;

  label_153_false:
    assume !INT_LT(pstep, MULT(2, radius));
    assume value_is(__ctobpl_const_2564, pstep);
    assume value_is(__ctobpl_const_2565, radius);
    goto label_154;

  label_154:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2681} true;
    goto label_154_true, label_154_false;

  label_154_false:
    assume !INT_LT(qstep, MULT(2, radius));
    assume value_is(__ctobpl_const_2566, qstep);
    assume value_is(__ctobpl_const_2567, radius);
    goto label_162;

  label_162:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2687} true;
    $dacos.arg.1$35$ := BINARY_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(MULT(qstep, qstep), 1, MULT(pstep, pstep)), MULT(MULT(4, radius), radius), 1), MULT(MULT(2, pstep), qstep));
    assume value_is(__ctobpl_const_2573, $dacos.arg.1$35$);
    assume value_is(__ctobpl_const_2574, qstep);
    assume value_is(__ctobpl_const_2575, qstep);
    assume value_is(__ctobpl_const_2576, pstep);
    assume value_is(__ctobpl_const_2577, pstep);
    assume value_is(__ctobpl_const_2578, radius);
    assume value_is(__ctobpl_const_2579, radius);
    assume value_is(__ctobpl_const_2580, pstep);
    assume value_is(__ctobpl_const_2581, qstep);
    goto label_163;

  label_163:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2687} true;
    call result.dacos$34 := dacos($dacos.arg.1$35$);
    assume value_is(__ctobpl_const_2582, $dacos.arg.1$35$);
    assume value_is(__ctobpl_const_2583, $dacos.arg.1$35$);
    goto label_166;

  label_166:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2687} true;
    angle := result.dacos$34;
    assume value_is(__ctobpl_const_2584, angle);
    assume value_is(__ctobpl_const_2585, result.dacos$34);
    goto label_167;

  label_167:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2689} true;
    assert grid != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(grid) := angle];
    assume value_is(__ctobpl_const_2586, grid);
    assume value_is(__ctobpl_const_2587, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2588, angle);
    goto label_60;

  label_154_true:
    assume INT_LT(qstep, MULT(2, radius));
    assume value_is(__ctobpl_const_2566, qstep);
    assume value_is(__ctobpl_const_2567, radius);
    goto label_155;

  label_155:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2682} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_2568, group_ptr);
    goto label_156;

  label_156:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2682} true;
    goto label_157;

  label_157:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2682} true;
    call result.printf$31 := det_choice();
    goto label_160;

  label_160:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2683} true;
    pstep := MULT(2, radius);
    assume value_is(__ctobpl_const_2569, pstep);
    assume value_is(__ctobpl_const_2570, radius);
    goto label_161;

  label_161:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2684} true;
    qstep := MULT(2, radius);
    assume value_is(__ctobpl_const_2571, qstep);
    assume value_is(__ctobpl_const_2572, radius);
    goto label_162;

  label_153_true:
    assume INT_LT(pstep, MULT(2, radius));
    assume value_is(__ctobpl_const_2564, pstep);
    assume value_is(__ctobpl_const_2565, radius);
    goto label_155;

  label_31_true:
    assume INT_EQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2510, grid);
    assume value_is(__ctobpl_const_2511, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2627} true;
    assert grid != 0;
    goto label_109_true, label_109_false;

  label_109_false:
    assume !INT_EQ(Mem_T.QSTEP_Grid[QSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2512, grid);
    assume value_is(__ctobpl_const_2513, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_108;

  label_109_true:
    assume INT_EQ(Mem_T.QSTEP_Grid[QSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2512, grid);
    assume value_is(__ctobpl_const_2513, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2627} true;
    assert grid != 0;
    goto label_110_true, label_110_false;

  label_110_false:
    assume !INT_EQ(Mem_T.ANGLE_Grid[ANGLE_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2514, grid);
    assume value_is(__ctobpl_const_2515, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_108;

  label_110_true:
    assume INT_EQ(Mem_T.ANGLE_Grid[ANGLE_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2514, grid);
    assume value_is(__ctobpl_const_2515, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2629} true;
    assert elem != 0;
    goto label_111_case_0, label_111_case_1, label_111_case_2;

  label_111_case_2:
    assume INT_EQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 1);
    assume value_is(__ctobpl_const_2589, elem);
    assume value_is(__ctobpl_const_2590, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2633} true;
    assert elem != 0;
    radius := BINARY_BOTH_INT(Mem_T.PDIM_Elem[PDIM_Elem(elem)], 2);
    assume value_is(__ctobpl_const_2620, radius);
    assume value_is(__ctobpl_const_2621, elem);
    assume value_is(__ctobpl_const_2622, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2635} true;
    angle := 60;
    assume value_is(__ctobpl_const_2623, angle);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2637} true;
    pstep := MULT(2, radius);
    assume value_is(__ctobpl_const_2624, pstep);
    assume value_is(__ctobpl_const_2625, radius);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2638} true;
    goto label_116_true, label_116_false;

  label_116_false:
    assume !INT_LT(45, angle);
    assume value_is(__ctobpl_const_2626, angle);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2641} true;
    goto label_117_true, label_117_false;

  label_117_false:
    assume !INT_LT(60, angle);
    assume value_is(__ctobpl_const_2628, angle);
    goto label_127;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2644} true;
    call interror(havoc_stringTemp);
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2647} true;
    assert grid != 0;
    Mem_T.PSTEP_Grid := Mem_T.PSTEP_Grid[PSTEP_Grid(grid) := pstep];
    assume value_is(__ctobpl_const_2637, grid);
    assume value_is(__ctobpl_const_2638, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2639, pstep);
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2648} true;
    assert grid != 0;
    Mem_T.QSTEP_Grid := Mem_T.QSTEP_Grid[QSTEP_Grid(grid) := qstep];
    assume value_is(__ctobpl_const_2640, grid);
    assume value_is(__ctobpl_const_2641, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2642, qstep);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2649} true;
    assert grid != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(grid) := angle];
    assume value_is(__ctobpl_const_2643, grid);
    assume value_is(__ctobpl_const_2644, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2645, angle);
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2650} true;
    goto label_60;

  label_117_true:
    assume INT_LT(60, angle);
    assume value_is(__ctobpl_const_2628, angle);
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2641} true;
    goto label_130_true, label_130_false;

  label_130_false:
    assume !INT_LEQ(angle, 90);
    assume value_is(__ctobpl_const_2629, angle);
    goto label_127;

  label_130_true:
    assume INT_LEQ(angle, 90);
    assume value_is(__ctobpl_const_2629, angle);
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2642} true;
    qstep := MULT(2, radius);
    assume value_is(__ctobpl_const_2630, qstep);
    assume value_is(__ctobpl_const_2631, radius);
    goto label_123;

  label_116_true:
    assume INT_LT(45, angle);
    assume value_is(__ctobpl_const_2626, angle);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2638} true;
    goto label_118_true, label_118_false;

  label_118_false:
    assume !INT_LEQ(angle, 60);
    assume value_is(__ctobpl_const_2627, angle);
    goto label_117;

  label_118_true:
    assume INT_LEQ(angle, 60);
    assume value_is(__ctobpl_const_2627, angle);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2639} true;
    call result.dcos$27 := dcos(angle);
    assume value_is(__ctobpl_const_2632, angle);
    assume value_is(__ctobpl_const_2633, angle);
    goto label_122;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2639} true;
    qstep := MULT(MULT(MULT(2, radius), 2), result.dcos$27);
    assume value_is(__ctobpl_const_2634, qstep);
    assume value_is(__ctobpl_const_2635, radius);
    assume value_is(__ctobpl_const_2636, result.dcos$27);
    goto label_123;

  label_111_case_1:
    assume INT_EQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 0);
    assume value_is(__ctobpl_const_2589, elem);
    assume value_is(__ctobpl_const_2590, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2654} true;
    assert elem != 0;
    pdim := Mem_T.PDIM_Elem[PDIM_Elem(elem)];
    assume value_is(__ctobpl_const_2591, pdim);
    assume value_is(__ctobpl_const_2592, elem);
    assume value_is(__ctobpl_const_2593, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2655} true;
    assert elem != 0;
    qdim := Mem_T.QDIM_Elem[QDIM_Elem(elem)];
    assume value_is(__ctobpl_const_2594, qdim);
    assume value_is(__ctobpl_const_2595, elem);
    assume value_is(__ctobpl_const_2596, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2659} true;
    $datan.arg.1$29$ := BINARY_BOTH_INT(MULT(2, qdim), pdim);
    assume value_is(__ctobpl_const_2597, $datan.arg.1$29$);
    assume value_is(__ctobpl_const_2598, qdim);
    assume value_is(__ctobpl_const_2599, pdim);
    goto label_134;

  label_134:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2659} true;
    call result.datan$28 := datan($datan.arg.1$29$);
    assume value_is(__ctobpl_const_2600, $datan.arg.1$29$);
    assume value_is(__ctobpl_const_2601, $datan.arg.1$29$);
    goto label_137;

  label_137:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2659} true;
    angle := result.datan$28;
    assume value_is(__ctobpl_const_2602, angle);
    assume value_is(__ctobpl_const_2603, result.datan$28);
    goto label_138;

  label_138:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2665} true;
    pstep := pdim;
    assume value_is(__ctobpl_const_2604, pstep);
    assume value_is(__ctobpl_const_2605, pdim);
    goto label_139;

  label_139:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2666} true;
    call result.dsin$30 := dsin(angle);
    assume value_is(__ctobpl_const_2606, angle);
    assume value_is(__ctobpl_const_2607, angle);
    goto label_142;

  label_142:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2666} true;
    qstep := BINARY_BOTH_INT(qdim, result.dsin$30);
    assume value_is(__ctobpl_const_2608, qstep);
    assume value_is(__ctobpl_const_2609, qdim);
    assume value_is(__ctobpl_const_2610, result.dsin$30);
    goto label_143;

  label_143:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2669} true;
    assert grid != 0;
    Mem_T.PSTEP_Grid := Mem_T.PSTEP_Grid[PSTEP_Grid(grid) := pstep];
    assume value_is(__ctobpl_const_2611, grid);
    assume value_is(__ctobpl_const_2612, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2613, pstep);
    goto label_144;

  label_144:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2670} true;
    assert grid != 0;
    Mem_T.QSTEP_Grid := Mem_T.QSTEP_Grid[QSTEP_Grid(grid) := qstep];
    assume value_is(__ctobpl_const_2614, grid);
    assume value_is(__ctobpl_const_2615, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2616, qstep);
    goto label_145;

  label_145:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2671} true;
    assert grid != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(grid) := angle];
    assume value_is(__ctobpl_const_2617, grid);
    assume value_is(__ctobpl_const_2618, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2619, angle);
    goto label_60;

  label_111_case_0:
    assume INT_NEQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 0);
    assume INT_NEQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 1);
    assume value_is(__ctobpl_const_2589, elem);
    assume value_is(__ctobpl_const_2590, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_60;

  label_30_true:
    assume INT_NEQ(Mem_T.PX_Grid[PX_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2508, grid);
    assume value_is(__ctobpl_const_2509, Mem_T.PX_Grid[PX_Grid(grid)]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2611} true;
    assert grid != 0;
    px := Mem_T.PX_Grid[PX_Grid(grid)];
    assume value_is(__ctobpl_const_2646, px);
    assume value_is(__ctobpl_const_2647, grid);
    assume value_is(__ctobpl_const_2648, Mem_T.PX_Grid[PX_Grid(grid)]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2612} true;
    assert grid != 0;
    py := Mem_T.PY_Grid[PY_Grid(grid)];
    assume value_is(__ctobpl_const_2649, py);
    assume value_is(__ctobpl_const_2650, grid);
    assume value_is(__ctobpl_const_2651, Mem_T.PY_Grid[PY_Grid(grid)]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2613} true;
    assert grid != 0;
    qx := Mem_T.QX_Grid[QX_Grid(grid)];
    assume value_is(__ctobpl_const_2652, qx);
    assume value_is(__ctobpl_const_2653, grid);
    assume value_is(__ctobpl_const_2654, Mem_T.QX_Grid[QX_Grid(grid)]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2614} true;
    assert grid != 0;
    qy := Mem_T.QY_Grid[QY_Grid(grid)];
    assume value_is(__ctobpl_const_2655, qy);
    assume value_is(__ctobpl_const_2656, grid);
    assume value_is(__ctobpl_const_2657, Mem_T.QY_Grid[QY_Grid(grid)]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2616} true;
    $sqrt.arg.1$20$ := PLUS(MULT(px, px), 1, MULT(py, py));
    assume value_is(__ctobpl_const_2658, $sqrt.arg.1$20$);
    assume value_is(__ctobpl_const_2659, px);
    assume value_is(__ctobpl_const_2660, px);
    assume value_is(__ctobpl_const_2661, py);
    assume value_is(__ctobpl_const_2662, py);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2616} true;
    call result.sqrt$19 := sqrt($sqrt.arg.1$20$);
    assume value_is(__ctobpl_const_2663, $sqrt.arg.1$20$);
    assume value_is(__ctobpl_const_2664, $sqrt.arg.1$20$);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2616} true;
    pstep := result.sqrt$19;
    assume value_is(__ctobpl_const_2665, pstep);
    assume value_is(__ctobpl_const_2666, result.sqrt$19);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2617} true;
    $sqrt.arg.1$22$ := PLUS(MULT(qx, qx), 1, MULT(qy, qy));
    assume value_is(__ctobpl_const_2667, $sqrt.arg.1$22$);
    assume value_is(__ctobpl_const_2668, qx);
    assume value_is(__ctobpl_const_2669, qx);
    assume value_is(__ctobpl_const_2670, qy);
    assume value_is(__ctobpl_const_2671, qy);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2617} true;
    call result.sqrt$21 := sqrt($sqrt.arg.1$22$);
    assume value_is(__ctobpl_const_2672, $sqrt.arg.1$22$);
    assume value_is(__ctobpl_const_2673, $sqrt.arg.1$22$);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2617} true;
    qstep := result.sqrt$21;
    assume value_is(__ctobpl_const_2674, qstep);
    assume value_is(__ctobpl_const_2675, result.sqrt$21);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2619} true;
    $dacos.arg.1$24$ := BINARY_BOTH_INT(PLUS(MULT(px, qx), 1, MULT(py, qy)), MULT(pstep, qstep));
    assume value_is(__ctobpl_const_2676, $dacos.arg.1$24$);
    assume value_is(__ctobpl_const_2677, px);
    assume value_is(__ctobpl_const_2678, qx);
    assume value_is(__ctobpl_const_2679, py);
    assume value_is(__ctobpl_const_2680, qy);
    assume value_is(__ctobpl_const_2681, pstep);
    assume value_is(__ctobpl_const_2682, qstep);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2619} true;
    call result.dacos$23 := dacos($dacos.arg.1$24$);
    assume value_is(__ctobpl_const_2683, $dacos.arg.1$24$);
    assume value_is(__ctobpl_const_2684, $dacos.arg.1$24$);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2619} true;
    angle := result.dacos$23;
    assume value_is(__ctobpl_const_2685, angle);
    assume value_is(__ctobpl_const_2686, result.dacos$23);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2621} true;
    $dacos.arg.1$26$ := BINARY_BOTH_INT(px, pstep);
    assume value_is(__ctobpl_const_2687, $dacos.arg.1$26$);
    assume value_is(__ctobpl_const_2688, px);
    assume value_is(__ctobpl_const_2689, pstep);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2621} true;
    call result.dacos$25 := dacos($dacos.arg.1$26$);
    assume value_is(__ctobpl_const_2690, $dacos.arg.1$26$);
    assume value_is(__ctobpl_const_2691, $dacos.arg.1$26$);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2621} true;
    rot_angle := result.dacos$25;
    assume value_is(__ctobpl_const_2692, rot_angle);
    assume value_is(__ctobpl_const_2693, result.dacos$25);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2623} true;
    assert grid != 0;
    Mem_T.PSTEP_Grid := Mem_T.PSTEP_Grid[PSTEP_Grid(grid) := pstep];
    assume value_is(__ctobpl_const_2694, grid);
    assume value_is(__ctobpl_const_2695, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2696, pstep);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2624} true;
    assert grid != 0;
    Mem_T.QSTEP_Grid := Mem_T.QSTEP_Grid[QSTEP_Grid(grid) := qstep];
    assume value_is(__ctobpl_const_2697, grid);
    assume value_is(__ctobpl_const_2698, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2699, qstep);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2625} true;
    assert grid != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(grid) := angle];
    assume value_is(__ctobpl_const_2700, grid);
    assume value_is(__ctobpl_const_2701, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2702, angle);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2626} true;
    assert grid != 0;
    Mem_T.ROT_ANGLE_Grid := Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid) := rot_angle];
    assume value_is(__ctobpl_const_2703, grid);
    assume value_is(__ctobpl_const_2704, Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2705, rot_angle);
    goto label_60;

  label_25_case_3:
    assume INT_EQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 2);
    assume value_is(__ctobpl_const_2427, grid);
    assume value_is(__ctobpl_const_2428, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2591} true;
    assert elem != 0;
    goto label_29_true, label_29_false;

  label_29_false:
    assume !INT_NEQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 1);
    assume value_is(__ctobpl_const_2488, elem);
    assume value_is(__ctobpl_const_2489, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_186;

  label_186:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2596} true;
    assert grid != 0;
    goto label_186_true, label_186_false;

  label_186_false:
    assume !INT_EQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2490, grid);
    assume value_is(__ctobpl_const_2491, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_195;

  label_195:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2599} true;
    assert grid != 0;
    assert elem != 0;
    goto label_195_true, label_195_false;

  label_195_false:
    assume !INT_LT(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2492, grid);
    assume value_is(__ctobpl_const_2493, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2494, elem);
    assume value_is(__ctobpl_const_2495, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_198;

  label_198:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2602} true;
    assert grid != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(grid) := 60];
    assume value_is(__ctobpl_const_2505, grid);
    assume value_is(__ctobpl_const_2506, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_199;

  label_199:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2603} true;
    goto label_26;

  label_195_true:
    assume INT_LT(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2492, grid);
    assume value_is(__ctobpl_const_2493, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2494, elem);
    assume value_is(__ctobpl_const_2495, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_200;

  label_200:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2600} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_2496, group_ptr);
    goto label_201;

  label_201:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2600} true;
    goto label_202;

  label_202:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2600} true;
    call result.printf$16 := det_choice();
    goto label_198;

  label_186_true:
    assume INT_EQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2490, grid);
    assume value_is(__ctobpl_const_2491, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_196;

  label_196:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2597} true;
    assert grid != 0;
    assert elem != 0;
    Mem_T.PSTEP_Grid := Mem_T.PSTEP_Grid[PSTEP_Grid(grid) := Mem_T.PDIM_Elem[PDIM_Elem(elem)]];
    assume value_is(__ctobpl_const_2497, grid);
    assume value_is(__ctobpl_const_2498, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2499, elem);
    assume value_is(__ctobpl_const_2500, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_197;

  label_197:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2598} true;
    assert grid != 0;
    assert elem != 0;
    Mem_T.QSTEP_Grid := Mem_T.QSTEP_Grid[QSTEP_Grid(grid) := Mem_T.PDIM_Elem[PDIM_Elem(elem)]];
    assume value_is(__ctobpl_const_2501, grid);
    assume value_is(__ctobpl_const_2502, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2503, elem);
    assume value_is(__ctobpl_const_2504, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_198;

  label_29_true:
    assume INT_NEQ(Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)], 1);
    assume value_is(__ctobpl_const_2488, elem);
    assume value_is(__ctobpl_const_2489, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(elem)]);
    goto label_187;

  label_187:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2592} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_2507, group_ptr);
    goto label_188;

  label_188:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2592} true;
    goto label_189;

  label_189:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2592} true;
    call result.printf$13 := det_choice();
    goto label_192;

  label_192:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2593} true;
    return;

  label_25_case_2:
    assume INT_EQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 1);
    assume value_is(__ctobpl_const_2427, grid);
    assume value_is(__ctobpl_const_2428, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2552} true;
    assert grid != 0;
    goto label_28_true, label_28_false;

  label_28_false:
    assume !INT_EQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2467, grid);
    assume value_is(__ctobpl_const_2468, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_205;

  label_205:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2580} true;
    assert grid != 0;
    assert elem != 0;
    goto label_205_true, label_205_false;

  label_205_false:
    assume !INT_LT(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2469, grid);
    assume value_is(__ctobpl_const_2470, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2471, elem);
    assume value_is(__ctobpl_const_2472, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_210;

  label_210:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2580} true;
    assert grid != 0;
    assert elem != 0;
    goto label_210_true, label_210_false;

  label_210_false:
    assume !INT_LT(Mem_T.QSTEP_Grid[QSTEP_Grid(grid)], Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2473, grid);
    assume value_is(__ctobpl_const_2474, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2475, elem);
    assume value_is(__ctobpl_const_2476, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    goto label_208;

  label_208:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2586} true;
    assert grid != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(grid) := 90];
    assume value_is(__ctobpl_const_2486, grid);
    assume value_is(__ctobpl_const_2487, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_209;

  label_209:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2587} true;
    goto label_26;

  label_210_true:
    assume INT_LT(Mem_T.QSTEP_Grid[QSTEP_Grid(grid)], Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2473, grid);
    assume value_is(__ctobpl_const_2474, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2475, elem);
    assume value_is(__ctobpl_const_2476, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    goto label_211;

  label_211:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2581} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_2477, group_ptr);
    goto label_212;

  label_212:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2581} true;
    goto label_213;

  label_213:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2581} true;
    call result.printf$10 := det_choice();
    goto label_208;

  label_205_true:
    assume INT_LT(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2469, grid);
    assume value_is(__ctobpl_const_2470, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2471, elem);
    assume value_is(__ctobpl_const_2472, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_211;

  label_28_true:
    assume INT_EQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2467, grid);
    assume value_is(__ctobpl_const_2468, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_206;

  label_206:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2563} true;
    assert grid != 0;
    assert elem != 0;
    Mem_T.PSTEP_Grid := Mem_T.PSTEP_Grid[PSTEP_Grid(grid) := Mem_T.PDIM_Elem[PDIM_Elem(elem)]];
    assume value_is(__ctobpl_const_2478, grid);
    assume value_is(__ctobpl_const_2479, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2480, elem);
    assume value_is(__ctobpl_const_2481, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    goto label_207;

  label_207:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2564} true;
    assert grid != 0;
    assert elem != 0;
    Mem_T.QSTEP_Grid := Mem_T.QSTEP_Grid[QSTEP_Grid(grid) := Mem_T.QDIM_Elem[QDIM_Elem(elem)]];
    assume value_is(__ctobpl_const_2482, grid);
    assume value_is(__ctobpl_const_2483, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2484, elem);
    assume value_is(__ctobpl_const_2485, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    goto label_208;

  label_25_case_1:
    assume INT_EQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2427, grid);
    assume value_is(__ctobpl_const_2428, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2514} true;
    assert grid != 0;
    goto label_27_true, label_27_false;

  label_27_false:
    assume !INT_EQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2429, grid);
    assume value_is(__ctobpl_const_2430, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_216;

  label_216:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2541} true;
    assert elem != 0;
    assert elem != 0;
    assert elem != 0;
    assert elem != 0;
    call result.doubmax$6 := doubmax(Mem_T.PDIM_Elem[PDIM_Elem(elem)], Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2431, elem);
    assume value_is(__ctobpl_const_2432, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2433, elem);
    assume value_is(__ctobpl_const_2434, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2435, elem);
    assume value_is(__ctobpl_const_2436, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2437, elem);
    assume value_is(__ctobpl_const_2438, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    goto label_229;

  label_229:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2541} true;
    assert grid != 0;
    goto label_229_true, label_229_false;

  label_229_false:
    assume !INT_LT(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], result.doubmax$6);
    assume value_is(__ctobpl_const_2439, grid);
    assume value_is(__ctobpl_const_2440, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2441, result.doubmax$6);
    goto label_227;

  label_227:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2547} true;
    assert grid != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(grid) := 90];
    assume value_is(__ctobpl_const_2465, grid);
    assume value_is(__ctobpl_const_2466, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_228;

  label_228:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2548} true;
    goto label_26;

  label_229_true:
    assume INT_LT(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], result.doubmax$6);
    assume value_is(__ctobpl_const_2439, grid);
    assume value_is(__ctobpl_const_2440, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2441, result.doubmax$6);
    goto label_230;

  label_230:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2542} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_2442, group_ptr);
    goto label_231;

  label_231:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2542} true;
    goto label_232;

  label_232:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2542} true;
    call result.printf$7 := det_choice();
    goto label_227;

  label_27_true:
    assume INT_EQ(Mem_T.PSTEP_Grid[PSTEP_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2429, grid);
    assume value_is(__ctobpl_const_2430, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_219;

  label_219:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2525} true;
    assert elem != 0;
    assert elem != 0;
    assert elem != 0;
    assert elem != 0;
    call result.doubmax$4 := doubmax(Mem_T.PDIM_Elem[PDIM_Elem(elem)], Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2443, elem);
    assume value_is(__ctobpl_const_2444, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2445, elem);
    assume value_is(__ctobpl_const_2446, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2447, elem);
    assume value_is(__ctobpl_const_2448, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2449, elem);
    assume value_is(__ctobpl_const_2450, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    goto label_222;

  label_222:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2525} true;
    assert grid != 0;
    Mem_T.PSTEP_Grid := Mem_T.PSTEP_Grid[PSTEP_Grid(grid) := result.doubmax$4];
    assume value_is(__ctobpl_const_2451, grid);
    assume value_is(__ctobpl_const_2452, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2453, result.doubmax$4);
    goto label_223;

  label_223:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2526} true;
    assert elem != 0;
    assert elem != 0;
    assert elem != 0;
    assert elem != 0;
    call result.doubmax$5 := doubmax(Mem_T.PDIM_Elem[PDIM_Elem(elem)], Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2454, elem);
    assume value_is(__ctobpl_const_2455, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2456, elem);
    assume value_is(__ctobpl_const_2457, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2458, elem);
    assume value_is(__ctobpl_const_2459, Mem_T.PDIM_Elem[PDIM_Elem(elem)]);
    assume value_is(__ctobpl_const_2460, elem);
    assume value_is(__ctobpl_const_2461, Mem_T.QDIM_Elem[QDIM_Elem(elem)]);
    goto label_226;

  label_226:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2526} true;
    assert grid != 0;
    Mem_T.QSTEP_Grid := Mem_T.QSTEP_Grid[QSTEP_Grid(grid) := result.doubmax$5];
    assume value_is(__ctobpl_const_2462, grid);
    assume value_is(__ctobpl_const_2463, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2464, result.doubmax$5);
    goto label_227;

  label_25_case_0:
    assume INT_NEQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 0);
    assume INT_NEQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 1);
    assume INT_NEQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 2);
    assume INT_NEQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 3);
    assume value_is(__ctobpl_const_2427, grid);
    assume value_is(__ctobpl_const_2428, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_26;
}



procedure {:extern} fixsgrid(grid.__1: int) returns (result.fixsgrid$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} fixsgrid(grid.__1: int) returns (result.fixsgrid$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle: int;
  var {:extern} angle_ptr: int;
  var {:extern} angle_unit: int;
  var {:extern} grid: int;
  var {:extern} pqstep_unit: int;
  var {:extern} pqxy_unit: int;
  var {:extern} pstep: int;
  var {:extern} pstep_ptr: int;
  var {:extern} px: int;
  var {:extern} px_ptr: int;
  var {:extern} py: int;
  var {:extern} py_ptr: int;
  var {:extern} qstep: int;
  var {:extern} qstep_ptr: int;
  var {:extern} qx: int;
  var {:extern} qx_ptr: int;
  var {:extern} qy: int;
  var {:extern} qy_ptr: int;
  var {:extern} result.degconv$6: int;
  var {:extern} result.mmconv$2: int;
  var {:extern} result.mmconv$3: int;
  var {:extern} result.mmconv$4: int;
  var {:extern} result.mmconv$5: int;
  var {:extern} result.mmconv$7: int;
  var {:extern} result.mmconv$8: int;
  var {:extern} result.mmconv$9: int;
  var {:extern} result.mmconv$10: int;
  var {:extern} result.mmconv$11: int;
  var {:extern} result.mmconv$12: int;
  var {:extern} rot_angle: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(grid.__1, alloc);
    call angle := __HAVOC_det_malloc(8);
    angle_ptr := 0;
    angle_unit := 0;
    grid := 0;
    pqstep_unit := 0;
    pqxy_unit := 0;
    call pstep := __HAVOC_det_malloc(8);
    pstep_ptr := 0;
    call px := __HAVOC_det_malloc(8);
    px_ptr := 0;
    call py := __HAVOC_det_malloc(8);
    py_ptr := 0;
    call qstep := __HAVOC_det_malloc(8);
    qstep_ptr := 0;
    call qx := __HAVOC_det_malloc(8);
    qx_ptr := 0;
    call qy := __HAVOC_det_malloc(8);
    qy_ptr := 0;
    result.degconv$6 := 0;
    result.fixsgrid$1 := 0;
    result.mmconv$2 := 0;
    result.mmconv$3 := 0;
    result.mmconv$4 := 0;
    result.mmconv$5 := 0;
    result.mmconv$7 := 0;
    result.mmconv$8 := 0;
    result.mmconv$9 := 0;
    result.mmconv$10 := 0;
    result.mmconv$11 := 0;
    result.mmconv$12 := 0;
    rot_angle := 0;
    grid := grid.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2759} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2759} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2759} true;
    angle_ptr := angle;
    assume value_is(__ctobpl_const_2774, angle_ptr);
    assume value_is(__ctobpl_const_2775, Mem_T.FLOAT[angle]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2760} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2761} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2761} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2761} true;
    pstep_ptr := pstep;
    assume value_is(__ctobpl_const_2776, pstep_ptr);
    assume value_is(__ctobpl_const_2777, Mem_T.FLOAT[pstep]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2762} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2762} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2762} true;
    qstep_ptr := qstep;
    assume value_is(__ctobpl_const_2778, qstep_ptr);
    assume value_is(__ctobpl_const_2779, Mem_T.FLOAT[qstep]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2763} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2764} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2764} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2764} true;
    px_ptr := px;
    assume value_is(__ctobpl_const_2780, px_ptr);
    assume value_is(__ctobpl_const_2781, Mem_T.FLOAT[px]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2765} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2765} true;
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2765} true;
    py_ptr := py;
    assume value_is(__ctobpl_const_2782, py_ptr);
    assume value_is(__ctobpl_const_2783, Mem_T.FLOAT[py]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2766} true;
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2766} true;
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2766} true;
    qx_ptr := qx;
    assume value_is(__ctobpl_const_2784, qx_ptr);
    assume value_is(__ctobpl_const_2785, Mem_T.FLOAT[qx]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2767} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2767} true;
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2767} true;
    qy_ptr := qy;
    assume value_is(__ctobpl_const_2786, qy_ptr);
    assume value_is(__ctobpl_const_2787, Mem_T.FLOAT[qy]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2768} true;
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2769} true;
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2772} true;
    assert grid != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle := Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]];
    assume value_is(__ctobpl_const_2788, Mem_T.FLOAT[angle]);
    assume value_is(__ctobpl_const_2789, grid);
    assume value_is(__ctobpl_const_2790, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2773} true;
    assert grid != 0;
    angle_unit := Mem_T.ANGLE_UNIT_Grid[ANGLE_UNIT_Grid(grid)];
    assume value_is(__ctobpl_const_2791, angle_unit);
    assume value_is(__ctobpl_const_2792, grid);
    assume value_is(__ctobpl_const_2793, Mem_T.ANGLE_UNIT_Grid[ANGLE_UNIT_Grid(grid)]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2774} true;
    assert grid != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep := Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]];
    assume value_is(__ctobpl_const_2794, Mem_T.FLOAT[pstep]);
    assume value_is(__ctobpl_const_2795, grid);
    assume value_is(__ctobpl_const_2796, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2775} true;
    assert grid != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep := Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]];
    assume value_is(__ctobpl_const_2797, Mem_T.FLOAT[qstep]);
    assume value_is(__ctobpl_const_2798, grid);
    assume value_is(__ctobpl_const_2799, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2776} true;
    assert grid != 0;
    pqstep_unit := Mem_T.PQSTEP_UNIT_Grid[PQSTEP_UNIT_Grid(grid)];
    assume value_is(__ctobpl_const_2800, pqstep_unit);
    assume value_is(__ctobpl_const_2801, grid);
    assume value_is(__ctobpl_const_2802, Mem_T.PQSTEP_UNIT_Grid[PQSTEP_UNIT_Grid(grid)]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2777} true;
    assert grid != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[px := Mem_T.PX_Grid[PX_Grid(grid)]];
    assume value_is(__ctobpl_const_2803, Mem_T.FLOAT[px]);
    assume value_is(__ctobpl_const_2804, grid);
    assume value_is(__ctobpl_const_2805, Mem_T.PX_Grid[PX_Grid(grid)]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2778} true;
    assert grid != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[py := Mem_T.PY_Grid[PY_Grid(grid)]];
    assume value_is(__ctobpl_const_2806, Mem_T.FLOAT[py]);
    assume value_is(__ctobpl_const_2807, grid);
    assume value_is(__ctobpl_const_2808, Mem_T.PY_Grid[PY_Grid(grid)]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2779} true;
    assert grid != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qx := Mem_T.QX_Grid[QX_Grid(grid)]];
    assume value_is(__ctobpl_const_2809, Mem_T.FLOAT[qx]);
    assume value_is(__ctobpl_const_2810, grid);
    assume value_is(__ctobpl_const_2811, Mem_T.QX_Grid[QX_Grid(grid)]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2780} true;
    assert grid != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qy := Mem_T.QY_Grid[QY_Grid(grid)]];
    assume value_is(__ctobpl_const_2812, Mem_T.FLOAT[qy]);
    assume value_is(__ctobpl_const_2813, grid);
    assume value_is(__ctobpl_const_2814, Mem_T.QY_Grid[QY_Grid(grid)]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2781} true;
    assert grid != 0;
    pqxy_unit := Mem_T.PQXY_UNIT_Grid[PQXY_UNIT_Grid(grid)];
    assume value_is(__ctobpl_const_2815, pqxy_unit);
    assume value_is(__ctobpl_const_2816, grid);
    assume value_is(__ctobpl_const_2817, Mem_T.PQXY_UNIT_Grid[PQXY_UNIT_Grid(grid)]);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2782} true;
    assert grid != 0;
    rot_angle := Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid)];
    assume value_is(__ctobpl_const_2818, rot_angle);
    assume value_is(__ctobpl_const_2819, grid);
    assume value_is(__ctobpl_const_2820, Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid)]);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2784} true;
    assert grid != 0;
    goto label_39_case_0, label_39_case_1, label_39_case_2, label_39_case_3, label_39_case_4, label_39_case_5;

  label_39_case_5:
    assume INT_EQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 4);
    assume value_is(__ctobpl_const_2821, grid);
    assume value_is(__ctobpl_const_2822, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2788} true;
    call interror(havoc_stringTemp);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2789} true;
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2849} true;
    angle_unit := 0;
    assume value_is(__ctobpl_const_2894, angle_unit);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2850} true;
    pqstep_unit := 0;
    assume value_is(__ctobpl_const_2895, pqstep_unit);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2851} true;
    pqxy_unit := 0;
    assume value_is(__ctobpl_const_2896, pqxy_unit);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2852} true;
    rot_angle := 0;
    assume value_is(__ctobpl_const_2897, rot_angle);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2855} true;
    assert grid != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(grid) := Mem_T.FLOAT[angle]];
    assume value_is(__ctobpl_const_2898, grid);
    assume value_is(__ctobpl_const_2899, Mem_T.ANGLE_Grid[ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2900, Mem_T.FLOAT[angle]);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2856} true;
    assert grid != 0;
    Mem_T.ANGLE_UNIT_Grid := Mem_T.ANGLE_UNIT_Grid[ANGLE_UNIT_Grid(grid) := angle_unit];
    assume value_is(__ctobpl_const_2901, grid);
    assume value_is(__ctobpl_const_2902, Mem_T.ANGLE_UNIT_Grid[ANGLE_UNIT_Grid(grid)]);
    assume value_is(__ctobpl_const_2903, angle_unit);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2857} true;
    assert grid != 0;
    Mem_T.PSTEP_Grid := Mem_T.PSTEP_Grid[PSTEP_Grid(grid) := Mem_T.FLOAT[pstep]];
    assume value_is(__ctobpl_const_2904, grid);
    assume value_is(__ctobpl_const_2905, Mem_T.PSTEP_Grid[PSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2906, Mem_T.FLOAT[pstep]);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2858} true;
    assert grid != 0;
    Mem_T.QSTEP_Grid := Mem_T.QSTEP_Grid[QSTEP_Grid(grid) := Mem_T.FLOAT[qstep]];
    assume value_is(__ctobpl_const_2907, grid);
    assume value_is(__ctobpl_const_2908, Mem_T.QSTEP_Grid[QSTEP_Grid(grid)]);
    assume value_is(__ctobpl_const_2909, Mem_T.FLOAT[qstep]);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2859} true;
    assert grid != 0;
    Mem_T.PQSTEP_UNIT_Grid := Mem_T.PQSTEP_UNIT_Grid[PQSTEP_UNIT_Grid(grid) := pqstep_unit];
    assume value_is(__ctobpl_const_2910, grid);
    assume value_is(__ctobpl_const_2911, Mem_T.PQSTEP_UNIT_Grid[PQSTEP_UNIT_Grid(grid)]);
    assume value_is(__ctobpl_const_2912, pqstep_unit);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2860} true;
    assert grid != 0;
    Mem_T.PX_Grid := Mem_T.PX_Grid[PX_Grid(grid) := Mem_T.FLOAT[px]];
    assume value_is(__ctobpl_const_2913, grid);
    assume value_is(__ctobpl_const_2914, Mem_T.PX_Grid[PX_Grid(grid)]);
    assume value_is(__ctobpl_const_2915, Mem_T.FLOAT[px]);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2861} true;
    assert grid != 0;
    Mem_T.PY_Grid := Mem_T.PY_Grid[PY_Grid(grid) := Mem_T.FLOAT[py]];
    assume value_is(__ctobpl_const_2916, grid);
    assume value_is(__ctobpl_const_2917, Mem_T.PY_Grid[PY_Grid(grid)]);
    assume value_is(__ctobpl_const_2918, Mem_T.FLOAT[py]);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2862} true;
    assert grid != 0;
    Mem_T.QX_Grid := Mem_T.QX_Grid[QX_Grid(grid) := Mem_T.FLOAT[qx]];
    assume value_is(__ctobpl_const_2919, grid);
    assume value_is(__ctobpl_const_2920, Mem_T.QX_Grid[QX_Grid(grid)]);
    assume value_is(__ctobpl_const_2921, Mem_T.FLOAT[qx]);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2863} true;
    assert grid != 0;
    Mem_T.QY_Grid := Mem_T.QY_Grid[QY_Grid(grid) := Mem_T.FLOAT[qy]];
    assume value_is(__ctobpl_const_2922, grid);
    assume value_is(__ctobpl_const_2923, Mem_T.QY_Grid[QY_Grid(grid)]);
    assume value_is(__ctobpl_const_2924, Mem_T.FLOAT[qy]);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2864} true;
    assert grid != 0;
    Mem_T.PQXY_UNIT_Grid := Mem_T.PQXY_UNIT_Grid[PQXY_UNIT_Grid(grid) := pqxy_unit];
    assume value_is(__ctobpl_const_2925, grid);
    assume value_is(__ctobpl_const_2926, Mem_T.PQXY_UNIT_Grid[PQXY_UNIT_Grid(grid)]);
    assume value_is(__ctobpl_const_2927, pqxy_unit);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2865} true;
    assert grid != 0;
    Mem_T.ROT_ANGLE_Grid := Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid) := rot_angle];
    assume value_is(__ctobpl_const_2928, grid);
    assume value_is(__ctobpl_const_2929, Mem_T.ROT_ANGLE_Grid[ROT_ANGLE_Grid(grid)]);
    assume value_is(__ctobpl_const_2930, rot_angle);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2867} true;
    result.fixsgrid$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2868} true;
    call __HAVOC_free(angle);
    call __HAVOC_free(pstep);
    call __HAVOC_free(px);
    call __HAVOC_free(py);
    call __HAVOC_free(qstep);
    call __HAVOC_free(qx);
    call __HAVOC_free(qy);
    return;

  label_39_case_4:
    assume INT_EQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 3);
    assume value_is(__ctobpl_const_2821, grid);
    assume value_is(__ctobpl_const_2822, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2822} true;
    goto label_44_true, label_44_false;

  label_44_false:
    assume !INT_NEQ(Mem_T.FLOAT[angle], 0);
    assume value_is(__ctobpl_const_2852, Mem_T.FLOAT[angle]);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2829} true;
    goto label_49_true, label_49_false;

  label_49_false:
    assume !INT_NEQ(Mem_T.FLOAT[pstep], 0);
    assume value_is(__ctobpl_const_2861, Mem_T.FLOAT[pstep]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2837} true;
    goto label_57_true, label_57_false;

  label_57_false:
    assume !INT_NEQ(Mem_T.FLOAT[px], 0);
    assume value_is(__ctobpl_const_2874, Mem_T.FLOAT[px]);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2846} true;
    goto label_40;

  label_57_true:
    assume INT_NEQ(Mem_T.FLOAT[px], 0);
    assume value_is(__ctobpl_const_2874, Mem_T.FLOAT[px]);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2838} true;
    call result.mmconv$9 := mmconv(px_ptr, pqxy_unit);
    assume value_is(__ctobpl_const_2875, px_ptr);
    assume value_is(__ctobpl_const_2876, pqxy_unit);
    assume value_is(__ctobpl_const_2877, px_ptr);
    assume value_is(__ctobpl_const_2878, pqxy_unit);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2839} true;
    call result.mmconv$10 := mmconv(py_ptr, pqxy_unit);
    assume value_is(__ctobpl_const_2879, py_ptr);
    assume value_is(__ctobpl_const_2880, pqxy_unit);
    assume value_is(__ctobpl_const_2881, py_ptr);
    assume value_is(__ctobpl_const_2882, pqxy_unit);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2840} true;
    call result.mmconv$11 := mmconv(qx_ptr, pqxy_unit);
    assume value_is(__ctobpl_const_2883, qx_ptr);
    assume value_is(__ctobpl_const_2884, pqxy_unit);
    assume value_is(__ctobpl_const_2885, qx_ptr);
    assume value_is(__ctobpl_const_2886, pqxy_unit);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2841} true;
    call result.mmconv$12 := mmconv(qy_ptr, pqxy_unit);
    assume value_is(__ctobpl_const_2887, qy_ptr);
    assume value_is(__ctobpl_const_2888, pqxy_unit);
    assume value_is(__ctobpl_const_2889, qy_ptr);
    assume value_is(__ctobpl_const_2890, pqxy_unit);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2842} true;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep := 0];
    assume value_is(__ctobpl_const_2891, Mem_T.FLOAT[pstep]);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2843} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep := 0];
    assume value_is(__ctobpl_const_2892, Mem_T.FLOAT[qstep]);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2844} true;
    Mem_T.FLOAT := Mem_T.FLOAT[angle := 0];
    assume value_is(__ctobpl_const_2893, Mem_T.FLOAT[angle]);
    goto label_68;

  label_49_true:
    assume INT_NEQ(Mem_T.FLOAT[pstep], 0);
    assume value_is(__ctobpl_const_2861, Mem_T.FLOAT[pstep]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2830} true;
    call result.mmconv$7 := mmconv(pstep_ptr, pqstep_unit);
    assume value_is(__ctobpl_const_2862, pstep_ptr);
    assume value_is(__ctobpl_const_2863, pqstep_unit);
    assume value_is(__ctobpl_const_2864, pstep_ptr);
    assume value_is(__ctobpl_const_2865, pqstep_unit);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2831} true;
    call result.mmconv$8 := mmconv(qstep_ptr, pqstep_unit);
    assume value_is(__ctobpl_const_2866, qstep_ptr);
    assume value_is(__ctobpl_const_2867, pqstep_unit);
    assume value_is(__ctobpl_const_2868, qstep_ptr);
    assume value_is(__ctobpl_const_2869, pqstep_unit);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2832} true;
    Mem_T.FLOAT := Mem_T.FLOAT[px := 0];
    assume value_is(__ctobpl_const_2870, Mem_T.FLOAT[px]);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2833} true;
    Mem_T.FLOAT := Mem_T.FLOAT[py := 0];
    assume value_is(__ctobpl_const_2871, Mem_T.FLOAT[py]);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2834} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qx := 0];
    assume value_is(__ctobpl_const_2872, Mem_T.FLOAT[qx]);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2835} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qy := 0];
    assume value_is(__ctobpl_const_2873, Mem_T.FLOAT[qy]);
    goto label_57;

  label_44_true:
    assume INT_NEQ(Mem_T.FLOAT[angle], 0);
    assume value_is(__ctobpl_const_2852, Mem_T.FLOAT[angle]);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2823} true;
    call result.degconv$6 := degconv(angle_ptr, angle_unit);
    assume value_is(__ctobpl_const_2853, angle_ptr);
    assume value_is(__ctobpl_const_2854, angle_unit);
    assume value_is(__ctobpl_const_2855, angle_ptr);
    assume value_is(__ctobpl_const_2856, angle_unit);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2824} true;
    Mem_T.FLOAT := Mem_T.FLOAT[px := 0];
    assume value_is(__ctobpl_const_2857, Mem_T.FLOAT[px]);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2825} true;
    Mem_T.FLOAT := Mem_T.FLOAT[py := 0];
    assume value_is(__ctobpl_const_2858, Mem_T.FLOAT[py]);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2826} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qx := 0];
    assume value_is(__ctobpl_const_2859, Mem_T.FLOAT[qx]);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2827} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qy := 0];
    assume value_is(__ctobpl_const_2860, Mem_T.FLOAT[qy]);
    goto label_49;

  label_39_case_3:
    assume INT_EQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 2);
    assume value_is(__ctobpl_const_2821, grid);
    assume value_is(__ctobpl_const_2822, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2812} true;
    goto label_43_true, label_43_false;

  label_43_false:
    assume !INT_NEQ(Mem_T.FLOAT[pstep], 0);
    assume value_is(__ctobpl_const_2843, Mem_T.FLOAT[pstep]);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2816} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep := 0];
    assume value_is(__ctobpl_const_2844, Mem_T.FLOAT[qstep]);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2818} true;
    Mem_T.FLOAT := Mem_T.FLOAT[angle := 60];
    assume value_is(__ctobpl_const_2851, Mem_T.FLOAT[angle]);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2819} true;
    goto label_40;

  label_43_true:
    assume INT_NEQ(Mem_T.FLOAT[pstep], 0);
    assume value_is(__ctobpl_const_2843, Mem_T.FLOAT[pstep]);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2813} true;
    call result.mmconv$5 := mmconv(pstep_ptr, pqstep_unit);
    assume value_is(__ctobpl_const_2845, pstep_ptr);
    assume value_is(__ctobpl_const_2846, pqstep_unit);
    assume value_is(__ctobpl_const_2847, pstep_ptr);
    assume value_is(__ctobpl_const_2848, pqstep_unit);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2814} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep := Mem_T.FLOAT[pstep]];
    assume value_is(__ctobpl_const_2849, Mem_T.FLOAT[qstep]);
    assume value_is(__ctobpl_const_2850, Mem_T.FLOAT[pstep]);
    goto label_89;

  label_39_case_2:
    assume INT_EQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 1);
    assume value_is(__ctobpl_const_2821, grid);
    assume value_is(__ctobpl_const_2822, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2802} true;
    goto label_42_true, label_42_false;

  label_42_false:
    assume !INT_NEQ(Mem_T.FLOAT[pstep], 0);
    assume value_is(__ctobpl_const_2832, Mem_T.FLOAT[pstep]);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2806} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep := 0];
    assume value_is(__ctobpl_const_2833, Mem_T.FLOAT[qstep]);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2808} true;
    Mem_T.FLOAT := Mem_T.FLOAT[angle := 90];
    assume value_is(__ctobpl_const_2842, Mem_T.FLOAT[angle]);
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2809} true;
    goto label_40;

  label_42_true:
    assume INT_NEQ(Mem_T.FLOAT[pstep], 0);
    assume value_is(__ctobpl_const_2832, Mem_T.FLOAT[pstep]);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2803} true;
    call result.mmconv$3 := mmconv(pstep_ptr, pqstep_unit);
    assume value_is(__ctobpl_const_2834, pstep_ptr);
    assume value_is(__ctobpl_const_2835, pqstep_unit);
    assume value_is(__ctobpl_const_2836, pstep_ptr);
    assume value_is(__ctobpl_const_2837, pqstep_unit);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2804} true;
    call result.mmconv$4 := mmconv(qstep_ptr, pqstep_unit);
    assume value_is(__ctobpl_const_2838, qstep_ptr);
    assume value_is(__ctobpl_const_2839, pqstep_unit);
    assume value_is(__ctobpl_const_2840, qstep_ptr);
    assume value_is(__ctobpl_const_2841, pqstep_unit);
    goto label_98;

  label_39_case_1:
    assume INT_EQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 0);
    assume value_is(__ctobpl_const_2821, grid);
    assume value_is(__ctobpl_const_2822, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2792} true;
    goto label_41_true, label_41_false;

  label_41_false:
    assume !INT_NEQ(Mem_T.FLOAT[pstep], 0);
    assume value_is(__ctobpl_const_2823, Mem_T.FLOAT[pstep]);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2796} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep := 0];
    assume value_is(__ctobpl_const_2824, Mem_T.FLOAT[qstep]);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2798} true;
    Mem_T.FLOAT := Mem_T.FLOAT[angle := 90];
    assume value_is(__ctobpl_const_2831, Mem_T.FLOAT[angle]);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2799} true;
    goto label_40;

  label_41_true:
    assume INT_NEQ(Mem_T.FLOAT[pstep], 0);
    assume value_is(__ctobpl_const_2823, Mem_T.FLOAT[pstep]);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2793} true;
    call result.mmconv$2 := mmconv(pstep_ptr, pqstep_unit);
    assume value_is(__ctobpl_const_2825, pstep_ptr);
    assume value_is(__ctobpl_const_2826, pqstep_unit);
    assume value_is(__ctobpl_const_2827, pstep_ptr);
    assume value_is(__ctobpl_const_2828, pqstep_unit);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2794} true;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep := Mem_T.FLOAT[pstep]];
    assume value_is(__ctobpl_const_2829, Mem_T.FLOAT[qstep]);
    assume value_is(__ctobpl_const_2830, Mem_T.FLOAT[pstep]);
    goto label_105;

  label_39_case_0:
    assume INT_NEQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 0);
    assume INT_NEQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 1);
    assume INT_NEQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 2);
    assume INT_NEQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 3);
    assume INT_NEQ(Mem_T.TYPE_Grid[TYPE_Grid(grid)], 4);
    assume value_is(__ctobpl_const_2821, grid);
    assume value_is(__ctobpl_const_2822, Mem_T.TYPE_Grid[TYPE_Grid(grid)]);
    goto label_40;
}



procedure {:extern} floatsup();
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} floatsup()
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} dummy: int;
  var {:extern} $printf.arg.2$3$: int;
  var {:extern} result.printf$1: int;
  var {:extern} result.printf$2: int;
  var {:extern} result.printf$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    dummy := 0;
    $printf.arg.2$3$ := 0;
    result.printf$1 := 0;
    result.printf$2 := 0;
    result.printf$4 := 0;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2878} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2879} true;
    dummy := 1;
    assume value_is(__ctobpl_const_2931, dummy);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2881} true;
    call result.printf$1 := det_choice();
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2882} true;
    $printf.arg.2$3$ := dummy;
    assume value_is(__ctobpl_const_2932, $printf.arg.2$3$);
    assume value_is(__ctobpl_const_2933, dummy);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2882} true;
    call result.printf$2 := det_choice();
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2883} true;
    call result.printf$4 := det_choice();
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2884} true;
    return;
}



procedure {:extern} geomspec(p1.__1: int, pp2.__1: int, geometry_ptr.__1: int, radius_ptr.__1: int, radius_unit_ptr.__1: int, pdim_ptr.__1: int, qdim_ptr.__1: int, pqdim_unit_ptr.__1: int) returns (result.geomspec$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} geomspec(p1.__1: int, pp2.__1: int, geometry_ptr.__1: int, radius_ptr.__1: int, radius_unit_ptr.__1: int, pdim_ptr.__1: int, qdim_ptr.__1: int, pqdim_unit_ptr.__1: int) returns (result.geomspec$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} geometry_ptr: int;
  var {:extern} p1: int;
  var {:extern} $parserro.arg.3$4$: int;
  var {:extern} pdim_ptr: int;
  var {:extern} pp2: int;
  var {:extern} pqdim_unit_ptr: int;
  var {:extern} $printf.arg.2$10$: int;
  var {:extern} $printf.arg.2$7$: int;
  var {:extern} qdim_ptr: int;
  var {:extern} radius_ptr: int;
  var {:extern} radius_unit_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.circspec$8: int;
  var {:extern} result.printf$6: int;
  var {:extern} result.printf$9: int;
  var {:extern} result.recspec$5: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(geometry_ptr.__1, alloc);
    assume INT_LT(radius_ptr.__1, alloc);
    assume INT_LT(radius_unit_ptr.__1, alloc);
    assume INT_LT(pdim_ptr.__1, alloc);
    assume INT_LT(qdim_ptr.__1, alloc);
    assume INT_LT(pqdim_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    geometry_ptr := 0;
    p1 := 0;
    $parserro.arg.3$4$ := 0;
    pdim_ptr := 0;
    pp2 := 0;
    pqdim_unit_ptr := 0;
    $printf.arg.2$10$ := 0;
    $printf.arg.2$7$ := 0;
    qdim_ptr := 0;
    radius_ptr := 0;
    radius_unit_ptr := 0;
    result.GetKeyword$2 := 0;
    result.circspec$8 := 0;
    result.geomspec$1 := 0;
    result.printf$6 := 0;
    result.printf$9 := 0;
    result.recspec$5 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    geometry_ptr := geometry_ptr.__1;
    radius_ptr := radius_ptr.__1;
    radius_unit_ptr := radius_unit_ptr.__1;
    pdim_ptr := pdim_ptr.__1;
    qdim_ptr := qdim_ptr.__1;
    pqdim_unit_ptr := pqdim_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3117} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3117} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3117} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_2934, curr_ptr);
    assume value_is(__ctobpl_const_2935, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3118} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3121} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_2936, curr_ptr);
    assume value_is(__ctobpl_const_2937, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_2938, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3122} true;
    error := 0;
    assume value_is(__ctobpl_const_2939, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3125} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 29);
    assume value_is(__ctobpl_const_2940, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3125} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_2941, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_2942, curr_ptr);
    assume value_is(__ctobpl_const_2943, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_2944, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3125} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_2945, error);
    assume value_is(__ctobpl_const_2946, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3126} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_2947, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3133} true;
    assert geometry_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[geometry_ptr := 0];
    assume value_is(__ctobpl_const_2948, geometry_ptr);
    assume value_is(__ctobpl_const_2949, Mem_T.INT4[geometry_ptr]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3134} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.recspec$5 := recspec(Mem_T.Pcharac[curr_ptr], curr_ptr, pdim_ptr, qdim_ptr, pqdim_unit_ptr);
    assume value_is(__ctobpl_const_2950, curr_ptr);
    assume value_is(__ctobpl_const_2951, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_2952, curr_ptr);
    assume value_is(__ctobpl_const_2953, pdim_ptr);
    assume value_is(__ctobpl_const_2954, qdim_ptr);
    assume value_is(__ctobpl_const_2955, pqdim_unit_ptr);
    assume value_is(__ctobpl_const_2956, curr_ptr);
    assume value_is(__ctobpl_const_2957, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_2958, curr_ptr);
    assume value_is(__ctobpl_const_2959, pdim_ptr);
    assume value_is(__ctobpl_const_2960, qdim_ptr);
    assume value_is(__ctobpl_const_2961, pqdim_unit_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3134} true;
    error := result.recspec$5;
    assume value_is(__ctobpl_const_2962, error);
    assume value_is(__ctobpl_const_2963, result.recspec$5);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3136} true;
    goto label_25_true, label_25_false;

  label_25_false:
    assume error == 0;
    assume value_is(__ctobpl_const_2964, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3137} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_2965, pp2);
    assume value_is(__ctobpl_const_2966, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_2967, curr_ptr);
    assume value_is(__ctobpl_const_2968, Mem_T.Pcharac[curr_ptr]);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3138} true;
    result.geomspec$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3165} true;
    call __HAVOC_free(curr);
    return;

  label_25_true:
    assume error != 0;
    assume value_is(__ctobpl_const_2964, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3141} true;
    goto label_27_true, label_27_false;

  label_27_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_2969, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3149} true;
    assert geometry_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[geometry_ptr := 1];
    assume value_is(__ctobpl_const_2970, geometry_ptr);
    assume value_is(__ctobpl_const_2971, Mem_T.INT4[geometry_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3150} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.circspec$8 := circspec(Mem_T.Pcharac[curr_ptr], curr_ptr, radius_ptr, radius_unit_ptr);
    assume value_is(__ctobpl_const_2972, curr_ptr);
    assume value_is(__ctobpl_const_2973, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_2974, curr_ptr);
    assume value_is(__ctobpl_const_2975, radius_ptr);
    assume value_is(__ctobpl_const_2976, radius_unit_ptr);
    assume value_is(__ctobpl_const_2977, curr_ptr);
    assume value_is(__ctobpl_const_2978, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_2979, curr_ptr);
    assume value_is(__ctobpl_const_2980, radius_ptr);
    assume value_is(__ctobpl_const_2981, radius_unit_ptr);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3150} true;
    error := result.circspec$8;
    assume value_is(__ctobpl_const_2982, error);
    assume value_is(__ctobpl_const_2983, result.circspec$8);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3152} true;
    goto label_38_true, label_38_false;

  label_38_false:
    assume error == 0;
    assume value_is(__ctobpl_const_2984, error);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3153} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_2985, pp2);
    assume value_is(__ctobpl_const_2986, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_2987, curr_ptr);
    assume value_is(__ctobpl_const_2988, Mem_T.Pcharac[curr_ptr]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3154} true;
    result.geomspec$1 := 0;
    goto label_1;

  label_38_true:
    assume error != 0;
    assume value_is(__ctobpl_const_2984, error);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3157} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_2989, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3164} true;
    result.geomspec$1 := 17;
    goto label_1;

  label_40_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_2989, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3158} true;
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3158} true;
    call result.printf$9 := det_choice();
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3159} true;
    result.geomspec$1 := 17;
    goto label_1;

  label_27_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_2969, error);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3142} true;
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3142} true;
    call result.printf$6 := det_choice();
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3143} true;
    result.geomspec$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_2947, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3127} true;
    $parserro.arg.3$4$ := PLUS(Keywords, 21, 29);
    assume value_is(__ctobpl_const_2990, $parserro.arg.3$4$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3127} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 1, $parserro.arg.3$4$);
    assume value_is(__ctobpl_const_2991, curr_ptr);
    assume value_is(__ctobpl_const_2992, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_2993, $parserro.arg.3$4$);
    assume value_is(__ctobpl_const_2994, curr_ptr);
    assume value_is(__ctobpl_const_2995, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_2996, $parserro.arg.3$4$);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3129} true;
    result.geomspec$1 := 1;
    goto label_1;
}



procedure {:extern} glvainit();
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} glvainit()
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3591} true;
    call floatsup();
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3592} true;
    call kwdsinit();
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3593} true;
    call emsginit();
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3594} true;
    call unaminit();
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3595} true;
    call moseinit();
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3597} true;
    return;
}



procedure {:extern} gnodevis(p.__1: int, q.__1: int, angle.__1: int, phase.__1: int, gnode_list_start_ptr.__1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} gnodevis(p.__1: int, q.__1: int, angle.__1: int, phase.__1: int, gnode_list_start_ptr.__1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle: int;
  var {:extern} error: int;
  var {:extern} gnode_list_start_ptr: int;
  var {:extern} gnode_ptr: int;
  var {:extern} p: int;
  var {:extern} phase: int;
  var {:extern} q: int;
  var {:extern} result.gnodfind$1: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(gnode_list_start_ptr.__1, alloc);
    angle := 0;
    error := 0;
    gnode_list_start_ptr := 0;
    call gnode_ptr := __HAVOC_det_malloc(4);
    p := 0;
    phase := 0;
    q := 0;
    result.gnodfind$1 := 0;
    p := p.__1;
    q := q.__1;
    angle := angle.__1;
    phase := phase.__1;
    gnode_list_start_ptr := gnode_list_start_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3610} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3610} true;
    error := 0;
    assume value_is(__ctobpl_const_2997, error);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3611} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3618} true;
    call result.gnodfind$1 := gnodfind(gnode_list_start_ptr, gnode_ptr, p, q);
    assume value_is(__ctobpl_const_2998, gnode_list_start_ptr);
    assume value_is(__ctobpl_const_2999, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3000, p);
    assume value_is(__ctobpl_const_3001, q);
    assume value_is(__ctobpl_const_3002, gnode_list_start_ptr);
    assume value_is(__ctobpl_const_3003, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3004, p);
    assume value_is(__ctobpl_const_3005, q);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3618} true;
    error := result.gnodfind$1;
    assume value_is(__ctobpl_const_3006, error);
    assume value_is(__ctobpl_const_3007, result.gnodfind$1);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3619} true;
    goto label_10_true, label_10_false;

  label_10_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3008, error);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3627} true;
    assert Mem_T.PGeomnode[gnode_ptr] != 0;
    assert Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(Mem_T.PGeomnode[gnode_ptr])] != 0;
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(Mem_T.PGeomnode[gnode_ptr])]) := phase];
    assume value_is(__ctobpl_const_3009, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3010, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3011, Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(Mem_T.PGeomnode[gnode_ptr])])]);
    assume value_is(__ctobpl_const_3012, phase);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3631} true;
    assert Mem_T.PGeomnode[gnode_ptr] != 0;
    tempBoogie0 := PLUS(Mem_T.PHEA_Geomnode[PHEA_Geomnode(Mem_T.PGeomnode[gnode_ptr])], 1, angle);
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(Mem_T.PGeomnode[gnode_ptr]) := tempBoogie0];
    assume value_is(__ctobpl_const_3013, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3014, Mem_T.PHEA_Geomnode[PHEA_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3015, angle);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3633} true;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3634} true;
    call __HAVOC_free(gnode_ptr);
    return;

  label_10_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3008, error);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3620} true;
    call interror(havoc_stringTemp);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3621} true;
    return;
}



procedure {:extern} gnodfind(gnode_list_start_ptr.__1: int, gnode_ptr.__1: int, p.__1: int, q.__1: int) returns (result.gnodfind$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} gnodfind(gnode_list_start_ptr.__1: int, gnode_ptr.__1: int, p.__1: int, q.__1: int) returns (result.gnodfind$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} gnode_list_start_ptr: int;
  var {:extern} gnode_ptr: int;
  var {:extern} p: int;
  var {:extern} q: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(gnode_list_start_ptr.__1, alloc);
    assume INT_LT(gnode_ptr.__1, alloc);
    gnode_list_start_ptr := 0;
    gnode_ptr := 0;
    p := 0;
    q := 0;
    result.gnodfind$1 := 0;
    gnode_list_start_ptr := gnode_list_start_ptr.__1;
    gnode_ptr := gnode_ptr.__1;
    p := p.__1;
    q := q.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3648} true;
    assert gnode_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[gnode_ptr := gnode_list_start_ptr];
    assume value_is(__ctobpl_const_3016, gnode_ptr);
    assume value_is(__ctobpl_const_3017, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3018, gnode_list_start_ptr);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3650} true;
    goto label_4_head;

  label_4_head:
    call gnodfind_loop_label_4_head(gnode_ptr, p, q);
    goto label_4_head_last;

  label_4_false:
    assume !INT_EQ(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[gnode_ptr])], p);
    assume value_is(__ctobpl_const_3019, gnode_ptr);
    assume value_is(__ctobpl_const_3020, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3021, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3022, p);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3650} true;
    assert gnode_ptr != 0;
    assert Mem_T.PGeomnode[gnode_ptr] != 0;
    goto label_5_true, label_5_false;

  label_5_false:
    assume Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[gnode_ptr])] == 0;
    assume value_is(__ctobpl_const_3027, gnode_ptr);
    assume value_is(__ctobpl_const_3028, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3029, Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3654} true;
    assert gnode_ptr != 0;
    assert Mem_T.PGeomnode[gnode_ptr] != 0;
    goto label_7_true, label_7_false;

  label_7_false:
    assume !INT_EQ(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[gnode_ptr])], p);
    assume value_is(__ctobpl_const_3035, gnode_ptr);
    assume value_is(__ctobpl_const_3036, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3037, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3038, p);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3655} true;
    result.gnodfind$1 := 1;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3658} true;
    return;

  label_7_true:
    assume INT_EQ(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[gnode_ptr])], p);
    assume value_is(__ctobpl_const_3035, gnode_ptr);
    assume value_is(__ctobpl_const_3036, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3037, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3038, p);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3654} true;
    assert gnode_ptr != 0;
    assert Mem_T.PGeomnode[gnode_ptr] != 0;
    goto label_9_true, label_9_false;

  label_9_false:
    assume !INT_EQ(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[gnode_ptr])], q);
    assume value_is(__ctobpl_const_3039, gnode_ptr);
    assume value_is(__ctobpl_const_3040, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3041, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3042, q);
    goto label_8;

  label_9_true:
    assume INT_EQ(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[gnode_ptr])], q);
    assume value_is(__ctobpl_const_3039, gnode_ptr);
    assume value_is(__ctobpl_const_3040, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3041, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3042, q);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3657} true;
    result.gnodfind$1 := 0;
    goto label_1;

  label_5_true:
    assume Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[gnode_ptr])] != 0;
    assume value_is(__ctobpl_const_3027, gnode_ptr);
    assume value_is(__ctobpl_const_3028, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3029, Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3651} true;
    assert gnode_ptr != 0;
    assert gnode_ptr != 0;
    assert Mem_T.PGeomnode[gnode_ptr] != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[gnode_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[gnode_ptr])]];
    assume value_is(__ctobpl_const_3030, gnode_ptr);
    assume value_is(__ctobpl_const_3031, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3032, gnode_ptr);
    assume value_is(__ctobpl_const_3033, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3034, Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    goto label_11_dummy;

  label_4_true:
    assume INT_EQ(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[gnode_ptr])], p);
    assume value_is(__ctobpl_const_3019, gnode_ptr);
    assume value_is(__ctobpl_const_3020, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3021, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3022, p);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3650} true;
    assert gnode_ptr != 0;
    assert Mem_T.PGeomnode[gnode_ptr] != 0;
    goto label_6_true, label_6_false;

  label_6_false:
    assume !INT_EQ(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[gnode_ptr])], q);
    assume value_is(__ctobpl_const_3023, gnode_ptr);
    assume value_is(__ctobpl_const_3024, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3025, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3026, q);
    goto label_5;

  label_6_true:
    assume INT_EQ(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[gnode_ptr])], q);
    assume value_is(__ctobpl_const_3023, gnode_ptr);
    assume value_is(__ctobpl_const_3024, Mem_T.PGeomnode[gnode_ptr]);
    assume value_is(__ctobpl_const_3025, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[gnode_ptr])]);
    assume value_is(__ctobpl_const_3026, q);
    goto label_7;

  label_11_dummy:
    assume false;
    return;

  label_4_head_last:
    assert gnode_ptr != 0;
    assert Mem_T.PGeomnode[gnode_ptr] != 0;
    goto label_4_true, label_4_false;
}



procedure {:extern} grampexc(p1.__1: int, pp2.__1: int, grampexc_ptr.__1: int) returns (result.grampexc$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} grampexc(p1.__1: int, pp2.__1: int, grampexc_ptr.__1: int) returns (result.grampexc$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} amp_unit: int;
  var {:extern} amp_unit_ptr: int;
  var {:extern} centre: int;
  var {:extern} centre_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} grampexc_ptr: int;
  var {:extern} p1: int;
  var {:extern} p1_et: int;
  var {:extern} p1_et_ptr: int;
  var {:extern} p2_et: int;
  var {:extern} p2_et_ptr: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$8$: int;
  var {:extern} q1_et: int;
  var {:extern} q1_et_ptr: int;
  var {:extern} q2_et: int;
  var {:extern} q2_et_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.malloc$5: int;
  var {:extern} result.malloc$9: int;
  var {:extern} result.printf$7: int;
  var {:extern} result.secoramp$6: int;
  var {:extern} result.unifamp$4: int;
  var {:extern} unif_val: int;
  var {:extern} unif_val_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(grampexc_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call amp_unit := __HAVOC_det_malloc(4);
    amp_unit_ptr := 0;
    call centre := __HAVOC_det_malloc(8);
    centre_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    grampexc_ptr := 0;
    p1 := 0;
    call p1_et := __HAVOC_det_malloc(8);
    p1_et_ptr := 0;
    call p2_et := __HAVOC_det_malloc(8);
    p2_et_ptr := 0;
    pp2 := 0;
    $printf.arg.2$8$ := 0;
    call q1_et := __HAVOC_det_malloc(8);
    q1_et_ptr := 0;
    call q2_et := __HAVOC_det_malloc(8);
    q2_et_ptr := 0;
    result.GetKeyword$2 := 0;
    result.grampexc$1 := 0;
    result.malloc$5 := 0;
    result.malloc$9 := 0;
    result.printf$7 := 0;
    result.secoramp$6 := 0;
    result.unifamp$4 := 0;
    call unif_val := __HAVOC_det_malloc(8);
    unif_val_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    grampexc_ptr := grampexc_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3669} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3669} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3669} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_3043, curr_ptr);
    assume value_is(__ctobpl_const_3044, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3670} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3672} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3672} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3672} true;
    unif_val_ptr := unif_val;
    assume value_is(__ctobpl_const_3045, unif_val_ptr);
    assume value_is(__ctobpl_const_3046, Mem_T.FLOAT[unif_val]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3673} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3673} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3673} true;
    centre_ptr := centre;
    assume value_is(__ctobpl_const_3047, centre_ptr);
    assume value_is(__ctobpl_const_3048, Mem_T.FLOAT[centre]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3674} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3674} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3674} true;
    p1_et_ptr := p1_et;
    assume value_is(__ctobpl_const_3049, p1_et_ptr);
    assume value_is(__ctobpl_const_3050, Mem_T.FLOAT[p1_et]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3675} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3675} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3675} true;
    p2_et_ptr := p2_et;
    assume value_is(__ctobpl_const_3051, p2_et_ptr);
    assume value_is(__ctobpl_const_3052, Mem_T.FLOAT[p2_et]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3676} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3676} true;
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3676} true;
    q1_et_ptr := q1_et;
    assume value_is(__ctobpl_const_3053, q1_et_ptr);
    assume value_is(__ctobpl_const_3054, Mem_T.FLOAT[q1_et]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3677} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3677} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3677} true;
    q2_et_ptr := q2_et;
    assume value_is(__ctobpl_const_3055, q2_et_ptr);
    assume value_is(__ctobpl_const_3056, Mem_T.FLOAT[q2_et]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3678} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3678} true;
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3678} true;
    amp_unit_ptr := amp_unit;
    assume value_is(__ctobpl_const_3057, amp_unit_ptr);
    assume value_is(__ctobpl_const_3058, Mem_T.INT4[amp_unit]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3686} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_3059, curr_ptr);
    assume value_is(__ctobpl_const_3060, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3061, p1);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3687} true;
    error := 0;
    assume value_is(__ctobpl_const_3062, error);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3690} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 42);
    assume value_is(__ctobpl_const_3063, $GetKeyword.arg.1$3$);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3690} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_3064, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3065, curr_ptr);
    assume value_is(__ctobpl_const_3066, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3067, curr_ptr);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3690} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_3068, error);
    assume value_is(__ctobpl_const_3069, result.GetKeyword$2);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3691} true;
    goto label_35_true, label_35_false;

  label_35_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3070, error);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3701} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.unifamp$4 := unifamp(Mem_T.Pcharac[curr_ptr], curr_ptr, unif_val_ptr, amp_unit_ptr);
    assume value_is(__ctobpl_const_3071, curr_ptr);
    assume value_is(__ctobpl_const_3072, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3073, curr_ptr);
    assume value_is(__ctobpl_const_3074, unif_val_ptr);
    assume value_is(__ctobpl_const_3075, amp_unit_ptr);
    assume value_is(__ctobpl_const_3076, curr_ptr);
    assume value_is(__ctobpl_const_3077, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3078, curr_ptr);
    assume value_is(__ctobpl_const_3079, unif_val_ptr);
    assume value_is(__ctobpl_const_3080, amp_unit_ptr);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3701} true;
    error := result.unifamp$4;
    assume value_is(__ctobpl_const_3081, error);
    assume value_is(__ctobpl_const_3082, result.unifamp$4);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3704} true;
    goto label_42_true, label_42_false;

  label_42_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3083, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3706} true;
    call result.malloc$5 := __HAVOC_det_malloc(64);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3706} true;
    assert grampexc_ptr != 0;
    Mem_T.PGrAmpExc := Mem_T.PGrAmpExc[grampexc_ptr := result.malloc$5];
    assume value_is(__ctobpl_const_3084, grampexc_ptr);
    assume value_is(__ctobpl_const_3085, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3086, result.malloc$5);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3708} true;
    assert grampexc_ptr != 0;
    goto label_82_true, label_82_false;

  label_82_false:
    assume Mem_T.PGrAmpExc[grampexc_ptr] == 0;
    assume value_is(__ctobpl_const_3087, grampexc_ptr);
    assume value_is(__ctobpl_const_3088, Mem_T.PGrAmpExc[grampexc_ptr]);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3709} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_3089, curr_ptr);
    assume value_is(__ctobpl_const_3090, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3091, curr_ptr);
    assume value_is(__ctobpl_const_3092, Mem_T.Pcharac[curr_ptr]);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3711} true;
    call interror(havoc_stringTemp);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3714} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.TYPE_GrAmpExc := Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := 0];
    assume value_is(__ctobpl_const_3093, grampexc_ptr);
    assume value_is(__ctobpl_const_3094, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3095, Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3715} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.UNIF_VAL_GrAmpExc := Mem_T.UNIF_VAL_GrAmpExc[UNIF_VAL_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := Mem_T.FLOAT[unif_val]];
    assume value_is(__ctobpl_const_3096, grampexc_ptr);
    assume value_is(__ctobpl_const_3097, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3098, Mem_T.UNIF_VAL_GrAmpExc[UNIF_VAL_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    assume value_is(__ctobpl_const_3099, Mem_T.FLOAT[unif_val]);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3716} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.AMP_UNIT_GrAmpExc := Mem_T.AMP_UNIT_GrAmpExc[AMP_UNIT_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := Mem_T.INT4[amp_unit]];
    assume value_is(__ctobpl_const_3100, grampexc_ptr);
    assume value_is(__ctobpl_const_3101, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3102, Mem_T.AMP_UNIT_GrAmpExc[AMP_UNIT_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    assume value_is(__ctobpl_const_3103, Mem_T.INT4[amp_unit]);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3717} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.PQEXP_PTR_GrAmpExc := Mem_T.PQEXP_PTR_GrAmpExc[PQEXP_PTR_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := 0];
    assume value_is(__ctobpl_const_3104, grampexc_ptr);
    assume value_is(__ctobpl_const_3105, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3106, Mem_T.PQEXP_PTR_GrAmpExc[PQEXP_PTR_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3719} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3107, pp2);
    assume value_is(__ctobpl_const_3108, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3109, curr_ptr);
    assume value_is(__ctobpl_const_3110, Mem_T.Pcharac[curr_ptr]);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3720} true;
    result.grampexc$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3770} true;
    call __HAVOC_free(amp_unit);
    call __HAVOC_free(centre);
    call __HAVOC_free(curr);
    call __HAVOC_free(p1_et);
    call __HAVOC_free(p2_et);
    call __HAVOC_free(q1_et);
    call __HAVOC_free(q2_et);
    call __HAVOC_free(unif_val);
    return;

  label_82_true:
    assume Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    assume value_is(__ctobpl_const_3087, grampexc_ptr);
    assume value_is(__ctobpl_const_3088, Mem_T.PGrAmpExc[grampexc_ptr]);
    goto label_86;

  label_42_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3083, error);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3729} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.secoramp$6 := secoramp(Mem_T.Pcharac[curr_ptr], curr_ptr, centre_ptr, p1_et_ptr, p2_et_ptr, q1_et_ptr, q2_et_ptr, amp_unit_ptr);
    assume value_is(__ctobpl_const_3111, curr_ptr);
    assume value_is(__ctobpl_const_3112, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3113, curr_ptr);
    assume value_is(__ctobpl_const_3114, centre_ptr);
    assume value_is(__ctobpl_const_3115, p1_et_ptr);
    assume value_is(__ctobpl_const_3116, p2_et_ptr);
    assume value_is(__ctobpl_const_3117, q1_et_ptr);
    assume value_is(__ctobpl_const_3118, q2_et_ptr);
    assume value_is(__ctobpl_const_3119, amp_unit_ptr);
    assume value_is(__ctobpl_const_3120, curr_ptr);
    assume value_is(__ctobpl_const_3121, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3122, curr_ptr);
    assume value_is(__ctobpl_const_3123, centre_ptr);
    assume value_is(__ctobpl_const_3124, p1_et_ptr);
    assume value_is(__ctobpl_const_3125, p2_et_ptr);
    assume value_is(__ctobpl_const_3126, q1_et_ptr);
    assume value_is(__ctobpl_const_3127, q2_et_ptr);
    assume value_is(__ctobpl_const_3128, amp_unit_ptr);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3729} true;
    error := result.secoramp$6;
    assume value_is(__ctobpl_const_3129, error);
    assume value_is(__ctobpl_const_3130, result.secoramp$6);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3731} true;
    goto label_50_true, label_50_false;

  label_50_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3131, error);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3738} true;
    goto label_51_true, label_51_false;

  label_51_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3132, error);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3740} true;
    call result.malloc$9 := __HAVOC_det_malloc(64);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3740} true;
    assert grampexc_ptr != 0;
    Mem_T.PGrAmpExc := Mem_T.PGrAmpExc[grampexc_ptr := result.malloc$9];
    assume value_is(__ctobpl_const_3133, grampexc_ptr);
    assume value_is(__ctobpl_const_3134, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3135, result.malloc$9);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3742} true;
    assert grampexc_ptr != 0;
    goto label_64_true, label_64_false;

  label_64_false:
    assume Mem_T.PGrAmpExc[grampexc_ptr] == 0;
    assume value_is(__ctobpl_const_3136, grampexc_ptr);
    assume value_is(__ctobpl_const_3137, Mem_T.PGrAmpExc[grampexc_ptr]);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3743} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_3138, curr_ptr);
    assume value_is(__ctobpl_const_3139, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3140, curr_ptr);
    assume value_is(__ctobpl_const_3141, Mem_T.Pcharac[curr_ptr]);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3745} true;
    call interror(havoc_stringTemp);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3748} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.TYPE_GrAmpExc := Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := 1];
    assume value_is(__ctobpl_const_3142, grampexc_ptr);
    assume value_is(__ctobpl_const_3143, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3144, Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3749} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.CENTRE_GrAmpExc := Mem_T.CENTRE_GrAmpExc[CENTRE_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := Mem_T.FLOAT[centre]];
    assume value_is(__ctobpl_const_3145, grampexc_ptr);
    assume value_is(__ctobpl_const_3146, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3147, Mem_T.CENTRE_GrAmpExc[CENTRE_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    assume value_is(__ctobpl_const_3148, Mem_T.FLOAT[centre]);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3750} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.P1_ET_GrAmpExc := Mem_T.P1_ET_GrAmpExc[P1_ET_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := Mem_T.FLOAT[p1_et]];
    assume value_is(__ctobpl_const_3149, grampexc_ptr);
    assume value_is(__ctobpl_const_3150, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3151, Mem_T.P1_ET_GrAmpExc[P1_ET_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    assume value_is(__ctobpl_const_3152, Mem_T.FLOAT[p1_et]);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3751} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.P2_ET_GrAmpExc := Mem_T.P2_ET_GrAmpExc[P2_ET_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := Mem_T.FLOAT[p2_et]];
    assume value_is(__ctobpl_const_3153, grampexc_ptr);
    assume value_is(__ctobpl_const_3154, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3155, Mem_T.P2_ET_GrAmpExc[P2_ET_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    assume value_is(__ctobpl_const_3156, Mem_T.FLOAT[p2_et]);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3752} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.Q1_ET_GrAmpExc := Mem_T.Q1_ET_GrAmpExc[Q1_ET_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := Mem_T.FLOAT[q1_et]];
    assume value_is(__ctobpl_const_3157, grampexc_ptr);
    assume value_is(__ctobpl_const_3158, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3159, Mem_T.Q1_ET_GrAmpExc[Q1_ET_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    assume value_is(__ctobpl_const_3160, Mem_T.FLOAT[q1_et]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3753} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.Q2_ET_GrAmpExc := Mem_T.Q2_ET_GrAmpExc[Q2_ET_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := Mem_T.FLOAT[q2_et]];
    assume value_is(__ctobpl_const_3161, grampexc_ptr);
    assume value_is(__ctobpl_const_3162, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3163, Mem_T.Q2_ET_GrAmpExc[Q2_ET_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    assume value_is(__ctobpl_const_3164, Mem_T.FLOAT[q2_et]);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3754} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.AMP_UNIT_GrAmpExc := Mem_T.AMP_UNIT_GrAmpExc[AMP_UNIT_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := Mem_T.INT4[amp_unit]];
    assume value_is(__ctobpl_const_3165, grampexc_ptr);
    assume value_is(__ctobpl_const_3166, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3167, Mem_T.AMP_UNIT_GrAmpExc[AMP_UNIT_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    assume value_is(__ctobpl_const_3168, Mem_T.INT4[amp_unit]);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3755} true;
    assert grampexc_ptr != 0;
    assert Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    Mem_T.PQEXP_PTR_GrAmpExc := Mem_T.PQEXP_PTR_GrAmpExc[PQEXP_PTR_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr]) := 0];
    assume value_is(__ctobpl_const_3169, grampexc_ptr);
    assume value_is(__ctobpl_const_3170, Mem_T.PGrAmpExc[grampexc_ptr]);
    assume value_is(__ctobpl_const_3171, Mem_T.PQEXP_PTR_GrAmpExc[PQEXP_PTR_GrAmpExc(Mem_T.PGrAmpExc[grampexc_ptr])]);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3757} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3172, pp2);
    assume value_is(__ctobpl_const_3173, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3174, curr_ptr);
    assume value_is(__ctobpl_const_3175, Mem_T.Pcharac[curr_ptr]);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3758} true;
    result.grampexc$1 := 0;
    goto label_1;

  label_64_true:
    assume Mem_T.PGrAmpExc[grampexc_ptr] != 0;
    assume value_is(__ctobpl_const_3136, grampexc_ptr);
    assume value_is(__ctobpl_const_3137, Mem_T.PGrAmpExc[grampexc_ptr]);
    goto label_68;

  label_51_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3132, error);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3768} true;
    assert grampexc_ptr != 0;
    Mem_T.PGrAmpExc := Mem_T.PGrAmpExc[grampexc_ptr := 0];
    assume value_is(__ctobpl_const_3176, grampexc_ptr);
    assume value_is(__ctobpl_const_3177, Mem_T.PGrAmpExc[grampexc_ptr]);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3769} true;
    result.grampexc$1 := 17;
    goto label_1;

  label_50_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3131, error);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3732} true;
    assert grampexc_ptr != 0;
    Mem_T.PGrAmpExc := Mem_T.PGrAmpExc[grampexc_ptr := 0];
    assume value_is(__ctobpl_const_3178, grampexc_ptr);
    assume value_is(__ctobpl_const_3179, Mem_T.PGrAmpExc[grampexc_ptr]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3733} true;
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3733} true;
    call result.printf$7 := det_choice();
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3734} true;
    result.grampexc$1 := 17;
    goto label_1;

  label_35_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3070, error);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3692} true;
    assert grampexc_ptr != 0;
    Mem_T.PGrAmpExc := Mem_T.PGrAmpExc[grampexc_ptr := 0];
    assume value_is(__ctobpl_const_3180, grampexc_ptr);
    assume value_is(__ctobpl_const_3181, Mem_T.PGrAmpExc[grampexc_ptr]);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3693} true;
    result.grampexc$1 := 1;
    goto label_1;
}



procedure {:extern} greldef(p1.__1: int, pp2.__1: int, grid_ptr.__1: int, elem_ptr.__1: int) returns (result.greldef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} greldef(p1.__1: int, pp2.__1: int, grid_ptr.__1: int, elem_ptr.__1: int) returns (result.greldef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} elem_ptr: int;
  var {:extern} error: int;
  var {:extern} grid_ptr: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$4$: int;
  var {:extern} $printf.arg.2$7$: int;
  var {:extern} result.elemdef$5: int;
  var {:extern} result.griddef1$2: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.printf$6: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(grid_ptr.__1, alloc);
    assume INT_LT(elem_ptr.__1, alloc);
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    elem_ptr := 0;
    error := 0;
    grid_ptr := 0;
    p1 := 0;
    pp2 := 0;
    $printf.arg.2$4$ := 0;
    $printf.arg.2$7$ := 0;
    result.elemdef$5 := 0;
    result.greldef$1 := 0;
    result.griddef1$2 := 0;
    result.printf$3 := 0;
    result.printf$6 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    grid_ptr := grid_ptr.__1;
    elem_ptr := elem_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3780} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3780} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3780} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_3182, curr_ptr);
    assume value_is(__ctobpl_const_3183, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3782} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3789} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_3184, curr_ptr);
    assume value_is(__ctobpl_const_3185, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3186, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3792} true;
    assert grid_ptr != 0;
    Mem_T.PGrid := Mem_T.PGrid[grid_ptr := 0];
    assume value_is(__ctobpl_const_3187, grid_ptr);
    assume value_is(__ctobpl_const_3188, Mem_T.PGrid[grid_ptr]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3793} true;
    assert elem_ptr != 0;
    Mem_T.PElem := Mem_T.PElem[elem_ptr := 0];
    assume value_is(__ctobpl_const_3189, elem_ptr);
    assume value_is(__ctobpl_const_3190, Mem_T.PElem[elem_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3794} true;
    error := 0;
    assume value_is(__ctobpl_const_3191, error);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3797} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.griddef1$2 := griddef1(Mem_T.Pcharac[curr_ptr], curr_ptr, grid_ptr);
    assume value_is(__ctobpl_const_3192, curr_ptr);
    assume value_is(__ctobpl_const_3193, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3194, curr_ptr);
    assume value_is(__ctobpl_const_3195, grid_ptr);
    assume value_is(__ctobpl_const_3196, curr_ptr);
    assume value_is(__ctobpl_const_3197, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3198, curr_ptr);
    assume value_is(__ctobpl_const_3199, grid_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3797} true;
    error := result.griddef1$2;
    assume value_is(__ctobpl_const_3200, error);
    assume value_is(__ctobpl_const_3201, result.griddef1$2);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3799} true;
    goto label_15_true, label_15_false;

  label_15_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_3202, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3803} true;
    goto label_16_true, label_16_false;

  label_16_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3203, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3810} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.elemdef$5 := elemdef(Mem_T.Pcharac[curr_ptr], curr_ptr, elem_ptr);
    assume value_is(__ctobpl_const_3204, curr_ptr);
    assume value_is(__ctobpl_const_3205, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3206, curr_ptr);
    assume value_is(__ctobpl_const_3207, elem_ptr);
    assume value_is(__ctobpl_const_3208, curr_ptr);
    assume value_is(__ctobpl_const_3209, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3210, curr_ptr);
    assume value_is(__ctobpl_const_3211, elem_ptr);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3810} true;
    error := result.elemdef$5;
    assume value_is(__ctobpl_const_3212, error);
    assume value_is(__ctobpl_const_3213, result.elemdef$5);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3812} true;
    goto label_27_true, label_27_false;

  label_27_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_3214, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3818} true;
    goto label_28_true, label_28_false;

  label_28_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3215, error);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3826} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3216, pp2);
    assume value_is(__ctobpl_const_3217, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3218, curr_ptr);
    assume value_is(__ctobpl_const_3219, Mem_T.Pcharac[curr_ptr]);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3827} true;
    result.greldef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3828} true;
    call __HAVOC_free(curr);
    return;

  label_28_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3215, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3819} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3819} true;
    call result.printf$6 := det_choice();
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3820} true;
    result.greldef$1 := 17;
    goto label_1;

  label_27_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_3214, error);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3813} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 67, havoc_stringTemp);
    assume value_is(__ctobpl_const_3220, curr_ptr);
    assume value_is(__ctobpl_const_3221, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3222, curr_ptr);
    assume value_is(__ctobpl_const_3223, Mem_T.Pcharac[curr_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3815} true;
    result.greldef$1 := 1;
    goto label_1;

  label_16_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3203, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3804} true;
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3804} true;
    call result.printf$3 := det_choice();
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3805} true;
    result.greldef$1 := 17;
    goto label_1;

  label_15_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_3202, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3800} true;
    result.greldef$1 := 1;
    goto label_1;
}



procedure {:extern} grexcdef(p1.__1: int, pp2.__1: int, grampexc_ptr.__1: int, grphaexc_ptr.__1: int) returns (result.grexcdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} grexcdef(p1.__1: int, pp2.__1: int, grampexc_ptr.__1: int, grphaexc_ptr.__1: int) returns (result.grexcdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} grampexc_ptr: int;
  var {:extern} grphaexc_ptr: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$6$: int;
  var {:extern} $printf.arg.2$9$: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.grampexc$4: int;
  var {:extern} result.grphaexc$7: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.printf$8: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(grampexc_ptr.__1, alloc);
    assume INT_LT(grphaexc_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    grampexc_ptr := 0;
    grphaexc_ptr := 0;
    p1 := 0;
    pp2 := 0;
    $printf.arg.2$6$ := 0;
    $printf.arg.2$9$ := 0;
    result.GetKeyword$2 := 0;
    result.grampexc$4 := 0;
    result.grexcdef$1 := 0;
    result.grphaexc$7 := 0;
    result.printf$5 := 0;
    result.printf$8 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    grampexc_ptr := grampexc_ptr.__1;
    grphaexc_ptr := grphaexc_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3840} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3840} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3840} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_3224, curr_ptr);
    assume value_is(__ctobpl_const_3225, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3842} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3849} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_3226, curr_ptr);
    assume value_is(__ctobpl_const_3227, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3228, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3852} true;
    assert grampexc_ptr != 0;
    Mem_T.PGrAmpExc := Mem_T.PGrAmpExc[grampexc_ptr := 0];
    assume value_is(__ctobpl_const_3229, grampexc_ptr);
    assume value_is(__ctobpl_const_3230, Mem_T.PGrAmpExc[grampexc_ptr]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3853} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := 0];
    assume value_is(__ctobpl_const_3231, grphaexc_ptr);
    assume value_is(__ctobpl_const_3232, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3854} true;
    error := 0;
    assume value_is(__ctobpl_const_3233, error);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3857} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 101);
    assume value_is(__ctobpl_const_3234, $GetKeyword.arg.1$3$);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3857} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_3235, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3236, curr_ptr);
    assume value_is(__ctobpl_const_3237, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3238, curr_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3857} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_3239, error);
    assume value_is(__ctobpl_const_3240, result.GetKeyword$2);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3858} true;
    goto label_16_true, label_16_false;

  label_16_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3241, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3863} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.grampexc$4 := grampexc(Mem_T.Pcharac[curr_ptr], curr_ptr, grampexc_ptr);
    assume value_is(__ctobpl_const_3242, curr_ptr);
    assume value_is(__ctobpl_const_3243, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3244, curr_ptr);
    assume value_is(__ctobpl_const_3245, grampexc_ptr);
    assume value_is(__ctobpl_const_3246, curr_ptr);
    assume value_is(__ctobpl_const_3247, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3248, curr_ptr);
    assume value_is(__ctobpl_const_3249, grampexc_ptr);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3863} true;
    error := result.grampexc$4;
    assume value_is(__ctobpl_const_3250, error);
    assume value_is(__ctobpl_const_3251, result.grampexc$4);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3866} true;
    goto label_22_true, label_22_false;

  label_22_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3252, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3872} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.grphaexc$7 := grphaexc(Mem_T.Pcharac[curr_ptr], curr_ptr, grphaexc_ptr);
    assume value_is(__ctobpl_const_3253, curr_ptr);
    assume value_is(__ctobpl_const_3254, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3255, curr_ptr);
    assume value_is(__ctobpl_const_3256, grphaexc_ptr);
    assume value_is(__ctobpl_const_3257, curr_ptr);
    assume value_is(__ctobpl_const_3258, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3259, curr_ptr);
    assume value_is(__ctobpl_const_3260, grphaexc_ptr);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3872} true;
    error := result.grphaexc$7;
    assume value_is(__ctobpl_const_3261, error);
    assume value_is(__ctobpl_const_3262, result.grphaexc$7);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3875} true;
    goto label_32_true, label_32_false;

  label_32_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3263, error);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3883} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3264, pp2);
    assume value_is(__ctobpl_const_3265, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3266, curr_ptr);
    assume value_is(__ctobpl_const_3267, Mem_T.Pcharac[curr_ptr]);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3884} true;
    result.grexcdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3885} true;
    call __HAVOC_free(curr);
    return;

  label_32_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3263, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3876} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3876} true;
    call result.printf$8 := det_choice();
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3877} true;
    result.grexcdef$1 := 17;
    goto label_1;

  label_22_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3252, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3867} true;
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3867} true;
    call result.printf$5 := det_choice();
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3868} true;
    result.grexcdef$1 := 17;
    goto label_1;

  label_16_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3241, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3859} true;
    result.grexcdef$1 := 1;
    goto label_1;
}



procedure {:extern} grgeodef(p1.__1: int, pp2.__1: int, addrem_ptr.__1: int) returns (result.grgeodef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} grgeodef(p1.__1: int, pp2.__1: int, addrem_ptr.__1: int) returns (result.grgeodef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} a_ptr: int;
  var {:extern} addrem_ptr: int;
  var {:extern} app_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$4$: int;
  var {:extern} $printf.arg.2$7$: int;
  var {:extern} result.adddef$2: int;
  var {:extern} result.adremdef$5: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.printf$6: int;
  var {:extern} ultimo_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(addrem_ptr.__1, alloc);
    call a_ptr := __HAVOC_det_malloc(4);
    addrem_ptr := 0;
    app_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    $printf.arg.2$4$ := 0;
    $printf.arg.2$7$ := 0;
    result.adddef$2 := 0;
    result.adremdef$5 := 0;
    result.grgeodef$1 := 0;
    result.printf$3 := 0;
    result.printf$6 := 0;
    ultimo_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    addrem_ptr := addrem_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3898} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3898} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3898} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_3268, curr_ptr);
    assume value_is(__ctobpl_const_3269, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3899} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3902} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3902} true;
    ultimo_ptr := 0;
    assume value_is(__ctobpl_const_3270, ultimo_ptr);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3903} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3903} true;
    Mem_T.PAddRem := Mem_T.PAddRem[a_ptr := 0];
    assume value_is(__ctobpl_const_3271, Mem_T.PAddRem[a_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3903} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3903} true;
    app_ptr := a_ptr;
    assume value_is(__ctobpl_const_3272, app_ptr);
    assume value_is(__ctobpl_const_3273, Mem_T.PAddRem[a_ptr]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3910} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_3274, curr_ptr);
    assume value_is(__ctobpl_const_3275, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3276, p1);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3911} true;
    error := 0;
    assume value_is(__ctobpl_const_3277, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3914} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_3278, addrem_ptr);
    assume value_is(__ctobpl_const_3279, Mem_T.PAddRem[addrem_ptr]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3917} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.adddef$2 := adddef(Mem_T.Pcharac[curr_ptr], curr_ptr, addrem_ptr);
    assume value_is(__ctobpl_const_3280, curr_ptr);
    assume value_is(__ctobpl_const_3281, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3282, curr_ptr);
    assume value_is(__ctobpl_const_3283, addrem_ptr);
    assume value_is(__ctobpl_const_3284, curr_ptr);
    assume value_is(__ctobpl_const_3285, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3286, curr_ptr);
    assume value_is(__ctobpl_const_3287, addrem_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3917} true;
    error := result.adddef$2;
    assume value_is(__ctobpl_const_3288, error);
    assume value_is(__ctobpl_const_3289, result.adddef$2);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3919} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_3290, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3924} true;
    goto label_21_true, label_21_false;

  label_21_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3291, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3933} true;
    assert app_ptr != 0;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[app_ptr := Mem_T.PAddRem[addrem_ptr]];
    assume value_is(__ctobpl_const_3292, app_ptr);
    assume value_is(__ctobpl_const_3293, Mem_T.PAddRem[app_ptr]);
    assume value_is(__ctobpl_const_3294, addrem_ptr);
    assume value_is(__ctobpl_const_3295, Mem_T.PAddRem[addrem_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3935} true;
    assert addrem_ptr != 0;
    ultimo_ptr := Mem_T.PAddRem[addrem_ptr];
    assume value_is(__ctobpl_const_3296, ultimo_ptr);
    assume value_is(__ctobpl_const_3297, addrem_ptr);
    assume value_is(__ctobpl_const_3298, Mem_T.PAddRem[addrem_ptr]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3938} true;
    goto label_33_head;

  label_33_head:
    call error, result.adremdef$5, ultimo_ptr := grgeodef_loop_label_33_head(app_ptr, curr_ptr, error, result.adremdef$5, ultimo_ptr);
    goto label_33_head_last;

  label_33_false:
    assume 1 == 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3960} true;
    call __HAVOC_free(a_ptr);
    call __HAVOC_free(curr);
    return;

  label_33_true:
    assume 1 != 0;
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3940} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.adremdef$5 := adremdef(Mem_T.Pcharac[curr_ptr], curr_ptr, app_ptr);
    assume value_is(__ctobpl_const_3299, curr_ptr);
    assume value_is(__ctobpl_const_3300, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3301, curr_ptr);
    assume value_is(__ctobpl_const_3302, app_ptr);
    assume value_is(__ctobpl_const_3303, curr_ptr);
    assume value_is(__ctobpl_const_3304, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3305, curr_ptr);
    assume value_is(__ctobpl_const_3306, app_ptr);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3940} true;
    error := result.adremdef$5;
    assume value_is(__ctobpl_const_3307, error);
    assume value_is(__ctobpl_const_3308, result.adremdef$5);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3941} true;
    goto label_38_true, label_38_false;

  label_38_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_3309, error);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3946} true;
    goto label_39_true, label_39_false;

  label_39_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3310, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3953} true;
    assert ultimo_ptr != 0;
    assert app_ptr != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(ultimo_ptr) := Mem_T.PAddRem[app_ptr]];
    assume value_is(__ctobpl_const_3311, ultimo_ptr);
    assume value_is(__ctobpl_const_3312, Mem_T.NEXT_AddRem[NEXT_AddRem(ultimo_ptr)]);
    assume value_is(__ctobpl_const_3313, app_ptr);
    assume value_is(__ctobpl_const_3314, Mem_T.PAddRem[app_ptr]);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3955} true;
    assert app_ptr != 0;
    ultimo_ptr := Mem_T.PAddRem[app_ptr];
    assume value_is(__ctobpl_const_3315, ultimo_ptr);
    assume value_is(__ctobpl_const_3316, app_ptr);
    assume value_is(__ctobpl_const_3317, Mem_T.PAddRem[app_ptr]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3957} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_3318, ultimo_ptr);
    assume value_is(__ctobpl_const_3319, Mem_T.NEXT_AddRem[NEXT_AddRem(ultimo_ptr)]);
    goto label_51_dummy;

  label_39_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3310, error);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3947} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_3320, addrem_ptr);
    assume value_is(__ctobpl_const_3321, Mem_T.PAddRem[addrem_ptr]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3948} true;
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3948} true;
    call result.printf$6 := det_choice();
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3949} true;
    result.grgeodef$1 := 17;
    goto label_1;

  label_38_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_3309, error);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3942} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_3322, ultimo_ptr);
    assume value_is(__ctobpl_const_3323, Mem_T.NEXT_AddRem[NEXT_AddRem(ultimo_ptr)]);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3943} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3324, pp2);
    assume value_is(__ctobpl_const_3325, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3326, curr_ptr);
    assume value_is(__ctobpl_const_3327, Mem_T.Pcharac[curr_ptr]);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3944} true;
    result.grgeodef$1 := 0;
    goto label_1;

  label_21_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3291, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3925} true;
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3925} true;
    call result.printf$3 := det_choice();
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3926} true;
    result.grgeodef$1 := 17;
    goto label_1;

  label_20_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_3290, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3920} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 94, havoc_stringTemp);
    assume value_is(__ctobpl_const_3328, curr_ptr);
    assume value_is(__ctobpl_const_3329, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3330, curr_ptr);
    assume value_is(__ctobpl_const_3331, Mem_T.Pcharac[curr_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3921} true;
    result.grgeodef$1 := 17;
    goto label_1;

  label_51_dummy:
    assume false;
    return;

  label_33_head_last:
    goto label_33_true, label_33_false;
}



procedure {:extern} griddef1(p1.__1: int, pp2.__1: int, grid_ptr.__1: int) returns (result.griddef1$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} griddef1(p1.__1: int, pp2.__1: int, grid_ptr.__1: int) returns (result.griddef1$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} angle: int;
  var {:extern} angle_ptr: int;
  var {:extern} angle_unit: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} grid_ptr: int;
  var {:extern} grid_type: int;
  var {:extern} orient: int;
  var {:extern} orient_ptr: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} pqstep_unit: int;
  var {:extern} pqstep_unit_ptr: int;
  var {:extern} pqxy_unit: int;
  var {:extern} pqxy_unit_ptr: int;
  var {:extern} $printf.arg.2$12$: int;
  var {:extern} $printf.arg.2$15$: int;
  var {:extern} $printf.arg.2$18$: int;
  var {:extern} $printf.arg.2$6$: int;
  var {:extern} $printf.arg.2$9$: int;
  var {:extern} pstep: int;
  var {:extern} pstep_ptr: int;
  var {:extern} px: int;
  var {:extern} px_ptr: int;
  var {:extern} py: int;
  var {:extern} py_ptr: int;
  var {:extern} qstep: int;
  var {:extern} qstep_ptr: int;
  var {:extern} qx: int;
  var {:extern} qx_ptr: int;
  var {:extern} qy: int;
  var {:extern} qy_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.hexgrdef$10: int;
  var {:extern} result.malloc$16: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.printf$8: int;
  var {:extern} result.printf$11: int;
  var {:extern} result.printf$14: int;
  var {:extern} result.printf$17: int;
  var {:extern} result.recgrdef$7: int;
  var {:extern} result.squgrdef$4: int;
  var {:extern} result.trigrdef$13: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(grid_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call angle := __HAVOC_det_malloc(8);
    angle_ptr := 0;
    call angle_unit := __HAVOC_det_malloc(4);
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    grid_ptr := 0;
    grid_type := 0;
    call orient := __HAVOC_det_malloc(4);
    orient_ptr := 0;
    p1 := 0;
    pp2 := 0;
    call pqstep_unit := __HAVOC_det_malloc(4);
    pqstep_unit_ptr := 0;
    call pqxy_unit := __HAVOC_det_malloc(4);
    pqxy_unit_ptr := 0;
    $printf.arg.2$12$ := 0;
    $printf.arg.2$15$ := 0;
    $printf.arg.2$18$ := 0;
    $printf.arg.2$6$ := 0;
    $printf.arg.2$9$ := 0;
    call pstep := __HAVOC_det_malloc(8);
    pstep_ptr := 0;
    call px := __HAVOC_det_malloc(8);
    px_ptr := 0;
    call py := __HAVOC_det_malloc(8);
    py_ptr := 0;
    call qstep := __HAVOC_det_malloc(8);
    qstep_ptr := 0;
    call qx := __HAVOC_det_malloc(8);
    qx_ptr := 0;
    call qy := __HAVOC_det_malloc(8);
    qy_ptr := 0;
    result.GetKeyword$2 := 0;
    result.griddef1$1 := 0;
    result.hexgrdef$10 := 0;
    result.malloc$16 := 0;
    result.printf$5 := 0;
    result.printf$8 := 0;
    result.printf$11 := 0;
    result.printf$14 := 0;
    result.printf$17 := 0;
    result.recgrdef$7 := 0;
    result.squgrdef$4 := 0;
    result.trigrdef$13 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    grid_ptr := grid_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3971} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3971} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3971} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_3332, curr_ptr);
    assume value_is(__ctobpl_const_3333, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3973} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3974} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3974} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3974} true;
    orient_ptr := orient;
    assume value_is(__ctobpl_const_3334, orient_ptr);
    assume value_is(__ctobpl_const_3335, Mem_T.INT4[orient]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3975} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3975} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3975} true;
    pstep_ptr := pstep;
    assume value_is(__ctobpl_const_3336, pstep_ptr);
    assume value_is(__ctobpl_const_3337, Mem_T.FLOAT[pstep]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3976} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3976} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3976} true;
    qstep_ptr := qstep;
    assume value_is(__ctobpl_const_3338, qstep_ptr);
    assume value_is(__ctobpl_const_3339, Mem_T.FLOAT[qstep]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3977} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3977} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3977} true;
    pqstep_unit_ptr := pqstep_unit;
    assume value_is(__ctobpl_const_3340, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_3341, Mem_T.INT4[pqstep_unit]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3978} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3978} true;
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3978} true;
    angle_ptr := angle;
    assume value_is(__ctobpl_const_3342, angle_ptr);
    assume value_is(__ctobpl_const_3343, Mem_T.FLOAT[angle]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3979} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3979} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3979} true;
    angle_unit_ptr := angle_unit;
    assume value_is(__ctobpl_const_3344, angle_unit_ptr);
    assume value_is(__ctobpl_const_3345, Mem_T.INT4[angle_unit]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3980} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3980} true;
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3980} true;
    px_ptr := px;
    assume value_is(__ctobpl_const_3346, px_ptr);
    assume value_is(__ctobpl_const_3347, Mem_T.FLOAT[px]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3981} true;
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3981} true;
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3981} true;
    py_ptr := py;
    assume value_is(__ctobpl_const_3348, py_ptr);
    assume value_is(__ctobpl_const_3349, Mem_T.FLOAT[py]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3982} true;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3982} true;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3982} true;
    qx_ptr := qx;
    assume value_is(__ctobpl_const_3350, qx_ptr);
    assume value_is(__ctobpl_const_3351, Mem_T.FLOAT[qx]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3983} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3983} true;
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3983} true;
    qy_ptr := qy;
    assume value_is(__ctobpl_const_3352, qy_ptr);
    assume value_is(__ctobpl_const_3353, Mem_T.FLOAT[qy]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3984} true;
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3984} true;
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3984} true;
    pqxy_unit_ptr := pqxy_unit;
    assume value_is(__ctobpl_const_3354, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_3355, Mem_T.INT4[pqxy_unit]);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3987} true;
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3994} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_3356, curr_ptr);
    assume value_is(__ctobpl_const_3357, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3358, p1);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3995} true;
    error := 0;
    assume value_is(__ctobpl_const_3359, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3998} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 14);
    assume value_is(__ctobpl_const_3360, $GetKeyword.arg.1$3$);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3998} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_3361, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3362, curr_ptr);
    assume value_is(__ctobpl_const_3363, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3364, curr_ptr);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3998} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_3365, error);
    assume value_is(__ctobpl_const_3366, result.GetKeyword$2);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3999} true;
    goto label_48_true, label_48_false;

  label_48_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3367, error);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4007} true;
    grid_type := 0;
    assume value_is(__ctobpl_const_3368, grid_type);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4008} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.squgrdef$4 := squgrdef(Mem_T.Pcharac[curr_ptr], curr_ptr, pstep_ptr, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_3369, curr_ptr);
    assume value_is(__ctobpl_const_3370, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3371, curr_ptr);
    assume value_is(__ctobpl_const_3372, pstep_ptr);
    assume value_is(__ctobpl_const_3373, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_3374, curr_ptr);
    assume value_is(__ctobpl_const_3375, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3376, curr_ptr);
    assume value_is(__ctobpl_const_3377, pstep_ptr);
    assume value_is(__ctobpl_const_3378, pqstep_unit_ptr);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4008} true;
    error := result.squgrdef$4;
    assume value_is(__ctobpl_const_3379, error);
    assume value_is(__ctobpl_const_3380, result.squgrdef$4);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4010} true;
    goto label_56_true, label_56_false;

  label_56_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3381, error);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4019} true;
    goto label_57_true, label_57_false;

  label_57_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3382, error);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4031} true;
    goto label_64_true, label_64_false;

  label_64_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3399, error);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4043} true;
    goto label_77_true, label_77_false;

  label_77_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3414, error);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4055} true;
    goto label_90_true, label_90_false;

  label_90_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3445, error);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4063} true;
    call result.malloc$16 := __HAVOC_det_malloc(136);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4063} true;
    assert grid_ptr != 0;
    Mem_T.PGrid := Mem_T.PGrid[grid_ptr := result.malloc$16];
    assume value_is(__ctobpl_const_3446, grid_ptr);
    assume value_is(__ctobpl_const_3447, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3448, result.malloc$16);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4065} true;
    assert grid_ptr != 0;
    goto label_112_true, label_112_false;

  label_112_false:
    assume Mem_T.PGrid[grid_ptr] == 0;
    assume value_is(__ctobpl_const_3449, grid_ptr);
    assume value_is(__ctobpl_const_3450, Mem_T.PGrid[grid_ptr]);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4066} true;
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4066} true;
    call result.printf$17 := det_choice();
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4067} true;
    call interror(havoc_stringTemp);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4070} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.TYPE_Grid := Mem_T.TYPE_Grid[TYPE_Grid(Mem_T.PGrid[grid_ptr]) := grid_type];
    assume value_is(__ctobpl_const_3451, grid_ptr);
    assume value_is(__ctobpl_const_3452, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3453, Mem_T.TYPE_Grid[TYPE_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3454, grid_type);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4071} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.ORIENT_Grid := Mem_T.ORIENT_Grid[ORIENT_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.INT4[orient]];
    assume value_is(__ctobpl_const_3455, grid_ptr);
    assume value_is(__ctobpl_const_3456, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3457, Mem_T.ORIENT_Grid[ORIENT_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3458, Mem_T.INT4[orient]);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4072} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.PSTEP_Grid := Mem_T.PSTEP_Grid[PSTEP_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.FLOAT[pstep]];
    assume value_is(__ctobpl_const_3459, grid_ptr);
    assume value_is(__ctobpl_const_3460, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3461, Mem_T.PSTEP_Grid[PSTEP_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3462, Mem_T.FLOAT[pstep]);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4073} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.QSTEP_Grid := Mem_T.QSTEP_Grid[QSTEP_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.FLOAT[qstep]];
    assume value_is(__ctobpl_const_3463, grid_ptr);
    assume value_is(__ctobpl_const_3464, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3465, Mem_T.QSTEP_Grid[QSTEP_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3466, Mem_T.FLOAT[qstep]);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4074} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.PQSTEP_UNIT_Grid := Mem_T.PQSTEP_UNIT_Grid[PQSTEP_UNIT_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.INT4[pqstep_unit]];
    assume value_is(__ctobpl_const_3467, grid_ptr);
    assume value_is(__ctobpl_const_3468, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3469, Mem_T.PQSTEP_UNIT_Grid[PQSTEP_UNIT_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3470, Mem_T.INT4[pqstep_unit]);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4075} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.ANGLE_Grid := Mem_T.ANGLE_Grid[ANGLE_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.FLOAT[angle]];
    assume value_is(__ctobpl_const_3471, grid_ptr);
    assume value_is(__ctobpl_const_3472, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3473, Mem_T.ANGLE_Grid[ANGLE_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3474, Mem_T.FLOAT[angle]);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4076} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.ANGLE_UNIT_Grid := Mem_T.ANGLE_UNIT_Grid[ANGLE_UNIT_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.INT4[angle_unit]];
    assume value_is(__ctobpl_const_3475, grid_ptr);
    assume value_is(__ctobpl_const_3476, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3477, Mem_T.ANGLE_UNIT_Grid[ANGLE_UNIT_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3478, Mem_T.INT4[angle_unit]);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4077} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.PX_Grid := Mem_T.PX_Grid[PX_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.FLOAT[px]];
    assume value_is(__ctobpl_const_3479, grid_ptr);
    assume value_is(__ctobpl_const_3480, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3481, Mem_T.PX_Grid[PX_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3482, Mem_T.FLOAT[px]);
    goto label_122;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4078} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.PY_Grid := Mem_T.PY_Grid[PY_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.FLOAT[py]];
    assume value_is(__ctobpl_const_3483, grid_ptr);
    assume value_is(__ctobpl_const_3484, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3485, Mem_T.PY_Grid[PY_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3486, Mem_T.FLOAT[py]);
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4079} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.QX_Grid := Mem_T.QX_Grid[QX_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.FLOAT[qx]];
    assume value_is(__ctobpl_const_3487, grid_ptr);
    assume value_is(__ctobpl_const_3488, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3489, Mem_T.QX_Grid[QX_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3490, Mem_T.FLOAT[qx]);
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4080} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.QY_Grid := Mem_T.QY_Grid[QY_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.FLOAT[qy]];
    assume value_is(__ctobpl_const_3491, grid_ptr);
    assume value_is(__ctobpl_const_3492, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3493, Mem_T.QY_Grid[QY_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3494, Mem_T.FLOAT[qy]);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4081} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.PQXY_UNIT_Grid := Mem_T.PQXY_UNIT_Grid[PQXY_UNIT_Grid(Mem_T.PGrid[grid_ptr]) := Mem_T.INT4[pqxy_unit]];
    assume value_is(__ctobpl_const_3495, grid_ptr);
    assume value_is(__ctobpl_const_3496, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3497, Mem_T.PQXY_UNIT_Grid[PQXY_UNIT_Grid(Mem_T.PGrid[grid_ptr])]);
    assume value_is(__ctobpl_const_3498, Mem_T.INT4[pqxy_unit]);
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4084} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3499, pp2);
    assume value_is(__ctobpl_const_3500, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3501, curr_ptr);
    assume value_is(__ctobpl_const_3502, Mem_T.Pcharac[curr_ptr]);
    goto label_127;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4085} true;
    result.griddef1$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4086} true;
    call __HAVOC_free(angle);
    call __HAVOC_free(angle_unit);
    call __HAVOC_free(curr);
    call __HAVOC_free(orient);
    call __HAVOC_free(pqstep_unit);
    call __HAVOC_free(pqxy_unit);
    call __HAVOC_free(pstep);
    call __HAVOC_free(px);
    call __HAVOC_free(py);
    call __HAVOC_free(qstep);
    call __HAVOC_free(qx);
    call __HAVOC_free(qy);
    return;

  label_112_true:
    assume Mem_T.PGrid[grid_ptr] != 0;
    assume value_is(__ctobpl_const_3449, grid_ptr);
    assume value_is(__ctobpl_const_3450, Mem_T.PGrid[grid_ptr]);
    goto label_114;

  label_90_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3445, error);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4056} true;
    assert grid_ptr != 0;
    Mem_T.PGrid := Mem_T.PGrid[grid_ptr := 0];
    assume value_is(__ctobpl_const_3503, grid_ptr);
    assume value_is(__ctobpl_const_3504, Mem_T.PGrid[grid_ptr]);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4057} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 16, havoc_stringTemp);
    assume value_is(__ctobpl_const_3505, curr_ptr);
    assume value_is(__ctobpl_const_3506, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3507, curr_ptr);
    assume value_is(__ctobpl_const_3508, Mem_T.Pcharac[curr_ptr]);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4059} true;
    result.griddef1$1 := 17;
    goto label_1;

  label_77_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3414, error);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4044} true;
    grid_type := 3;
    assume value_is(__ctobpl_const_3415, grid_type);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4045} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.trigrdef$13 := trigrdef(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_ptr, angle_unit_ptr, pstep_ptr, qstep_ptr, pqstep_unit_ptr, px_ptr, py_ptr, qx_ptr, qy_ptr, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_3416, curr_ptr);
    assume value_is(__ctobpl_const_3417, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3418, curr_ptr);
    assume value_is(__ctobpl_const_3419, angle_ptr);
    assume value_is(__ctobpl_const_3420, angle_unit_ptr);
    assume value_is(__ctobpl_const_3421, pstep_ptr);
    assume value_is(__ctobpl_const_3422, qstep_ptr);
    assume value_is(__ctobpl_const_3423, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_3424, px_ptr);
    assume value_is(__ctobpl_const_3425, py_ptr);
    assume value_is(__ctobpl_const_3426, qx_ptr);
    assume value_is(__ctobpl_const_3427, qy_ptr);
    assume value_is(__ctobpl_const_3428, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_3429, curr_ptr);
    assume value_is(__ctobpl_const_3430, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3431, curr_ptr);
    assume value_is(__ctobpl_const_3432, angle_ptr);
    assume value_is(__ctobpl_const_3433, angle_unit_ptr);
    assume value_is(__ctobpl_const_3434, pstep_ptr);
    assume value_is(__ctobpl_const_3435, qstep_ptr);
    assume value_is(__ctobpl_const_3436, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_3437, px_ptr);
    assume value_is(__ctobpl_const_3438, py_ptr);
    assume value_is(__ctobpl_const_3439, qx_ptr);
    assume value_is(__ctobpl_const_3440, qy_ptr);
    assume value_is(__ctobpl_const_3441, pqxy_unit_ptr);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4045} true;
    error := result.trigrdef$13;
    assume value_is(__ctobpl_const_3442, error);
    assume value_is(__ctobpl_const_3443, result.trigrdef$13);
    goto label_96;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4047} true;
    goto label_96_true, label_96_false;

  label_96_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3444, error);
    goto label_90;

  label_96_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3444, error);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4048} true;
    assert grid_ptr != 0;
    Mem_T.PGrid := Mem_T.PGrid[grid_ptr := 0];
    assume value_is(__ctobpl_const_3509, grid_ptr);
    assume value_is(__ctobpl_const_3510, Mem_T.PGrid[grid_ptr]);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4049} true;
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4049} true;
    call result.printf$14 := det_choice();
    goto label_102;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4050} true;
    result.griddef1$1 := 17;
    goto label_1;

  label_64_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3399, error);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4032} true;
    grid_type := 2;
    assume value_is(__ctobpl_const_3400, grid_type);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4033} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.hexgrdef$10 := hexgrdef(Mem_T.Pcharac[curr_ptr], curr_ptr, pstep_ptr, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_3401, curr_ptr);
    assume value_is(__ctobpl_const_3402, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3403, curr_ptr);
    assume value_is(__ctobpl_const_3404, pstep_ptr);
    assume value_is(__ctobpl_const_3405, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_3406, curr_ptr);
    assume value_is(__ctobpl_const_3407, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3408, curr_ptr);
    assume value_is(__ctobpl_const_3409, pstep_ptr);
    assume value_is(__ctobpl_const_3410, pqstep_unit_ptr);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4033} true;
    error := result.hexgrdef$10;
    assume value_is(__ctobpl_const_3411, error);
    assume value_is(__ctobpl_const_3412, result.hexgrdef$10);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4035} true;
    goto label_83_true, label_83_false;

  label_83_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3413, error);
    goto label_77;

  label_83_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3413, error);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4036} true;
    assert grid_ptr != 0;
    Mem_T.PGrid := Mem_T.PGrid[grid_ptr := 0];
    assume value_is(__ctobpl_const_3511, grid_ptr);
    assume value_is(__ctobpl_const_3512, Mem_T.PGrid[grid_ptr]);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4037} true;
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4037} true;
    call result.printf$11 := det_choice();
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4038} true;
    result.griddef1$1 := 17;
    goto label_1;

  label_57_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3382, error);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4020} true;
    grid_type := 1;
    assume value_is(__ctobpl_const_3383, grid_type);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4021} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.recgrdef$7 := recgrdef(Mem_T.Pcharac[curr_ptr], curr_ptr, pstep_ptr, qstep_ptr, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_3384, curr_ptr);
    assume value_is(__ctobpl_const_3385, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3386, curr_ptr);
    assume value_is(__ctobpl_const_3387, pstep_ptr);
    assume value_is(__ctobpl_const_3388, qstep_ptr);
    assume value_is(__ctobpl_const_3389, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_3390, curr_ptr);
    assume value_is(__ctobpl_const_3391, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3392, curr_ptr);
    assume value_is(__ctobpl_const_3393, pstep_ptr);
    assume value_is(__ctobpl_const_3394, qstep_ptr);
    assume value_is(__ctobpl_const_3395, pqstep_unit_ptr);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4021} true;
    error := result.recgrdef$7;
    assume value_is(__ctobpl_const_3396, error);
    assume value_is(__ctobpl_const_3397, result.recgrdef$7);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4023} true;
    goto label_70_true, label_70_false;

  label_70_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3398, error);
    goto label_64;

  label_70_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3398, error);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4024} true;
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4024} true;
    call result.printf$8 := det_choice();
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4025} true;
    assert grid_ptr != 0;
    Mem_T.PGrid := Mem_T.PGrid[grid_ptr := 0];
    assume value_is(__ctobpl_const_3513, grid_ptr);
    assume value_is(__ctobpl_const_3514, Mem_T.PGrid[grid_ptr]);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4026} true;
    result.griddef1$1 := 17;
    goto label_1;

  label_56_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3381, error);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4011} true;
    assert grid_ptr != 0;
    Mem_T.PGrid := Mem_T.PGrid[grid_ptr := 0];
    assume value_is(__ctobpl_const_3515, grid_ptr);
    assume value_is(__ctobpl_const_3516, Mem_T.PGrid[grid_ptr]);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4012} true;
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4012} true;
    call result.printf$5 := det_choice();
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4013} true;
    result.griddef1$1 := 17;
    goto label_1;

  label_48_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3367, error);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4000} true;
    assert grid_ptr != 0;
    Mem_T.PGrid := Mem_T.PGrid[grid_ptr := 0];
    assume value_is(__ctobpl_const_3517, grid_ptr);
    assume value_is(__ctobpl_const_3518, Mem_T.PGrid[grid_ptr]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4001} true;
    result.griddef1$1 := 1;
    goto label_1;
}



procedure {:extern} groupdef(p1.__1: int, pp2.__1: int, group_ptr.__1: int) returns (result.groupdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} groupdef(p1.__1: int, pp2.__1: int, group_ptr.__1: int) returns (result.groupdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$12$: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} addrem: int;
  var {:extern} addrem_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} elem: int;
  var {:extern} elem_ptr: int;
  var {:extern} err: int;
  var {:extern} err_ptr: int;
  var {:extern} error: int;
  var {:extern} fail: int;
  var {:extern} fail_ptr: int;
  var {:extern} grampexc: int;
  var {:extern} grampexc_ptr: int;
  var {:extern} grid: int;
  var {:extern} grid_ptr: int;
  var {:extern} group_ptr: int;
  var {:extern} groupname: int;
  var {:extern} grphaexc: int;
  var {:extern} grphaexc_ptr: int;
  var {:extern} p1: int;
  var {:extern} $parserro.arg.3$13$: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$11: int;
  var {:extern} result.GetUName$4: int;
  var {:extern} result.InUNames$5: int;
  var {:extern} result.InserUN$6: int;
  var {:extern} result.greldef$7: int;
  var {:extern} result.grexcdef$10: int;
  var {:extern} result.grgeodef$9: int;
  var {:extern} result.malloc$14: int;
  var {:extern} result.strcpy$8: int;
  var {:extern} result.strcpy$15: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(group_ptr.__1, alloc);
    $GetKeyword.arg.1$12$ := 0;
    $GetKeyword.arg.1$3$ := 0;
    call addrem := __HAVOC_det_malloc(4);
    addrem_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    call elem := __HAVOC_det_malloc(4);
    elem_ptr := 0;
    call err := __HAVOC_det_malloc(4);
    err_ptr := 0;
    error := 0;
    call fail := __HAVOC_det_malloc(4);
    fail_ptr := 0;
    call grampexc := __HAVOC_det_malloc(4);
    grampexc_ptr := 0;
    call grid := __HAVOC_det_malloc(4);
    grid_ptr := 0;
    group_ptr := 0;
    call groupname := __HAVOC_det_malloc(31);
    call grphaexc := __HAVOC_det_malloc(4);
    grphaexc_ptr := 0;
    p1 := 0;
    $parserro.arg.3$13$ := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$11 := 0;
    result.GetUName$4 := 0;
    result.InUNames$5 := 0;
    result.InserUN$6 := 0;
    result.greldef$7 := 0;
    result.grexcdef$10 := 0;
    result.grgeodef$9 := 0;
    result.groupdef$1 := 0;
    result.malloc$14 := 0;
    result.strcpy$8 := 0;
    result.strcpy$15 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    group_ptr := group_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4099} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4099} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4099} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_3519, curr_ptr);
    assume value_is(__ctobpl_const_3520, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4100} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4102} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4104} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4104} true;
    Mem_T.PGrid := Mem_T.PGrid[grid := 0];
    assume value_is(__ctobpl_const_3521, Mem_T.PGrid[grid]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4104} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4104} true;
    grid_ptr := grid;
    assume value_is(__ctobpl_const_3522, grid_ptr);
    assume value_is(__ctobpl_const_3523, Mem_T.PGrid[grid]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4105} true;
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4105} true;
    Mem_T.PElem := Mem_T.PElem[elem := 0];
    assume value_is(__ctobpl_const_3524, Mem_T.PElem[elem]);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4105} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4105} true;
    elem_ptr := elem;
    assume value_is(__ctobpl_const_3525, elem_ptr);
    assume value_is(__ctobpl_const_3526, Mem_T.PElem[elem]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4106} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4106} true;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem := 0];
    assume value_is(__ctobpl_const_3527, Mem_T.PAddRem[addrem]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4106} true;
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4106} true;
    addrem_ptr := addrem;
    assume value_is(__ctobpl_const_3528, addrem_ptr);
    assume value_is(__ctobpl_const_3529, Mem_T.PAddRem[addrem]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4107} true;
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4107} true;
    Mem_T.PGrAmpExc := Mem_T.PGrAmpExc[grampexc := 0];
    assume value_is(__ctobpl_const_3530, Mem_T.PGrAmpExc[grampexc]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4107} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4107} true;
    grampexc_ptr := grampexc;
    assume value_is(__ctobpl_const_3531, grampexc_ptr);
    assume value_is(__ctobpl_const_3532, Mem_T.PGrAmpExc[grampexc]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4108} true;
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4108} true;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc := 0];
    assume value_is(__ctobpl_const_3533, Mem_T.PGrPhaExc[grphaexc]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4108} true;
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4108} true;
    grphaexc_ptr := grphaexc;
    assume value_is(__ctobpl_const_3534, grphaexc_ptr);
    assume value_is(__ctobpl_const_3535, Mem_T.PGrPhaExc[grphaexc]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4109} true;
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4109} true;
    Mem_T.PErr := Mem_T.PErr[err := 0];
    assume value_is(__ctobpl_const_3536, Mem_T.PErr[err]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4109} true;
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4109} true;
    err_ptr := err;
    assume value_is(__ctobpl_const_3537, err_ptr);
    assume value_is(__ctobpl_const_3538, Mem_T.PErr[err]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4110} true;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4110} true;
    Mem_T.PFail := Mem_T.PFail[fail := 0];
    assume value_is(__ctobpl_const_3539, Mem_T.PFail[fail]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4110} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4110} true;
    fail_ptr := fail;
    assume value_is(__ctobpl_const_3540, fail_ptr);
    assume value_is(__ctobpl_const_3541, Mem_T.PFail[fail]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4117} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_3542, curr_ptr);
    assume value_is(__ctobpl_const_3543, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3544, p1);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4118} true;
    error := 0;
    assume value_is(__ctobpl_const_3545, error);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4121} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 47);
    assume value_is(__ctobpl_const_3546, $GetKeyword.arg.1$3$);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4121} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_3547, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3548, curr_ptr);
    assume value_is(__ctobpl_const_3549, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3550, curr_ptr);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4121} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_3551, error);
    assume value_is(__ctobpl_const_3552, result.GetKeyword$2);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4122} true;
    goto label_43_true, label_43_false;

  label_43_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3553, error);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4128} true;
    call result.GetUName$4 := GetUName(groupname, curr_ptr);
    assume value_is(__ctobpl_const_3554, curr_ptr);
    assume value_is(__ctobpl_const_3555, curr_ptr);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4128} true;
    goto label_49_true, label_49_false;

  label_49_false:
    assume result.GetUName$4 == 0;
    assume value_is(__ctobpl_const_3556, result.GetUName$4);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4135} true;
    call result.InUNames$5 := InUNames(groupname);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4135} true;
    goto label_57_true, label_57_false;

  label_57_false:
    assume result.InUNames$5 == 0;
    assume value_is(__ctobpl_const_3557, result.InUNames$5);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4142} true;
    call result.InserUN$6 := InserUN(groupname);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4145} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.greldef$7 := greldef(Mem_T.Pcharac[curr_ptr], curr_ptr, grid_ptr, elem_ptr);
    assume value_is(__ctobpl_const_3558, curr_ptr);
    assume value_is(__ctobpl_const_3559, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3560, curr_ptr);
    assume value_is(__ctobpl_const_3561, grid_ptr);
    assume value_is(__ctobpl_const_3562, elem_ptr);
    assume value_is(__ctobpl_const_3563, curr_ptr);
    assume value_is(__ctobpl_const_3564, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3565, curr_ptr);
    assume value_is(__ctobpl_const_3566, grid_ptr);
    assume value_is(__ctobpl_const_3567, elem_ptr);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4145} true;
    error := result.greldef$7;
    assume value_is(__ctobpl_const_3568, error);
    assume value_is(__ctobpl_const_3569, result.greldef$7);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4148} true;
    goto label_69_true, label_69_false;

  label_69_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3570, error);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4153} true;
    goto label_70_true, label_70_false;

  label_70_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3571, error);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4154} true;
    assert grid_ptr != 0;
    assert Mem_T.PGrid[grid_ptr] != 0;
    Mem_T.LEVEL_Grid := Mem_T.LEVEL_Grid[LEVEL_Grid(Mem_T.PGrid[grid_ptr]) := 1];
    assume value_is(__ctobpl_const_3572, grid_ptr);
    assume value_is(__ctobpl_const_3573, Mem_T.PGrid[grid_ptr]);
    assume value_is(__ctobpl_const_3574, Mem_T.LEVEL_Grid[LEVEL_Grid(Mem_T.PGrid[grid_ptr])]);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4155} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.LEVEL_Elem := Mem_T.LEVEL_Elem[LEVEL_Elem(Mem_T.PElem[elem_ptr]) := 1];
    assume value_is(__ctobpl_const_3575, elem_ptr);
    assume value_is(__ctobpl_const_3576, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_3577, Mem_T.LEVEL_Elem[LEVEL_Elem(Mem_T.PElem[elem_ptr])]);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4156} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    assume Mem_T.NAME_Elem[NAME_Elem(Mem_T.PElem[elem_ptr])] == Mem_T.A31CHAR[NAME_Elem(Mem_T.PElem[elem_ptr])];
    call result.strcpy$8 := strcpy(NAME_Elem(Mem_T.PElem[elem_ptr]), havoc_stringTemp);
    Mem_T.NAME_Elem := Mem_T.NAME_Elem[NAME_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.A31CHAR[NAME_Elem(Mem_T.PElem[elem_ptr])]];
    assume value_is(__ctobpl_const_3578, elem_ptr);
    assume value_is(__ctobpl_const_3579, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_3580, elem_ptr);
    assume value_is(__ctobpl_const_3581, Mem_T.PElem[elem_ptr]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4162} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.grgeodef$9 := grgeodef(Mem_T.Pcharac[curr_ptr], curr_ptr, addrem_ptr);
    assume value_is(__ctobpl_const_3582, curr_ptr);
    assume value_is(__ctobpl_const_3583, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3584, curr_ptr);
    assume value_is(__ctobpl_const_3585, addrem_ptr);
    assume value_is(__ctobpl_const_3586, curr_ptr);
    assume value_is(__ctobpl_const_3587, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3588, curr_ptr);
    assume value_is(__ctobpl_const_3589, addrem_ptr);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4162} true;
    error := result.grgeodef$9;
    assume value_is(__ctobpl_const_3590, error);
    assume value_is(__ctobpl_const_3591, result.grgeodef$9);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4165} true;
    goto label_77_true, label_77_false;

  label_77_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3592, error);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4172} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.grexcdef$10 := grexcdef(Mem_T.Pcharac[curr_ptr], curr_ptr, grampexc_ptr, grphaexc_ptr);
    assume value_is(__ctobpl_const_3593, curr_ptr);
    assume value_is(__ctobpl_const_3594, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3595, curr_ptr);
    assume value_is(__ctobpl_const_3596, grampexc_ptr);
    assume value_is(__ctobpl_const_3597, grphaexc_ptr);
    assume value_is(__ctobpl_const_3598, curr_ptr);
    assume value_is(__ctobpl_const_3599, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3600, curr_ptr);
    assume value_is(__ctobpl_const_3601, grampexc_ptr);
    assume value_is(__ctobpl_const_3602, grphaexc_ptr);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4172} true;
    error := result.grexcdef$10;
    assume value_is(__ctobpl_const_3603, error);
    assume value_is(__ctobpl_const_3604, result.grexcdef$10);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4175} true;
    goto label_86_true, label_86_false;

  label_86_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3605, error);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4186} true;
    $GetKeyword.arg.1$12$ := PLUS(Keywords, 21, 50);
    assume value_is(__ctobpl_const_3606, $GetKeyword.arg.1$12$);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4186} true;
    call result.GetKeyword$11 := GetKeyword($GetKeyword.arg.1$12$, curr_ptr);
    assume value_is(__ctobpl_const_3607, $GetKeyword.arg.1$12$);
    assume value_is(__ctobpl_const_3608, curr_ptr);
    assume value_is(__ctobpl_const_3609, $GetKeyword.arg.1$12$);
    assume value_is(__ctobpl_const_3610, curr_ptr);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4186} true;
    error := result.GetKeyword$11;
    assume value_is(__ctobpl_const_3611, error);
    assume value_is(__ctobpl_const_3612, result.GetKeyword$11);
    goto label_96;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4187} true;
    goto label_96_true, label_96_false;

  label_96_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3613, error);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4194} true;
    call result.malloc$14 := __HAVOC_det_malloc(120);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4194} true;
    assert group_ptr != 0;
    Mem_T.PGroup := Mem_T.PGroup[group_ptr := result.malloc$14];
    assume value_is(__ctobpl_const_3614, group_ptr);
    assume value_is(__ctobpl_const_3615, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3616, result.malloc$14);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4196} true;
    assert group_ptr != 0;
    goto label_106_true, label_106_false;

  label_106_false:
    assume Mem_T.PGroup[group_ptr] == 0;
    assume value_is(__ctobpl_const_3617, group_ptr);
    assume value_is(__ctobpl_const_3618, Mem_T.PGroup[group_ptr]);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4197} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_3619, curr_ptr);
    assume value_is(__ctobpl_const_3620, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3621, curr_ptr);
    assume value_is(__ctobpl_const_3622, Mem_T.Pcharac[curr_ptr]);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4199} true;
    call interror(havoc_stringTemp);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4204} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assume Mem_T.NAME_Group[NAME_Group(Mem_T.PGroup[group_ptr])] == Mem_T.A31CHAR[NAME_Group(Mem_T.PGroup[group_ptr])];
    call result.strcpy$15 := strcpy(NAME_Group(Mem_T.PGroup[group_ptr]), groupname);
    Mem_T.NAME_Group := Mem_T.NAME_Group[NAME_Group(Mem_T.PGroup[group_ptr]) := Mem_T.A31CHAR[NAME_Group(Mem_T.PGroup[group_ptr])]];
    assume value_is(__ctobpl_const_3623, group_ptr);
    assume value_is(__ctobpl_const_3624, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3625, group_ptr);
    assume value_is(__ctobpl_const_3626, Mem_T.PGroup[group_ptr]);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4205} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    Mem_T.NUM_OF_NODES_Group := Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(Mem_T.PGroup[group_ptr]) := 0];
    assume value_is(__ctobpl_const_3627, group_ptr);
    assume value_is(__ctobpl_const_3628, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3629, Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(Mem_T.PGroup[group_ptr])]);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4206} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    Mem_T.SHAPE_Group := Mem_T.SHAPE_Group[SHAPE_Group(Mem_T.PGroup[group_ptr]) := 0];
    assume value_is(__ctobpl_const_3630, group_ptr);
    assume value_is(__ctobpl_const_3631, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3632, Mem_T.SHAPE_Group[SHAPE_Group(Mem_T.PGroup[group_ptr])]);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4207} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    Mem_T.PSIZE_Group := Mem_T.PSIZE_Group[PSIZE_Group(Mem_T.PGroup[group_ptr]) := 0];
    assume value_is(__ctobpl_const_3633, group_ptr);
    assume value_is(__ctobpl_const_3634, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3635, Mem_T.PSIZE_Group[PSIZE_Group(Mem_T.PGroup[group_ptr])]);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4208} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    Mem_T.QSIZE_Group := Mem_T.QSIZE_Group[QSIZE_Group(Mem_T.PGroup[group_ptr]) := 0];
    assume value_is(__ctobpl_const_3636, group_ptr);
    assume value_is(__ctobpl_const_3637, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3638, Mem_T.QSIZE_Group[QSIZE_Group(Mem_T.PGroup[group_ptr])]);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4209} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assert grid_ptr != 0;
    Mem_T.GRID_PTR_Group := Mem_T.GRID_PTR_Group[GRID_PTR_Group(Mem_T.PGroup[group_ptr]) := Mem_T.PGrid[grid_ptr]];
    assume value_is(__ctobpl_const_3639, group_ptr);
    assume value_is(__ctobpl_const_3640, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3641, Mem_T.GRID_PTR_Group[GRID_PTR_Group(Mem_T.PGroup[group_ptr])]);
    assume value_is(__ctobpl_const_3642, grid_ptr);
    assume value_is(__ctobpl_const_3643, Mem_T.PGrid[grid_ptr]);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4210} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assert elem_ptr != 0;
    Mem_T.ELEM_PTR_Group := Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(Mem_T.PGroup[group_ptr]) := Mem_T.PElem[elem_ptr]];
    assume value_is(__ctobpl_const_3644, group_ptr);
    assume value_is(__ctobpl_const_3645, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3646, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(Mem_T.PGroup[group_ptr])]);
    assume value_is(__ctobpl_const_3647, elem_ptr);
    assume value_is(__ctobpl_const_3648, Mem_T.PElem[elem_ptr]);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4211} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assert grampexc_ptr != 0;
    Mem_T.GRAMPEXC_PTR_Group := Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(Mem_T.PGroup[group_ptr]) := Mem_T.PGrAmpExc[grampexc_ptr]];
    assume value_is(__ctobpl_const_3649, group_ptr);
    assume value_is(__ctobpl_const_3650, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3651, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(Mem_T.PGroup[group_ptr])]);
    assume value_is(__ctobpl_const_3652, grampexc_ptr);
    assume value_is(__ctobpl_const_3653, Mem_T.PGrAmpExc[grampexc_ptr]);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4212} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assert grphaexc_ptr != 0;
    Mem_T.GRPHAEXC_PTR_Group := Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(Mem_T.PGroup[group_ptr]) := Mem_T.PGrPhaExc[grphaexc_ptr]];
    assume value_is(__ctobpl_const_3654, group_ptr);
    assume value_is(__ctobpl_const_3655, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3656, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(Mem_T.PGroup[group_ptr])]);
    assume value_is(__ctobpl_const_3657, grphaexc_ptr);
    assume value_is(__ctobpl_const_3658, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4213} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assert addrem_ptr != 0;
    Mem_T.ADDREM_PTR_Group := Mem_T.ADDREM_PTR_Group[ADDREM_PTR_Group(Mem_T.PGroup[group_ptr]) := Mem_T.PAddRem[addrem_ptr]];
    assume value_is(__ctobpl_const_3659, group_ptr);
    assume value_is(__ctobpl_const_3660, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3661, Mem_T.ADDREM_PTR_Group[ADDREM_PTR_Group(Mem_T.PGroup[group_ptr])]);
    assume value_is(__ctobpl_const_3662, addrem_ptr);
    assume value_is(__ctobpl_const_3663, Mem_T.PAddRem[addrem_ptr]);
    goto label_122;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4214} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assert err_ptr != 0;
    Mem_T.ERR_PTR_Group := Mem_T.ERR_PTR_Group[ERR_PTR_Group(Mem_T.PGroup[group_ptr]) := Mem_T.PErr[err_ptr]];
    assume value_is(__ctobpl_const_3664, group_ptr);
    assume value_is(__ctobpl_const_3665, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3666, Mem_T.ERR_PTR_Group[ERR_PTR_Group(Mem_T.PGroup[group_ptr])]);
    assume value_is(__ctobpl_const_3667, err_ptr);
    assume value_is(__ctobpl_const_3668, Mem_T.PErr[err_ptr]);
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4215} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assert fail_ptr != 0;
    Mem_T.FAIL_PTR_Group := Mem_T.FAIL_PTR_Group[FAIL_PTR_Group(Mem_T.PGroup[group_ptr]) := Mem_T.PFail[fail_ptr]];
    assume value_is(__ctobpl_const_3669, group_ptr);
    assume value_is(__ctobpl_const_3670, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3671, Mem_T.FAIL_PTR_Group[FAIL_PTR_Group(Mem_T.PGroup[group_ptr])]);
    assume value_is(__ctobpl_const_3672, fail_ptr);
    assume value_is(__ctobpl_const_3673, Mem_T.PFail[fail_ptr]);
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4217} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    Mem_T.GEOMNODE_PTR_Group := Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(Mem_T.PGroup[group_ptr]) := 0];
    assume value_is(__ctobpl_const_3674, group_ptr);
    assume value_is(__ctobpl_const_3675, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3676, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(Mem_T.PGroup[group_ptr])]);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4218} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    Mem_T.BUILT_Group := Mem_T.BUILT_Group[BUILT_Group(Mem_T.PGroup[group_ptr]) := 0];
    assume value_is(__ctobpl_const_3677, group_ptr);
    assume value_is(__ctobpl_const_3678, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3679, Mem_T.BUILT_Group[BUILT_Group(Mem_T.PGroup[group_ptr])]);
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4219} true;
    assert group_ptr != 0;
    assert Mem_T.PGroup[group_ptr] != 0;
    assert SUPER_GROUP_PTR_Group(Mem_T.PGroup[group_ptr]) != 0;
    Mem_T.SUPER_GROUP_PTR_Group := Mem_T.SUPER_GROUP_PTR_Group[PLUS(SUPER_GROUP_PTR_Group(Mem_T.PGroup[group_ptr]), 4, 0) := 0];
    assume value_is(__ctobpl_const_3680, group_ptr);
    assume value_is(__ctobpl_const_3681, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_3682, Mem_T.SUPER_GROUP_PTR_Group[PLUS(SUPER_GROUP_PTR_Group(Mem_T.PGroup[group_ptr]), 4, 0)]);
    goto label_127;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4223} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3683, pp2);
    assume value_is(__ctobpl_const_3684, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3685, curr_ptr);
    assume value_is(__ctobpl_const_3686, Mem_T.Pcharac[curr_ptr]);
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4224} true;
    result.groupdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4225} true;
    call __HAVOC_free(addrem);
    call __HAVOC_free(curr);
    call __HAVOC_free(elem);
    call __HAVOC_free(err);
    call __HAVOC_free(fail);
    call __HAVOC_free(grampexc);
    call __HAVOC_free(grid);
    call __HAVOC_free(groupname);
    call __HAVOC_free(grphaexc);
    return;

  label_106_true:
    assume Mem_T.PGroup[group_ptr] != 0;
    assume value_is(__ctobpl_const_3617, group_ptr);
    assume value_is(__ctobpl_const_3618, Mem_T.PGroup[group_ptr]);
    goto label_110;

  label_96_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3613, error);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4188} true;
    $parserro.arg.3$13$ := PLUS(Keywords, 21, 50);
    assume value_is(__ctobpl_const_3687, $parserro.arg.3$13$);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4188} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 1, $parserro.arg.3$13$);
    assume value_is(__ctobpl_const_3688, curr_ptr);
    assume value_is(__ctobpl_const_3689, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3690, $parserro.arg.3$13$);
    assume value_is(__ctobpl_const_3691, curr_ptr);
    assume value_is(__ctobpl_const_3692, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3693, $parserro.arg.3$13$);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4190} true;
    result.groupdef$1 := 17;
    goto label_1;

  label_86_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3605, error);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4176} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 82, havoc_stringTemp);
    assume value_is(__ctobpl_const_3694, curr_ptr);
    assume value_is(__ctobpl_const_3695, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3696, curr_ptr);
    assume value_is(__ctobpl_const_3697, Mem_T.Pcharac[curr_ptr]);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4178} true;
    result.groupdef$1 := 17;
    goto label_1;

  label_77_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3592, error);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4166} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 82, groupname);
    assume value_is(__ctobpl_const_3698, curr_ptr);
    assume value_is(__ctobpl_const_3699, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3700, curr_ptr);
    assume value_is(__ctobpl_const_3701, Mem_T.Pcharac[curr_ptr]);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4168} true;
    result.groupdef$1 := 17;
    goto label_1;

  label_70_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3571, error);
    goto label_73;

  label_69_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3570, error);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4149} true;
    result.groupdef$1 := 17;
    goto label_1;

  label_57_true:
    assume result.InUNames$5 != 0;
    assume value_is(__ctobpl_const_3557, result.InUNames$5);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4136} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 3, groupname);
    assume value_is(__ctobpl_const_3702, curr_ptr);
    assume value_is(__ctobpl_const_3703, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3704, curr_ptr);
    assume value_is(__ctobpl_const_3705, Mem_T.Pcharac[curr_ptr]);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4138} true;
    result.groupdef$1 := 17;
    goto label_1;

  label_49_true:
    assume result.GetUName$4 != 0;
    assume value_is(__ctobpl_const_3556, result.GetUName$4);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4129} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 81, havoc_stringTemp);
    assume value_is(__ctobpl_const_3706, curr_ptr);
    assume value_is(__ctobpl_const_3707, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3708, curr_ptr);
    assume value_is(__ctobpl_const_3709, Mem_T.Pcharac[curr_ptr]);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4131} true;
    result.groupdef$1 := 17;
    goto label_1;

  label_43_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3553, error);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4123} true;
    assert group_ptr != 0;
    Mem_T.PGroup := Mem_T.PGroup[group_ptr := 0];
    assume value_is(__ctobpl_const_3710, group_ptr);
    assume value_is(__ctobpl_const_3711, Mem_T.PGroup[group_ptr]);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4124} true;
    result.groupdef$1 := 1;
    goto label_1;
}



procedure {:extern} grphaexc(p1.__1: int, pp2.__1: int, grphaexc_ptr.__1: int) returns (result.grphaexc$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} grphaexc(p1.__1: int, pp2.__1: int, grphaexc_ptr.__1: int) returns (result.grphaexc$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} angle_start: int;
  var {:extern} angle_start_ptr: int;
  var {:extern} angle_step: int;
  var {:extern} angle_step_ptr: int;
  var {:extern} angle_unit: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} centre: int;
  var {:extern} centre_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} direction: int;
  var {:extern} direction_ptr: int;
  var {:extern} error: int;
  var {:extern} grphaexc_ptr: int;
  var {:extern} omit_angle: int;
  var {:extern} omit_angle_ptr: int;
  var {:extern} omit_phase: int;
  var {:extern} omit_phase_ptr: int;
  var {:extern} p1: int;
  var {:extern} p1_ep: int;
  var {:extern} p1_ep_ptr: int;
  var {:extern} p2_ep: int;
  var {:extern} p2_ep_ptr: int;
  var {:extern} phase_start: int;
  var {:extern} phase_start_ptr: int;
  var {:extern} phase_step: int;
  var {:extern} phase_step_ptr: int;
  var {:extern} phase_unit: int;
  var {:extern} phase_unit_ptr: int;
  var {:extern} phi: int;
  var {:extern} phi_ptr: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$12$: int;
  var {:extern} $printf.arg.2$15$: int;
  var {:extern} $printf.arg.2$18$: int;
  var {:extern} $printf.arg.2$21$: int;
  var {:extern} $printf.arg.2$8$: int;
  var {:extern} q1_ep: int;
  var {:extern} q1_ep_ptr: int;
  var {:extern} q2_ep: int;
  var {:extern} q2_ep_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.beampha$16: int;
  var {:extern} result.malloc$5: int;
  var {:extern} result.malloc$9: int;
  var {:extern} result.malloc$13: int;
  var {:extern} result.malloc$19: int;
  var {:extern} result.printf$7: int;
  var {:extern} result.printf$11: int;
  var {:extern} result.printf$14: int;
  var {:extern} result.printf$17: int;
  var {:extern} result.printf$20: int;
  var {:extern} result.secorpha$6: int;
  var {:extern} result.serotpha$10: int;
  var {:extern} result.unifpha$4: int;
  var {:extern} theta: int;
  var {:extern} theta_ptr: int;
  var {:extern} u: int;
  var {:extern} u_ptr: int;
  var {:extern} unif_val: int;
  var {:extern} unif_val_ptr: int;
  var {:extern} v: int;
  var {:extern} v_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(grphaexc_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call angle_start := __HAVOC_det_malloc(8);
    angle_start_ptr := 0;
    call angle_step := __HAVOC_det_malloc(8);
    angle_step_ptr := 0;
    call angle_unit := __HAVOC_det_malloc(4);
    angle_unit_ptr := 0;
    call centre := __HAVOC_det_malloc(8);
    centre_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    call direction := __HAVOC_det_malloc(4);
    direction_ptr := 0;
    error := 0;
    grphaexc_ptr := 0;
    call omit_angle := __HAVOC_det_malloc(4);
    omit_angle_ptr := 0;
    call omit_phase := __HAVOC_det_malloc(4);
    omit_phase_ptr := 0;
    p1 := 0;
    call p1_ep := __HAVOC_det_malloc(8);
    p1_ep_ptr := 0;
    call p2_ep := __HAVOC_det_malloc(8);
    p2_ep_ptr := 0;
    call phase_start := __HAVOC_det_malloc(8);
    phase_start_ptr := 0;
    call phase_step := __HAVOC_det_malloc(8);
    phase_step_ptr := 0;
    call phase_unit := __HAVOC_det_malloc(4);
    phase_unit_ptr := 0;
    call phi := __HAVOC_det_malloc(8);
    phi_ptr := 0;
    pp2 := 0;
    $printf.arg.2$12$ := 0;
    $printf.arg.2$15$ := 0;
    $printf.arg.2$18$ := 0;
    $printf.arg.2$21$ := 0;
    $printf.arg.2$8$ := 0;
    call q1_ep := __HAVOC_det_malloc(8);
    q1_ep_ptr := 0;
    call q2_ep := __HAVOC_det_malloc(8);
    q2_ep_ptr := 0;
    result.GetKeyword$2 := 0;
    result.beampha$16 := 0;
    result.grphaexc$1 := 0;
    result.malloc$5 := 0;
    result.malloc$9 := 0;
    result.malloc$13 := 0;
    result.malloc$19 := 0;
    result.printf$7 := 0;
    result.printf$11 := 0;
    result.printf$14 := 0;
    result.printf$17 := 0;
    result.printf$20 := 0;
    result.secorpha$6 := 0;
    result.serotpha$10 := 0;
    result.unifpha$4 := 0;
    call theta := __HAVOC_det_malloc(8);
    theta_ptr := 0;
    call u := __HAVOC_det_malloc(8);
    u_ptr := 0;
    call unif_val := __HAVOC_det_malloc(8);
    unif_val_ptr := 0;
    call v := __HAVOC_det_malloc(8);
    v_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    grphaexc_ptr := grphaexc_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4235} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4235} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4235} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_3712, curr_ptr);
    assume value_is(__ctobpl_const_3713, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4236} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4238} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4238} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4238} true;
    unif_val_ptr := unif_val;
    assume value_is(__ctobpl_const_3714, unif_val_ptr);
    assume value_is(__ctobpl_const_3715, Mem_T.FLOAT[unif_val]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4239} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4239} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4239} true;
    centre_ptr := centre;
    assume value_is(__ctobpl_const_3716, centre_ptr);
    assume value_is(__ctobpl_const_3717, Mem_T.FLOAT[centre]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4240} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4240} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4240} true;
    p1_ep_ptr := p1_ep;
    assume value_is(__ctobpl_const_3718, p1_ep_ptr);
    assume value_is(__ctobpl_const_3719, Mem_T.FLOAT[p1_ep]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4241} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4241} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4241} true;
    p2_ep_ptr := p2_ep;
    assume value_is(__ctobpl_const_3720, p2_ep_ptr);
    assume value_is(__ctobpl_const_3721, Mem_T.FLOAT[p2_ep]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4242} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4242} true;
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4242} true;
    q1_ep_ptr := q1_ep;
    assume value_is(__ctobpl_const_3722, q1_ep_ptr);
    assume value_is(__ctobpl_const_3723, Mem_T.FLOAT[q1_ep]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4243} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4243} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4243} true;
    q2_ep_ptr := q2_ep;
    assume value_is(__ctobpl_const_3724, q2_ep_ptr);
    assume value_is(__ctobpl_const_3725, Mem_T.FLOAT[q2_ep]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4244} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4244} true;
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4244} true;
    angle_unit_ptr := angle_unit;
    assume value_is(__ctobpl_const_3726, angle_unit_ptr);
    assume value_is(__ctobpl_const_3727, Mem_T.INT4[angle_unit]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4245} true;
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4245} true;
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4245} true;
    direction_ptr := direction;
    assume value_is(__ctobpl_const_3728, direction_ptr);
    assume value_is(__ctobpl_const_3729, Mem_T.INT4[direction]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4246} true;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4246} true;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4246} true;
    omit_angle_ptr := omit_angle;
    assume value_is(__ctobpl_const_3730, omit_angle_ptr);
    assume value_is(__ctobpl_const_3731, Mem_T.INT4[omit_angle]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4247} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4247} true;
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4247} true;
    angle_start_ptr := angle_start;
    assume value_is(__ctobpl_const_3732, angle_start_ptr);
    assume value_is(__ctobpl_const_3733, Mem_T.FLOAT[angle_start]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4248} true;
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4248} true;
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4248} true;
    angle_step_ptr := angle_step;
    assume value_is(__ctobpl_const_3734, angle_step_ptr);
    assume value_is(__ctobpl_const_3735, Mem_T.FLOAT[angle_step]);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4249} true;
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4249} true;
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4249} true;
    omit_phase_ptr := omit_phase;
    assume value_is(__ctobpl_const_3736, omit_phase_ptr);
    assume value_is(__ctobpl_const_3737, Mem_T.INT4[omit_phase]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4250} true;
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4250} true;
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4250} true;
    phase_start_ptr := phase_start;
    assume value_is(__ctobpl_const_3738, phase_start_ptr);
    assume value_is(__ctobpl_const_3739, Mem_T.FLOAT[phase_start]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4251} true;
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4251} true;
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4251} true;
    phase_step_ptr := phase_step;
    assume value_is(__ctobpl_const_3740, phase_step_ptr);
    assume value_is(__ctobpl_const_3741, Mem_T.FLOAT[phase_step]);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4252} true;
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4252} true;
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4252} true;
    u_ptr := u;
    assume value_is(__ctobpl_const_3742, u_ptr);
    assume value_is(__ctobpl_const_3743, Mem_T.FLOAT[u]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4253} true;
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4253} true;
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4253} true;
    v_ptr := v;
    assume value_is(__ctobpl_const_3744, v_ptr);
    assume value_is(__ctobpl_const_3745, Mem_T.FLOAT[v]);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4254} true;
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4254} true;
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4254} true;
    theta_ptr := theta;
    assume value_is(__ctobpl_const_3746, theta_ptr);
    assume value_is(__ctobpl_const_3747, Mem_T.FLOAT[theta]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4255} true;
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4255} true;
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4255} true;
    phi_ptr := phi;
    assume value_is(__ctobpl_const_3748, phi_ptr);
    assume value_is(__ctobpl_const_3749, Mem_T.FLOAT[phi]);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4256} true;
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4256} true;
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4256} true;
    phase_unit_ptr := phase_unit;
    assume value_is(__ctobpl_const_3750, phase_unit_ptr);
    assume value_is(__ctobpl_const_3751, Mem_T.INT4[phase_unit]);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4263} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_3752, curr_ptr);
    assume value_is(__ctobpl_const_3753, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3754, p1);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4264} true;
    error := 0;
    assume value_is(__ctobpl_const_3755, error);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4267} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 43);
    assume value_is(__ctobpl_const_3756, $GetKeyword.arg.1$3$);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4267} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_3757, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3758, curr_ptr);
    assume value_is(__ctobpl_const_3759, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_3760, curr_ptr);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4267} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_3761, error);
    assume value_is(__ctobpl_const_3762, result.GetKeyword$2);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4268} true;
    goto label_71_true, label_71_false;

  label_71_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3763, error);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4278} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.unifpha$4 := unifpha(Mem_T.Pcharac[curr_ptr], curr_ptr, unif_val_ptr, phase_unit_ptr);
    assume value_is(__ctobpl_const_3764, curr_ptr);
    assume value_is(__ctobpl_const_3765, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3766, curr_ptr);
    assume value_is(__ctobpl_const_3767, unif_val_ptr);
    assume value_is(__ctobpl_const_3768, phase_unit_ptr);
    assume value_is(__ctobpl_const_3769, curr_ptr);
    assume value_is(__ctobpl_const_3770, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3771, curr_ptr);
    assume value_is(__ctobpl_const_3772, unif_val_ptr);
    assume value_is(__ctobpl_const_3773, phase_unit_ptr);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4278} true;
    error := result.unifpha$4;
    assume value_is(__ctobpl_const_3774, error);
    assume value_is(__ctobpl_const_3775, result.unifpha$4);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4281} true;
    goto label_78_true, label_78_false;

  label_78_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3776, error);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4283} true;
    call result.malloc$5 := __HAVOC_det_malloc(152);
    goto label_187;

  label_187:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4283} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := result.malloc$5];
    assume value_is(__ctobpl_const_3777, grphaexc_ptr);
    assume value_is(__ctobpl_const_3778, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3779, result.malloc$5);
    goto label_188;

  label_188:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4285} true;
    assert grphaexc_ptr != 0;
    goto label_188_true, label_188_false;

  label_188_false:
    assume Mem_T.PGrPhaExc[grphaexc_ptr] == 0;
    assume value_is(__ctobpl_const_3780, grphaexc_ptr);
    assume value_is(__ctobpl_const_3781, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_189;

  label_189:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4286} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_3782, curr_ptr);
    assume value_is(__ctobpl_const_3783, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3784, curr_ptr);
    assume value_is(__ctobpl_const_3785, Mem_T.Pcharac[curr_ptr]);
    goto label_198;

  label_198:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4288} true;
    call interror(havoc_stringTemp);
    goto label_192;

  label_192:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4291} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.TYPE_GrPhaExc := Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := 0];
    assume value_is(__ctobpl_const_3786, grphaexc_ptr);
    assume value_is(__ctobpl_const_3787, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3788, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    goto label_193;

  label_193:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4292} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.UNIF_VAL_GrPhaExc := Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[unif_val]];
    assume value_is(__ctobpl_const_3789, grphaexc_ptr);
    assume value_is(__ctobpl_const_3790, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3791, Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3792, Mem_T.FLOAT[unif_val]);
    goto label_194;

  label_194:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4293} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PHASE_UNIT_GrPhaExc := Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.INT4[phase_unit]];
    assume value_is(__ctobpl_const_3793, grphaexc_ptr);
    assume value_is(__ctobpl_const_3794, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3795, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3796, Mem_T.INT4[phase_unit]);
    goto label_195;

  label_195:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4294} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PQEXP_PTR_GrPhaExc := Mem_T.PQEXP_PTR_GrPhaExc[PQEXP_PTR_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := 0];
    assume value_is(__ctobpl_const_3797, grphaexc_ptr);
    assume value_is(__ctobpl_const_3798, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3799, Mem_T.PQEXP_PTR_GrPhaExc[PQEXP_PTR_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    goto label_196;

  label_196:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4296} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3800, pp2);
    assume value_is(__ctobpl_const_3801, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3802, curr_ptr);
    assume value_is(__ctobpl_const_3803, Mem_T.Pcharac[curr_ptr]);
    goto label_197;

  label_197:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4297} true;
    result.grphaexc$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4424} true;
    call __HAVOC_free(angle_start);
    call __HAVOC_free(angle_step);
    call __HAVOC_free(angle_unit);
    call __HAVOC_free(centre);
    call __HAVOC_free(curr);
    call __HAVOC_free(direction);
    call __HAVOC_free(omit_angle);
    call __HAVOC_free(omit_phase);
    call __HAVOC_free(p1_ep);
    call __HAVOC_free(p2_ep);
    call __HAVOC_free(phase_start);
    call __HAVOC_free(phase_step);
    call __HAVOC_free(phase_unit);
    call __HAVOC_free(phi);
    call __HAVOC_free(q1_ep);
    call __HAVOC_free(q2_ep);
    call __HAVOC_free(theta);
    call __HAVOC_free(u);
    call __HAVOC_free(unif_val);
    call __HAVOC_free(v);
    return;

  label_188_true:
    assume Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    assume value_is(__ctobpl_const_3780, grphaexc_ptr);
    assume value_is(__ctobpl_const_3781, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_192;

  label_78_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3776, error);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4305} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.secorpha$6 := secorpha(Mem_T.Pcharac[curr_ptr], curr_ptr, centre_ptr, p1_ep_ptr, p2_ep_ptr, q1_ep_ptr, q2_ep_ptr, phase_unit_ptr);
    assume value_is(__ctobpl_const_3804, curr_ptr);
    assume value_is(__ctobpl_const_3805, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3806, curr_ptr);
    assume value_is(__ctobpl_const_3807, centre_ptr);
    assume value_is(__ctobpl_const_3808, p1_ep_ptr);
    assume value_is(__ctobpl_const_3809, p2_ep_ptr);
    assume value_is(__ctobpl_const_3810, q1_ep_ptr);
    assume value_is(__ctobpl_const_3811, q2_ep_ptr);
    assume value_is(__ctobpl_const_3812, phase_unit_ptr);
    assume value_is(__ctobpl_const_3813, curr_ptr);
    assume value_is(__ctobpl_const_3814, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3815, curr_ptr);
    assume value_is(__ctobpl_const_3816, centre_ptr);
    assume value_is(__ctobpl_const_3817, p1_ep_ptr);
    assume value_is(__ctobpl_const_3818, p2_ep_ptr);
    assume value_is(__ctobpl_const_3819, q1_ep_ptr);
    assume value_is(__ctobpl_const_3820, q2_ep_ptr);
    assume value_is(__ctobpl_const_3821, phase_unit_ptr);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4305} true;
    error := result.secorpha$6;
    assume value_is(__ctobpl_const_3822, error);
    assume value_is(__ctobpl_const_3823, result.secorpha$6);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4307} true;
    goto label_86_true, label_86_false;

  label_86_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3824, error);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4314} true;
    goto label_87_true, label_87_false;

  label_87_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3825, error);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4316} true;
    call result.malloc$9 := __HAVOC_det_malloc(152);
    goto label_169;

  label_169:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4316} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := result.malloc$9];
    assume value_is(__ctobpl_const_3826, grphaexc_ptr);
    assume value_is(__ctobpl_const_3827, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3828, result.malloc$9);
    goto label_170;

  label_170:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4318} true;
    assert grphaexc_ptr != 0;
    goto label_170_true, label_170_false;

  label_170_false:
    assume Mem_T.PGrPhaExc[grphaexc_ptr] == 0;
    assume value_is(__ctobpl_const_3829, grphaexc_ptr);
    assume value_is(__ctobpl_const_3830, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_171;

  label_171:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4319} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_3831, curr_ptr);
    assume value_is(__ctobpl_const_3832, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3833, curr_ptr);
    assume value_is(__ctobpl_const_3834, Mem_T.Pcharac[curr_ptr]);
    goto label_184;

  label_184:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4321} true;
    call interror(havoc_stringTemp);
    goto label_174;

  label_174:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4324} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.TYPE_GrPhaExc := Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := 1];
    assume value_is(__ctobpl_const_3835, grphaexc_ptr);
    assume value_is(__ctobpl_const_3836, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3837, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    goto label_175;

  label_175:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4325} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.CENTRE_GrPhaExc := Mem_T.CENTRE_GrPhaExc[CENTRE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[centre]];
    assume value_is(__ctobpl_const_3838, grphaexc_ptr);
    assume value_is(__ctobpl_const_3839, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3840, Mem_T.CENTRE_GrPhaExc[CENTRE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3841, Mem_T.FLOAT[centre]);
    goto label_176;

  label_176:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4326} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.P1_EP_GrPhaExc := Mem_T.P1_EP_GrPhaExc[P1_EP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[p1_ep]];
    assume value_is(__ctobpl_const_3842, grphaexc_ptr);
    assume value_is(__ctobpl_const_3843, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3844, Mem_T.P1_EP_GrPhaExc[P1_EP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3845, Mem_T.FLOAT[p1_ep]);
    goto label_177;

  label_177:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4327} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.P2_EP_GrPhaExc := Mem_T.P2_EP_GrPhaExc[P2_EP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[p2_ep]];
    assume value_is(__ctobpl_const_3846, grphaexc_ptr);
    assume value_is(__ctobpl_const_3847, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3848, Mem_T.P2_EP_GrPhaExc[P2_EP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3849, Mem_T.FLOAT[p2_ep]);
    goto label_178;

  label_178:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4328} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.Q1_EP_GrPhaExc := Mem_T.Q1_EP_GrPhaExc[Q1_EP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[q1_ep]];
    assume value_is(__ctobpl_const_3850, grphaexc_ptr);
    assume value_is(__ctobpl_const_3851, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3852, Mem_T.Q1_EP_GrPhaExc[Q1_EP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3853, Mem_T.FLOAT[q1_ep]);
    goto label_179;

  label_179:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4329} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.Q2_EP_GrPhaExc := Mem_T.Q2_EP_GrPhaExc[Q2_EP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[q2_ep]];
    assume value_is(__ctobpl_const_3854, grphaexc_ptr);
    assume value_is(__ctobpl_const_3855, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3856, Mem_T.Q2_EP_GrPhaExc[Q2_EP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3857, Mem_T.FLOAT[q2_ep]);
    goto label_180;

  label_180:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4330} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PHASE_UNIT_GrPhaExc := Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.INT4[phase_unit]];
    assume value_is(__ctobpl_const_3858, grphaexc_ptr);
    assume value_is(__ctobpl_const_3859, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3860, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3861, Mem_T.INT4[phase_unit]);
    goto label_181;

  label_181:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4331} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PQEXP_PTR_GrPhaExc := Mem_T.PQEXP_PTR_GrPhaExc[PQEXP_PTR_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := 0];
    assume value_is(__ctobpl_const_3862, grphaexc_ptr);
    assume value_is(__ctobpl_const_3863, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3864, Mem_T.PQEXP_PTR_GrPhaExc[PQEXP_PTR_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    goto label_182;

  label_182:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4333} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3865, pp2);
    assume value_is(__ctobpl_const_3866, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3867, curr_ptr);
    assume value_is(__ctobpl_const_3868, Mem_T.Pcharac[curr_ptr]);
    goto label_183;

  label_183:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4334} true;
    result.grphaexc$1 := 0;
    goto label_1;

  label_170_true:
    assume Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    assume value_is(__ctobpl_const_3829, grphaexc_ptr);
    assume value_is(__ctobpl_const_3830, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_174;

  label_87_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3825, error);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4342} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.serotpha$10 := serotpha(Mem_T.Pcharac[curr_ptr], curr_ptr, direction_ptr, omit_angle_ptr, angle_start_ptr, angle_step_ptr, omit_phase_ptr, phase_start_ptr, phase_step_ptr, angle_unit_ptr, phase_unit_ptr);
    assume value_is(__ctobpl_const_3869, curr_ptr);
    assume value_is(__ctobpl_const_3870, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3871, curr_ptr);
    assume value_is(__ctobpl_const_3872, direction_ptr);
    assume value_is(__ctobpl_const_3873, omit_angle_ptr);
    assume value_is(__ctobpl_const_3874, angle_start_ptr);
    assume value_is(__ctobpl_const_3875, angle_step_ptr);
    assume value_is(__ctobpl_const_3876, omit_phase_ptr);
    assume value_is(__ctobpl_const_3877, phase_start_ptr);
    assume value_is(__ctobpl_const_3878, phase_step_ptr);
    assume value_is(__ctobpl_const_3879, angle_unit_ptr);
    assume value_is(__ctobpl_const_3880, phase_unit_ptr);
    assume value_is(__ctobpl_const_3881, curr_ptr);
    assume value_is(__ctobpl_const_3882, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3883, curr_ptr);
    assume value_is(__ctobpl_const_3884, direction_ptr);
    assume value_is(__ctobpl_const_3885, omit_angle_ptr);
    assume value_is(__ctobpl_const_3886, angle_start_ptr);
    assume value_is(__ctobpl_const_3887, angle_step_ptr);
    assume value_is(__ctobpl_const_3888, omit_phase_ptr);
    assume value_is(__ctobpl_const_3889, phase_start_ptr);
    assume value_is(__ctobpl_const_3890, phase_step_ptr);
    assume value_is(__ctobpl_const_3891, angle_unit_ptr);
    assume value_is(__ctobpl_const_3892, phase_unit_ptr);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4342} true;
    error := result.serotpha$10;
    assume value_is(__ctobpl_const_3893, error);
    assume value_is(__ctobpl_const_3894, result.serotpha$10);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4344} true;
    goto label_101_true, label_101_false;

  label_101_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3895, error);
    goto label_102;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4351} true;
    goto label_102_true, label_102_false;

  label_102_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3896, error);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4353} true;
    call result.malloc$13 := __HAVOC_det_malloc(152);
    goto label_147;

  label_147:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4353} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := result.malloc$13];
    assume value_is(__ctobpl_const_3897, grphaexc_ptr);
    assume value_is(__ctobpl_const_3898, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3899, result.malloc$13);
    goto label_148;

  label_148:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4355} true;
    assert grphaexc_ptr != 0;
    goto label_148_true, label_148_false;

  label_148_false:
    assume Mem_T.PGrPhaExc[grphaexc_ptr] == 0;
    assume value_is(__ctobpl_const_3900, grphaexc_ptr);
    assume value_is(__ctobpl_const_3901, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_149;

  label_149:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4356} true;
    goto label_163;

  label_163:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4356} true;
    call result.printf$14 := det_choice();
    goto label_166;

  label_166:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4357} true;
    call interror(havoc_stringTemp);
    goto label_150;

  label_150:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4361} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.TYPE_GrPhaExc := Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := 3];
    assume value_is(__ctobpl_const_3902, grphaexc_ptr);
    assume value_is(__ctobpl_const_3903, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3904, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    goto label_151;

  label_151:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4362} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.DIRECTION_GrPhaExc := Mem_T.DIRECTION_GrPhaExc[DIRECTION_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.INT4[direction]];
    assume value_is(__ctobpl_const_3905, grphaexc_ptr);
    assume value_is(__ctobpl_const_3906, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3907, Mem_T.DIRECTION_GrPhaExc[DIRECTION_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3908, Mem_T.INT4[direction]);
    goto label_152;

  label_152:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4363} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.OMIT_ANGLE_GrPhaExc := Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.INT4[omit_angle]];
    assume value_is(__ctobpl_const_3909, grphaexc_ptr);
    assume value_is(__ctobpl_const_3910, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3911, Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3912, Mem_T.INT4[omit_angle]);
    goto label_153;

  label_153:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4364} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.ANGLE_START_GrPhaExc := Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[angle_start]];
    assume value_is(__ctobpl_const_3913, grphaexc_ptr);
    assume value_is(__ctobpl_const_3914, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3915, Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3916, Mem_T.FLOAT[angle_start]);
    goto label_154;

  label_154:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4365} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.ANGLE_STEP_GrPhaExc := Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[angle_step]];
    assume value_is(__ctobpl_const_3917, grphaexc_ptr);
    assume value_is(__ctobpl_const_3918, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3919, Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3920, Mem_T.FLOAT[angle_step]);
    goto label_155;

  label_155:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4366} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.OMIT_PHASE_GrPhaExc := Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.INT4[omit_phase]];
    assume value_is(__ctobpl_const_3921, grphaexc_ptr);
    assume value_is(__ctobpl_const_3922, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3923, Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3924, Mem_T.INT4[omit_phase]);
    goto label_156;

  label_156:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4367} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PHASE_START_GrPhaExc := Mem_T.PHASE_START_GrPhaExc[PHASE_START_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[phase_start]];
    assume value_is(__ctobpl_const_3925, grphaexc_ptr);
    assume value_is(__ctobpl_const_3926, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3927, Mem_T.PHASE_START_GrPhaExc[PHASE_START_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3928, Mem_T.FLOAT[phase_start]);
    goto label_157;

  label_157:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4368} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PHASE_STEP_GrPhaExc := Mem_T.PHASE_STEP_GrPhaExc[PHASE_STEP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[phase_step]];
    assume value_is(__ctobpl_const_3929, grphaexc_ptr);
    assume value_is(__ctobpl_const_3930, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3931, Mem_T.PHASE_STEP_GrPhaExc[PHASE_STEP_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3932, Mem_T.FLOAT[phase_step]);
    goto label_158;

  label_158:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4369} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.ANGLE_UNIT_GrPhaExc := Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.INT4[angle_unit]];
    assume value_is(__ctobpl_const_3933, grphaexc_ptr);
    assume value_is(__ctobpl_const_3934, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3935, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3936, Mem_T.INT4[angle_unit]);
    goto label_159;

  label_159:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4370} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PHASE_UNIT_GrPhaExc := Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.INT4[phase_unit]];
    assume value_is(__ctobpl_const_3937, grphaexc_ptr);
    assume value_is(__ctobpl_const_3938, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3939, Mem_T.PHASE_UNIT_GrPhaExc[PHASE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3940, Mem_T.INT4[phase_unit]);
    goto label_160;

  label_160:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4371} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PQEXP_PTR_GrPhaExc := Mem_T.PQEXP_PTR_GrPhaExc[PQEXP_PTR_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := 0];
    assume value_is(__ctobpl_const_3941, grphaexc_ptr);
    assume value_is(__ctobpl_const_3942, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3943, Mem_T.PQEXP_PTR_GrPhaExc[PQEXP_PTR_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    goto label_161;

  label_161:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4374} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3944, pp2);
    assume value_is(__ctobpl_const_3945, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_3946, curr_ptr);
    assume value_is(__ctobpl_const_3947, Mem_T.Pcharac[curr_ptr]);
    goto label_162;

  label_162:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4375} true;
    result.grphaexc$1 := 0;
    goto label_1;

  label_148_true:
    assume Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    assume value_is(__ctobpl_const_3900, grphaexc_ptr);
    assume value_is(__ctobpl_const_3901, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_150;

  label_102_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3896, error);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4384} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.beampha$16 := beampha(Mem_T.Pcharac[curr_ptr], curr_ptr, u_ptr, v_ptr, theta_ptr, phi_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_3948, curr_ptr);
    assume value_is(__ctobpl_const_3949, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3950, curr_ptr);
    assume value_is(__ctobpl_const_3951, u_ptr);
    assume value_is(__ctobpl_const_3952, v_ptr);
    assume value_is(__ctobpl_const_3953, theta_ptr);
    assume value_is(__ctobpl_const_3954, phi_ptr);
    assume value_is(__ctobpl_const_3955, angle_unit_ptr);
    assume value_is(__ctobpl_const_3956, curr_ptr);
    assume value_is(__ctobpl_const_3957, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_3958, curr_ptr);
    assume value_is(__ctobpl_const_3959, u_ptr);
    assume value_is(__ctobpl_const_3960, v_ptr);
    assume value_is(__ctobpl_const_3961, theta_ptr);
    assume value_is(__ctobpl_const_3962, phi_ptr);
    assume value_is(__ctobpl_const_3963, angle_unit_ptr);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4384} true;
    error := result.beampha$16;
    assume value_is(__ctobpl_const_3964, error);
    assume value_is(__ctobpl_const_3965, result.beampha$16);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4387} true;
    goto label_116_true, label_116_false;

  label_116_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3966, error);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4394} true;
    goto label_117_true, label_117_false;

  label_117_false:
    assume error == 0;
    assume value_is(__ctobpl_const_3967, error);
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4396} true;
    call result.malloc$19 := __HAVOC_det_malloc(152);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4396} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := result.malloc$19];
    assume value_is(__ctobpl_const_3968, grphaexc_ptr);
    assume value_is(__ctobpl_const_3969, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3970, result.malloc$19);
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4398} true;
    assert grphaexc_ptr != 0;
    goto label_130_true, label_130_false;

  label_130_false:
    assume Mem_T.PGrPhaExc[grphaexc_ptr] == 0;
    assume value_is(__ctobpl_const_3971, grphaexc_ptr);
    assume value_is(__ctobpl_const_3972, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4399} true;
    goto label_141;

  label_141:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4399} true;
    call result.printf$20 := det_choice();
    goto label_144;

  label_144:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4400} true;
    call interror(havoc_stringTemp);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4404} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.TYPE_GrPhaExc := Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := 4];
    assume value_is(__ctobpl_const_3973, grphaexc_ptr);
    assume value_is(__ctobpl_const_3974, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3975, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4405} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.U_GrPhaExc := Mem_T.U_GrPhaExc[U_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[u]];
    assume value_is(__ctobpl_const_3976, grphaexc_ptr);
    assume value_is(__ctobpl_const_3977, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3978, Mem_T.U_GrPhaExc[U_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3979, Mem_T.FLOAT[u]);
    goto label_134;

  label_134:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4406} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.V_GrPhaExc := Mem_T.V_GrPhaExc[V_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[v]];
    assume value_is(__ctobpl_const_3980, grphaexc_ptr);
    assume value_is(__ctobpl_const_3981, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3982, Mem_T.V_GrPhaExc[V_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3983, Mem_T.FLOAT[v]);
    goto label_135;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4407} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.THETA_GrPhaExc := Mem_T.THETA_GrPhaExc[THETA_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[theta]];
    assume value_is(__ctobpl_const_3984, grphaexc_ptr);
    assume value_is(__ctobpl_const_3985, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3986, Mem_T.THETA_GrPhaExc[THETA_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3987, Mem_T.FLOAT[theta]);
    goto label_136;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4408} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PHI_GrPhaExc := Mem_T.PHI_GrPhaExc[PHI_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.FLOAT[phi]];
    assume value_is(__ctobpl_const_3988, grphaexc_ptr);
    assume value_is(__ctobpl_const_3989, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3990, Mem_T.PHI_GrPhaExc[PHI_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3991, Mem_T.FLOAT[phi]);
    goto label_137;

  label_137:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4409} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.ANGLE_UNIT_GrPhaExc := Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := Mem_T.INT4[angle_unit]];
    assume value_is(__ctobpl_const_3992, grphaexc_ptr);
    assume value_is(__ctobpl_const_3993, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3994, Mem_T.ANGLE_UNIT_GrPhaExc[ANGLE_UNIT_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    assume value_is(__ctobpl_const_3995, Mem_T.INT4[angle_unit]);
    goto label_138;

  label_138:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4410} true;
    assert grphaexc_ptr != 0;
    assert Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    Mem_T.PQEXP_PTR_GrPhaExc := Mem_T.PQEXP_PTR_GrPhaExc[PQEXP_PTR_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr]) := 0];
    assume value_is(__ctobpl_const_3996, grphaexc_ptr);
    assume value_is(__ctobpl_const_3997, Mem_T.PGrPhaExc[grphaexc_ptr]);
    assume value_is(__ctobpl_const_3998, Mem_T.PQEXP_PTR_GrPhaExc[PQEXP_PTR_GrPhaExc(Mem_T.PGrPhaExc[grphaexc_ptr])]);
    goto label_139;

  label_139:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4413} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_3999, pp2);
    assume value_is(__ctobpl_const_4000, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_4001, curr_ptr);
    assume value_is(__ctobpl_const_4002, Mem_T.Pcharac[curr_ptr]);
    goto label_140;

  label_140:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4414} true;
    result.grphaexc$1 := 0;
    goto label_1;

  label_130_true:
    assume Mem_T.PGrPhaExc[grphaexc_ptr] != 0;
    assume value_is(__ctobpl_const_3971, grphaexc_ptr);
    assume value_is(__ctobpl_const_3972, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_132;

  label_117_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3967, error);
    goto label_127;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4422} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := 0];
    assume value_is(__ctobpl_const_4003, grphaexc_ptr);
    assume value_is(__ctobpl_const_4004, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4423} true;
    result.grphaexc$1 := 17;
    goto label_1;

  label_116_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3966, error);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4388} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := 0];
    assume value_is(__ctobpl_const_4005, grphaexc_ptr);
    assume value_is(__ctobpl_const_4006, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4389} true;
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4389} true;
    call result.printf$17 := det_choice();
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4390} true;
    result.grphaexc$1 := 17;
    goto label_1;

  label_101_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3895, error);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4345} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := 0];
    assume value_is(__ctobpl_const_4007, grphaexc_ptr);
    assume value_is(__ctobpl_const_4008, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4346} true;
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4346} true;
    call result.printf$11 := det_choice();
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4347} true;
    result.grphaexc$1 := 17;
    goto label_1;

  label_86_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_3824, error);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4308} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := 0];
    assume value_is(__ctobpl_const_4009, grphaexc_ptr);
    assume value_is(__ctobpl_const_4010, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4309} true;
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4309} true;
    call result.printf$7 := det_choice();
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4310} true;
    result.grphaexc$1 := 17;
    goto label_1;

  label_71_true:
    assume error != 0;
    assume value_is(__ctobpl_const_3763, error);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4269} true;
    assert grphaexc_ptr != 0;
    Mem_T.PGrPhaExc := Mem_T.PGrPhaExc[grphaexc_ptr := 0];
    assume value_is(__ctobpl_const_4011, grphaexc_ptr);
    assume value_is(__ctobpl_const_4012, Mem_T.PGrPhaExc[grphaexc_ptr]);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4270} true;
    result.grphaexc$1 := 1;
    goto label_1;
}



procedure {:extern} grwrite(group_ptr.__1: int, filename.__1: int) returns (result.grwrite$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} grwrite(group_ptr.__1: int, filename.__1: int) returns (result.grwrite$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} IDUM: int;
  var {:extern} NEL: int;
  var {:extern} NPORTS: int;
  var {:extern} datfilename: int;
  var {:extern} f: int;
  var {:extern} filename: int;
  var {:extern} geomnode_ptr: int;
  var {:extern} geomport_ptr: int;
  var {:extern} group_ptr: int;
  var {:extern} $printf.arg.2$19$: int;
  var {:extern} $printf.arg.2$21$: int;
  var {:extern} $printf.arg.2$23$: int;
  var {:extern} $printf.arg.2$25$: int;
  var {:extern} $printf.arg.2$27$: int;
  var {:extern} $printf.arg.2$29$: int;
  var {:extern} $printf.arg.2$33$: int;
  var {:extern} $printf.arg.2$35$: int;
  var {:extern} $printf.arg.2$37$: int;
  var {:extern} $printf.arg.2$39$: int;
  var {:extern} $printf.arg.2$41$: int;
  var {:extern} $printf.arg.2$43$: int;
  var {:extern} $printf.arg.2$46$: int;
  var {:extern} $printf.arg.2$48$: int;
  var {:extern} $printf.arg.2$5$: int;
  var {:extern} $printf.arg.2$50$: int;
  var {:extern} $printf.arg.2$52$: int;
  var {:extern} $printf.arg.2$55$: int;
  var {:extern} $printf.arg.2$57$: int;
  var {:extern} $printf.arg.2$59$: int;
  var {:extern} $printf.arg.2$61$: int;
  var {:extern} $printf.arg.2$64$: int;
  var {:extern} result.printf$4: int;
  var {:extern} result.printf$6: int;
  var {:extern} result.printf$7: int;
  var {:extern} result.printf$8: int;
  var {:extern} result.printf$9: int;
  var {:extern} result.printf$10: int;
  var {:extern} result.printf$11: int;
  var {:extern} result.printf$12: int;
  var {:extern} result.printf$13: int;
  var {:extern} result.printf$14: int;
  var {:extern} result.printf$15: int;
  var {:extern} result.printf$16: int;
  var {:extern} result.printf$17: int;
  var {:extern} result.printf$18: int;
  var {:extern} result.printf$20: int;
  var {:extern} result.printf$22: int;
  var {:extern} result.printf$24: int;
  var {:extern} result.printf$26: int;
  var {:extern} result.printf$28: int;
  var {:extern} result.printf$30: int;
  var {:extern} result.printf$31: int;
  var {:extern} result.printf$32: int;
  var {:extern} result.printf$34: int;
  var {:extern} result.printf$36: int;
  var {:extern} result.printf$38: int;
  var {:extern} result.printf$40: int;
  var {:extern} result.printf$42: int;
  var {:extern} result.printf$44: int;
  var {:extern} result.printf$45: int;
  var {:extern} result.printf$47: int;
  var {:extern} result.printf$49: int;
  var {:extern} result.printf$51: int;
  var {:extern} result.printf$53: int;
  var {:extern} result.printf$54: int;
  var {:extern} result.printf$56: int;
  var {:extern} result.printf$58: int;
  var {:extern} result.printf$60: int;
  var {:extern} result.printf$62: int;
  var {:extern} result.printf$63: int;
  var {:extern} result.strcat$3: int;
  var {:extern} result.strcpy$2: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(group_ptr.__1, alloc);
    assume INT_LT(filename.__1, alloc);
    IDUM := 0;
    NEL := 0;
    NPORTS := 0;
    call datfilename := __HAVOC_det_malloc(31);
    f := 0;
    filename := 0;
    geomnode_ptr := 0;
    geomport_ptr := 0;
    group_ptr := 0;
    $printf.arg.2$19$ := 0;
    $printf.arg.2$21$ := 0;
    $printf.arg.2$23$ := 0;
    $printf.arg.2$25$ := 0;
    $printf.arg.2$27$ := 0;
    $printf.arg.2$29$ := 0;
    $printf.arg.2$33$ := 0;
    $printf.arg.2$35$ := 0;
    $printf.arg.2$37$ := 0;
    $printf.arg.2$39$ := 0;
    $printf.arg.2$41$ := 0;
    $printf.arg.2$43$ := 0;
    $printf.arg.2$46$ := 0;
    $printf.arg.2$48$ := 0;
    $printf.arg.2$5$ := 0;
    $printf.arg.2$50$ := 0;
    $printf.arg.2$52$ := 0;
    $printf.arg.2$55$ := 0;
    $printf.arg.2$57$ := 0;
    $printf.arg.2$59$ := 0;
    $printf.arg.2$61$ := 0;
    $printf.arg.2$64$ := 0;
    result.grwrite$1 := 0;
    result.printf$4 := 0;
    result.printf$6 := 0;
    result.printf$7 := 0;
    result.printf$8 := 0;
    result.printf$9 := 0;
    result.printf$10 := 0;
    result.printf$11 := 0;
    result.printf$12 := 0;
    result.printf$13 := 0;
    result.printf$14 := 0;
    result.printf$15 := 0;
    result.printf$16 := 0;
    result.printf$17 := 0;
    result.printf$18 := 0;
    result.printf$20 := 0;
    result.printf$22 := 0;
    result.printf$24 := 0;
    result.printf$26 := 0;
    result.printf$28 := 0;
    result.printf$30 := 0;
    result.printf$31 := 0;
    result.printf$32 := 0;
    result.printf$34 := 0;
    result.printf$36 := 0;
    result.printf$38 := 0;
    result.printf$40 := 0;
    result.printf$42 := 0;
    result.printf$44 := 0;
    result.printf$45 := 0;
    result.printf$47 := 0;
    result.printf$49 := 0;
    result.printf$51 := 0;
    result.printf$53 := 0;
    result.printf$54 := 0;
    result.printf$56 := 0;
    result.printf$58 := 0;
    result.printf$60 := 0;
    result.printf$62 := 0;
    result.printf$63 := 0;
    result.strcat$3 := 0;
    result.strcpy$2 := 0;
    group_ptr := group_ptr.__1;
    filename := filename.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4433} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4433} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4433} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4433} true;
    IDUM := 0;
    assume value_is(__ctobpl_const_4013, IDUM);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4434} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4435} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4436} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4437} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4441} true;
    goto label_11_true, label_11_false;

  label_11_false:
    assume group_ptr == 0;
    assume value_is(__ctobpl_const_4014, group_ptr);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4442} true;
    call interror(havoc_stringTemp);
    goto label_170;

  label_170:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4443} true;
    return;

  label_11_true:
    assume group_ptr != 0;
    assume value_is(__ctobpl_const_4014, group_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4446} true;
    assert group_ptr != 0;
    geomnode_ptr := Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)];
    assume value_is(__ctobpl_const_4015, geomnode_ptr);
    assume value_is(__ctobpl_const_4016, group_ptr);
    assume value_is(__ctobpl_const_4017, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4449} true;
    call result.strcpy$2 := strcpy(datfilename, filename);
    assume value_is(__ctobpl_const_4018, filename);
    assume value_is(__ctobpl_const_4019, filename);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4450} true;
    call result.strcat$3 := strcat(datfilename, havoc_stringTemp);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4455} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4455} true;
    call result.printf$4 := det_choice();
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4456} true;
    call result.printf$6 := det_choice();
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4457} true;
    call result.printf$7 := det_choice();
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4458} true;
    call result.printf$8 := det_choice();
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4461} true;
    assert group_ptr != 0;
    NEL := Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr)];
    assume value_is(__ctobpl_const_4020, NEL);
    assume value_is(__ctobpl_const_4021, group_ptr);
    assume value_is(__ctobpl_const_4022, Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr)]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4462} true;
    call result.printf$9 := det_choice();
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4463} true;
    call result.printf$10 := det_choice();
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4464} true;
    call result.printf$11 := det_choice();
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4465} true;
    call result.printf$12 := det_choice();
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4468} true;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    NPORTS := Mem_T.NPORTS_Elem[NPORTS_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_4023, NPORTS);
    assume value_is(__ctobpl_const_4024, group_ptr);
    assume value_is(__ctobpl_const_4025, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_4026, Mem_T.NPORTS_Elem[NPORTS_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4469} true;
    call result.printf$13 := det_choice();
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4470} true;
    call result.printf$14 := det_choice();
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4472} true;
    call result.printf$15 := det_choice();
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4473} true;
    call result.printf$16 := det_choice();
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4476} true;
    goto label_61_head;

  label_61_head:
    call IDUM, geomnode_ptr, geomport_ptr, $printf.arg.2$19$, $printf.arg.2$21$, $printf.arg.2$23$, $printf.arg.2$25$, $printf.arg.2$27$, $printf.arg.2$29$, $printf.arg.2$33$, $printf.arg.2$35$, $printf.arg.2$37$, $printf.arg.2$39$, $printf.arg.2$41$, $printf.arg.2$43$, $printf.arg.2$46$, $printf.arg.2$48$, $printf.arg.2$50$, $printf.arg.2$52$, $printf.arg.2$55$, $printf.arg.2$57$, $printf.arg.2$59$, $printf.arg.2$61$, result.printf$17, result.printf$18, result.printf$20, result.printf$22, result.printf$24, result.printf$26, result.printf$28, result.printf$30, result.printf$31, result.printf$32, result.printf$34, result.printf$36, result.printf$38, result.printf$40, result.printf$42, result.printf$44, result.printf$45, result.printf$47, result.printf$49, result.printf$51, result.printf$53, result.printf$54, result.printf$56, result.printf$58, result.printf$60, result.printf$62 := grwrite_loop_label_61_head(IDUM, geomnode_ptr, geomport_ptr, $printf.arg.2$19$, $printf.arg.2$21$, $printf.arg.2$23$, $printf.arg.2$25$, $printf.arg.2$27$, $printf.arg.2$29$, $printf.arg.2$33$, $printf.arg.2$35$, $printf.arg.2$37$, $printf.arg.2$39$, $printf.arg.2$41$, $printf.arg.2$43$, $printf.arg.2$46$, $printf.arg.2$48$, $printf.arg.2$50$, $printf.arg.2$52$, $printf.arg.2$55$, $printf.arg.2$57$, $printf.arg.2$59$, $printf.arg.2$61$, result.printf$17, result.printf$18, result.printf$20, result.printf$22, result.printf$24, result.printf$26, result.printf$28, result.printf$30, result.printf$31, result.printf$32, result.printf$34, result.printf$36, result.printf$38, result.printf$40, result.printf$42, result.printf$44, result.printf$45, result.printf$47, result.printf$49, result.printf$51, result.printf$53, result.printf$54, result.printf$56, result.printf$58, result.printf$60, result.printf$62);
    goto label_61_head_last;

  label_61_false:
    assume geomnode_ptr == 0;
    assume value_is(__ctobpl_const_4027, geomnode_ptr);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4521} true;
    goto label_166;

  label_166:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4521} true;
    call result.printf$63 := det_choice();
    goto label_169;

  label_169:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4522} true;
    result.grwrite$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4523} true;
    call __HAVOC_free(datfilename);
    return;

  label_61_true:
    assume geomnode_ptr != 0;
    assume value_is(__ctobpl_const_4027, geomnode_ptr);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4478} true;
    IDUM := PLUS(IDUM, 1, 1);
    assume value_is(__ctobpl_const_4028, IDUM);
    assume value_is(__ctobpl_const_4029, IDUM);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4479} true;
    call result.printf$17 := det_choice();
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4480} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$19$ := Mem_T.XA_Geomnode[XA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4030, $printf.arg.2$19$);
    assume value_is(__ctobpl_const_4031, geomnode_ptr);
    assume value_is(__ctobpl_const_4032, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_ptr)]);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4480} true;
    call result.printf$18 := det_choice();
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4481} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$21$ := Mem_T.YA_Geomnode[YA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4033, $printf.arg.2$21$);
    assume value_is(__ctobpl_const_4034, geomnode_ptr);
    assume value_is(__ctobpl_const_4035, Mem_T.YA_Geomnode[YA_Geomnode(geomnode_ptr)]);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4481} true;
    call result.printf$20 := det_choice();
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4482} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$23$ := Mem_T.ZA_Geomnode[ZA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4036, $printf.arg.2$23$);
    assume value_is(__ctobpl_const_4037, geomnode_ptr);
    assume value_is(__ctobpl_const_4038, Mem_T.ZA_Geomnode[ZA_Geomnode(geomnode_ptr)]);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4482} true;
    call result.printf$22 := det_choice();
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4483} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$25$ := Mem_T.THEA_Geomnode[THEA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4039, $printf.arg.2$25$);
    assume value_is(__ctobpl_const_4040, geomnode_ptr);
    assume value_is(__ctobpl_const_4041, Mem_T.THEA_Geomnode[THEA_Geomnode(geomnode_ptr)]);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4483} true;
    call result.printf$24 := det_choice();
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4484} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$27$ := Mem_T.PHEA_Geomnode[PHEA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4042, $printf.arg.2$27$);
    assume value_is(__ctobpl_const_4043, geomnode_ptr);
    assume value_is(__ctobpl_const_4044, Mem_T.PHEA_Geomnode[PHEA_Geomnode(geomnode_ptr)]);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4484} true;
    call result.printf$26 := det_choice();
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4485} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$29$ := Mem_T.PSEA_Geomnode[PSEA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4045, $printf.arg.2$29$);
    assume value_is(__ctobpl_const_4046, geomnode_ptr);
    assume value_is(__ctobpl_const_4047, Mem_T.PSEA_Geomnode[PSEA_Geomnode(geomnode_ptr)]);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4485} true;
    call result.printf$28 := det_choice();
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4486} true;
    call result.printf$30 := det_choice();
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4488} true;
    call result.printf$31 := det_choice();
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4489} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$33$ := Mem_T.XA_Geomnode[XA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4048, $printf.arg.2$33$);
    assume value_is(__ctobpl_const_4049, geomnode_ptr);
    assume value_is(__ctobpl_const_4050, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_ptr)]);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4489} true;
    call result.printf$32 := det_choice();
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4490} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$35$ := Mem_T.YA_Geomnode[YA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4051, $printf.arg.2$35$);
    assume value_is(__ctobpl_const_4052, geomnode_ptr);
    assume value_is(__ctobpl_const_4053, Mem_T.YA_Geomnode[YA_Geomnode(geomnode_ptr)]);
    goto label_102;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4490} true;
    call result.printf$34 := det_choice();
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4491} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$37$ := Mem_T.ZA_Geomnode[ZA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4054, $printf.arg.2$37$);
    assume value_is(__ctobpl_const_4055, geomnode_ptr);
    assume value_is(__ctobpl_const_4056, Mem_T.ZA_Geomnode[ZA_Geomnode(geomnode_ptr)]);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4491} true;
    call result.printf$36 := det_choice();
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4492} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$39$ := Mem_T.THEA_Geomnode[THEA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4057, $printf.arg.2$39$);
    assume value_is(__ctobpl_const_4058, geomnode_ptr);
    assume value_is(__ctobpl_const_4059, Mem_T.THEA_Geomnode[THEA_Geomnode(geomnode_ptr)]);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4492} true;
    call result.printf$38 := det_choice();
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4493} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$41$ := Mem_T.PHEA_Geomnode[PHEA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4060, $printf.arg.2$41$);
    assume value_is(__ctobpl_const_4061, geomnode_ptr);
    assume value_is(__ctobpl_const_4062, Mem_T.PHEA_Geomnode[PHEA_Geomnode(geomnode_ptr)]);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4493} true;
    call result.printf$40 := det_choice();
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4494} true;
    assert geomnode_ptr != 0;
    $printf.arg.2$43$ := Mem_T.PSEA_Geomnode[PSEA_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4063, $printf.arg.2$43$);
    assume value_is(__ctobpl_const_4064, geomnode_ptr);
    assume value_is(__ctobpl_const_4065, Mem_T.PSEA_Geomnode[PSEA_Geomnode(geomnode_ptr)]);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4494} true;
    call result.printf$42 := det_choice();
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4495} true;
    call result.printf$44 := det_choice();
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4497} true;
    assert geomnode_ptr != 0;
    geomport_ptr := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4066, geomport_ptr);
    assume value_is(__ctobpl_const_4067, geomnode_ptr);
    assume value_is(__ctobpl_const_4068, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_ptr)]);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4500} true;
    goto label_125_head;

  label_125_head:
    call geomport_ptr, $printf.arg.2$46$, $printf.arg.2$48$, $printf.arg.2$50$, $printf.arg.2$52$, $printf.arg.2$55$, $printf.arg.2$57$, $printf.arg.2$59$, $printf.arg.2$61$, result.printf$45, result.printf$47, result.printf$49, result.printf$51, result.printf$53, result.printf$54, result.printf$56, result.printf$58, result.printf$60, result.printf$62 := grwrite_loop_label_125_head(geomport_ptr, $printf.arg.2$46$, $printf.arg.2$48$, $printf.arg.2$50$, $printf.arg.2$52$, $printf.arg.2$55$, $printf.arg.2$57$, $printf.arg.2$59$, $printf.arg.2$61$, result.printf$45, result.printf$47, result.printf$49, result.printf$51, result.printf$53, result.printf$54, result.printf$56, result.printf$58, result.printf$60, result.printf$62);
    goto label_125_head_last;

  label_125_false:
    assume geomport_ptr == 0;
    assume value_is(__ctobpl_const_4069, geomport_ptr);
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4517} true;
    assert geomnode_ptr != 0;
    geomnode_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_ptr)];
    assume value_is(__ctobpl_const_4070, geomnode_ptr);
    assume value_is(__ctobpl_const_4071, geomnode_ptr);
    assume value_is(__ctobpl_const_4072, Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_ptr)]);
    goto label_126_dummy;

  label_125_true:
    assume geomport_ptr != 0;
    assume value_is(__ctobpl_const_4069, geomport_ptr);
    goto label_127;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4501} true;
    assert geomport_ptr != 0;
    $printf.arg.2$46$ := Mem_T.AMP_Geomport[AMP_Geomport(geomport_ptr)];
    assume value_is(__ctobpl_const_4073, $printf.arg.2$46$);
    assume value_is(__ctobpl_const_4074, geomport_ptr);
    assume value_is(__ctobpl_const_4075, Mem_T.AMP_Geomport[AMP_Geomport(geomport_ptr)]);
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4501} true;
    call result.printf$45 := det_choice();
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4503} true;
    assert geomport_ptr != 0;
    assert geomport_ptr != 0;
    $printf.arg.2$48$ := PLUS(Mem_T.PSH_Geomport[PSH_Geomport(geomport_ptr)], 1, Mem_T.PPA_Geomport[PPA_Geomport(geomport_ptr)]);
    assume value_is(__ctobpl_const_4076, $printf.arg.2$48$);
    assume value_is(__ctobpl_const_4077, geomport_ptr);
    assume value_is(__ctobpl_const_4078, Mem_T.PSH_Geomport[PSH_Geomport(geomport_ptr)]);
    assume value_is(__ctobpl_const_4079, geomport_ptr);
    assume value_is(__ctobpl_const_4080, Mem_T.PPA_Geomport[PPA_Geomport(geomport_ptr)]);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4503} true;
    call result.printf$47 := det_choice();
    goto label_135;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4504} true;
    assert geomport_ptr != 0;
    $printf.arg.2$50$ := Mem_T.PSC_Geomport[PSC_Geomport(geomport_ptr)];
    assume value_is(__ctobpl_const_4081, $printf.arg.2$50$);
    assume value_is(__ctobpl_const_4082, geomport_ptr);
    assume value_is(__ctobpl_const_4083, Mem_T.PSC_Geomport[PSC_Geomport(geomport_ptr)]);
    goto label_136;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4504} true;
    call result.printf$49 := det_choice();
    goto label_139;

  label_139:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4505} true;
    assert geomport_ptr != 0;
    $printf.arg.2$52$ := Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(geomport_ptr)];
    assume value_is(__ctobpl_const_4084, $printf.arg.2$52$);
    assume value_is(__ctobpl_const_4085, geomport_ptr);
    assume value_is(__ctobpl_const_4086, Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(geomport_ptr)]);
    goto label_140;

  label_140:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4505} true;
    call result.printf$51 := det_choice();
    goto label_143;

  label_143:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4506} true;
    call result.printf$53 := det_choice();
    goto label_146;

  label_146:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4508} true;
    assert geomport_ptr != 0;
    $printf.arg.2$55$ := Mem_T.AMP_Geomport[AMP_Geomport(geomport_ptr)];
    assume value_is(__ctobpl_const_4087, $printf.arg.2$55$);
    assume value_is(__ctobpl_const_4088, geomport_ptr);
    assume value_is(__ctobpl_const_4089, Mem_T.AMP_Geomport[AMP_Geomport(geomport_ptr)]);
    goto label_147;

  label_147:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4508} true;
    call result.printf$54 := det_choice();
    goto label_150;

  label_150:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4509} true;
    assert geomport_ptr != 0;
    assert geomport_ptr != 0;
    $printf.arg.2$57$ := PLUS(Mem_T.PSH_Geomport[PSH_Geomport(geomport_ptr)], 1, Mem_T.PPA_Geomport[PPA_Geomport(geomport_ptr)]);
    assume value_is(__ctobpl_const_4090, $printf.arg.2$57$);
    assume value_is(__ctobpl_const_4091, geomport_ptr);
    assume value_is(__ctobpl_const_4092, Mem_T.PSH_Geomport[PSH_Geomport(geomport_ptr)]);
    assume value_is(__ctobpl_const_4093, geomport_ptr);
    assume value_is(__ctobpl_const_4094, Mem_T.PPA_Geomport[PPA_Geomport(geomport_ptr)]);
    goto label_151;

  label_151:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4509} true;
    call result.printf$56 := det_choice();
    goto label_154;

  label_154:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4510} true;
    assert geomport_ptr != 0;
    $printf.arg.2$59$ := Mem_T.PSC_Geomport[PSC_Geomport(geomport_ptr)];
    assume value_is(__ctobpl_const_4095, $printf.arg.2$59$);
    assume value_is(__ctobpl_const_4096, geomport_ptr);
    assume value_is(__ctobpl_const_4097, Mem_T.PSC_Geomport[PSC_Geomport(geomport_ptr)]);
    goto label_155;

  label_155:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4510} true;
    call result.printf$58 := det_choice();
    goto label_158;

  label_158:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4511} true;
    assert geomport_ptr != 0;
    $printf.arg.2$61$ := Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(geomport_ptr)];
    assume value_is(__ctobpl_const_4098, $printf.arg.2$61$);
    assume value_is(__ctobpl_const_4099, geomport_ptr);
    assume value_is(__ctobpl_const_4100, Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(geomport_ptr)]);
    goto label_159;

  label_159:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4511} true;
    call result.printf$60 := det_choice();
    goto label_162;

  label_162:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4512} true;
    call result.printf$62 := det_choice();
    goto label_165;

  label_165:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4514} true;
    assert geomport_ptr != 0;
    geomport_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(geomport_ptr)];
    assume value_is(__ctobpl_const_4101, geomport_ptr);
    assume value_is(__ctobpl_const_4102, geomport_ptr);
    assume value_is(__ctobpl_const_4103, Mem_T.NEXT_Geomport[NEXT_Geomport(geomport_ptr)]);
    goto label_165_dummy;

  label_165_dummy:
    assume false;
    return;

  label_125_head_last:
    goto label_125_true, label_125_false;

  label_126_dummy:
    assume false;
    return;

  label_61_head_last:
    goto label_61_true, label_61_false;
}



procedure {:extern} hexdef(p1.__1: int, pp2.__1: int, node_ptr.__1: int) returns (result.hexdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} hexdef(p1.__1: int, pp2.__1: int, node_ptr.__1: int) returns (result.hexdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} node_ptr: int;
  var {:extern} p1: int;
  var {:extern} pcoord: int;
  var {:extern} pcoord_ptr: int;
  var {:extern} pp2: int;
  var {:extern} qcoord: int;
  var {:extern} qcoord_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.malloc$5: int;
  var {:extern} result.nodecoor$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(node_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    node_ptr := 0;
    p1 := 0;
    call pcoord := __HAVOC_det_malloc(4);
    pcoord_ptr := 0;
    pp2 := 0;
    call qcoord := __HAVOC_det_malloc(4);
    qcoord_ptr := 0;
    result.GetKeyword$2 := 0;
    result.hexdef$1 := 0;
    result.malloc$5 := 0;
    result.nodecoor$4 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    node_ptr := node_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4532} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4532} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4532} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_4104, curr_ptr);
    assume value_is(__ctobpl_const_4105, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4533} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4538} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4538} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4538} true;
    pcoord_ptr := pcoord;
    assume value_is(__ctobpl_const_4106, pcoord_ptr);
    assume value_is(__ctobpl_const_4107, Mem_T.INT4[pcoord]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4539} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4539} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4539} true;
    qcoord_ptr := qcoord;
    assume value_is(__ctobpl_const_4108, qcoord_ptr);
    assume value_is(__ctobpl_const_4109, Mem_T.INT4[qcoord]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4546} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_4110, curr_ptr);
    assume value_is(__ctobpl_const_4111, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4112, p1);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4547} true;
    error := 0;
    assume value_is(__ctobpl_const_4113, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4549} true;
    assert node_ptr != 0;
    Mem_T.PNode := Mem_T.PNode[node_ptr := 0];
    assume value_is(__ctobpl_const_4114, node_ptr);
    assume value_is(__ctobpl_const_4115, Mem_T.PNode[node_ptr]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4552} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 78);
    assume value_is(__ctobpl_const_4116, $GetKeyword.arg.1$3$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4552} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_4117, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_4118, curr_ptr);
    assume value_is(__ctobpl_const_4119, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_4120, curr_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4552} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_4121, error);
    assume value_is(__ctobpl_const_4122, result.GetKeyword$2);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4553} true;
    goto label_21_true, label_21_false;

  label_21_false:
    assume error == 0;
    assume value_is(__ctobpl_const_4123, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4558} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.nodecoor$4 := nodecoor(Mem_T.Pcharac[curr_ptr], curr_ptr, pcoord_ptr, qcoord_ptr);
    assume value_is(__ctobpl_const_4124, curr_ptr);
    assume value_is(__ctobpl_const_4125, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4126, curr_ptr);
    assume value_is(__ctobpl_const_4127, pcoord_ptr);
    assume value_is(__ctobpl_const_4128, qcoord_ptr);
    assume value_is(__ctobpl_const_4129, curr_ptr);
    assume value_is(__ctobpl_const_4130, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4131, curr_ptr);
    assume value_is(__ctobpl_const_4132, pcoord_ptr);
    assume value_is(__ctobpl_const_4133, qcoord_ptr);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4558} true;
    error := result.nodecoor$4;
    assume value_is(__ctobpl_const_4134, error);
    assume value_is(__ctobpl_const_4135, result.nodecoor$4);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4560} true;
    goto label_27_true, label_27_false;

  label_27_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_4136, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4566} true;
    goto label_28_true, label_28_false;

  label_28_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_4137, error);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4575} true;
    call result.malloc$5 := __HAVOC_det_malloc(48);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4575} true;
    assert node_ptr != 0;
    Mem_T.PNode := Mem_T.PNode[node_ptr := result.malloc$5];
    assume value_is(__ctobpl_const_4138, node_ptr);
    assume value_is(__ctobpl_const_4139, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_4140, result.malloc$5);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4577} true;
    assert node_ptr != 0;
    goto label_41_true, label_41_false;

  label_41_false:
    assume Mem_T.PNode[node_ptr] == 0;
    assume value_is(__ctobpl_const_4141, node_ptr);
    assume value_is(__ctobpl_const_4142, Mem_T.PNode[node_ptr]);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4578} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_4143, curr_ptr);
    assume value_is(__ctobpl_const_4144, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4145, curr_ptr);
    assume value_is(__ctobpl_const_4146, Mem_T.Pcharac[curr_ptr]);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4580} true;
    call interror(havoc_stringTemp);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4586} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(Mem_T.PNode[node_ptr]) := 0];
    assume value_is(__ctobpl_const_4147, node_ptr);
    assume value_is(__ctobpl_const_4148, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_4149, Mem_T.NEXT_Node[NEXT_Node(Mem_T.PNode[node_ptr])]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4588} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.PCOORD_Node := Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.PNode[node_ptr]) := Mem_T.INT4[pcoord]];
    assume value_is(__ctobpl_const_4150, node_ptr);
    assume value_is(__ctobpl_const_4151, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_4152, Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.PNode[node_ptr])]);
    assume value_is(__ctobpl_const_4153, Mem_T.INT4[pcoord]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4589} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.QCOORD_Node := Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.PNode[node_ptr]) := Mem_T.INT4[qcoord]];
    assume value_is(__ctobpl_const_4154, node_ptr);
    assume value_is(__ctobpl_const_4155, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_4156, Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.PNode[node_ptr])]);
    assume value_is(__ctobpl_const_4157, Mem_T.INT4[qcoord]);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4590} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.THEA_Node := Mem_T.THEA_Node[THEA_Node(Mem_T.PNode[node_ptr]) := 0];
    assume value_is(__ctobpl_const_4158, node_ptr);
    assume value_is(__ctobpl_const_4159, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_4160, Mem_T.THEA_Node[THEA_Node(Mem_T.PNode[node_ptr])]);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4591} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.PHEA_Node := Mem_T.PHEA_Node[PHEA_Node(Mem_T.PNode[node_ptr]) := 0];
    assume value_is(__ctobpl_const_4161, node_ptr);
    assume value_is(__ctobpl_const_4162, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_4163, Mem_T.PHEA_Node[PHEA_Node(Mem_T.PNode[node_ptr])]);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4592} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.PSEA_Node := Mem_T.PSEA_Node[PSEA_Node(Mem_T.PNode[node_ptr]) := 0];
    assume value_is(__ctobpl_const_4164, node_ptr);
    assume value_is(__ctobpl_const_4165, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_4166, Mem_T.PSEA_Node[PSEA_Node(Mem_T.PNode[node_ptr])]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4593} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.ANGLE_UNIT_Node := Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(Mem_T.PNode[node_ptr]) := 0];
    assume value_is(__ctobpl_const_4167, node_ptr);
    assume value_is(__ctobpl_const_4168, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_4169, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(Mem_T.PNode[node_ptr])]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4596} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_4170, pp2);
    assume value_is(__ctobpl_const_4171, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_4172, curr_ptr);
    assume value_is(__ctobpl_const_4173, Mem_T.Pcharac[curr_ptr]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4597} true;
    result.hexdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4598} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(pcoord);
    call __HAVOC_free(qcoord);
    return;

  label_41_true:
    assume Mem_T.PNode[node_ptr] != 0;
    assume value_is(__ctobpl_const_4141, node_ptr);
    assume value_is(__ctobpl_const_4142, Mem_T.PNode[node_ptr]);
    goto label_45;

  label_28_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_4137, error);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4567} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 66, havoc_stringTemp);
    assume value_is(__ctobpl_const_4174, curr_ptr);
    assume value_is(__ctobpl_const_4175, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4176, curr_ptr);
    assume value_is(__ctobpl_const_4177, Mem_T.Pcharac[curr_ptr]);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4569} true;
    result.hexdef$1 := 17;
    goto label_1;

  label_27_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_4136, error);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4561} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 66, havoc_stringTemp);
    assume value_is(__ctobpl_const_4178, curr_ptr);
    assume value_is(__ctobpl_const_4179, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4180, curr_ptr);
    assume value_is(__ctobpl_const_4181, Mem_T.Pcharac[curr_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4563} true;
    result.hexdef$1 := 17;
    goto label_1;

  label_21_true:
    assume error != 0;
    assume value_is(__ctobpl_const_4123, error);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4554} true;
    result.hexdef$1 := 1;
    goto label_1;
}



procedure {:extern} hexgrdef(p1.__1: int, pp2.__1: int, pstep_ptr.__1: int, pstep_unit_ptr.__1: int) returns (result.hexgrdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} hexgrdef(p1.__1: int, pp2.__1: int, pstep_ptr.__1: int, pstep_unit_ptr.__1: int) returns (result.hexgrdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} pstep_ptr: int;
  var {:extern} pstep_unit_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.sinstep$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(pstep_ptr.__1, alloc);
    assume INT_LT(pstep_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    pstep_ptr := 0;
    pstep_unit_ptr := 0;
    result.GetKeyword$2 := 0;
    result.hexgrdef$1 := 0;
    result.sinstep$4 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    pstep_ptr := pstep_ptr.__1;
    pstep_unit_ptr := pstep_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4607} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4607} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4607} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_4182, curr_ptr);
    assume value_is(__ctobpl_const_4183, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4608} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4611} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_4184, curr_ptr);
    assume value_is(__ctobpl_const_4185, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4186, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4614} true;
    error := 0;
    assume value_is(__ctobpl_const_4187, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4615} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_4188, pstep_ptr);
    assume value_is(__ctobpl_const_4189, Mem_T.FLOAT[pstep_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4616} true;
    assert pstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_4190, pstep_unit_ptr);
    assume value_is(__ctobpl_const_4191, Mem_T.INT4[pstep_unit_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4619} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 22);
    assume value_is(__ctobpl_const_4192, $GetKeyword.arg.1$3$);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4619} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_4193, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_4194, curr_ptr);
    assume value_is(__ctobpl_const_4195, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_4196, curr_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4619} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_4197, error);
    assume value_is(__ctobpl_const_4198, result.GetKeyword$2);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4620} true;
    goto label_16_true, label_16_false;

  label_16_false:
    assume error == 0;
    assume value_is(__ctobpl_const_4199, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4625} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.sinstep$4 := sinstep(Mem_T.Pcharac[curr_ptr], curr_ptr, pstep_ptr, pstep_unit_ptr);
    assume value_is(__ctobpl_const_4200, curr_ptr);
    assume value_is(__ctobpl_const_4201, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4202, curr_ptr);
    assume value_is(__ctobpl_const_4203, pstep_ptr);
    assume value_is(__ctobpl_const_4204, pstep_unit_ptr);
    assume value_is(__ctobpl_const_4205, curr_ptr);
    assume value_is(__ctobpl_const_4206, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4207, curr_ptr);
    assume value_is(__ctobpl_const_4208, pstep_ptr);
    assume value_is(__ctobpl_const_4209, pstep_unit_ptr);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4625} true;
    error := result.sinstep$4;
    assume value_is(__ctobpl_const_4210, error);
    assume value_is(__ctobpl_const_4211, result.sinstep$4);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4626} true;
    goto label_22_true, label_22_false;

  label_22_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_4212, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4635} true;
    goto label_23_true, label_23_false;

  label_23_false:
    assume error == 0;
    assume value_is(__ctobpl_const_4213, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4646} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_4214, pp2);
    assume value_is(__ctobpl_const_4215, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_4216, curr_ptr);
    assume value_is(__ctobpl_const_4217, Mem_T.Pcharac[curr_ptr]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4647} true;
    result.hexgrdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4648} true;
    call __HAVOC_free(curr);
    return;

  label_23_true:
    assume error != 0;
    assume value_is(__ctobpl_const_4213, error);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4636} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_4218, curr_ptr);
    assume value_is(__ctobpl_const_4219, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4220, error);
    assume value_is(__ctobpl_const_4221, curr_ptr);
    assume value_is(__ctobpl_const_4222, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4223, error);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4638} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_4224, pstep_ptr);
    assume value_is(__ctobpl_const_4225, Mem_T.FLOAT[pstep_ptr]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4639} true;
    assert pstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_4226, pstep_unit_ptr);
    assume value_is(__ctobpl_const_4227, Mem_T.INT4[pstep_unit_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4640} true;
    result.hexgrdef$1 := 17;
    goto label_1;

  label_22_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_4212, error);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4627} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_4228, pstep_ptr);
    assume value_is(__ctobpl_const_4229, Mem_T.FLOAT[pstep_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4628} true;
    assert pstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_4230, pstep_unit_ptr);
    assume value_is(__ctobpl_const_4231, Mem_T.INT4[pstep_unit_ptr]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4630} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_4232, pp2);
    assume value_is(__ctobpl_const_4233, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_4234, curr_ptr);
    assume value_is(__ctobpl_const_4235, Mem_T.Pcharac[curr_ptr]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4631} true;
    result.hexgrdef$1 := 0;
    goto label_1;

  label_16_true:
    assume error != 0;
    assume value_is(__ctobpl_const_4199, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4621} true;
    result.hexgrdef$1 := 1;
    goto label_1;
}



procedure {:extern} interror(subname.__1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} interror(subname.__1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} result.printf$1: int;
  var {:extern} result.printf$2: int;
  var {:extern} subname: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(subname.__1, alloc);
    result.printf$1 := 0;
    result.printf$2 := 0;
    subname := 0;
    subname := subname.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4713} true;
    call result.printf$1 := det_choice();
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4714} true;
    call result.printf$2 := det_choice();
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4715} true;
    return;
}



procedure {:extern} intmax(a.__1: int, b.__1: int) returns (result.intmax$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} intmax(a.__1: int, b.__1: int) returns (result.intmax$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} a: int;
  var {:extern} b: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    a := 0;
    b := 0;
    result.intmax$1 := 0;
    a := a.__1;
    b := b.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4722} true;
    goto label_3_true, label_3_false;

  label_3_false:
    assume !INT_LT(b, a);
    assume value_is(__ctobpl_const_4236, b);
    assume value_is(__ctobpl_const_4237, a);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4725} true;
    result.intmax$1 := b;
    assume value_is(__ctobpl_const_4238, b);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4727} true;
    return;

  label_3_true:
    assume INT_LT(b, a);
    assume value_is(__ctobpl_const_4236, b);
    assume value_is(__ctobpl_const_4237, a);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4723} true;
    result.intmax$1 := a;
    assume value_is(__ctobpl_const_4239, a);
    goto label_1;
}



procedure {:extern} intmin(a.__1: int, b.__1: int) returns (result.intmin$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} intmin(a.__1: int, b.__1: int) returns (result.intmin$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} a: int;
  var {:extern} b: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    a := 0;
    b := 0;
    result.intmin$1 := 0;
    a := a.__1;
    b := b.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4735} true;
    goto label_3_true, label_3_false;

  label_3_false:
    assume !INT_LT(a, b);
    assume value_is(__ctobpl_const_4240, a);
    assume value_is(__ctobpl_const_4241, b);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4738} true;
    result.intmin$1 := b;
    assume value_is(__ctobpl_const_4242, b);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4740} true;
    return;

  label_3_true:
    assume INT_LT(a, b);
    assume value_is(__ctobpl_const_4240, a);
    assume value_is(__ctobpl_const_4241, b);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4736} true;
    result.intmin$1 := a;
    assume value_is(__ctobpl_const_4243, a);
    goto label_1;
}



procedure {:extern} isletter(ch.__1: int) returns (result.isletter$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} isletter(ch.__1: int) returns (result.isletter$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} ch: int;
  var {:extern} $isalpha.arg.1$3$: int;
  var {:extern} result.isalpha$2: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    ch := 0;
    $isalpha.arg.1$3$ := 0;
    result.isalpha$2 := 0;
    result.isletter$1 := 0;
    ch := ch.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4776} true;
    $isalpha.arg.1$3$ := ch;
    assume value_is(__ctobpl_const_4244, $isalpha.arg.1$3$);
    assume value_is(__ctobpl_const_4245, ch);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4776} true;
    call result.isalpha$2 := isalpha($isalpha.arg.1$3$);
    assume value_is(__ctobpl_const_4246, $isalpha.arg.1$3$);
    assume value_is(__ctobpl_const_4247, $isalpha.arg.1$3$);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4776} true;
    goto label_7_true, label_7_false;

  label_7_false:
    assume result.isalpha$2 == 0;
    assume value_is(__ctobpl_const_4248, result.isalpha$2);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4776} true;
    goto label_8_true, label_8_false;

  label_8_false:
    assume !INT_EQ(ch, 95);
    assume value_is(__ctobpl_const_4249, ch);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4776} true;
    goto label_10_true, label_10_false;

  label_10_false:
    assume !INT_EQ(ch, 45);
    assume value_is(__ctobpl_const_4250, ch);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4779} true;
    result.isletter$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4780} true;
    return;

  label_10_true:
    assume INT_EQ(ch, 45);
    assume value_is(__ctobpl_const_4250, ch);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4777} true;
    result.isletter$1 := 1;
    goto label_1;

  label_8_true:
    assume INT_EQ(ch, 95);
    assume value_is(__ctobpl_const_4249, ch);
    goto label_9;

  label_7_true:
    assume result.isalpha$2 != 0;
    assume value_is(__ctobpl_const_4248, result.isalpha$2);
    goto label_9;
}



procedure {:extern} kwdsinit();
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} kwdsinit()
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} i: int;
  var {:extern} result.printf$255: int;
  var {:extern} result.strcpy$1: int;
  var {:extern} result.strcpy$3: int;
  var {:extern} result.strcpy$5: int;
  var {:extern} result.strcpy$7: int;
  var {:extern} result.strcpy$9: int;
  var {:extern} result.strcpy$11: int;
  var {:extern} result.strcpy$13: int;
  var {:extern} result.strcpy$15: int;
  var {:extern} result.strcpy$17: int;
  var {:extern} result.strcpy$19: int;
  var {:extern} result.strcpy$21: int;
  var {:extern} result.strcpy$23: int;
  var {:extern} result.strcpy$25: int;
  var {:extern} result.strcpy$27: int;
  var {:extern} result.strcpy$29: int;
  var {:extern} result.strcpy$31: int;
  var {:extern} result.strcpy$33: int;
  var {:extern} result.strcpy$35: int;
  var {:extern} result.strcpy$37: int;
  var {:extern} result.strcpy$39: int;
  var {:extern} result.strcpy$41: int;
  var {:extern} result.strcpy$43: int;
  var {:extern} result.strcpy$45: int;
  var {:extern} result.strcpy$47: int;
  var {:extern} result.strcpy$49: int;
  var {:extern} result.strcpy$51: int;
  var {:extern} result.strcpy$53: int;
  var {:extern} result.strcpy$55: int;
  var {:extern} result.strcpy$57: int;
  var {:extern} result.strcpy$59: int;
  var {:extern} result.strcpy$61: int;
  var {:extern} result.strcpy$63: int;
  var {:extern} result.strcpy$65: int;
  var {:extern} result.strcpy$67: int;
  var {:extern} result.strcpy$69: int;
  var {:extern} result.strcpy$71: int;
  var {:extern} result.strcpy$73: int;
  var {:extern} result.strcpy$75: int;
  var {:extern} result.strcpy$77: int;
  var {:extern} result.strcpy$79: int;
  var {:extern} result.strcpy$81: int;
  var {:extern} result.strcpy$83: int;
  var {:extern} result.strcpy$85: int;
  var {:extern} result.strcpy$87: int;
  var {:extern} result.strcpy$89: int;
  var {:extern} result.strcpy$91: int;
  var {:extern} result.strcpy$93: int;
  var {:extern} result.strcpy$95: int;
  var {:extern} result.strcpy$97: int;
  var {:extern} result.strcpy$99: int;
  var {:extern} result.strcpy$101: int;
  var {:extern} result.strcpy$103: int;
  var {:extern} result.strcpy$105: int;
  var {:extern} result.strcpy$107: int;
  var {:extern} result.strcpy$109: int;
  var {:extern} result.strcpy$111: int;
  var {:extern} result.strcpy$113: int;
  var {:extern} result.strcpy$115: int;
  var {:extern} result.strcpy$117: int;
  var {:extern} result.strcpy$119: int;
  var {:extern} result.strcpy$121: int;
  var {:extern} result.strcpy$123: int;
  var {:extern} result.strcpy$125: int;
  var {:extern} result.strcpy$127: int;
  var {:extern} result.strcpy$129: int;
  var {:extern} result.strcpy$131: int;
  var {:extern} result.strcpy$133: int;
  var {:extern} result.strcpy$135: int;
  var {:extern} result.strcpy$137: int;
  var {:extern} result.strcpy$139: int;
  var {:extern} result.strcpy$141: int;
  var {:extern} result.strcpy$143: int;
  var {:extern} result.strcpy$145: int;
  var {:extern} result.strcpy$147: int;
  var {:extern} result.strcpy$149: int;
  var {:extern} result.strcpy$151: int;
  var {:extern} result.strcpy$153: int;
  var {:extern} result.strcpy$155: int;
  var {:extern} result.strcpy$157: int;
  var {:extern} result.strcpy$159: int;
  var {:extern} result.strcpy$161: int;
  var {:extern} result.strcpy$163: int;
  var {:extern} result.strcpy$165: int;
  var {:extern} result.strcpy$167: int;
  var {:extern} result.strcpy$169: int;
  var {:extern} result.strcpy$171: int;
  var {:extern} result.strcpy$173: int;
  var {:extern} result.strcpy$175: int;
  var {:extern} result.strcpy$177: int;
  var {:extern} result.strcpy$179: int;
  var {:extern} result.strcpy$181: int;
  var {:extern} result.strcpy$183: int;
  var {:extern} result.strcpy$185: int;
  var {:extern} result.strcpy$187: int;
  var {:extern} result.strcpy$189: int;
  var {:extern} result.strcpy$191: int;
  var {:extern} result.strcpy$193: int;
  var {:extern} result.strcpy$195: int;
  var {:extern} result.strcpy$197: int;
  var {:extern} result.strcpy$199: int;
  var {:extern} result.strcpy$201: int;
  var {:extern} result.strcpy$203: int;
  var {:extern} result.strcpy$205: int;
  var {:extern} result.strcpy$207: int;
  var {:extern} result.strcpy$209: int;
  var {:extern} result.strcpy$211: int;
  var {:extern} result.strcpy$213: int;
  var {:extern} result.strcpy$215: int;
  var {:extern} result.strcpy$217: int;
  var {:extern} result.strcpy$219: int;
  var {:extern} result.strcpy$221: int;
  var {:extern} result.strcpy$223: int;
  var {:extern} result.strcpy$225: int;
  var {:extern} result.strcpy$227: int;
  var {:extern} result.strcpy$229: int;
  var {:extern} result.strcpy$231: int;
  var {:extern} result.strcpy$233: int;
  var {:extern} result.strcpy$235: int;
  var {:extern} result.strcpy$237: int;
  var {:extern} result.strcpy$239: int;
  var {:extern} result.strcpy$241: int;
  var {:extern} result.strcpy$243: int;
  var {:extern} result.strcpy$245: int;
  var {:extern} result.strcpy$247: int;
  var {:extern} result.strcpy$249: int;
  var {:extern} result.strcpy$251: int;
  var {:extern} result.strlen$253: int;
  var {:extern} $strcpy.arg.1$10$: int;
  var {:extern} $strcpy.arg.1$100$: int;
  var {:extern} $strcpy.arg.1$102$: int;
  var {:extern} $strcpy.arg.1$104$: int;
  var {:extern} $strcpy.arg.1$106$: int;
  var {:extern} $strcpy.arg.1$108$: int;
  var {:extern} $strcpy.arg.1$110$: int;
  var {:extern} $strcpy.arg.1$112$: int;
  var {:extern} $strcpy.arg.1$114$: int;
  var {:extern} $strcpy.arg.1$116$: int;
  var {:extern} $strcpy.arg.1$118$: int;
  var {:extern} $strcpy.arg.1$12$: int;
  var {:extern} $strcpy.arg.1$120$: int;
  var {:extern} $strcpy.arg.1$122$: int;
  var {:extern} $strcpy.arg.1$124$: int;
  var {:extern} $strcpy.arg.1$126$: int;
  var {:extern} $strcpy.arg.1$128$: int;
  var {:extern} $strcpy.arg.1$130$: int;
  var {:extern} $strcpy.arg.1$132$: int;
  var {:extern} $strcpy.arg.1$134$: int;
  var {:extern} $strcpy.arg.1$136$: int;
  var {:extern} $strcpy.arg.1$138$: int;
  var {:extern} $strcpy.arg.1$14$: int;
  var {:extern} $strcpy.arg.1$140$: int;
  var {:extern} $strcpy.arg.1$142$: int;
  var {:extern} $strcpy.arg.1$144$: int;
  var {:extern} $strcpy.arg.1$146$: int;
  var {:extern} $strcpy.arg.1$148$: int;
  var {:extern} $strcpy.arg.1$150$: int;
  var {:extern} $strcpy.arg.1$152$: int;
  var {:extern} $strcpy.arg.1$154$: int;
  var {:extern} $strcpy.arg.1$156$: int;
  var {:extern} $strcpy.arg.1$158$: int;
  var {:extern} $strcpy.arg.1$16$: int;
  var {:extern} $strcpy.arg.1$160$: int;
  var {:extern} $strcpy.arg.1$162$: int;
  var {:extern} $strcpy.arg.1$164$: int;
  var {:extern} $strcpy.arg.1$166$: int;
  var {:extern} $strcpy.arg.1$168$: int;
  var {:extern} $strcpy.arg.1$170$: int;
  var {:extern} $strcpy.arg.1$172$: int;
  var {:extern} $strcpy.arg.1$174$: int;
  var {:extern} $strcpy.arg.1$176$: int;
  var {:extern} $strcpy.arg.1$178$: int;
  var {:extern} $strcpy.arg.1$18$: int;
  var {:extern} $strcpy.arg.1$180$: int;
  var {:extern} $strcpy.arg.1$182$: int;
  var {:extern} $strcpy.arg.1$184$: int;
  var {:extern} $strcpy.arg.1$186$: int;
  var {:extern} $strcpy.arg.1$188$: int;
  var {:extern} $strcpy.arg.1$190$: int;
  var {:extern} $strcpy.arg.1$192$: int;
  var {:extern} $strcpy.arg.1$194$: int;
  var {:extern} $strcpy.arg.1$196$: int;
  var {:extern} $strcpy.arg.1$198$: int;
  var {:extern} $strcpy.arg.1$2$: int;
  var {:extern} $strcpy.arg.1$20$: int;
  var {:extern} $strcpy.arg.1$200$: int;
  var {:extern} $strcpy.arg.1$202$: int;
  var {:extern} $strcpy.arg.1$204$: int;
  var {:extern} $strcpy.arg.1$206$: int;
  var {:extern} $strcpy.arg.1$208$: int;
  var {:extern} $strcpy.arg.1$210$: int;
  var {:extern} $strcpy.arg.1$212$: int;
  var {:extern} $strcpy.arg.1$214$: int;
  var {:extern} $strcpy.arg.1$216$: int;
  var {:extern} $strcpy.arg.1$218$: int;
  var {:extern} $strcpy.arg.1$22$: int;
  var {:extern} $strcpy.arg.1$220$: int;
  var {:extern} $strcpy.arg.1$222$: int;
  var {:extern} $strcpy.arg.1$224$: int;
  var {:extern} $strcpy.arg.1$226$: int;
  var {:extern} $strcpy.arg.1$228$: int;
  var {:extern} $strcpy.arg.1$230$: int;
  var {:extern} $strcpy.arg.1$232$: int;
  var {:extern} $strcpy.arg.1$234$: int;
  var {:extern} $strcpy.arg.1$236$: int;
  var {:extern} $strcpy.arg.1$238$: int;
  var {:extern} $strcpy.arg.1$24$: int;
  var {:extern} $strcpy.arg.1$240$: int;
  var {:extern} $strcpy.arg.1$242$: int;
  var {:extern} $strcpy.arg.1$244$: int;
  var {:extern} $strcpy.arg.1$246$: int;
  var {:extern} $strcpy.arg.1$248$: int;
  var {:extern} $strcpy.arg.1$250$: int;
  var {:extern} $strcpy.arg.1$252$: int;
  var {:extern} $strcpy.arg.1$26$: int;
  var {:extern} $strcpy.arg.1$28$: int;
  var {:extern} $strcpy.arg.1$30$: int;
  var {:extern} $strcpy.arg.1$32$: int;
  var {:extern} $strcpy.arg.1$34$: int;
  var {:extern} $strcpy.arg.1$36$: int;
  var {:extern} $strcpy.arg.1$38$: int;
  var {:extern} $strcpy.arg.1$4$: int;
  var {:extern} $strcpy.arg.1$40$: int;
  var {:extern} $strcpy.arg.1$42$: int;
  var {:extern} $strcpy.arg.1$44$: int;
  var {:extern} $strcpy.arg.1$46$: int;
  var {:extern} $strcpy.arg.1$48$: int;
  var {:extern} $strcpy.arg.1$50$: int;
  var {:extern} $strcpy.arg.1$52$: int;
  var {:extern} $strcpy.arg.1$54$: int;
  var {:extern} $strcpy.arg.1$56$: int;
  var {:extern} $strcpy.arg.1$58$: int;
  var {:extern} $strcpy.arg.1$6$: int;
  var {:extern} $strcpy.arg.1$60$: int;
  var {:extern} $strcpy.arg.1$62$: int;
  var {:extern} $strcpy.arg.1$64$: int;
  var {:extern} $strcpy.arg.1$66$: int;
  var {:extern} $strcpy.arg.1$68$: int;
  var {:extern} $strcpy.arg.1$70$: int;
  var {:extern} $strcpy.arg.1$72$: int;
  var {:extern} $strcpy.arg.1$74$: int;
  var {:extern} $strcpy.arg.1$76$: int;
  var {:extern} $strcpy.arg.1$78$: int;
  var {:extern} $strcpy.arg.1$8$: int;
  var {:extern} $strcpy.arg.1$80$: int;
  var {:extern} $strcpy.arg.1$82$: int;
  var {:extern} $strcpy.arg.1$84$: int;
  var {:extern} $strcpy.arg.1$86$: int;
  var {:extern} $strcpy.arg.1$88$: int;
  var {:extern} $strcpy.arg.1$90$: int;
  var {:extern} $strcpy.arg.1$92$: int;
  var {:extern} $strcpy.arg.1$94$: int;
  var {:extern} $strcpy.arg.1$96$: int;
  var {:extern} $strcpy.arg.1$98$: int;
  var {:extern} $strlen.arg.1$254$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    i := 0;
    result.printf$255 := 0;
    result.strcpy$1 := 0;
    result.strcpy$3 := 0;
    result.strcpy$5 := 0;
    result.strcpy$7 := 0;
    result.strcpy$9 := 0;
    result.strcpy$11 := 0;
    result.strcpy$13 := 0;
    result.strcpy$15 := 0;
    result.strcpy$17 := 0;
    result.strcpy$19 := 0;
    result.strcpy$21 := 0;
    result.strcpy$23 := 0;
    result.strcpy$25 := 0;
    result.strcpy$27 := 0;
    result.strcpy$29 := 0;
    result.strcpy$31 := 0;
    result.strcpy$33 := 0;
    result.strcpy$35 := 0;
    result.strcpy$37 := 0;
    result.strcpy$39 := 0;
    result.strcpy$41 := 0;
    result.strcpy$43 := 0;
    result.strcpy$45 := 0;
    result.strcpy$47 := 0;
    result.strcpy$49 := 0;
    result.strcpy$51 := 0;
    result.strcpy$53 := 0;
    result.strcpy$55 := 0;
    result.strcpy$57 := 0;
    result.strcpy$59 := 0;
    result.strcpy$61 := 0;
    result.strcpy$63 := 0;
    result.strcpy$65 := 0;
    result.strcpy$67 := 0;
    result.strcpy$69 := 0;
    result.strcpy$71 := 0;
    result.strcpy$73 := 0;
    result.strcpy$75 := 0;
    result.strcpy$77 := 0;
    result.strcpy$79 := 0;
    result.strcpy$81 := 0;
    result.strcpy$83 := 0;
    result.strcpy$85 := 0;
    result.strcpy$87 := 0;
    result.strcpy$89 := 0;
    result.strcpy$91 := 0;
    result.strcpy$93 := 0;
    result.strcpy$95 := 0;
    result.strcpy$97 := 0;
    result.strcpy$99 := 0;
    result.strcpy$101 := 0;
    result.strcpy$103 := 0;
    result.strcpy$105 := 0;
    result.strcpy$107 := 0;
    result.strcpy$109 := 0;
    result.strcpy$111 := 0;
    result.strcpy$113 := 0;
    result.strcpy$115 := 0;
    result.strcpy$117 := 0;
    result.strcpy$119 := 0;
    result.strcpy$121 := 0;
    result.strcpy$123 := 0;
    result.strcpy$125 := 0;
    result.strcpy$127 := 0;
    result.strcpy$129 := 0;
    result.strcpy$131 := 0;
    result.strcpy$133 := 0;
    result.strcpy$135 := 0;
    result.strcpy$137 := 0;
    result.strcpy$139 := 0;
    result.strcpy$141 := 0;
    result.strcpy$143 := 0;
    result.strcpy$145 := 0;
    result.strcpy$147 := 0;
    result.strcpy$149 := 0;
    result.strcpy$151 := 0;
    result.strcpy$153 := 0;
    result.strcpy$155 := 0;
    result.strcpy$157 := 0;
    result.strcpy$159 := 0;
    result.strcpy$161 := 0;
    result.strcpy$163 := 0;
    result.strcpy$165 := 0;
    result.strcpy$167 := 0;
    result.strcpy$169 := 0;
    result.strcpy$171 := 0;
    result.strcpy$173 := 0;
    result.strcpy$175 := 0;
    result.strcpy$177 := 0;
    result.strcpy$179 := 0;
    result.strcpy$181 := 0;
    result.strcpy$183 := 0;
    result.strcpy$185 := 0;
    result.strcpy$187 := 0;
    result.strcpy$189 := 0;
    result.strcpy$191 := 0;
    result.strcpy$193 := 0;
    result.strcpy$195 := 0;
    result.strcpy$197 := 0;
    result.strcpy$199 := 0;
    result.strcpy$201 := 0;
    result.strcpy$203 := 0;
    result.strcpy$205 := 0;
    result.strcpy$207 := 0;
    result.strcpy$209 := 0;
    result.strcpy$211 := 0;
    result.strcpy$213 := 0;
    result.strcpy$215 := 0;
    result.strcpy$217 := 0;
    result.strcpy$219 := 0;
    result.strcpy$221 := 0;
    result.strcpy$223 := 0;
    result.strcpy$225 := 0;
    result.strcpy$227 := 0;
    result.strcpy$229 := 0;
    result.strcpy$231 := 0;
    result.strcpy$233 := 0;
    result.strcpy$235 := 0;
    result.strcpy$237 := 0;
    result.strcpy$239 := 0;
    result.strcpy$241 := 0;
    result.strcpy$243 := 0;
    result.strcpy$245 := 0;
    result.strcpy$247 := 0;
    result.strcpy$249 := 0;
    result.strcpy$251 := 0;
    result.strlen$253 := 0;
    $strcpy.arg.1$10$ := 0;
    $strcpy.arg.1$100$ := 0;
    $strcpy.arg.1$102$ := 0;
    $strcpy.arg.1$104$ := 0;
    $strcpy.arg.1$106$ := 0;
    $strcpy.arg.1$108$ := 0;
    $strcpy.arg.1$110$ := 0;
    $strcpy.arg.1$112$ := 0;
    $strcpy.arg.1$114$ := 0;
    $strcpy.arg.1$116$ := 0;
    $strcpy.arg.1$118$ := 0;
    $strcpy.arg.1$12$ := 0;
    $strcpy.arg.1$120$ := 0;
    $strcpy.arg.1$122$ := 0;
    $strcpy.arg.1$124$ := 0;
    $strcpy.arg.1$126$ := 0;
    $strcpy.arg.1$128$ := 0;
    $strcpy.arg.1$130$ := 0;
    $strcpy.arg.1$132$ := 0;
    $strcpy.arg.1$134$ := 0;
    $strcpy.arg.1$136$ := 0;
    $strcpy.arg.1$138$ := 0;
    $strcpy.arg.1$14$ := 0;
    $strcpy.arg.1$140$ := 0;
    $strcpy.arg.1$142$ := 0;
    $strcpy.arg.1$144$ := 0;
    $strcpy.arg.1$146$ := 0;
    $strcpy.arg.1$148$ := 0;
    $strcpy.arg.1$150$ := 0;
    $strcpy.arg.1$152$ := 0;
    $strcpy.arg.1$154$ := 0;
    $strcpy.arg.1$156$ := 0;
    $strcpy.arg.1$158$ := 0;
    $strcpy.arg.1$16$ := 0;
    $strcpy.arg.1$160$ := 0;
    $strcpy.arg.1$162$ := 0;
    $strcpy.arg.1$164$ := 0;
    $strcpy.arg.1$166$ := 0;
    $strcpy.arg.1$168$ := 0;
    $strcpy.arg.1$170$ := 0;
    $strcpy.arg.1$172$ := 0;
    $strcpy.arg.1$174$ := 0;
    $strcpy.arg.1$176$ := 0;
    $strcpy.arg.1$178$ := 0;
    $strcpy.arg.1$18$ := 0;
    $strcpy.arg.1$180$ := 0;
    $strcpy.arg.1$182$ := 0;
    $strcpy.arg.1$184$ := 0;
    $strcpy.arg.1$186$ := 0;
    $strcpy.arg.1$188$ := 0;
    $strcpy.arg.1$190$ := 0;
    $strcpy.arg.1$192$ := 0;
    $strcpy.arg.1$194$ := 0;
    $strcpy.arg.1$196$ := 0;
    $strcpy.arg.1$198$ := 0;
    $strcpy.arg.1$2$ := 0;
    $strcpy.arg.1$20$ := 0;
    $strcpy.arg.1$200$ := 0;
    $strcpy.arg.1$202$ := 0;
    $strcpy.arg.1$204$ := 0;
    $strcpy.arg.1$206$ := 0;
    $strcpy.arg.1$208$ := 0;
    $strcpy.arg.1$210$ := 0;
    $strcpy.arg.1$212$ := 0;
    $strcpy.arg.1$214$ := 0;
    $strcpy.arg.1$216$ := 0;
    $strcpy.arg.1$218$ := 0;
    $strcpy.arg.1$22$ := 0;
    $strcpy.arg.1$220$ := 0;
    $strcpy.arg.1$222$ := 0;
    $strcpy.arg.1$224$ := 0;
    $strcpy.arg.1$226$ := 0;
    $strcpy.arg.1$228$ := 0;
    $strcpy.arg.1$230$ := 0;
    $strcpy.arg.1$232$ := 0;
    $strcpy.arg.1$234$ := 0;
    $strcpy.arg.1$236$ := 0;
    $strcpy.arg.1$238$ := 0;
    $strcpy.arg.1$24$ := 0;
    $strcpy.arg.1$240$ := 0;
    $strcpy.arg.1$242$ := 0;
    $strcpy.arg.1$244$ := 0;
    $strcpy.arg.1$246$ := 0;
    $strcpy.arg.1$248$ := 0;
    $strcpy.arg.1$250$ := 0;
    $strcpy.arg.1$252$ := 0;
    $strcpy.arg.1$26$ := 0;
    $strcpy.arg.1$28$ := 0;
    $strcpy.arg.1$30$ := 0;
    $strcpy.arg.1$32$ := 0;
    $strcpy.arg.1$34$ := 0;
    $strcpy.arg.1$36$ := 0;
    $strcpy.arg.1$38$ := 0;
    $strcpy.arg.1$4$ := 0;
    $strcpy.arg.1$40$ := 0;
    $strcpy.arg.1$42$ := 0;
    $strcpy.arg.1$44$ := 0;
    $strcpy.arg.1$46$ := 0;
    $strcpy.arg.1$48$ := 0;
    $strcpy.arg.1$50$ := 0;
    $strcpy.arg.1$52$ := 0;
    $strcpy.arg.1$54$ := 0;
    $strcpy.arg.1$56$ := 0;
    $strcpy.arg.1$58$ := 0;
    $strcpy.arg.1$6$ := 0;
    $strcpy.arg.1$60$ := 0;
    $strcpy.arg.1$62$ := 0;
    $strcpy.arg.1$64$ := 0;
    $strcpy.arg.1$66$ := 0;
    $strcpy.arg.1$68$ := 0;
    $strcpy.arg.1$70$ := 0;
    $strcpy.arg.1$72$ := 0;
    $strcpy.arg.1$74$ := 0;
    $strcpy.arg.1$76$ := 0;
    $strcpy.arg.1$78$ := 0;
    $strcpy.arg.1$8$ := 0;
    $strcpy.arg.1$80$ := 0;
    $strcpy.arg.1$82$ := 0;
    $strcpy.arg.1$84$ := 0;
    $strcpy.arg.1$86$ := 0;
    $strcpy.arg.1$88$ := 0;
    $strcpy.arg.1$90$ := 0;
    $strcpy.arg.1$92$ := 0;
    $strcpy.arg.1$94$ := 0;
    $strcpy.arg.1$96$ := 0;
    $strcpy.arg.1$98$ := 0;
    $strlen.arg.1$254$ := 0;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4787} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4793} true;
    i := 0;
    assume value_is(__ctobpl_const_4251, i);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4793} true;
    goto label_5_head;

  label_5_head:
    call i := kwdsinit_loop_label_5_head(i);
    goto label_5_head_last;

  label_5_false:
    assume !INT_LEQ(i, 125);
    assume value_is(__ctobpl_const_4252, i);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4796} true;
    $strcpy.arg.1$2$ := PLUS(Keywords, 21, 0);
    assume value_is(__ctobpl_const_4253, $strcpy.arg.1$2$);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4796} true;
    call result.strcpy$1 := strcpy($strcpy.arg.1$2$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4254, $strcpy.arg.1$2$);
    assume value_is(__ctobpl_const_4255, $strcpy.arg.1$2$);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4797} true;
    $strcpy.arg.1$4$ := PLUS(Keywords, 21, 1);
    assume value_is(__ctobpl_const_4256, $strcpy.arg.1$4$);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4797} true;
    call result.strcpy$3 := strcpy($strcpy.arg.1$4$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4257, $strcpy.arg.1$4$);
    assume value_is(__ctobpl_const_4258, $strcpy.arg.1$4$);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4798} true;
    $strcpy.arg.1$6$ := PLUS(Keywords, 21, 2);
    assume value_is(__ctobpl_const_4259, $strcpy.arg.1$6$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4798} true;
    call result.strcpy$5 := strcpy($strcpy.arg.1$6$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4260, $strcpy.arg.1$6$);
    assume value_is(__ctobpl_const_4261, $strcpy.arg.1$6$);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4799} true;
    $strcpy.arg.1$8$ := PLUS(Keywords, 21, 3);
    assume value_is(__ctobpl_const_4262, $strcpy.arg.1$8$);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4799} true;
    call result.strcpy$7 := strcpy($strcpy.arg.1$8$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4263, $strcpy.arg.1$8$);
    assume value_is(__ctobpl_const_4264, $strcpy.arg.1$8$);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4800} true;
    $strcpy.arg.1$10$ := PLUS(Keywords, 21, 4);
    assume value_is(__ctobpl_const_4265, $strcpy.arg.1$10$);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4800} true;
    call result.strcpy$9 := strcpy($strcpy.arg.1$10$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4266, $strcpy.arg.1$10$);
    assume value_is(__ctobpl_const_4267, $strcpy.arg.1$10$);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4801} true;
    $strcpy.arg.1$12$ := PLUS(Keywords, 21, 5);
    assume value_is(__ctobpl_const_4268, $strcpy.arg.1$12$);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4801} true;
    call result.strcpy$11 := strcpy($strcpy.arg.1$12$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4269, $strcpy.arg.1$12$);
    assume value_is(__ctobpl_const_4270, $strcpy.arg.1$12$);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4802} true;
    $strcpy.arg.1$14$ := PLUS(Keywords, 21, 6);
    assume value_is(__ctobpl_const_4271, $strcpy.arg.1$14$);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4802} true;
    call result.strcpy$13 := strcpy($strcpy.arg.1$14$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4272, $strcpy.arg.1$14$);
    assume value_is(__ctobpl_const_4273, $strcpy.arg.1$14$);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4803} true;
    $strcpy.arg.1$16$ := PLUS(Keywords, 21, 7);
    assume value_is(__ctobpl_const_4274, $strcpy.arg.1$16$);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4803} true;
    call result.strcpy$15 := strcpy($strcpy.arg.1$16$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4275, $strcpy.arg.1$16$);
    assume value_is(__ctobpl_const_4276, $strcpy.arg.1$16$);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4804} true;
    $strcpy.arg.1$18$ := PLUS(Keywords, 21, 8);
    assume value_is(__ctobpl_const_4277, $strcpy.arg.1$18$);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4804} true;
    call result.strcpy$17 := strcpy($strcpy.arg.1$18$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4278, $strcpy.arg.1$18$);
    assume value_is(__ctobpl_const_4279, $strcpy.arg.1$18$);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4805} true;
    $strcpy.arg.1$20$ := PLUS(Keywords, 21, 9);
    assume value_is(__ctobpl_const_4280, $strcpy.arg.1$20$);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4805} true;
    call result.strcpy$19 := strcpy($strcpy.arg.1$20$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4281, $strcpy.arg.1$20$);
    assume value_is(__ctobpl_const_4282, $strcpy.arg.1$20$);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4806} true;
    $strcpy.arg.1$22$ := PLUS(Keywords, 21, 10);
    assume value_is(__ctobpl_const_4283, $strcpy.arg.1$22$);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4806} true;
    call result.strcpy$21 := strcpy($strcpy.arg.1$22$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4284, $strcpy.arg.1$22$);
    assume value_is(__ctobpl_const_4285, $strcpy.arg.1$22$);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4807} true;
    $strcpy.arg.1$24$ := PLUS(Keywords, 21, 11);
    assume value_is(__ctobpl_const_4286, $strcpy.arg.1$24$);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4807} true;
    call result.strcpy$23 := strcpy($strcpy.arg.1$24$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4287, $strcpy.arg.1$24$);
    assume value_is(__ctobpl_const_4288, $strcpy.arg.1$24$);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4808} true;
    $strcpy.arg.1$26$ := PLUS(Keywords, 21, 12);
    assume value_is(__ctobpl_const_4289, $strcpy.arg.1$26$);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4808} true;
    call result.strcpy$25 := strcpy($strcpy.arg.1$26$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4290, $strcpy.arg.1$26$);
    assume value_is(__ctobpl_const_4291, $strcpy.arg.1$26$);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4809} true;
    $strcpy.arg.1$28$ := PLUS(Keywords, 21, 13);
    assume value_is(__ctobpl_const_4292, $strcpy.arg.1$28$);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4809} true;
    call result.strcpy$27 := strcpy($strcpy.arg.1$28$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4293, $strcpy.arg.1$28$);
    assume value_is(__ctobpl_const_4294, $strcpy.arg.1$28$);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4810} true;
    $strcpy.arg.1$30$ := PLUS(Keywords, 21, 14);
    assume value_is(__ctobpl_const_4295, $strcpy.arg.1$30$);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4810} true;
    call result.strcpy$29 := strcpy($strcpy.arg.1$30$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4296, $strcpy.arg.1$30$);
    assume value_is(__ctobpl_const_4297, $strcpy.arg.1$30$);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4811} true;
    $strcpy.arg.1$32$ := PLUS(Keywords, 21, 15);
    assume value_is(__ctobpl_const_4298, $strcpy.arg.1$32$);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4811} true;
    call result.strcpy$31 := strcpy($strcpy.arg.1$32$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4299, $strcpy.arg.1$32$);
    assume value_is(__ctobpl_const_4300, $strcpy.arg.1$32$);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4812} true;
    $strcpy.arg.1$34$ := PLUS(Keywords, 21, 16);
    assume value_is(__ctobpl_const_4301, $strcpy.arg.1$34$);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4812} true;
    call result.strcpy$33 := strcpy($strcpy.arg.1$34$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4302, $strcpy.arg.1$34$);
    assume value_is(__ctobpl_const_4303, $strcpy.arg.1$34$);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4813} true;
    $strcpy.arg.1$36$ := PLUS(Keywords, 21, 17);
    assume value_is(__ctobpl_const_4304, $strcpy.arg.1$36$);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4813} true;
    call result.strcpy$35 := strcpy($strcpy.arg.1$36$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4305, $strcpy.arg.1$36$);
    assume value_is(__ctobpl_const_4306, $strcpy.arg.1$36$);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4814} true;
    $strcpy.arg.1$38$ := PLUS(Keywords, 21, 18);
    assume value_is(__ctobpl_const_4307, $strcpy.arg.1$38$);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4814} true;
    call result.strcpy$37 := strcpy($strcpy.arg.1$38$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4308, $strcpy.arg.1$38$);
    assume value_is(__ctobpl_const_4309, $strcpy.arg.1$38$);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4815} true;
    $strcpy.arg.1$40$ := PLUS(Keywords, 21, 19);
    assume value_is(__ctobpl_const_4310, $strcpy.arg.1$40$);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4815} true;
    call result.strcpy$39 := strcpy($strcpy.arg.1$40$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4311, $strcpy.arg.1$40$);
    assume value_is(__ctobpl_const_4312, $strcpy.arg.1$40$);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4816} true;
    $strcpy.arg.1$42$ := PLUS(Keywords, 21, 20);
    assume value_is(__ctobpl_const_4313, $strcpy.arg.1$42$);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4816} true;
    call result.strcpy$41 := strcpy($strcpy.arg.1$42$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4314, $strcpy.arg.1$42$);
    assume value_is(__ctobpl_const_4315, $strcpy.arg.1$42$);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4817} true;
    $strcpy.arg.1$44$ := PLUS(Keywords, 21, 21);
    assume value_is(__ctobpl_const_4316, $strcpy.arg.1$44$);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4817} true;
    call result.strcpy$43 := strcpy($strcpy.arg.1$44$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4317, $strcpy.arg.1$44$);
    assume value_is(__ctobpl_const_4318, $strcpy.arg.1$44$);
    goto label_96;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4818} true;
    $strcpy.arg.1$46$ := PLUS(Keywords, 21, 22);
    assume value_is(__ctobpl_const_4319, $strcpy.arg.1$46$);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4818} true;
    call result.strcpy$45 := strcpy($strcpy.arg.1$46$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4320, $strcpy.arg.1$46$);
    assume value_is(__ctobpl_const_4321, $strcpy.arg.1$46$);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4819} true;
    $strcpy.arg.1$48$ := PLUS(Keywords, 21, 23);
    assume value_is(__ctobpl_const_4322, $strcpy.arg.1$48$);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4819} true;
    call result.strcpy$47 := strcpy($strcpy.arg.1$48$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4323, $strcpy.arg.1$48$);
    assume value_is(__ctobpl_const_4324, $strcpy.arg.1$48$);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4820} true;
    $strcpy.arg.1$50$ := PLUS(Keywords, 21, 24);
    assume value_is(__ctobpl_const_4325, $strcpy.arg.1$50$);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4820} true;
    call result.strcpy$49 := strcpy($strcpy.arg.1$50$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4326, $strcpy.arg.1$50$);
    assume value_is(__ctobpl_const_4327, $strcpy.arg.1$50$);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4821} true;
    $strcpy.arg.1$52$ := PLUS(Keywords, 21, 25);
    assume value_is(__ctobpl_const_4328, $strcpy.arg.1$52$);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4821} true;
    call result.strcpy$51 := strcpy($strcpy.arg.1$52$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4329, $strcpy.arg.1$52$);
    assume value_is(__ctobpl_const_4330, $strcpy.arg.1$52$);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4822} true;
    $strcpy.arg.1$54$ := PLUS(Keywords, 21, 26);
    assume value_is(__ctobpl_const_4331, $strcpy.arg.1$54$);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4822} true;
    call result.strcpy$53 := strcpy($strcpy.arg.1$54$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4332, $strcpy.arg.1$54$);
    assume value_is(__ctobpl_const_4333, $strcpy.arg.1$54$);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4823} true;
    $strcpy.arg.1$56$ := PLUS(Keywords, 21, 27);
    assume value_is(__ctobpl_const_4334, $strcpy.arg.1$56$);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4823} true;
    call result.strcpy$55 := strcpy($strcpy.arg.1$56$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4335, $strcpy.arg.1$56$);
    assume value_is(__ctobpl_const_4336, $strcpy.arg.1$56$);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4824} true;
    $strcpy.arg.1$58$ := PLUS(Keywords, 21, 28);
    assume value_is(__ctobpl_const_4337, $strcpy.arg.1$58$);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4824} true;
    call result.strcpy$57 := strcpy($strcpy.arg.1$58$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4338, $strcpy.arg.1$58$);
    assume value_is(__ctobpl_const_4339, $strcpy.arg.1$58$);
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4825} true;
    $strcpy.arg.1$60$ := PLUS(Keywords, 21, 29);
    assume value_is(__ctobpl_const_4340, $strcpy.arg.1$60$);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4825} true;
    call result.strcpy$59 := strcpy($strcpy.arg.1$60$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4341, $strcpy.arg.1$60$);
    assume value_is(__ctobpl_const_4342, $strcpy.arg.1$60$);
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4826} true;
    $strcpy.arg.1$62$ := PLUS(Keywords, 21, 30);
    assume value_is(__ctobpl_const_4343, $strcpy.arg.1$62$);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4826} true;
    call result.strcpy$61 := strcpy($strcpy.arg.1$62$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4344, $strcpy.arg.1$62$);
    assume value_is(__ctobpl_const_4345, $strcpy.arg.1$62$);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4827} true;
    $strcpy.arg.1$64$ := PLUS(Keywords, 21, 31);
    assume value_is(__ctobpl_const_4346, $strcpy.arg.1$64$);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4827} true;
    call result.strcpy$63 := strcpy($strcpy.arg.1$64$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4347, $strcpy.arg.1$64$);
    assume value_is(__ctobpl_const_4348, $strcpy.arg.1$64$);
    goto label_136;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4828} true;
    $strcpy.arg.1$66$ := PLUS(Keywords, 21, 32);
    assume value_is(__ctobpl_const_4349, $strcpy.arg.1$66$);
    goto label_137;

  label_137:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4828} true;
    call result.strcpy$65 := strcpy($strcpy.arg.1$66$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4350, $strcpy.arg.1$66$);
    assume value_is(__ctobpl_const_4351, $strcpy.arg.1$66$);
    goto label_140;

  label_140:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4829} true;
    $strcpy.arg.1$68$ := PLUS(Keywords, 21, 33);
    assume value_is(__ctobpl_const_4352, $strcpy.arg.1$68$);
    goto label_141;

  label_141:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4829} true;
    call result.strcpy$67 := strcpy($strcpy.arg.1$68$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4353, $strcpy.arg.1$68$);
    assume value_is(__ctobpl_const_4354, $strcpy.arg.1$68$);
    goto label_144;

  label_144:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4830} true;
    $strcpy.arg.1$70$ := PLUS(Keywords, 21, 34);
    assume value_is(__ctobpl_const_4355, $strcpy.arg.1$70$);
    goto label_145;

  label_145:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4830} true;
    call result.strcpy$69 := strcpy($strcpy.arg.1$70$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4356, $strcpy.arg.1$70$);
    assume value_is(__ctobpl_const_4357, $strcpy.arg.1$70$);
    goto label_148;

  label_148:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4831} true;
    $strcpy.arg.1$72$ := PLUS(Keywords, 21, 35);
    assume value_is(__ctobpl_const_4358, $strcpy.arg.1$72$);
    goto label_149;

  label_149:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4831} true;
    call result.strcpy$71 := strcpy($strcpy.arg.1$72$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4359, $strcpy.arg.1$72$);
    assume value_is(__ctobpl_const_4360, $strcpy.arg.1$72$);
    goto label_152;

  label_152:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4832} true;
    $strcpy.arg.1$74$ := PLUS(Keywords, 21, 36);
    assume value_is(__ctobpl_const_4361, $strcpy.arg.1$74$);
    goto label_153;

  label_153:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4832} true;
    call result.strcpy$73 := strcpy($strcpy.arg.1$74$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4362, $strcpy.arg.1$74$);
    assume value_is(__ctobpl_const_4363, $strcpy.arg.1$74$);
    goto label_156;

  label_156:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4833} true;
    $strcpy.arg.1$76$ := PLUS(Keywords, 21, 37);
    assume value_is(__ctobpl_const_4364, $strcpy.arg.1$76$);
    goto label_157;

  label_157:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4833} true;
    call result.strcpy$75 := strcpy($strcpy.arg.1$76$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4365, $strcpy.arg.1$76$);
    assume value_is(__ctobpl_const_4366, $strcpy.arg.1$76$);
    goto label_160;

  label_160:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4834} true;
    $strcpy.arg.1$78$ := PLUS(Keywords, 21, 38);
    assume value_is(__ctobpl_const_4367, $strcpy.arg.1$78$);
    goto label_161;

  label_161:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4834} true;
    call result.strcpy$77 := strcpy($strcpy.arg.1$78$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4368, $strcpy.arg.1$78$);
    assume value_is(__ctobpl_const_4369, $strcpy.arg.1$78$);
    goto label_164;

  label_164:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4835} true;
    $strcpy.arg.1$80$ := PLUS(Keywords, 21, 39);
    assume value_is(__ctobpl_const_4370, $strcpy.arg.1$80$);
    goto label_165;

  label_165:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4835} true;
    call result.strcpy$79 := strcpy($strcpy.arg.1$80$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4371, $strcpy.arg.1$80$);
    assume value_is(__ctobpl_const_4372, $strcpy.arg.1$80$);
    goto label_168;

  label_168:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4836} true;
    $strcpy.arg.1$82$ := PLUS(Keywords, 21, 40);
    assume value_is(__ctobpl_const_4373, $strcpy.arg.1$82$);
    goto label_169;

  label_169:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4836} true;
    call result.strcpy$81 := strcpy($strcpy.arg.1$82$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4374, $strcpy.arg.1$82$);
    assume value_is(__ctobpl_const_4375, $strcpy.arg.1$82$);
    goto label_172;

  label_172:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4837} true;
    $strcpy.arg.1$84$ := PLUS(Keywords, 21, 41);
    assume value_is(__ctobpl_const_4376, $strcpy.arg.1$84$);
    goto label_173;

  label_173:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4837} true;
    call result.strcpy$83 := strcpy($strcpy.arg.1$84$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4377, $strcpy.arg.1$84$);
    assume value_is(__ctobpl_const_4378, $strcpy.arg.1$84$);
    goto label_176;

  label_176:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4838} true;
    $strcpy.arg.1$86$ := PLUS(Keywords, 21, 42);
    assume value_is(__ctobpl_const_4379, $strcpy.arg.1$86$);
    goto label_177;

  label_177:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4838} true;
    call result.strcpy$85 := strcpy($strcpy.arg.1$86$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4380, $strcpy.arg.1$86$);
    assume value_is(__ctobpl_const_4381, $strcpy.arg.1$86$);
    goto label_180;

  label_180:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4839} true;
    $strcpy.arg.1$88$ := PLUS(Keywords, 21, 43);
    assume value_is(__ctobpl_const_4382, $strcpy.arg.1$88$);
    goto label_181;

  label_181:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4839} true;
    call result.strcpy$87 := strcpy($strcpy.arg.1$88$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4383, $strcpy.arg.1$88$);
    assume value_is(__ctobpl_const_4384, $strcpy.arg.1$88$);
    goto label_184;

  label_184:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4840} true;
    $strcpy.arg.1$90$ := PLUS(Keywords, 21, 44);
    assume value_is(__ctobpl_const_4385, $strcpy.arg.1$90$);
    goto label_185;

  label_185:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4840} true;
    call result.strcpy$89 := strcpy($strcpy.arg.1$90$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4386, $strcpy.arg.1$90$);
    assume value_is(__ctobpl_const_4387, $strcpy.arg.1$90$);
    goto label_188;

  label_188:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4841} true;
    $strcpy.arg.1$92$ := PLUS(Keywords, 21, 45);
    assume value_is(__ctobpl_const_4388, $strcpy.arg.1$92$);
    goto label_189;

  label_189:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4841} true;
    call result.strcpy$91 := strcpy($strcpy.arg.1$92$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4389, $strcpy.arg.1$92$);
    assume value_is(__ctobpl_const_4390, $strcpy.arg.1$92$);
    goto label_192;

  label_192:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4842} true;
    $strcpy.arg.1$94$ := PLUS(Keywords, 21, 46);
    assume value_is(__ctobpl_const_4391, $strcpy.arg.1$94$);
    goto label_193;

  label_193:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4842} true;
    call result.strcpy$93 := strcpy($strcpy.arg.1$94$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4392, $strcpy.arg.1$94$);
    assume value_is(__ctobpl_const_4393, $strcpy.arg.1$94$);
    goto label_196;

  label_196:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4843} true;
    $strcpy.arg.1$96$ := PLUS(Keywords, 21, 47);
    assume value_is(__ctobpl_const_4394, $strcpy.arg.1$96$);
    goto label_197;

  label_197:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4843} true;
    call result.strcpy$95 := strcpy($strcpy.arg.1$96$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4395, $strcpy.arg.1$96$);
    assume value_is(__ctobpl_const_4396, $strcpy.arg.1$96$);
    goto label_200;

  label_200:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4844} true;
    $strcpy.arg.1$98$ := PLUS(Keywords, 21, 48);
    assume value_is(__ctobpl_const_4397, $strcpy.arg.1$98$);
    goto label_201;

  label_201:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4844} true;
    call result.strcpy$97 := strcpy($strcpy.arg.1$98$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4398, $strcpy.arg.1$98$);
    assume value_is(__ctobpl_const_4399, $strcpy.arg.1$98$);
    goto label_204;

  label_204:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4845} true;
    $strcpy.arg.1$100$ := PLUS(Keywords, 21, 49);
    assume value_is(__ctobpl_const_4400, $strcpy.arg.1$100$);
    goto label_205;

  label_205:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4845} true;
    call result.strcpy$99 := strcpy($strcpy.arg.1$100$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4401, $strcpy.arg.1$100$);
    assume value_is(__ctobpl_const_4402, $strcpy.arg.1$100$);
    goto label_208;

  label_208:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4846} true;
    $strcpy.arg.1$102$ := PLUS(Keywords, 21, 50);
    assume value_is(__ctobpl_const_4403, $strcpy.arg.1$102$);
    goto label_209;

  label_209:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4846} true;
    call result.strcpy$101 := strcpy($strcpy.arg.1$102$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4404, $strcpy.arg.1$102$);
    assume value_is(__ctobpl_const_4405, $strcpy.arg.1$102$);
    goto label_212;

  label_212:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4847} true;
    $strcpy.arg.1$104$ := PLUS(Keywords, 21, 51);
    assume value_is(__ctobpl_const_4406, $strcpy.arg.1$104$);
    goto label_213;

  label_213:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4847} true;
    call result.strcpy$103 := strcpy($strcpy.arg.1$104$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4407, $strcpy.arg.1$104$);
    assume value_is(__ctobpl_const_4408, $strcpy.arg.1$104$);
    goto label_216;

  label_216:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4848} true;
    $strcpy.arg.1$106$ := PLUS(Keywords, 21, 52);
    assume value_is(__ctobpl_const_4409, $strcpy.arg.1$106$);
    goto label_217;

  label_217:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4848} true;
    call result.strcpy$105 := strcpy($strcpy.arg.1$106$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4410, $strcpy.arg.1$106$);
    assume value_is(__ctobpl_const_4411, $strcpy.arg.1$106$);
    goto label_220;

  label_220:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4849} true;
    $strcpy.arg.1$108$ := PLUS(Keywords, 21, 53);
    assume value_is(__ctobpl_const_4412, $strcpy.arg.1$108$);
    goto label_221;

  label_221:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4849} true;
    call result.strcpy$107 := strcpy($strcpy.arg.1$108$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4413, $strcpy.arg.1$108$);
    assume value_is(__ctobpl_const_4414, $strcpy.arg.1$108$);
    goto label_224;

  label_224:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4850} true;
    $strcpy.arg.1$110$ := PLUS(Keywords, 21, 54);
    assume value_is(__ctobpl_const_4415, $strcpy.arg.1$110$);
    goto label_225;

  label_225:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4850} true;
    call result.strcpy$109 := strcpy($strcpy.arg.1$110$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4416, $strcpy.arg.1$110$);
    assume value_is(__ctobpl_const_4417, $strcpy.arg.1$110$);
    goto label_228;

  label_228:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4851} true;
    $strcpy.arg.1$112$ := PLUS(Keywords, 21, 55);
    assume value_is(__ctobpl_const_4418, $strcpy.arg.1$112$);
    goto label_229;

  label_229:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4851} true;
    call result.strcpy$111 := strcpy($strcpy.arg.1$112$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4419, $strcpy.arg.1$112$);
    assume value_is(__ctobpl_const_4420, $strcpy.arg.1$112$);
    goto label_232;

  label_232:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4852} true;
    $strcpy.arg.1$114$ := PLUS(Keywords, 21, 56);
    assume value_is(__ctobpl_const_4421, $strcpy.arg.1$114$);
    goto label_233;

  label_233:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4852} true;
    call result.strcpy$113 := strcpy($strcpy.arg.1$114$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4422, $strcpy.arg.1$114$);
    assume value_is(__ctobpl_const_4423, $strcpy.arg.1$114$);
    goto label_236;

  label_236:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4853} true;
    $strcpy.arg.1$116$ := PLUS(Keywords, 21, 57);
    assume value_is(__ctobpl_const_4424, $strcpy.arg.1$116$);
    goto label_237;

  label_237:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4853} true;
    call result.strcpy$115 := strcpy($strcpy.arg.1$116$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4425, $strcpy.arg.1$116$);
    assume value_is(__ctobpl_const_4426, $strcpy.arg.1$116$);
    goto label_240;

  label_240:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4854} true;
    $strcpy.arg.1$118$ := PLUS(Keywords, 21, 58);
    assume value_is(__ctobpl_const_4427, $strcpy.arg.1$118$);
    goto label_241;

  label_241:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4854} true;
    call result.strcpy$117 := strcpy($strcpy.arg.1$118$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4428, $strcpy.arg.1$118$);
    assume value_is(__ctobpl_const_4429, $strcpy.arg.1$118$);
    goto label_244;

  label_244:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4855} true;
    $strcpy.arg.1$120$ := PLUS(Keywords, 21, 59);
    assume value_is(__ctobpl_const_4430, $strcpy.arg.1$120$);
    goto label_245;

  label_245:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4855} true;
    call result.strcpy$119 := strcpy($strcpy.arg.1$120$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4431, $strcpy.arg.1$120$);
    assume value_is(__ctobpl_const_4432, $strcpy.arg.1$120$);
    goto label_248;

  label_248:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4856} true;
    $strcpy.arg.1$122$ := PLUS(Keywords, 21, 60);
    assume value_is(__ctobpl_const_4433, $strcpy.arg.1$122$);
    goto label_249;

  label_249:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4856} true;
    call result.strcpy$121 := strcpy($strcpy.arg.1$122$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4434, $strcpy.arg.1$122$);
    assume value_is(__ctobpl_const_4435, $strcpy.arg.1$122$);
    goto label_252;

  label_252:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4857} true;
    $strcpy.arg.1$124$ := PLUS(Keywords, 21, 61);
    assume value_is(__ctobpl_const_4436, $strcpy.arg.1$124$);
    goto label_253;

  label_253:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4857} true;
    call result.strcpy$123 := strcpy($strcpy.arg.1$124$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4437, $strcpy.arg.1$124$);
    assume value_is(__ctobpl_const_4438, $strcpy.arg.1$124$);
    goto label_256;

  label_256:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4858} true;
    $strcpy.arg.1$126$ := PLUS(Keywords, 21, 62);
    assume value_is(__ctobpl_const_4439, $strcpy.arg.1$126$);
    goto label_257;

  label_257:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4858} true;
    call result.strcpy$125 := strcpy($strcpy.arg.1$126$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4440, $strcpy.arg.1$126$);
    assume value_is(__ctobpl_const_4441, $strcpy.arg.1$126$);
    goto label_260;

  label_260:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4859} true;
    $strcpy.arg.1$128$ := PLUS(Keywords, 21, 63);
    assume value_is(__ctobpl_const_4442, $strcpy.arg.1$128$);
    goto label_261;

  label_261:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4859} true;
    call result.strcpy$127 := strcpy($strcpy.arg.1$128$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4443, $strcpy.arg.1$128$);
    assume value_is(__ctobpl_const_4444, $strcpy.arg.1$128$);
    goto label_264;

  label_264:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4860} true;
    $strcpy.arg.1$130$ := PLUS(Keywords, 21, 64);
    assume value_is(__ctobpl_const_4445, $strcpy.arg.1$130$);
    goto label_265;

  label_265:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4860} true;
    call result.strcpy$129 := strcpy($strcpy.arg.1$130$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4446, $strcpy.arg.1$130$);
    assume value_is(__ctobpl_const_4447, $strcpy.arg.1$130$);
    goto label_268;

  label_268:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4861} true;
    $strcpy.arg.1$132$ := PLUS(Keywords, 21, 65);
    assume value_is(__ctobpl_const_4448, $strcpy.arg.1$132$);
    goto label_269;

  label_269:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4861} true;
    call result.strcpy$131 := strcpy($strcpy.arg.1$132$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4449, $strcpy.arg.1$132$);
    assume value_is(__ctobpl_const_4450, $strcpy.arg.1$132$);
    goto label_272;

  label_272:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4862} true;
    $strcpy.arg.1$134$ := PLUS(Keywords, 21, 66);
    assume value_is(__ctobpl_const_4451, $strcpy.arg.1$134$);
    goto label_273;

  label_273:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4862} true;
    call result.strcpy$133 := strcpy($strcpy.arg.1$134$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4452, $strcpy.arg.1$134$);
    assume value_is(__ctobpl_const_4453, $strcpy.arg.1$134$);
    goto label_276;

  label_276:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4863} true;
    $strcpy.arg.1$136$ := PLUS(Keywords, 21, 67);
    assume value_is(__ctobpl_const_4454, $strcpy.arg.1$136$);
    goto label_277;

  label_277:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4863} true;
    call result.strcpy$135 := strcpy($strcpy.arg.1$136$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4455, $strcpy.arg.1$136$);
    assume value_is(__ctobpl_const_4456, $strcpy.arg.1$136$);
    goto label_280;

  label_280:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4864} true;
    $strcpy.arg.1$138$ := PLUS(Keywords, 21, 68);
    assume value_is(__ctobpl_const_4457, $strcpy.arg.1$138$);
    goto label_281;

  label_281:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4864} true;
    call result.strcpy$137 := strcpy($strcpy.arg.1$138$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4458, $strcpy.arg.1$138$);
    assume value_is(__ctobpl_const_4459, $strcpy.arg.1$138$);
    goto label_284;

  label_284:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4865} true;
    $strcpy.arg.1$140$ := PLUS(Keywords, 21, 69);
    assume value_is(__ctobpl_const_4460, $strcpy.arg.1$140$);
    goto label_285;

  label_285:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4865} true;
    call result.strcpy$139 := strcpy($strcpy.arg.1$140$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4461, $strcpy.arg.1$140$);
    assume value_is(__ctobpl_const_4462, $strcpy.arg.1$140$);
    goto label_288;

  label_288:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4866} true;
    $strcpy.arg.1$142$ := PLUS(Keywords, 21, 70);
    assume value_is(__ctobpl_const_4463, $strcpy.arg.1$142$);
    goto label_289;

  label_289:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4866} true;
    call result.strcpy$141 := strcpy($strcpy.arg.1$142$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4464, $strcpy.arg.1$142$);
    assume value_is(__ctobpl_const_4465, $strcpy.arg.1$142$);
    goto label_292;

  label_292:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4867} true;
    $strcpy.arg.1$144$ := PLUS(Keywords, 21, 71);
    assume value_is(__ctobpl_const_4466, $strcpy.arg.1$144$);
    goto label_293;

  label_293:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4867} true;
    call result.strcpy$143 := strcpy($strcpy.arg.1$144$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4467, $strcpy.arg.1$144$);
    assume value_is(__ctobpl_const_4468, $strcpy.arg.1$144$);
    goto label_296;

  label_296:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4868} true;
    $strcpy.arg.1$146$ := PLUS(Keywords, 21, 72);
    assume value_is(__ctobpl_const_4469, $strcpy.arg.1$146$);
    goto label_297;

  label_297:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4868} true;
    call result.strcpy$145 := strcpy($strcpy.arg.1$146$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4470, $strcpy.arg.1$146$);
    assume value_is(__ctobpl_const_4471, $strcpy.arg.1$146$);
    goto label_300;

  label_300:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4869} true;
    $strcpy.arg.1$148$ := PLUS(Keywords, 21, 73);
    assume value_is(__ctobpl_const_4472, $strcpy.arg.1$148$);
    goto label_301;

  label_301:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4869} true;
    call result.strcpy$147 := strcpy($strcpy.arg.1$148$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4473, $strcpy.arg.1$148$);
    assume value_is(__ctobpl_const_4474, $strcpy.arg.1$148$);
    goto label_304;

  label_304:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4870} true;
    $strcpy.arg.1$150$ := PLUS(Keywords, 21, 74);
    assume value_is(__ctobpl_const_4475, $strcpy.arg.1$150$);
    goto label_305;

  label_305:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4870} true;
    call result.strcpy$149 := strcpy($strcpy.arg.1$150$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4476, $strcpy.arg.1$150$);
    assume value_is(__ctobpl_const_4477, $strcpy.arg.1$150$);
    goto label_308;

  label_308:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4871} true;
    $strcpy.arg.1$152$ := PLUS(Keywords, 21, 75);
    assume value_is(__ctobpl_const_4478, $strcpy.arg.1$152$);
    goto label_309;

  label_309:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4871} true;
    call result.strcpy$151 := strcpy($strcpy.arg.1$152$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4479, $strcpy.arg.1$152$);
    assume value_is(__ctobpl_const_4480, $strcpy.arg.1$152$);
    goto label_312;

  label_312:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4872} true;
    $strcpy.arg.1$154$ := PLUS(Keywords, 21, 76);
    assume value_is(__ctobpl_const_4481, $strcpy.arg.1$154$);
    goto label_313;

  label_313:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4872} true;
    call result.strcpy$153 := strcpy($strcpy.arg.1$154$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4482, $strcpy.arg.1$154$);
    assume value_is(__ctobpl_const_4483, $strcpy.arg.1$154$);
    goto label_316;

  label_316:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4873} true;
    $strcpy.arg.1$156$ := PLUS(Keywords, 21, 77);
    assume value_is(__ctobpl_const_4484, $strcpy.arg.1$156$);
    goto label_317;

  label_317:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4873} true;
    call result.strcpy$155 := strcpy($strcpy.arg.1$156$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4485, $strcpy.arg.1$156$);
    assume value_is(__ctobpl_const_4486, $strcpy.arg.1$156$);
    goto label_320;

  label_320:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4874} true;
    $strcpy.arg.1$158$ := PLUS(Keywords, 21, 78);
    assume value_is(__ctobpl_const_4487, $strcpy.arg.1$158$);
    goto label_321;

  label_321:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4874} true;
    call result.strcpy$157 := strcpy($strcpy.arg.1$158$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4488, $strcpy.arg.1$158$);
    assume value_is(__ctobpl_const_4489, $strcpy.arg.1$158$);
    goto label_324;

  label_324:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4875} true;
    $strcpy.arg.1$160$ := PLUS(Keywords, 21, 79);
    assume value_is(__ctobpl_const_4490, $strcpy.arg.1$160$);
    goto label_325;

  label_325:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4875} true;
    call result.strcpy$159 := strcpy($strcpy.arg.1$160$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4491, $strcpy.arg.1$160$);
    assume value_is(__ctobpl_const_4492, $strcpy.arg.1$160$);
    goto label_328;

  label_328:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4876} true;
    $strcpy.arg.1$162$ := PLUS(Keywords, 21, 80);
    assume value_is(__ctobpl_const_4493, $strcpy.arg.1$162$);
    goto label_329;

  label_329:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4876} true;
    call result.strcpy$161 := strcpy($strcpy.arg.1$162$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4494, $strcpy.arg.1$162$);
    assume value_is(__ctobpl_const_4495, $strcpy.arg.1$162$);
    goto label_332;

  label_332:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4877} true;
    $strcpy.arg.1$164$ := PLUS(Keywords, 21, 81);
    assume value_is(__ctobpl_const_4496, $strcpy.arg.1$164$);
    goto label_333;

  label_333:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4877} true;
    call result.strcpy$163 := strcpy($strcpy.arg.1$164$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4497, $strcpy.arg.1$164$);
    assume value_is(__ctobpl_const_4498, $strcpy.arg.1$164$);
    goto label_336;

  label_336:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4878} true;
    $strcpy.arg.1$166$ := PLUS(Keywords, 21, 82);
    assume value_is(__ctobpl_const_4499, $strcpy.arg.1$166$);
    goto label_337;

  label_337:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4878} true;
    call result.strcpy$165 := strcpy($strcpy.arg.1$166$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4500, $strcpy.arg.1$166$);
    assume value_is(__ctobpl_const_4501, $strcpy.arg.1$166$);
    goto label_340;

  label_340:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4879} true;
    $strcpy.arg.1$168$ := PLUS(Keywords, 21, 83);
    assume value_is(__ctobpl_const_4502, $strcpy.arg.1$168$);
    goto label_341;

  label_341:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4879} true;
    call result.strcpy$167 := strcpy($strcpy.arg.1$168$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4503, $strcpy.arg.1$168$);
    assume value_is(__ctobpl_const_4504, $strcpy.arg.1$168$);
    goto label_344;

  label_344:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4881} true;
    $strcpy.arg.1$170$ := PLUS(Keywords, 21, 84);
    assume value_is(__ctobpl_const_4505, $strcpy.arg.1$170$);
    goto label_345;

  label_345:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4881} true;
    call result.strcpy$169 := strcpy($strcpy.arg.1$170$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4506, $strcpy.arg.1$170$);
    assume value_is(__ctobpl_const_4507, $strcpy.arg.1$170$);
    goto label_348;

  label_348:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4882} true;
    $strcpy.arg.1$172$ := PLUS(Keywords, 21, 85);
    assume value_is(__ctobpl_const_4508, $strcpy.arg.1$172$);
    goto label_349;

  label_349:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4882} true;
    call result.strcpy$171 := strcpy($strcpy.arg.1$172$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4509, $strcpy.arg.1$172$);
    assume value_is(__ctobpl_const_4510, $strcpy.arg.1$172$);
    goto label_352;

  label_352:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4883} true;
    $strcpy.arg.1$174$ := PLUS(Keywords, 21, 86);
    assume value_is(__ctobpl_const_4511, $strcpy.arg.1$174$);
    goto label_353;

  label_353:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4883} true;
    call result.strcpy$173 := strcpy($strcpy.arg.1$174$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4512, $strcpy.arg.1$174$);
    assume value_is(__ctobpl_const_4513, $strcpy.arg.1$174$);
    goto label_356;

  label_356:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4884} true;
    $strcpy.arg.1$176$ := PLUS(Keywords, 21, 87);
    assume value_is(__ctobpl_const_4514, $strcpy.arg.1$176$);
    goto label_357;

  label_357:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4884} true;
    call result.strcpy$175 := strcpy($strcpy.arg.1$176$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4515, $strcpy.arg.1$176$);
    assume value_is(__ctobpl_const_4516, $strcpy.arg.1$176$);
    goto label_360;

  label_360:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4887} true;
    $strcpy.arg.1$178$ := PLUS(Keywords, 21, 88);
    assume value_is(__ctobpl_const_4517, $strcpy.arg.1$178$);
    goto label_361;

  label_361:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4887} true;
    call result.strcpy$177 := strcpy($strcpy.arg.1$178$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4518, $strcpy.arg.1$178$);
    assume value_is(__ctobpl_const_4519, $strcpy.arg.1$178$);
    goto label_364;

  label_364:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4890} true;
    $strcpy.arg.1$180$ := PLUS(Keywords, 21, 89);
    assume value_is(__ctobpl_const_4520, $strcpy.arg.1$180$);
    goto label_365;

  label_365:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4890} true;
    call result.strcpy$179 := strcpy($strcpy.arg.1$180$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4521, $strcpy.arg.1$180$);
    assume value_is(__ctobpl_const_4522, $strcpy.arg.1$180$);
    goto label_368;

  label_368:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4891} true;
    $strcpy.arg.1$182$ := PLUS(Keywords, 21, 90);
    assume value_is(__ctobpl_const_4523, $strcpy.arg.1$182$);
    goto label_369;

  label_369:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4891} true;
    call result.strcpy$181 := strcpy($strcpy.arg.1$182$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4524, $strcpy.arg.1$182$);
    assume value_is(__ctobpl_const_4525, $strcpy.arg.1$182$);
    goto label_372;

  label_372:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4892} true;
    $strcpy.arg.1$184$ := PLUS(Keywords, 21, 91);
    assume value_is(__ctobpl_const_4526, $strcpy.arg.1$184$);
    goto label_373;

  label_373:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4892} true;
    call result.strcpy$183 := strcpy($strcpy.arg.1$184$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4527, $strcpy.arg.1$184$);
    assume value_is(__ctobpl_const_4528, $strcpy.arg.1$184$);
    goto label_376;

  label_376:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4893} true;
    $strcpy.arg.1$186$ := PLUS(Keywords, 21, 92);
    assume value_is(__ctobpl_const_4529, $strcpy.arg.1$186$);
    goto label_377;

  label_377:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4893} true;
    call result.strcpy$185 := strcpy($strcpy.arg.1$186$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4530, $strcpy.arg.1$186$);
    assume value_is(__ctobpl_const_4531, $strcpy.arg.1$186$);
    goto label_380;

  label_380:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4895} true;
    $strcpy.arg.1$188$ := PLUS(Keywords, 21, 93);
    assume value_is(__ctobpl_const_4532, $strcpy.arg.1$188$);
    goto label_381;

  label_381:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4895} true;
    call result.strcpy$187 := strcpy($strcpy.arg.1$188$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4533, $strcpy.arg.1$188$);
    assume value_is(__ctobpl_const_4534, $strcpy.arg.1$188$);
    goto label_384;

  label_384:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4896} true;
    $strcpy.arg.1$190$ := PLUS(Keywords, 21, 94);
    assume value_is(__ctobpl_const_4535, $strcpy.arg.1$190$);
    goto label_385;

  label_385:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4896} true;
    call result.strcpy$189 := strcpy($strcpy.arg.1$190$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4536, $strcpy.arg.1$190$);
    assume value_is(__ctobpl_const_4537, $strcpy.arg.1$190$);
    goto label_388;

  label_388:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4897} true;
    $strcpy.arg.1$192$ := PLUS(Keywords, 21, 95);
    assume value_is(__ctobpl_const_4538, $strcpy.arg.1$192$);
    goto label_389;

  label_389:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4897} true;
    call result.strcpy$191 := strcpy($strcpy.arg.1$192$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4539, $strcpy.arg.1$192$);
    assume value_is(__ctobpl_const_4540, $strcpy.arg.1$192$);
    goto label_392;

  label_392:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4898} true;
    $strcpy.arg.1$194$ := PLUS(Keywords, 21, 96);
    assume value_is(__ctobpl_const_4541, $strcpy.arg.1$194$);
    goto label_393;

  label_393:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4898} true;
    call result.strcpy$193 := strcpy($strcpy.arg.1$194$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4542, $strcpy.arg.1$194$);
    assume value_is(__ctobpl_const_4543, $strcpy.arg.1$194$);
    goto label_396;

  label_396:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4899} true;
    $strcpy.arg.1$196$ := PLUS(Keywords, 21, 97);
    assume value_is(__ctobpl_const_4544, $strcpy.arg.1$196$);
    goto label_397;

  label_397:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4899} true;
    call result.strcpy$195 := strcpy($strcpy.arg.1$196$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4545, $strcpy.arg.1$196$);
    assume value_is(__ctobpl_const_4546, $strcpy.arg.1$196$);
    goto label_400;

  label_400:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4900} true;
    $strcpy.arg.1$198$ := PLUS(Keywords, 21, 98);
    assume value_is(__ctobpl_const_4547, $strcpy.arg.1$198$);
    goto label_401;

  label_401:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4900} true;
    call result.strcpy$197 := strcpy($strcpy.arg.1$198$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4548, $strcpy.arg.1$198$);
    assume value_is(__ctobpl_const_4549, $strcpy.arg.1$198$);
    goto label_404;

  label_404:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4901} true;
    $strcpy.arg.1$200$ := PLUS(Keywords, 21, 99);
    assume value_is(__ctobpl_const_4550, $strcpy.arg.1$200$);
    goto label_405;

  label_405:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4901} true;
    call result.strcpy$199 := strcpy($strcpy.arg.1$200$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4551, $strcpy.arg.1$200$);
    assume value_is(__ctobpl_const_4552, $strcpy.arg.1$200$);
    goto label_408;

  label_408:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4902} true;
    $strcpy.arg.1$202$ := PLUS(Keywords, 21, 100);
    assume value_is(__ctobpl_const_4553, $strcpy.arg.1$202$);
    goto label_409;

  label_409:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4902} true;
    call result.strcpy$201 := strcpy($strcpy.arg.1$202$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4554, $strcpy.arg.1$202$);
    assume value_is(__ctobpl_const_4555, $strcpy.arg.1$202$);
    goto label_412;

  label_412:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4903} true;
    $strcpy.arg.1$204$ := PLUS(Keywords, 21, 101);
    assume value_is(__ctobpl_const_4556, $strcpy.arg.1$204$);
    goto label_413;

  label_413:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4903} true;
    call result.strcpy$203 := strcpy($strcpy.arg.1$204$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4557, $strcpy.arg.1$204$);
    assume value_is(__ctobpl_const_4558, $strcpy.arg.1$204$);
    goto label_416;

  label_416:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4904} true;
    $strcpy.arg.1$206$ := PLUS(Keywords, 21, 102);
    assume value_is(__ctobpl_const_4559, $strcpy.arg.1$206$);
    goto label_417;

  label_417:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4904} true;
    call result.strcpy$205 := strcpy($strcpy.arg.1$206$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4560, $strcpy.arg.1$206$);
    assume value_is(__ctobpl_const_4561, $strcpy.arg.1$206$);
    goto label_420;

  label_420:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4905} true;
    $strcpy.arg.1$208$ := PLUS(Keywords, 21, 103);
    assume value_is(__ctobpl_const_4562, $strcpy.arg.1$208$);
    goto label_421;

  label_421:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4905} true;
    call result.strcpy$207 := strcpy($strcpy.arg.1$208$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4563, $strcpy.arg.1$208$);
    assume value_is(__ctobpl_const_4564, $strcpy.arg.1$208$);
    goto label_424;

  label_424:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4906} true;
    $strcpy.arg.1$210$ := PLUS(Keywords, 21, 104);
    assume value_is(__ctobpl_const_4565, $strcpy.arg.1$210$);
    goto label_425;

  label_425:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4906} true;
    call result.strcpy$209 := strcpy($strcpy.arg.1$210$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4566, $strcpy.arg.1$210$);
    assume value_is(__ctobpl_const_4567, $strcpy.arg.1$210$);
    goto label_428;

  label_428:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4907} true;
    $strcpy.arg.1$212$ := PLUS(Keywords, 21, 105);
    assume value_is(__ctobpl_const_4568, $strcpy.arg.1$212$);
    goto label_429;

  label_429:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4907} true;
    call result.strcpy$211 := strcpy($strcpy.arg.1$212$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4569, $strcpy.arg.1$212$);
    assume value_is(__ctobpl_const_4570, $strcpy.arg.1$212$);
    goto label_432;

  label_432:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4908} true;
    $strcpy.arg.1$214$ := PLUS(Keywords, 21, 106);
    assume value_is(__ctobpl_const_4571, $strcpy.arg.1$214$);
    goto label_433;

  label_433:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4908} true;
    call result.strcpy$213 := strcpy($strcpy.arg.1$214$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4572, $strcpy.arg.1$214$);
    assume value_is(__ctobpl_const_4573, $strcpy.arg.1$214$);
    goto label_436;

  label_436:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4909} true;
    $strcpy.arg.1$216$ := PLUS(Keywords, 21, 107);
    assume value_is(__ctobpl_const_4574, $strcpy.arg.1$216$);
    goto label_437;

  label_437:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4909} true;
    call result.strcpy$215 := strcpy($strcpy.arg.1$216$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4575, $strcpy.arg.1$216$);
    assume value_is(__ctobpl_const_4576, $strcpy.arg.1$216$);
    goto label_440;

  label_440:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4910} true;
    $strcpy.arg.1$218$ := PLUS(Keywords, 21, 108);
    assume value_is(__ctobpl_const_4577, $strcpy.arg.1$218$);
    goto label_441;

  label_441:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4910} true;
    call result.strcpy$217 := strcpy($strcpy.arg.1$218$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4578, $strcpy.arg.1$218$);
    assume value_is(__ctobpl_const_4579, $strcpy.arg.1$218$);
    goto label_444;

  label_444:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4911} true;
    $strcpy.arg.1$220$ := PLUS(Keywords, 21, 109);
    assume value_is(__ctobpl_const_4580, $strcpy.arg.1$220$);
    goto label_445;

  label_445:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4911} true;
    call result.strcpy$219 := strcpy($strcpy.arg.1$220$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4581, $strcpy.arg.1$220$);
    assume value_is(__ctobpl_const_4582, $strcpy.arg.1$220$);
    goto label_448;

  label_448:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4912} true;
    $strcpy.arg.1$222$ := PLUS(Keywords, 21, 110);
    assume value_is(__ctobpl_const_4583, $strcpy.arg.1$222$);
    goto label_449;

  label_449:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4912} true;
    call result.strcpy$221 := strcpy($strcpy.arg.1$222$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4584, $strcpy.arg.1$222$);
    assume value_is(__ctobpl_const_4585, $strcpy.arg.1$222$);
    goto label_452;

  label_452:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4913} true;
    $strcpy.arg.1$224$ := PLUS(Keywords, 21, 111);
    assume value_is(__ctobpl_const_4586, $strcpy.arg.1$224$);
    goto label_453;

  label_453:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4913} true;
    call result.strcpy$223 := strcpy($strcpy.arg.1$224$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4587, $strcpy.arg.1$224$);
    assume value_is(__ctobpl_const_4588, $strcpy.arg.1$224$);
    goto label_456;

  label_456:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4914} true;
    $strcpy.arg.1$226$ := PLUS(Keywords, 21, 112);
    assume value_is(__ctobpl_const_4589, $strcpy.arg.1$226$);
    goto label_457;

  label_457:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4914} true;
    call result.strcpy$225 := strcpy($strcpy.arg.1$226$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4590, $strcpy.arg.1$226$);
    assume value_is(__ctobpl_const_4591, $strcpy.arg.1$226$);
    goto label_460;

  label_460:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4915} true;
    $strcpy.arg.1$228$ := PLUS(Keywords, 21, 113);
    assume value_is(__ctobpl_const_4592, $strcpy.arg.1$228$);
    goto label_461;

  label_461:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4915} true;
    call result.strcpy$227 := strcpy($strcpy.arg.1$228$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4593, $strcpy.arg.1$228$);
    assume value_is(__ctobpl_const_4594, $strcpy.arg.1$228$);
    goto label_464;

  label_464:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4916} true;
    $strcpy.arg.1$230$ := PLUS(Keywords, 21, 114);
    assume value_is(__ctobpl_const_4595, $strcpy.arg.1$230$);
    goto label_465;

  label_465:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4916} true;
    call result.strcpy$229 := strcpy($strcpy.arg.1$230$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4596, $strcpy.arg.1$230$);
    assume value_is(__ctobpl_const_4597, $strcpy.arg.1$230$);
    goto label_468;

  label_468:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4917} true;
    $strcpy.arg.1$232$ := PLUS(Keywords, 21, 115);
    assume value_is(__ctobpl_const_4598, $strcpy.arg.1$232$);
    goto label_469;

  label_469:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4917} true;
    call result.strcpy$231 := strcpy($strcpy.arg.1$232$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4599, $strcpy.arg.1$232$);
    assume value_is(__ctobpl_const_4600, $strcpy.arg.1$232$);
    goto label_472;

  label_472:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4918} true;
    $strcpy.arg.1$234$ := PLUS(Keywords, 21, 116);
    assume value_is(__ctobpl_const_4601, $strcpy.arg.1$234$);
    goto label_473;

  label_473:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4918} true;
    call result.strcpy$233 := strcpy($strcpy.arg.1$234$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4602, $strcpy.arg.1$234$);
    assume value_is(__ctobpl_const_4603, $strcpy.arg.1$234$);
    goto label_476;

  label_476:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4919} true;
    $strcpy.arg.1$236$ := PLUS(Keywords, 21, 117);
    assume value_is(__ctobpl_const_4604, $strcpy.arg.1$236$);
    goto label_477;

  label_477:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4919} true;
    call result.strcpy$235 := strcpy($strcpy.arg.1$236$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4605, $strcpy.arg.1$236$);
    assume value_is(__ctobpl_const_4606, $strcpy.arg.1$236$);
    goto label_480;

  label_480:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4920} true;
    $strcpy.arg.1$238$ := PLUS(Keywords, 21, 118);
    assume value_is(__ctobpl_const_4607, $strcpy.arg.1$238$);
    goto label_481;

  label_481:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4920} true;
    call result.strcpy$237 := strcpy($strcpy.arg.1$238$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4608, $strcpy.arg.1$238$);
    assume value_is(__ctobpl_const_4609, $strcpy.arg.1$238$);
    goto label_484;

  label_484:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4921} true;
    $strcpy.arg.1$240$ := PLUS(Keywords, 21, 119);
    assume value_is(__ctobpl_const_4610, $strcpy.arg.1$240$);
    goto label_485;

  label_485:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4921} true;
    call result.strcpy$239 := strcpy($strcpy.arg.1$240$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4611, $strcpy.arg.1$240$);
    assume value_is(__ctobpl_const_4612, $strcpy.arg.1$240$);
    goto label_488;

  label_488:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4922} true;
    $strcpy.arg.1$242$ := PLUS(Keywords, 21, 120);
    assume value_is(__ctobpl_const_4613, $strcpy.arg.1$242$);
    goto label_489;

  label_489:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4922} true;
    call result.strcpy$241 := strcpy($strcpy.arg.1$242$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4614, $strcpy.arg.1$242$);
    assume value_is(__ctobpl_const_4615, $strcpy.arg.1$242$);
    goto label_492;

  label_492:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4923} true;
    $strcpy.arg.1$244$ := PLUS(Keywords, 21, 121);
    assume value_is(__ctobpl_const_4616, $strcpy.arg.1$244$);
    goto label_493;

  label_493:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4923} true;
    call result.strcpy$243 := strcpy($strcpy.arg.1$244$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4617, $strcpy.arg.1$244$);
    assume value_is(__ctobpl_const_4618, $strcpy.arg.1$244$);
    goto label_496;

  label_496:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4924} true;
    $strcpy.arg.1$246$ := PLUS(Keywords, 21, 122);
    assume value_is(__ctobpl_const_4619, $strcpy.arg.1$246$);
    goto label_497;

  label_497:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4924} true;
    call result.strcpy$245 := strcpy($strcpy.arg.1$246$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4620, $strcpy.arg.1$246$);
    assume value_is(__ctobpl_const_4621, $strcpy.arg.1$246$);
    goto label_500;

  label_500:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4925} true;
    $strcpy.arg.1$248$ := PLUS(Keywords, 21, 123);
    assume value_is(__ctobpl_const_4622, $strcpy.arg.1$248$);
    goto label_501;

  label_501:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4925} true;
    call result.strcpy$247 := strcpy($strcpy.arg.1$248$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4623, $strcpy.arg.1$248$);
    assume value_is(__ctobpl_const_4624, $strcpy.arg.1$248$);
    goto label_504;

  label_504:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4926} true;
    $strcpy.arg.1$250$ := PLUS(Keywords, 21, 124);
    assume value_is(__ctobpl_const_4625, $strcpy.arg.1$250$);
    goto label_505;

  label_505:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4926} true;
    call result.strcpy$249 := strcpy($strcpy.arg.1$250$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4626, $strcpy.arg.1$250$);
    assume value_is(__ctobpl_const_4627, $strcpy.arg.1$250$);
    goto label_508;

  label_508:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4927} true;
    $strcpy.arg.1$252$ := PLUS(Keywords, 21, 125);
    assume value_is(__ctobpl_const_4628, $strcpy.arg.1$252$);
    goto label_509;

  label_509:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4927} true;
    call result.strcpy$251 := strcpy($strcpy.arg.1$252$, havoc_stringTemp);
    assume value_is(__ctobpl_const_4629, $strcpy.arg.1$252$);
    assume value_is(__ctobpl_const_4630, $strcpy.arg.1$252$);
    goto label_512;

  label_512:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4930} true;
    i := 0;
    assume value_is(__ctobpl_const_4631, i);
    goto label_513;

  label_513:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4930} true;
    goto label_513_head;

  label_513_head:
    call i, result.printf$255, result.strlen$253, $strlen.arg.1$254$ := kwdsinit_loop_label_513_head(havoc_stringTemp, i, result.printf$255, result.strlen$253, $strlen.arg.1$254$);
    goto label_513_head_last;

  label_513_false:
    assume !INT_LEQ(i, 125);
    assume value_is(__ctobpl_const_4632, i);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4943} true;
    return;

  label_513_true:
    assume INT_LEQ(i, 125);
    assume value_is(__ctobpl_const_4632, i);
    goto label_514;

  label_514:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4931} true;
    $strlen.arg.1$254$ := PLUS(Keywords, 21, i);
    assume value_is(__ctobpl_const_4633, $strlen.arg.1$254$);
    assume value_is(__ctobpl_const_4634, i);
    goto label_515;

  label_515:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4931} true;
    call result.strlen$253 := strlen($strlen.arg.1$254$);
    assume value_is(__ctobpl_const_4635, $strlen.arg.1$254$);
    assume value_is(__ctobpl_const_4636, $strlen.arg.1$254$);
    goto label_518;

  label_518:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4931} true;
    goto label_518_true, label_518_false;

  label_518_false:
    assume !INT_ULT(20, result.strlen$253);
    assume value_is(__ctobpl_const_4637, result.strlen$253);
    goto label_519;

  label_519:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4930} true;
    assume value_is(__ctobpl_const_4638, i);
    i := PLUS(i, 1, 1);
    goto label_519_dummy;

  label_518_true:
    assume INT_ULT(20, result.strlen$253);
    assume value_is(__ctobpl_const_4637, result.strlen$253);
    goto label_520;

  label_520:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4932} true;
    call result.printf$255 := det_choice();
    goto label_523;

  label_523:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4933} true;
    call interror(havoc_stringTemp);
    goto label_519;

  label_5_true:
    assume INT_LEQ(i, 125);
    assume value_is(__ctobpl_const_4252, i);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4794} true;
    assert PLUS(Keywords, 21, i) != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(PLUS(Keywords, 21, i), 1, 0) := 0];
    assume value_is(__ctobpl_const_4639, i);
    assume value_is(__ctobpl_const_4640, Mem_T.CHAR[PLUS(PLUS(Keywords, 21, i), 1, 0)]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4793} true;
    assume value_is(__ctobpl_const_4641, i);
    i := PLUS(i, 1, 1);
    goto label_8_dummy;

  label_519_dummy:
    assume false;
    return;

  label_513_head_last:
    goto label_513_true, label_513_false;

  label_8_dummy:
    assume false;
    return;

  label_5_head_last:
    goto label_5_true, label_5_false;
}



procedure {:extern} lenunit(tp.__1: int, unit.__1: int) returns (result.lenunit$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} lenunit(tp.__1: int, unit.__1: int) returns (result.lenunit$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$7$: int;
  var {:extern} $GetKeyword.arg.1$9$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$6: int;
  var {:extern} result.GetKeyword$8: int;
  var {:extern} tp: int;
  var {:extern} unit: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(tp.__1, alloc);
    assume INT_LT(unit.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$7$ := 0;
    $GetKeyword.arg.1$9$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$6 := 0;
    result.GetKeyword$8 := 0;
    result.lenunit$1 := 0;
    tp := 0;
    unit := 0;
    tp := tp.__1;
    unit := unit.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4952} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4952} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4955} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_4642, curr_ptr);
    assume value_is(__ctobpl_const_4643, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4956} true;
    assert curr_ptr != 0;
    assert tp != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := Mem_T.Pcharac[tp]];
    assume value_is(__ctobpl_const_4644, curr_ptr);
    assume value_is(__ctobpl_const_4645, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4646, tp);
    assume value_is(__ctobpl_const_4647, Mem_T.Pcharac[tp]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4959} true;
    assert unit != 0;
    Mem_T.INT4 := Mem_T.INT4[unit := 0];
    assume value_is(__ctobpl_const_4648, unit);
    assume value_is(__ctobpl_const_4649, Mem_T.INT4[unit]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4961} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 6);
    assume value_is(__ctobpl_const_4650, $GetKeyword.arg.1$3$);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4961} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_4651, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_4652, curr_ptr);
    assume value_is(__ctobpl_const_4653, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_4654, curr_ptr);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4961} true;
    goto label_12_true, label_12_false;

  label_12_false:
    assume result.GetKeyword$2 == 0;
    assume value_is(__ctobpl_const_4655, result.GetKeyword$2);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4962} true;
    assert unit != 0;
    Mem_T.INT4 := Mem_T.INT4[unit := 0];
    assume value_is(__ctobpl_const_4656, unit);
    assume value_is(__ctobpl_const_4657, Mem_T.INT4[unit]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4974} true;
    assert tp != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[tp := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_4682, tp);
    assume value_is(__ctobpl_const_4683, Mem_T.Pcharac[tp]);
    assume value_is(__ctobpl_const_4684, curr_ptr);
    assume value_is(__ctobpl_const_4685, Mem_T.Pcharac[curr_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4975} true;
    result.lenunit$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4976} true;
    call __HAVOC_free(curr);
    return;

  label_12_true:
    assume result.GetKeyword$2 != 0;
    assume value_is(__ctobpl_const_4655, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4963} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 7);
    assume value_is(__ctobpl_const_4658, $GetKeyword.arg.1$5$);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4963} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_4659, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_4660, curr_ptr);
    assume value_is(__ctobpl_const_4661, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_4662, curr_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4963} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume result.GetKeyword$4 == 0;
    assume value_is(__ctobpl_const_4663, result.GetKeyword$4);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4964} true;
    assert unit != 0;
    Mem_T.INT4 := Mem_T.INT4[unit := 1];
    assume value_is(__ctobpl_const_4664, unit);
    assume value_is(__ctobpl_const_4665, Mem_T.INT4[unit]);
    goto label_33;

  label_18_true:
    assume result.GetKeyword$4 != 0;
    assume value_is(__ctobpl_const_4663, result.GetKeyword$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4965} true;
    $GetKeyword.arg.1$7$ := PLUS(Keywords, 21, 8);
    assume value_is(__ctobpl_const_4666, $GetKeyword.arg.1$7$);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4965} true;
    call result.GetKeyword$6 := GetKeyword($GetKeyword.arg.1$7$, curr_ptr);
    assume value_is(__ctobpl_const_4667, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_4668, curr_ptr);
    assume value_is(__ctobpl_const_4669, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_4670, curr_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4965} true;
    goto label_24_true, label_24_false;

  label_24_false:
    assume result.GetKeyword$6 == 0;
    assume value_is(__ctobpl_const_4671, result.GetKeyword$6);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4966} true;
    assert unit != 0;
    Mem_T.INT4 := Mem_T.INT4[unit := 2];
    assume value_is(__ctobpl_const_4672, unit);
    assume value_is(__ctobpl_const_4673, Mem_T.INT4[unit]);
    goto label_33;

  label_24_true:
    assume result.GetKeyword$6 != 0;
    assume value_is(__ctobpl_const_4671, result.GetKeyword$6);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4967} true;
    $GetKeyword.arg.1$9$ := PLUS(Keywords, 21, 9);
    assume value_is(__ctobpl_const_4674, $GetKeyword.arg.1$9$);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4967} true;
    call result.GetKeyword$8 := GetKeyword($GetKeyword.arg.1$9$, curr_ptr);
    assume value_is(__ctobpl_const_4675, $GetKeyword.arg.1$9$);
    assume value_is(__ctobpl_const_4676, curr_ptr);
    assume value_is(__ctobpl_const_4677, $GetKeyword.arg.1$9$);
    assume value_is(__ctobpl_const_4678, curr_ptr);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4967} true;
    goto label_30_true, label_30_false;

  label_30_false:
    assume result.GetKeyword$8 == 0;
    assume value_is(__ctobpl_const_4679, result.GetKeyword$8);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4968} true;
    assert unit != 0;
    Mem_T.INT4 := Mem_T.INT4[unit := 3];
    assume value_is(__ctobpl_const_4680, unit);
    assume value_is(__ctobpl_const_4681, Mem_T.INT4[unit]);
    goto label_33;

  label_30_true:
    assume result.GetKeyword$8 != 0;
    assume value_is(__ctobpl_const_4679, result.GetKeyword$8);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4970} true;
    result.lenunit$1 := 14;
    goto label_1;
}



procedure {:extern} linconv(x_ptr.__1: int, unit.__1: int) returns (result.linconv$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} linconv(x_ptr.__1: int, unit.__1: int) returns (result.linconv$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $pow.arg.2$4$: int;
  var {:extern} result.pow$3: int;
  var {:extern} result.sqrt$2: int;
  var {:extern} unit: int;
  var {:extern} x_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(x_ptr.__1, alloc);
    $pow.arg.2$4$ := 0;
    result.linconv$1 := 0;
    result.pow$3 := 0;
    result.sqrt$2 := 0;
    unit := 0;
    x_ptr := 0;
    x_ptr := x_ptr.__1;
    unit := unit.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4984} true;
    goto label_3_case_0, label_3_case_1, label_3_case_2, label_3_case_3;

  label_3_case_3:
    assume INT_EQ(unit, 2);
    assume value_is(__ctobpl_const_4686, unit);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4995} true;
    assert x_ptr != 0;
    $pow.arg.2$4$ := BINARY_BOTH_INT(Mem_T.FLOAT[x_ptr], 20);
    assume value_is(__ctobpl_const_4694, $pow.arg.2$4$);
    assume value_is(__ctobpl_const_4695, x_ptr);
    assume value_is(__ctobpl_const_4696, Mem_T.FLOAT[x_ptr]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4995} true;
    call result.pow$3 := pow(10, $pow.arg.2$4$);
    assume value_is(__ctobpl_const_4697, $pow.arg.2$4$);
    assume value_is(__ctobpl_const_4698, $pow.arg.2$4$);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4995} true;
    assert x_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[x_ptr := result.pow$3];
    assume value_is(__ctobpl_const_4699, x_ptr);
    assume value_is(__ctobpl_const_4700, Mem_T.FLOAT[x_ptr]);
    assume value_is(__ctobpl_const_4701, result.pow$3);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4996} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5004} true;
    result.linconv$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5005} true;
    return;

  label_3_case_2:
    assume INT_EQ(unit, 1);
    assume value_is(__ctobpl_const_4686, unit);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4991} true;
    assert x_ptr != 0;
    assert x_ptr != 0;
    call result.sqrt$2 := sqrt(Mem_T.FLOAT[x_ptr]);
    assume value_is(__ctobpl_const_4687, x_ptr);
    assume value_is(__ctobpl_const_4688, Mem_T.FLOAT[x_ptr]);
    assume value_is(__ctobpl_const_4689, x_ptr);
    assume value_is(__ctobpl_const_4690, Mem_T.FLOAT[x_ptr]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4991} true;
    assert x_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[x_ptr := result.sqrt$2];
    assume value_is(__ctobpl_const_4691, x_ptr);
    assume value_is(__ctobpl_const_4692, Mem_T.FLOAT[x_ptr]);
    assume value_is(__ctobpl_const_4693, result.sqrt$2);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4992} true;
    goto label_17;

  label_3_case_1:
    assume INT_EQ(unit, 0);
    assume value_is(__ctobpl_const_4686, unit);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4988} true;
    goto label_17;

  label_3_case_0:
    assume INT_NEQ(unit, 0);
    assume INT_NEQ(unit, 1);
    assume INT_NEQ(unit, 2);
    assume value_is(__ctobpl_const_4686, unit);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5000} true;
    call interror(havoc_stringTemp);
    goto label_17;
}



procedure {:extern} linpol(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.linpol$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} linpol(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.linpol$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} angle_ptr: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$6$: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.polor$4: int;
  var {:extern} result.printf$5: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(angle_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    angle_ptr := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    $printf.arg.2$6$ := 0;
    result.GetKeyword$2 := 0;
    result.linpol$1 := 0;
    result.polor$4 := 0;
    result.printf$5 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    angle_ptr := angle_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5017} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5017} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5017} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_4702, curr_ptr);
    assume value_is(__ctobpl_const_4703, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5018} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5025} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_4704, curr_ptr);
    assume value_is(__ctobpl_const_4705, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4706, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5026} true;
    error := 0;
    assume value_is(__ctobpl_const_4707, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5029} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 15);
    assume value_is(__ctobpl_const_4708, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5029} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_4709, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_4710, curr_ptr);
    assume value_is(__ctobpl_const_4711, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_4712, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5029} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_4713, error);
    assume value_is(__ctobpl_const_4714, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5030} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_4715, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5035} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.polor$4 := polor(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_4716, curr_ptr);
    assume value_is(__ctobpl_const_4717, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4718, curr_ptr);
    assume value_is(__ctobpl_const_4719, angle_ptr);
    assume value_is(__ctobpl_const_4720, angle_unit_ptr);
    assume value_is(__ctobpl_const_4721, curr_ptr);
    assume value_is(__ctobpl_const_4722, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_4723, curr_ptr);
    assume value_is(__ctobpl_const_4724, angle_ptr);
    assume value_is(__ctobpl_const_4725, angle_unit_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5035} true;
    error := result.polor$4;
    assume value_is(__ctobpl_const_4726, error);
    assume value_is(__ctobpl_const_4727, result.polor$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5036} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_4728, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5044} true;
    goto label_21_true, label_21_false;

  label_21_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_4729, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5050} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_4730, pp2);
    assume value_is(__ctobpl_const_4731, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_4732, curr_ptr);
    assume value_is(__ctobpl_const_4733, Mem_T.Pcharac[curr_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5051} true;
    result.linpol$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5052} true;
    call __HAVOC_free(curr);
    return;

  label_21_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_4729, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5045} true;
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5045} true;
    call result.printf$5 := det_choice();
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5046} true;
    result.linpol$1 := 17;
    goto label_1;

  label_20_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_4728, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5037} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 90];
    assume value_is(__ctobpl_const_4734, angle_ptr);
    assume value_is(__ctobpl_const_4735, Mem_T.FLOAT[angle_ptr]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5038} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_4736, angle_unit_ptr);
    assume value_is(__ctobpl_const_4737, Mem_T.INT4[angle_unit_ptr]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5039} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_4738, pp2);
    assume value_is(__ctobpl_const_4739, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_4740, curr_ptr);
    assume value_is(__ctobpl_const_4741, Mem_T.Pcharac[curr_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5040} true;
    result.linpol$1 := 0;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_4715, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5031} true;
    result.linpol$1 := 1;
    goto label_1;
}



procedure {:extern} main(argc.__1: int, argv.__1: int) returns (result.main$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} main(argc.__1: int, argv.__1: int) returns (result.main$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} argc: int;
  var {:extern} argv: int;
  var {:extern} cp: int;
  var {:extern} error: int;
  var {:extern} first: int;
  var {:extern} fn: int;
  var {:extern} group_ptr: int;
  var {:extern} last: int;
  var {:extern} result.groupdef$6: int;
  var {:extern} result.grwrite$11: int;
  var {:extern} result.printf$2: int;
  var {:extern} result.readfil3$5: int;
  var {:extern} result.simamp$8: int;
  var {:extern} result.simgroup$7: int;
  var {:extern} result.simpha$9: int;
  var {:extern} result.simpol$10: int;
  var {:extern} result.strcpy$3: int;
  var {:extern} $strcpy.arg.2$4$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(argv.__1, alloc);
    argc := 0;
    argv := 0;
    call cp := __HAVOC_det_malloc(4);
    error := 0;
    call first := __HAVOC_det_malloc(4);
    call fn := __HAVOC_det_malloc(31);
    call group_ptr := __HAVOC_det_malloc(4);
    call last := __HAVOC_det_malloc(4);
    result.groupdef$6 := 0;
    result.grwrite$11 := 0;
    result.main$1 := 0;
    result.printf$2 := 0;
    result.readfil3$5 := 0;
    result.simamp$8 := 0;
    result.simgroup$7 := 0;
    result.simpha$9 := 0;
    result.simpol$10 := 0;
    result.strcpy$3 := 0;
    $strcpy.arg.2$4$ := 0;
    argc := argc.__1;
    argv := argv.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 500} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 500} true;
    Mem_T.Pcharac := Mem_T.Pcharac[first := 0];
    assume value_is(__ctobpl_const_4742, Mem_T.Pcharac[first]);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 500} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 500} true;
    Mem_T.Pcharac := Mem_T.Pcharac[last := 0];
    assume value_is(__ctobpl_const_4743, Mem_T.Pcharac[last]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 501} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 501} true;
    Mem_T.Pcharac := Mem_T.Pcharac[cp := 0];
    assume value_is(__ctobpl_const_4744, Mem_T.Pcharac[cp]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 502} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 502} true;
    Mem_T.PGroup := Mem_T.PGroup[group_ptr := 0];
    assume value_is(__ctobpl_const_4745, Mem_T.PGroup[group_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 503} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 503} true;
    error := 0;
    assume value_is(__ctobpl_const_4746, error);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 504} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 507} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume !INT_NEQ(argc, 2);
    assume value_is(__ctobpl_const_4747, argc);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 511} true;
    assert argv != 0;
    $strcpy.arg.2$4$ := Mem_T.PCHAR[PLUS(argv, 4, 1)];
    assume value_is(__ctobpl_const_4748, $strcpy.arg.2$4$);
    assume value_is(__ctobpl_const_4749, argv);
    assume value_is(__ctobpl_const_4750, Mem_T.PCHAR[PLUS(argv, 4, 1)]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 511} true;
    call result.strcpy$3 := strcpy(GLOBLE_FILENAME, $strcpy.arg.2$4$);
    assume value_is(__ctobpl_const_4751, $strcpy.arg.2$4$);
    assume value_is(__ctobpl_const_4752, $strcpy.arg.2$4$);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 514} true;
    call glvainit();
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 517} true;
    call nomefile(fn);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 518} true;
    call result.readfil3$5 := readfil3(fn, first, last);
    assume value_is(__ctobpl_const_4753, Mem_T.Pcharac[first]);
    assume value_is(__ctobpl_const_4754, Mem_T.Pcharac[last]);
    assume value_is(__ctobpl_const_4755, Mem_T.Pcharac[first]);
    assume value_is(__ctobpl_const_4756, Mem_T.Pcharac[last]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 518} true;
    goto label_34_true, label_34_false;

  label_34_false:
    assume result.readfil3$5 == 0;
    assume value_is(__ctobpl_const_4757, result.readfil3$5);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 523} true;
    call prnfile(Mem_T.Pcharac[first]);
    assume value_is(__ctobpl_const_4758, Mem_T.Pcharac[first]);
    assume value_is(__ctobpl_const_4759, Mem_T.Pcharac[first]);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 526} true;
    call result.groupdef$6 := groupdef(Mem_T.Pcharac[first], cp, group_ptr);
    assume value_is(__ctobpl_const_4760, Mem_T.Pcharac[first]);
    assume value_is(__ctobpl_const_4761, Mem_T.Pcharac[cp]);
    assume value_is(__ctobpl_const_4762, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4763, Mem_T.Pcharac[first]);
    assume value_is(__ctobpl_const_4764, Mem_T.Pcharac[cp]);
    assume value_is(__ctobpl_const_4765, Mem_T.PGroup[group_ptr]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 526} true;
    error := result.groupdef$6;
    assume value_is(__ctobpl_const_4766, error);
    assume value_is(__ctobpl_const_4767, result.groupdef$6);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 527} true;
    call waitcont();
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 528} true;
    goto label_48_true, label_48_false;

  label_48_false:
    assume error == 0;
    assume value_is(__ctobpl_const_4768, error);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 533} true;
    call result.simgroup$7 := simgroup(Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4769, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4770, Mem_T.PGroup[group_ptr]);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 533} true;
    error := result.simgroup$7;
    assume value_is(__ctobpl_const_4771, error);
    assume value_is(__ctobpl_const_4772, result.simgroup$7);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 533} true;
    goto label_56_true, label_56_false;

  label_56_false:
    assume error == 0;
    assume value_is(__ctobpl_const_4773, error);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 539} true;
    call result.simamp$8 := simamp(Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4774, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4775, Mem_T.PGroup[group_ptr]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 539} true;
    error := result.simamp$8;
    assume value_is(__ctobpl_const_4776, error);
    assume value_is(__ctobpl_const_4777, result.simamp$8);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 539} true;
    goto label_64_true, label_64_false;

  label_64_false:
    assume error == 0;
    assume value_is(__ctobpl_const_4778, error);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 545} true;
    call result.simpha$9 := simpha(Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4779, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4780, Mem_T.PGroup[group_ptr]);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 545} true;
    error := result.simpha$9;
    assume value_is(__ctobpl_const_4781, error);
    assume value_is(__ctobpl_const_4782, result.simpha$9);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 545} true;
    goto label_72_true, label_72_false;

  label_72_false:
    assume error == 0;
    assume value_is(__ctobpl_const_4783, error);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 551} true;
    call result.simpol$10 := simpol(Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4784, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4785, Mem_T.PGroup[group_ptr]);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 553} true;
    call waitcont();
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 559} true;
    call result.grwrite$11 := grwrite(Mem_T.PGroup[group_ptr], fn);
    assume value_is(__ctobpl_const_4786, Mem_T.PGroup[group_ptr]);
    assume value_is(__ctobpl_const_4787, Mem_T.PGroup[group_ptr]);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 561} true;
    call __HAVOC_free(cp);
    call __HAVOC_free(first);
    call __HAVOC_free(fn);
    call __HAVOC_free(group_ptr);
    call __HAVOC_free(last);
    return;

  label_72_true:
    assume error != 0;
    assume value_is(__ctobpl_const_4783, error);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 547} true;
    return;

  label_64_true:
    assume error != 0;
    assume value_is(__ctobpl_const_4778, error);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 541} true;
    return;

  label_56_true:
    assume error != 0;
    assume value_is(__ctobpl_const_4773, error);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 535} true;
    return;

  label_48_true:
    assume error != 0;
    assume value_is(__ctobpl_const_4768, error);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 529} true;
    return;

  label_34_true:
    assume result.readfil3$5 != 0;
    assume value_is(__ctobpl_const_4757, result.readfil3$5);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 519} true;
    return;

  label_14_true:
    assume INT_NEQ(argc, 2);
    assume value_is(__ctobpl_const_4747, argc);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 508} true;
    call result.printf$2 := det_choice();
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 509} true;
    return;
}



procedure {:extern} mksblock(addrem_ptr.__1: int, first_node_ptr.__1: int, last_node_ptr.__1: int, pstep.__1: int, qstep.__1: int, angle.__1: int, nodes_num_ptr.__1: int, elem_shape.__1: int, elem_pdim.__1: int, elem_qdim.__1: int) returns (result.mksblock$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} mksblock(addrem_ptr.__1: int, first_node_ptr.__1: int, last_node_ptr.__1: int, pstep.__1: int, qstep.__1: int, angle.__1: int, nodes_num_ptr.__1: int, elem_shape.__1: int, elem_pdim.__1: int, elem_qdim.__1: int) returns (result.mksblock$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} addrem_ptr: int;
  var {:extern} angle: int;
  var {:extern} app_ptr: int;
  var {:extern} elem_pdim: int;
  var {:extern} elem_qdim: int;
  var {:extern} elem_shape: int;
  var {:extern} first_node_ptr: int;
  var {:extern} last_node_ptr: int;
  var {:extern} nodes_num_ptr: int;
  var {:extern} p: int;
  var {:extern} p1: int;
  var {:extern} p2: int;
  var {:extern} pp1: int;
  var {:extern} pp2: int;
  var {:extern} primo_ptr: int;
  var {:extern} $printf.arg.2$8$: int;
  var {:extern} pstep: int;
  var {:extern} q: int;
  var {:extern} q1: int;
  var {:extern} q2: int;
  var {:extern} qq1: int;
  var {:extern} qq2: int;
  var {:extern} qstep: int;
  var {:extern} result.dcos$10: int;
  var {:extern} result.dsin$9: int;
  var {:extern} result.intmax$3: int;
  var {:extern} result.intmax$5: int;
  var {:extern} result.intmin$2: int;
  var {:extern} result.intmin$4: int;
  var {:extern} result.malloc$6: int;
  var {:extern} result.printf$7: int;
  var {:extern} ultimo_ptr: int;
  var {:extern} x: int;
  var {:extern} y: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(addrem_ptr.__1, alloc);
    assume INT_LT(first_node_ptr.__1, alloc);
    assume INT_LT(last_node_ptr.__1, alloc);
    assume INT_LT(nodes_num_ptr.__1, alloc);
    addrem_ptr := 0;
    angle := 0;
    app_ptr := 0;
    elem_pdim := 0;
    elem_qdim := 0;
    elem_shape := 0;
    first_node_ptr := 0;
    last_node_ptr := 0;
    nodes_num_ptr := 0;
    p := 0;
    call p1 := __HAVOC_det_malloc(4);
    call p2 := __HAVOC_det_malloc(4);
    pp1 := 0;
    pp2 := 0;
    primo_ptr := 0;
    $printf.arg.2$8$ := 0;
    pstep := 0;
    q := 0;
    call q1 := __HAVOC_det_malloc(4);
    call q2 := __HAVOC_det_malloc(4);
    qq1 := 0;
    qq2 := 0;
    qstep := 0;
    result.dcos$10 := 0;
    result.dsin$9 := 0;
    result.intmax$3 := 0;
    result.intmax$5 := 0;
    result.intmin$2 := 0;
    result.intmin$4 := 0;
    result.malloc$6 := 0;
    result.mksblock$1 := 0;
    result.printf$7 := 0;
    ultimo_ptr := 0;
    x := 0;
    y := 0;
    addrem_ptr := addrem_ptr.__1;
    first_node_ptr := first_node_ptr.__1;
    last_node_ptr := last_node_ptr.__1;
    pstep := pstep.__1;
    qstep := qstep.__1;
    angle := angle.__1;
    nodes_num_ptr := nodes_num_ptr.__1;
    elem_shape := elem_shape.__1;
    elem_pdim := elem_pdim.__1;
    elem_qdim := elem_qdim.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5070} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5070} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_4788, app_ptr);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5070} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5070} true;
    primo_ptr := 0;
    assume value_is(__ctobpl_const_4789, primo_ptr);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5070} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5070} true;
    ultimo_ptr := 0;
    assume value_is(__ctobpl_const_4790, ultimo_ptr);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5071} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5071} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5072} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5072} true;
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5072} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5072} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5073} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5073} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5075} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5075} true;
    pp1 := p1;
    assume value_is(__ctobpl_const_4791, pp1);
    assume value_is(__ctobpl_const_4792, Mem_T.INT4[p1]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5075} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5075} true;
    pp2 := p2;
    assume value_is(__ctobpl_const_4793, pp2);
    assume value_is(__ctobpl_const_4794, Mem_T.INT4[p2]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5075} true;
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5075} true;
    qq1 := q1;
    assume value_is(__ctobpl_const_4795, qq1);
    assume value_is(__ctobpl_const_4796, Mem_T.INT4[q1]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5075} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5075} true;
    qq2 := q2;
    assume value_is(__ctobpl_const_4797, qq2);
    assume value_is(__ctobpl_const_4798, Mem_T.INT4[q2]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5082} true;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    Mem_T.INT4 := Mem_T.INT4[p1 := Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]];
    assume value_is(__ctobpl_const_4799, Mem_T.INT4[p1]);
    assume value_is(__ctobpl_const_4800, addrem_ptr);
    assume value_is(__ctobpl_const_4801, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_4802, Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5083} true;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    Mem_T.INT4 := Mem_T.INT4[q1 := Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]];
    assume value_is(__ctobpl_const_4803, Mem_T.INT4[q1]);
    assume value_is(__ctobpl_const_4804, addrem_ptr);
    assume value_is(__ctobpl_const_4805, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_4806, Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5084} true;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    assert Mem_T.NEXT_Node[NEXT_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])] != 0;
    Mem_T.INT4 := Mem_T.INT4[p2 := Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.NEXT_Node[NEXT_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])])]];
    assume value_is(__ctobpl_const_4807, Mem_T.INT4[p2]);
    assume value_is(__ctobpl_const_4808, addrem_ptr);
    assume value_is(__ctobpl_const_4809, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_4810, Mem_T.NEXT_Node[NEXT_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    assume value_is(__ctobpl_const_4811, Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.NEXT_Node[NEXT_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])])]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5085} true;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    assert Mem_T.NEXT_Node[NEXT_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])] != 0;
    Mem_T.INT4 := Mem_T.INT4[q2 := Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.NEXT_Node[NEXT_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])])]];
    assume value_is(__ctobpl_const_4812, Mem_T.INT4[q2]);
    assume value_is(__ctobpl_const_4813, addrem_ptr);
    assume value_is(__ctobpl_const_4814, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_4815, Mem_T.NEXT_Node[NEXT_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    assume value_is(__ctobpl_const_4816, Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.NEXT_Node[NEXT_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])])]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5095} true;
    assert nodes_num_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[nodes_num_ptr := 0];
    assume value_is(__ctobpl_const_4817, nodes_num_ptr);
    assume value_is(__ctobpl_const_4818, Mem_T.INT4[nodes_num_ptr]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5099} true;
    call result.intmin$2 := intmin(Mem_T.INT4[q1], Mem_T.INT4[q2]);
    assume value_is(__ctobpl_const_4819, Mem_T.INT4[q1]);
    assume value_is(__ctobpl_const_4820, Mem_T.INT4[q2]);
    assume value_is(__ctobpl_const_4821, Mem_T.INT4[q1]);
    assume value_is(__ctobpl_const_4822, Mem_T.INT4[q2]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5099} true;
    q := result.intmin$2;
    assume value_is(__ctobpl_const_4823, q);
    assume value_is(__ctobpl_const_4824, result.intmin$2);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5099} true;
    goto label_34_head;

  label_34_head:
    call app_ptr, p, primo_ptr, q, result.dcos$10, result.dsin$9, result.intmax$3, result.intmax$5, result.intmin$4, result.malloc$6, result.printf$7, ultimo_ptr, x, y := mksblock_loop_label_34_head(havoc_stringTemp, angle, app_ptr, elem_pdim, elem_qdim, elem_shape, nodes_num_ptr, p, p1, p2, primo_ptr, pstep, q, q1, q2, qstep, result.dcos$10, result.dsin$9, result.intmax$3, result.intmax$5, result.intmin$4, result.malloc$6, result.printf$7, ultimo_ptr, x, y);
    goto label_34_head_last;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5099} true;
    goto label_37_true, label_37_false;

  label_37_false:
    assume !INT_LEQ(q, result.intmax$3);
    assume value_is(__ctobpl_const_4829, q);
    assume value_is(__ctobpl_const_4830, result.intmax$3);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5152} true;
    assert first_node_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[first_node_ptr := primo_ptr];
    assume value_is(__ctobpl_const_4831, first_node_ptr);
    assume value_is(__ctobpl_const_4832, Mem_T.PGeomnode[first_node_ptr]);
    assume value_is(__ctobpl_const_4833, primo_ptr);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5153} true;
    assert last_node_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[last_node_ptr := ultimo_ptr];
    assume value_is(__ctobpl_const_4834, last_node_ptr);
    assume value_is(__ctobpl_const_4835, Mem_T.PGeomnode[last_node_ptr]);
    assume value_is(__ctobpl_const_4836, ultimo_ptr);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5154} true;
    result.mksblock$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5155} true;
    call __HAVOC_free(p1);
    call __HAVOC_free(p2);
    call __HAVOC_free(q1);
    call __HAVOC_free(q2);
    return;

  label_37_true:
    assume INT_LEQ(q, result.intmax$3);
    assume value_is(__ctobpl_const_4829, q);
    assume value_is(__ctobpl_const_4830, result.intmax$3);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    call result.intmin$4 := intmin(Mem_T.INT4[p1], Mem_T.INT4[p2]);
    assume value_is(__ctobpl_const_4837, Mem_T.INT4[p1]);
    assume value_is(__ctobpl_const_4838, Mem_T.INT4[p2]);
    assume value_is(__ctobpl_const_4839, Mem_T.INT4[p1]);
    assume value_is(__ctobpl_const_4840, Mem_T.INT4[p2]);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    p := result.intmin$4;
    assume value_is(__ctobpl_const_4841, p);
    assume value_is(__ctobpl_const_4842, result.intmin$4);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    goto label_43_head;

  label_43_head:
    call app_ptr, p, primo_ptr, result.dcos$10, result.dsin$9, result.intmax$5, result.malloc$6, result.printf$7, ultimo_ptr, x, y := mksblock_loop_label_43_head(havoc_stringTemp, angle, app_ptr, elem_pdim, elem_qdim, elem_shape, nodes_num_ptr, p, p1, p2, primo_ptr, pstep, q, qstep, result.dcos$10, result.dsin$9, result.intmax$5, result.malloc$6, result.printf$7, ultimo_ptr, x, y);
    goto label_43_head_last;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    goto label_46_true, label_46_false;

  label_46_false:
    assume !INT_LEQ(p, result.intmax$5);
    assume value_is(__ctobpl_const_4847, p);
    assume value_is(__ctobpl_const_4848, result.intmax$5);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5099} true;
    assume value_is(__ctobpl_const_4849, q);
    q := PLUS(q, 1, 1);
    goto label_47_dummy;

  label_46_true:
    assume INT_LEQ(p, result.intmax$5);
    assume value_is(__ctobpl_const_4847, p);
    assume value_is(__ctobpl_const_4848, result.intmax$5);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5106} true;
    call result.malloc$6 := __HAVOC_det_malloc(88);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5106} true;
    app_ptr := result.malloc$6;
    assume value_is(__ctobpl_const_4850, app_ptr);
    assume value_is(__ctobpl_const_4851, result.malloc$6);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5108} true;
    goto label_52_true, label_52_false;

  label_52_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_4852, app_ptr);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5109} true;
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5109} true;
    call result.printf$7 := det_choice();
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5110} true;
    call interror(havoc_stringTemp);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5115} true;
    call result.dsin$9 := dsin(angle);
    assume value_is(__ctobpl_const_4853, angle);
    assume value_is(__ctobpl_const_4854, angle);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5115} true;
    y := MULT(MULT(q, qstep), result.dsin$9);
    assume value_is(__ctobpl_const_4855, y);
    assume value_is(__ctobpl_const_4856, q);
    assume value_is(__ctobpl_const_4857, qstep);
    assume value_is(__ctobpl_const_4858, result.dsin$9);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5116} true;
    call result.dcos$10 := dcos(angle);
    assume value_is(__ctobpl_const_4859, angle);
    assume value_is(__ctobpl_const_4860, angle);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5116} true;
    x := PLUS(MULT(p, pstep), 1, MULT(MULT(q, qstep), result.dcos$10));
    assume value_is(__ctobpl_const_4861, x);
    assume value_is(__ctobpl_const_4862, p);
    assume value_is(__ctobpl_const_4863, pstep);
    assume value_is(__ctobpl_const_4864, q);
    assume value_is(__ctobpl_const_4865, qstep);
    assume value_is(__ctobpl_const_4866, result.dcos$10);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5119} true;
    assert nodes_num_ptr != 0;
    assert nodes_num_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[nodes_num_ptr := PLUS(Mem_T.INT4[nodes_num_ptr], 1, 1)];
    assume value_is(__ctobpl_const_4867, nodes_num_ptr);
    assume value_is(__ctobpl_const_4868, Mem_T.INT4[nodes_num_ptr]);
    assume value_is(__ctobpl_const_4869, nodes_num_ptr);
    assume value_is(__ctobpl_const_4870, Mem_T.INT4[nodes_num_ptr]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5121} true;
    assert app_ptr != 0;
    Mem_T.LOC_P_Geomnode := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr) := p];
    assume value_is(__ctobpl_const_4871, app_ptr);
    assume value_is(__ctobpl_const_4872, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4873, p);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5122} true;
    assert app_ptr != 0;
    Mem_T.LOC_Q_Geomnode := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr) := q];
    assume value_is(__ctobpl_const_4874, app_ptr);
    assume value_is(__ctobpl_const_4875, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4876, q);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5123} true;
    assert app_ptr != 0;
    Mem_T.XA_Geomnode := Mem_T.XA_Geomnode[XA_Geomnode(app_ptr) := x];
    assume value_is(__ctobpl_const_4877, app_ptr);
    assume value_is(__ctobpl_const_4878, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4879, x);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5124} true;
    assert app_ptr != 0;
    Mem_T.YA_Geomnode := Mem_T.YA_Geomnode[YA_Geomnode(app_ptr) := y];
    assume value_is(__ctobpl_const_4880, app_ptr);
    assume value_is(__ctobpl_const_4881, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4882, y);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5125} true;
    assert app_ptr != 0;
    Mem_T.ZA_Geomnode := Mem_T.ZA_Geomnode[ZA_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_4883, app_ptr);
    assume value_is(__ctobpl_const_4884, Mem_T.ZA_Geomnode[ZA_Geomnode(app_ptr)]);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5126} true;
    assert app_ptr != 0;
    Mem_T.SUBGROUP_PTR_Geomnode := Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_4885, app_ptr);
    assume value_is(__ctobpl_const_4886, Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(app_ptr)]);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5127} true;
    assert app_ptr != 0;
    Mem_T.SHAPE_Geomnode := Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(app_ptr) := elem_shape];
    assume value_is(__ctobpl_const_4887, app_ptr);
    assume value_is(__ctobpl_const_4888, Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4889, elem_shape);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5128} true;
    assert app_ptr != 0;
    Mem_T.PSIZE_Geomnode := Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(app_ptr) := elem_pdim];
    assume value_is(__ctobpl_const_4890, app_ptr);
    assume value_is(__ctobpl_const_4891, Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4892, elem_pdim);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5129} true;
    assert app_ptr != 0;
    Mem_T.QSIZE_Geomnode := Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(app_ptr) := elem_qdim];
    assume value_is(__ctobpl_const_4893, app_ptr);
    assume value_is(__ctobpl_const_4894, Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4895, elem_qdim);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5131} true;
    assert app_ptr != 0;
    Mem_T.THEA_Geomnode := Mem_T.THEA_Geomnode[THEA_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_4896, app_ptr);
    assume value_is(__ctobpl_const_4897, Mem_T.THEA_Geomnode[THEA_Geomnode(app_ptr)]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5132} true;
    assert app_ptr != 0;
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_4898, app_ptr);
    assume value_is(__ctobpl_const_4899, Mem_T.PHEA_Geomnode[PHEA_Geomnode(app_ptr)]);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5133} true;
    assert app_ptr != 0;
    Mem_T.PSEA_Geomnode := Mem_T.PSEA_Geomnode[PSEA_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_4900, app_ptr);
    assume value_is(__ctobpl_const_4901, Mem_T.PSEA_Geomnode[PSEA_Geomnode(app_ptr)]);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5138} true;
    goto label_75_true, label_75_false;

  label_75_false:
    assume primo_ptr == 0;
    assume value_is(__ctobpl_const_4902, primo_ptr);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5139} true;
    primo_ptr := app_ptr;
    assume value_is(__ctobpl_const_4903, primo_ptr);
    assume value_is(__ctobpl_const_4904, app_ptr);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5144} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_4908, ultimo_ptr);
    assume value_is(__ctobpl_const_4909, app_ptr);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5146} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_4910, ultimo_ptr);
    assume value_is(__ctobpl_const_4911, Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr)]);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    assume value_is(__ctobpl_const_4912, p);
    p := PLUS(p, 1, 1);
    goto label_80_dummy;

  label_75_true:
    assume primo_ptr != 0;
    assume value_is(__ctobpl_const_4902, primo_ptr);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5141} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr) := app_ptr];
    assume value_is(__ctobpl_const_4905, ultimo_ptr);
    assume value_is(__ctobpl_const_4906, Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr)]);
    assume value_is(__ctobpl_const_4907, app_ptr);
    goto label_78;

  label_52_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_4852, app_ptr);
    goto label_54;

  label_80_dummy:
    assume false;
    return;

  label_43_head_last:
    call result.intmax$5 := intmax(Mem_T.INT4[p1], Mem_T.INT4[p2]);
    assume value_is(__ctobpl_const_4843, Mem_T.INT4[p1]);
    assume value_is(__ctobpl_const_4844, Mem_T.INT4[p2]);
    assume value_is(__ctobpl_const_4845, Mem_T.INT4[p1]);
    assume value_is(__ctobpl_const_4846, Mem_T.INT4[p2]);
    goto label_46;

  label_47_dummy:
    assume false;
    return;

  label_34_head_last:
    call result.intmax$3 := intmax(Mem_T.INT4[q1], Mem_T.INT4[q2]);
    assume value_is(__ctobpl_const_4825, Mem_T.INT4[q1]);
    assume value_is(__ctobpl_const_4826, Mem_T.INT4[q2]);
    assume value_is(__ctobpl_const_4827, Mem_T.INT4[q1]);
    assume value_is(__ctobpl_const_4828, Mem_T.INT4[q2]);
    goto label_37;
}



procedure {:extern} mkshex(addrem_ptr.__1: int, first_node_ptr.__1: int, last_node_ptr.__1: int, pstep.__1: int, qstep.__1: int, angle.__1: int, nodes_num_ptr.__1: int, elem_shape.__1: int, elem_pdim.__1: int, elem_qdim.__1: int) returns (result.mkshex$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} mkshex(addrem_ptr.__1: int, first_node_ptr.__1: int, last_node_ptr.__1: int, pstep.__1: int, qstep.__1: int, angle.__1: int, nodes_num_ptr.__1: int, elem_shape.__1: int, elem_pdim.__1: int, elem_qdim.__1: int) returns (result.mkshex$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} P: int;
  var {:extern} Q: int;
  var {:extern} addrem_ptr: int;
  var {:extern} angle: int;
  var {:extern} app_ptr: int;
  var {:extern} elem_pdim: int;
  var {:extern} elem_qdim: int;
  var {:extern} elem_shape: int;
  var {:extern} first_node_ptr: int;
  var {:extern} i: int;
  var {:extern} last_node_ptr: int;
  var {:extern} nodes_num_ptr: int;
  var {:extern} p: int;
  var {:extern} primo_ptr: int;
  var {:extern} $printf.arg.2$4$: int;
  var {:extern} pstep: int;
  var {:extern} q: int;
  var {:extern} qstep: int;
  var {:extern} result.dcos$5: int;
  var {:extern} result.dsin$6: int;
  var {:extern} result.malloc$2: int;
  var {:extern} result.printf$3: int;
  var {:extern} ultimo_ptr: int;
  var {:extern} x: int;
  var {:extern} y: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(addrem_ptr.__1, alloc);
    assume INT_LT(first_node_ptr.__1, alloc);
    assume INT_LT(last_node_ptr.__1, alloc);
    assume INT_LT(nodes_num_ptr.__1, alloc);
    call P := __HAVOC_det_malloc(32);
    call Q := __HAVOC_det_malloc(32);
    addrem_ptr := 0;
    angle := 0;
    app_ptr := 0;
    elem_pdim := 0;
    elem_qdim := 0;
    elem_shape := 0;
    first_node_ptr := 0;
    i := 0;
    last_node_ptr := 0;
    nodes_num_ptr := 0;
    p := 0;
    primo_ptr := 0;
    $printf.arg.2$4$ := 0;
    pstep := 0;
    q := 0;
    qstep := 0;
    result.dcos$5 := 0;
    result.dsin$6 := 0;
    result.malloc$2 := 0;
    result.mkshex$1 := 0;
    result.printf$3 := 0;
    ultimo_ptr := 0;
    x := 0;
    y := 0;
    addrem_ptr := addrem_ptr.__1;
    first_node_ptr := first_node_ptr.__1;
    last_node_ptr := last_node_ptr.__1;
    pstep := pstep.__1;
    qstep := qstep.__1;
    angle := angle.__1;
    nodes_num_ptr := nodes_num_ptr.__1;
    elem_shape := elem_shape.__1;
    elem_pdim := elem_pdim.__1;
    elem_qdim := elem_qdim.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5174} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5174} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_4913, app_ptr);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5174} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5174} true;
    primo_ptr := 0;
    assume value_is(__ctobpl_const_4914, primo_ptr);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5174} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5174} true;
    ultimo_ptr := 0;
    assume value_is(__ctobpl_const_4915, ultimo_ptr);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5175} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5175} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5175} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5175} true;
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5175} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5176} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5176} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5183} true;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    p := Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])];
    assume value_is(__ctobpl_const_4916, p);
    assume value_is(__ctobpl_const_4917, addrem_ptr);
    assume value_is(__ctobpl_const_4918, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_4919, Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5184} true;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    q := Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])];
    assume value_is(__ctobpl_const_4920, q);
    assume value_is(__ctobpl_const_4921, addrem_ptr);
    assume value_is(__ctobpl_const_4922, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_4923, Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5191} true;
    assert nodes_num_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[nodes_num_ptr := 0];
    assume value_is(__ctobpl_const_4924, nodes_num_ptr);
    assume value_is(__ctobpl_const_4925, Mem_T.INT4[nodes_num_ptr]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5194} true;
    assert P != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(P, 4, 1) := MINUS_BOTH_PTR_OR_BOTH_INT(p, 1, 1)];
    assume value_is(__ctobpl_const_4926, Mem_T.INT4[PLUS(P, 4, 1)]);
    assume value_is(__ctobpl_const_4927, p);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5195} true;
    assert Q != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(Q, 4, 1) := PLUS(q, 1, 1)];
    assume value_is(__ctobpl_const_4928, Mem_T.INT4[PLUS(Q, 4, 1)]);
    assume value_is(__ctobpl_const_4929, q);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5196} true;
    assert P != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(P, 4, 2) := p];
    assume value_is(__ctobpl_const_4930, Mem_T.INT4[PLUS(P, 4, 2)]);
    assume value_is(__ctobpl_const_4931, p);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5197} true;
    assert Q != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(Q, 4, 2) := PLUS(q, 1, 1)];
    assume value_is(__ctobpl_const_4932, Mem_T.INT4[PLUS(Q, 4, 2)]);
    assume value_is(__ctobpl_const_4933, q);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5198} true;
    assert P != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(P, 4, 3) := PLUS(p, 1, 1)];
    assume value_is(__ctobpl_const_4934, Mem_T.INT4[PLUS(P, 4, 3)]);
    assume value_is(__ctobpl_const_4935, p);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5199} true;
    assert Q != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(Q, 4, 3) := q];
    assume value_is(__ctobpl_const_4936, Mem_T.INT4[PLUS(Q, 4, 3)]);
    assume value_is(__ctobpl_const_4937, q);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5200} true;
    assert P != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(P, 4, 4) := PLUS(p, 1, 1)];
    assume value_is(__ctobpl_const_4938, Mem_T.INT4[PLUS(P, 4, 4)]);
    assume value_is(__ctobpl_const_4939, p);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5201} true;
    assert Q != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(Q, 4, 4) := MINUS_BOTH_PTR_OR_BOTH_INT(q, 1, 1)];
    assume value_is(__ctobpl_const_4940, Mem_T.INT4[PLUS(Q, 4, 4)]);
    assume value_is(__ctobpl_const_4941, q);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5202} true;
    assert P != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(P, 4, 5) := p];
    assume value_is(__ctobpl_const_4942, Mem_T.INT4[PLUS(P, 4, 5)]);
    assume value_is(__ctobpl_const_4943, p);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5203} true;
    assert Q != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(Q, 4, 5) := MINUS_BOTH_PTR_OR_BOTH_INT(q, 1, 1)];
    assume value_is(__ctobpl_const_4944, Mem_T.INT4[PLUS(Q, 4, 5)]);
    assume value_is(__ctobpl_const_4945, q);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5204} true;
    assert P != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(P, 4, 6) := MINUS_BOTH_PTR_OR_BOTH_INT(p, 1, 1)];
    assume value_is(__ctobpl_const_4946, Mem_T.INT4[PLUS(P, 4, 6)]);
    assume value_is(__ctobpl_const_4947, p);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5205} true;
    assert Q != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(Q, 4, 6) := q];
    assume value_is(__ctobpl_const_4948, Mem_T.INT4[PLUS(Q, 4, 6)]);
    assume value_is(__ctobpl_const_4949, q);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5206} true;
    assert P != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(P, 4, 7) := p];
    assume value_is(__ctobpl_const_4950, Mem_T.INT4[PLUS(P, 4, 7)]);
    assume value_is(__ctobpl_const_4951, p);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5207} true;
    assert Q != 0;
    Mem_T.INT4 := Mem_T.INT4[PLUS(Q, 4, 7) := q];
    assume value_is(__ctobpl_const_4952, Mem_T.INT4[PLUS(Q, 4, 7)]);
    assume value_is(__ctobpl_const_4953, q);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5210} true;
    i := 1;
    assume value_is(__ctobpl_const_4954, i);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5210} true;
    goto label_34_head;

  label_34_head:
    call app_ptr, i, primo_ptr, result.dcos$5, result.dsin$6, result.malloc$2, result.printf$3, ultimo_ptr, x, y := mkshex_loop_label_34_head(havoc_stringTemp, P, Q, angle, app_ptr, elem_pdim, elem_qdim, elem_shape, i, nodes_num_ptr, primo_ptr, pstep, qstep, result.dcos$5, result.dsin$6, result.malloc$2, result.printf$3, ultimo_ptr, x, y);
    goto label_34_head_last;

  label_34_false:
    assume !INT_LEQ(i, 7);
    assume value_is(__ctobpl_const_4955, i);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5262} true;
    assert first_node_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[first_node_ptr := primo_ptr];
    assume value_is(__ctobpl_const_4956, first_node_ptr);
    assume value_is(__ctobpl_const_4957, Mem_T.PGeomnode[first_node_ptr]);
    assume value_is(__ctobpl_const_4958, primo_ptr);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5263} true;
    assert last_node_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[last_node_ptr := ultimo_ptr];
    assume value_is(__ctobpl_const_4959, last_node_ptr);
    assume value_is(__ctobpl_const_4960, Mem_T.PGeomnode[last_node_ptr]);
    assume value_is(__ctobpl_const_4961, ultimo_ptr);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5264} true;
    result.mkshex$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5265} true;
    call __HAVOC_free(P);
    call __HAVOC_free(Q);
    return;

  label_34_true:
    assume INT_LEQ(i, 7);
    assume value_is(__ctobpl_const_4955, i);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5216} true;
    call result.malloc$2 := __HAVOC_det_malloc(88);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5216} true;
    app_ptr := result.malloc$2;
    assume value_is(__ctobpl_const_4962, app_ptr);
    assume value_is(__ctobpl_const_4963, result.malloc$2);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5218} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_4964, app_ptr);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5219} true;
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5219} true;
    call result.printf$3 := det_choice();
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5220} true;
    call interror(havoc_stringTemp);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5225} true;
    call result.dcos$5 := dcos(angle);
    assume value_is(__ctobpl_const_4965, angle);
    assume value_is(__ctobpl_const_4966, angle);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5225} true;
    assert P != 0;
    assert Q != 0;
    x := PLUS(MULT(Mem_T.INT4[PLUS(P, 4, i)], pstep), 1, MULT(MULT(Mem_T.INT4[PLUS(Q, 4, i)], qstep), result.dcos$5));
    assume value_is(__ctobpl_const_4967, x);
    assume value_is(__ctobpl_const_4968, i);
    assume value_is(__ctobpl_const_4969, Mem_T.INT4[PLUS(P, 4, i)]);
    assume value_is(__ctobpl_const_4970, pstep);
    assume value_is(__ctobpl_const_4971, i);
    assume value_is(__ctobpl_const_4972, Mem_T.INT4[PLUS(Q, 4, i)]);
    assume value_is(__ctobpl_const_4973, qstep);
    assume value_is(__ctobpl_const_4974, result.dcos$5);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5226} true;
    call result.dsin$6 := dsin(angle);
    assume value_is(__ctobpl_const_4975, angle);
    assume value_is(__ctobpl_const_4976, angle);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5226} true;
    assert Q != 0;
    y := MULT(MULT(Mem_T.INT4[PLUS(Q, 4, i)], qstep), result.dsin$6);
    assume value_is(__ctobpl_const_4977, y);
    assume value_is(__ctobpl_const_4978, i);
    assume value_is(__ctobpl_const_4979, Mem_T.INT4[PLUS(Q, 4, i)]);
    assume value_is(__ctobpl_const_4980, qstep);
    assume value_is(__ctobpl_const_4981, result.dsin$6);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5230} true;
    assert nodes_num_ptr != 0;
    assert nodes_num_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[nodes_num_ptr := PLUS(Mem_T.INT4[nodes_num_ptr], 1, 1)];
    assume value_is(__ctobpl_const_4982, nodes_num_ptr);
    assume value_is(__ctobpl_const_4983, Mem_T.INT4[nodes_num_ptr]);
    assume value_is(__ctobpl_const_4984, nodes_num_ptr);
    assume value_is(__ctobpl_const_4985, Mem_T.INT4[nodes_num_ptr]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5232} true;
    assert app_ptr != 0;
    assert P != 0;
    Mem_T.LOC_P_Geomnode := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr) := Mem_T.INT4[PLUS(P, 4, i)]];
    assume value_is(__ctobpl_const_4986, app_ptr);
    assume value_is(__ctobpl_const_4987, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4988, i);
    assume value_is(__ctobpl_const_4989, Mem_T.INT4[PLUS(P, 4, i)]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5233} true;
    assert app_ptr != 0;
    assert Q != 0;
    Mem_T.LOC_Q_Geomnode := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr) := Mem_T.INT4[PLUS(Q, 4, i)]];
    assume value_is(__ctobpl_const_4990, app_ptr);
    assume value_is(__ctobpl_const_4991, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4992, i);
    assume value_is(__ctobpl_const_4993, Mem_T.INT4[PLUS(Q, 4, i)]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5234} true;
    assert app_ptr != 0;
    Mem_T.XA_Geomnode := Mem_T.XA_Geomnode[XA_Geomnode(app_ptr) := x];
    assume value_is(__ctobpl_const_4994, app_ptr);
    assume value_is(__ctobpl_const_4995, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4996, x);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5235} true;
    assert app_ptr != 0;
    Mem_T.YA_Geomnode := Mem_T.YA_Geomnode[YA_Geomnode(app_ptr) := y];
    assume value_is(__ctobpl_const_4997, app_ptr);
    assume value_is(__ctobpl_const_4998, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_4999, y);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5236} true;
    assert app_ptr != 0;
    Mem_T.ZA_Geomnode := Mem_T.ZA_Geomnode[ZA_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_5000, app_ptr);
    assume value_is(__ctobpl_const_5001, Mem_T.ZA_Geomnode[ZA_Geomnode(app_ptr)]);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5237} true;
    assert app_ptr != 0;
    Mem_T.SUBGROUP_PTR_Geomnode := Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_5002, app_ptr);
    assume value_is(__ctobpl_const_5003, Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(app_ptr)]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5238} true;
    assert app_ptr != 0;
    Mem_T.SHAPE_Geomnode := Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(app_ptr) := elem_shape];
    assume value_is(__ctobpl_const_5004, app_ptr);
    assume value_is(__ctobpl_const_5005, Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5006, elem_shape);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5239} true;
    assert app_ptr != 0;
    Mem_T.PSIZE_Geomnode := Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(app_ptr) := elem_pdim];
    assume value_is(__ctobpl_const_5007, app_ptr);
    assume value_is(__ctobpl_const_5008, Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5009, elem_pdim);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5240} true;
    assert app_ptr != 0;
    Mem_T.QSIZE_Geomnode := Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(app_ptr) := elem_qdim];
    assume value_is(__ctobpl_const_5010, app_ptr);
    assume value_is(__ctobpl_const_5011, Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5012, elem_qdim);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5242} true;
    assert app_ptr != 0;
    Mem_T.THEA_Geomnode := Mem_T.THEA_Geomnode[THEA_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_5013, app_ptr);
    assume value_is(__ctobpl_const_5014, Mem_T.THEA_Geomnode[THEA_Geomnode(app_ptr)]);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5243} true;
    assert app_ptr != 0;
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_5015, app_ptr);
    assume value_is(__ctobpl_const_5016, Mem_T.PHEA_Geomnode[PHEA_Geomnode(app_ptr)]);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5244} true;
    assert app_ptr != 0;
    Mem_T.PSEA_Geomnode := Mem_T.PSEA_Geomnode[PSEA_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_5017, app_ptr);
    assume value_is(__ctobpl_const_5018, Mem_T.PSEA_Geomnode[PSEA_Geomnode(app_ptr)]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5249} true;
    goto label_63_true, label_63_false;

  label_63_false:
    assume primo_ptr == 0;
    assume value_is(__ctobpl_const_5019, primo_ptr);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5250} true;
    primo_ptr := app_ptr;
    assume value_is(__ctobpl_const_5020, primo_ptr);
    assume value_is(__ctobpl_const_5021, app_ptr);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5255} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_5025, ultimo_ptr);
    assume value_is(__ctobpl_const_5026, app_ptr);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5257} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_5027, ultimo_ptr);
    assume value_is(__ctobpl_const_5028, Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr)]);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5210} true;
    assume value_is(__ctobpl_const_5029, i);
    i := PLUS(i, 1, 1);
    goto label_68_dummy;

  label_63_true:
    assume primo_ptr != 0;
    assume value_is(__ctobpl_const_5019, primo_ptr);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5252} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr) := app_ptr];
    assume value_is(__ctobpl_const_5022, ultimo_ptr);
    assume value_is(__ctobpl_const_5023, Mem_T.NEXT_Geomnode[NEXT_Geomnode(ultimo_ptr)]);
    assume value_is(__ctobpl_const_5024, app_ptr);
    goto label_66;

  label_40_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_4964, app_ptr);
    goto label_42;

  label_68_dummy:
    assume false;
    return;

  label_34_head_last:
    goto label_34_true, label_34_false;
}



procedure {:extern} mksnode(addrem_ptr.__1: int, first_node_ptr.__1: int, last_node_ptr.__1: int, pstep.__1: int, qstep.__1: int, angle.__1: int, nodes_num_ptr.__1: int, elem_shape.__1: int, elem_pdim.__1: int, elem_qdim.__1: int) returns (result.mksnode$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} mksnode(addrem_ptr.__1: int, first_node_ptr.__1: int, last_node_ptr.__1: int, pstep.__1: int, qstep.__1: int, angle.__1: int, nodes_num_ptr.__1: int, elem_shape.__1: int, elem_pdim.__1: int, elem_qdim.__1: int) returns (result.mksnode$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} addrem_ptr: int;
  var {:extern} angle: int;
  var {:extern} app_ptr: int;
  var {:extern} elem_pdim: int;
  var {:extern} elem_qdim: int;
  var {:extern} elem_shape: int;
  var {:extern} first_node_ptr: int;
  var {:extern} last_node_ptr: int;
  var {:extern} nodes_num_ptr: int;
  var {:extern} p: int;
  var {:extern} pp: int;
  var {:extern} $printf.arg.2$4$: int;
  var {:extern} pstep: int;
  var {:extern} q: int;
  var {:extern} qq: int;
  var {:extern} qstep: int;
  var {:extern} result.dcos$5: int;
  var {:extern} result.dsin$6: int;
  var {:extern} result.fixnodor$7: int;
  var {:extern} result.malloc$2: int;
  var {:extern} result.printf$3: int;
  var {:extern} x: int;
  var {:extern} y: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(addrem_ptr.__1, alloc);
    assume INT_LT(first_node_ptr.__1, alloc);
    assume INT_LT(last_node_ptr.__1, alloc);
    assume INT_LT(nodes_num_ptr.__1, alloc);
    addrem_ptr := 0;
    angle := 0;
    app_ptr := 0;
    elem_pdim := 0;
    elem_qdim := 0;
    elem_shape := 0;
    first_node_ptr := 0;
    last_node_ptr := 0;
    nodes_num_ptr := 0;
    call p := __HAVOC_det_malloc(4);
    pp := 0;
    $printf.arg.2$4$ := 0;
    pstep := 0;
    call q := __HAVOC_det_malloc(4);
    qq := 0;
    qstep := 0;
    result.dcos$5 := 0;
    result.dsin$6 := 0;
    result.fixnodor$7 := 0;
    result.malloc$2 := 0;
    result.mksnode$1 := 0;
    result.printf$3 := 0;
    x := 0;
    y := 0;
    addrem_ptr := addrem_ptr.__1;
    first_node_ptr := first_node_ptr.__1;
    last_node_ptr := last_node_ptr.__1;
    pstep := pstep.__1;
    qstep := qstep.__1;
    angle := angle.__1;
    nodes_num_ptr := nodes_num_ptr.__1;
    elem_shape := elem_shape.__1;
    elem_pdim := elem_pdim.__1;
    elem_qdim := elem_qdim.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5285} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5285} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_5030, app_ptr);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5286} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5286} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5287} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5287} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5289} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5289} true;
    pp := p;
    assume value_is(__ctobpl_const_5031, pp);
    assume value_is(__ctobpl_const_5032, Mem_T.INT4[p]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5289} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5289} true;
    qq := q;
    assume value_is(__ctobpl_const_5033, qq);
    assume value_is(__ctobpl_const_5034, Mem_T.INT4[q]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5297} true;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    Mem_T.INT4 := Mem_T.INT4[p := Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]];
    assume value_is(__ctobpl_const_5035, Mem_T.INT4[p]);
    assume value_is(__ctobpl_const_5036, addrem_ptr);
    assume value_is(__ctobpl_const_5037, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_5038, Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5298} true;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    Mem_T.INT4 := Mem_T.INT4[q := Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]];
    assume value_is(__ctobpl_const_5039, Mem_T.INT4[q]);
    assume value_is(__ctobpl_const_5040, addrem_ptr);
    assume value_is(__ctobpl_const_5041, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_5042, Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5304} true;
    assert nodes_num_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[nodes_num_ptr := 0];
    assume value_is(__ctobpl_const_5043, nodes_num_ptr);
    assume value_is(__ctobpl_const_5044, Mem_T.INT4[nodes_num_ptr]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5306} true;
    call result.malloc$2 := __HAVOC_det_malloc(88);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5306} true;
    app_ptr := result.malloc$2;
    assume value_is(__ctobpl_const_5045, app_ptr);
    assume value_is(__ctobpl_const_5046, result.malloc$2);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5308} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_5047, app_ptr);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5309} true;
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5309} true;
    call result.printf$3 := det_choice();
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5310} true;
    call interror(havoc_stringTemp);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5315} true;
    call result.dcos$5 := dcos(angle);
    assume value_is(__ctobpl_const_5048, angle);
    assume value_is(__ctobpl_const_5049, angle);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5315} true;
    x := PLUS(MULT(Mem_T.INT4[p], pstep), 1, MULT(MULT(Mem_T.INT4[q], qstep), result.dcos$5));
    assume value_is(__ctobpl_const_5050, x);
    assume value_is(__ctobpl_const_5051, Mem_T.INT4[p]);
    assume value_is(__ctobpl_const_5052, pstep);
    assume value_is(__ctobpl_const_5053, Mem_T.INT4[q]);
    assume value_is(__ctobpl_const_5054, qstep);
    assume value_is(__ctobpl_const_5055, result.dcos$5);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5316} true;
    call result.dsin$6 := dsin(angle);
    assume value_is(__ctobpl_const_5056, angle);
    assume value_is(__ctobpl_const_5057, angle);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5316} true;
    y := MULT(MULT(Mem_T.INT4[q], qstep), result.dsin$6);
    assume value_is(__ctobpl_const_5058, y);
    assume value_is(__ctobpl_const_5059, Mem_T.INT4[q]);
    assume value_is(__ctobpl_const_5060, qstep);
    assume value_is(__ctobpl_const_5061, result.dsin$6);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5319} true;
    assert nodes_num_ptr != 0;
    assert nodes_num_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[nodes_num_ptr := PLUS(Mem_T.INT4[nodes_num_ptr], 1, 1)];
    assume value_is(__ctobpl_const_5062, nodes_num_ptr);
    assume value_is(__ctobpl_const_5063, Mem_T.INT4[nodes_num_ptr]);
    assume value_is(__ctobpl_const_5064, nodes_num_ptr);
    assume value_is(__ctobpl_const_5065, Mem_T.INT4[nodes_num_ptr]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5321} true;
    assert app_ptr != 0;
    Mem_T.LOC_P_Geomnode := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr) := Mem_T.INT4[p]];
    assume value_is(__ctobpl_const_5066, app_ptr);
    assume value_is(__ctobpl_const_5067, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5068, Mem_T.INT4[p]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5322} true;
    assert app_ptr != 0;
    Mem_T.LOC_Q_Geomnode := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr) := Mem_T.INT4[q]];
    assume value_is(__ctobpl_const_5069, app_ptr);
    assume value_is(__ctobpl_const_5070, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5071, Mem_T.INT4[q]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5323} true;
    assert app_ptr != 0;
    Mem_T.XA_Geomnode := Mem_T.XA_Geomnode[XA_Geomnode(app_ptr) := x];
    assume value_is(__ctobpl_const_5072, app_ptr);
    assume value_is(__ctobpl_const_5073, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5074, x);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5324} true;
    assert app_ptr != 0;
    Mem_T.YA_Geomnode := Mem_T.YA_Geomnode[YA_Geomnode(app_ptr) := y];
    assume value_is(__ctobpl_const_5075, app_ptr);
    assume value_is(__ctobpl_const_5076, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5077, y);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5325} true;
    assert app_ptr != 0;
    Mem_T.ZA_Geomnode := Mem_T.ZA_Geomnode[ZA_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_5078, app_ptr);
    assume value_is(__ctobpl_const_5079, Mem_T.ZA_Geomnode[ZA_Geomnode(app_ptr)]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5326} true;
    assert app_ptr != 0;
    Mem_T.SUBGROUP_PTR_Geomnode := Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_5080, app_ptr);
    assume value_is(__ctobpl_const_5081, Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(app_ptr)]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5327} true;
    assert app_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr) := 0];
    assume value_is(__ctobpl_const_5082, app_ptr);
    assume value_is(__ctobpl_const_5083, Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr)]);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5328} true;
    assert app_ptr != 0;
    Mem_T.SHAPE_Geomnode := Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(app_ptr) := elem_shape];
    assume value_is(__ctobpl_const_5084, app_ptr);
    assume value_is(__ctobpl_const_5085, Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5086, elem_shape);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5329} true;
    assert app_ptr != 0;
    Mem_T.PSIZE_Geomnode := Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(app_ptr) := elem_pdim];
    assume value_is(__ctobpl_const_5087, app_ptr);
    assume value_is(__ctobpl_const_5088, Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5089, elem_pdim);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5330} true;
    assert app_ptr != 0;
    Mem_T.QSIZE_Geomnode := Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(app_ptr) := elem_qdim];
    assume value_is(__ctobpl_const_5090, app_ptr);
    assume value_is(__ctobpl_const_5091, Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5092, elem_qdim);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5333} true;
    assert addrem_ptr != 0;
    assert addrem_ptr != 0;
    call result.fixnodor$7 := fixnodor(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_5093, addrem_ptr);
    assume value_is(__ctobpl_const_5094, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_5095, addrem_ptr);
    assume value_is(__ctobpl_const_5096, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5335} true;
    assert app_ptr != 0;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    Mem_T.THEA_Geomnode := Mem_T.THEA_Geomnode[THEA_Geomnode(app_ptr) := Mem_T.THEA_Node[THEA_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]];
    assume value_is(__ctobpl_const_5097, app_ptr);
    assume value_is(__ctobpl_const_5098, Mem_T.THEA_Geomnode[THEA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5099, addrem_ptr);
    assume value_is(__ctobpl_const_5100, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_5101, Mem_T.THEA_Node[THEA_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5336} true;
    assert app_ptr != 0;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(app_ptr) := Mem_T.PHEA_Node[PHEA_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]];
    assume value_is(__ctobpl_const_5102, app_ptr);
    assume value_is(__ctobpl_const_5103, Mem_T.PHEA_Geomnode[PHEA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5104, addrem_ptr);
    assume value_is(__ctobpl_const_5105, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_5106, Mem_T.PHEA_Node[PHEA_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5337} true;
    assert app_ptr != 0;
    assert addrem_ptr != 0;
    assert Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)] != 0;
    Mem_T.PSEA_Geomnode := Mem_T.PSEA_Geomnode[PSEA_Geomnode(app_ptr) := Mem_T.PSEA_Node[PSEA_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]];
    assume value_is(__ctobpl_const_5107, app_ptr);
    assume value_is(__ctobpl_const_5108, Mem_T.PSEA_Geomnode[PSEA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_5109, addrem_ptr);
    assume value_is(__ctobpl_const_5110, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)]);
    assume value_is(__ctobpl_const_5111, Mem_T.PSEA_Node[PSEA_Node(Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(addrem_ptr)])]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5340} true;
    assert first_node_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[first_node_ptr := app_ptr];
    assume value_is(__ctobpl_const_5112, first_node_ptr);
    assume value_is(__ctobpl_const_5113, Mem_T.PGeomnode[first_node_ptr]);
    assume value_is(__ctobpl_const_5114, app_ptr);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5341} true;
    assert last_node_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[last_node_ptr := app_ptr];
    assume value_is(__ctobpl_const_5115, last_node_ptr);
    assume value_is(__ctobpl_const_5116, Mem_T.PGeomnode[last_node_ptr]);
    assume value_is(__ctobpl_const_5117, app_ptr);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5342} true;
    result.mksnode$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5343} true;
    call __HAVOC_free(p);
    call __HAVOC_free(q);
    return;

  label_20_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_5047, app_ptr);
    goto label_22;
}



procedure {:extern} mmconv(x_ptr.__1: int, unit.__1: int) returns (result.mmconv$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} mmconv(x_ptr.__1: int, unit.__1: int) returns (result.mmconv$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} unit: int;
  var {:extern} x_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(x_ptr.__1, alloc);
    result.mmconv$1 := 0;
    unit := 0;
    x_ptr := 0;
    x_ptr := x_ptr.__1;
    unit := unit.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5354} true;
    goto label_3_case_0, label_3_case_1, label_3_case_2, label_3_case_3, label_3_case_4;

  label_3_case_4:
    assume INT_EQ(unit, 3);
    assume value_is(__ctobpl_const_5118, unit);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5371} true;
    assert x_ptr != 0;
    tempBoogie0 := INT_MULT(Mem_T.FLOAT[x_ptr], BOOGIE_FLOAT_CONST_1000);
    Mem_T.FLOAT := Mem_T.FLOAT[x_ptr := tempBoogie0];
    assume value_is(__ctobpl_const_5123, x_ptr);
    assume value_is(__ctobpl_const_5124, Mem_T.FLOAT[x_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5372} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5380} true;
    result.mmconv$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5381} true;
    return;

  label_3_case_3:
    assume INT_EQ(unit, 2);
    assume value_is(__ctobpl_const_5118, unit);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5367} true;
    assert x_ptr != 0;
    tempBoogie0 := INT_MULT(Mem_T.FLOAT[x_ptr], 100);
    Mem_T.FLOAT := Mem_T.FLOAT[x_ptr := tempBoogie0];
    assume value_is(__ctobpl_const_5121, x_ptr);
    assume value_is(__ctobpl_const_5122, Mem_T.FLOAT[x_ptr]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5368} true;
    goto label_12;

  label_3_case_2:
    assume INT_EQ(unit, 1);
    assume value_is(__ctobpl_const_5118, unit);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5363} true;
    assert x_ptr != 0;
    tempBoogie0 := INT_MULT(Mem_T.FLOAT[x_ptr], 10);
    Mem_T.FLOAT := Mem_T.FLOAT[x_ptr := tempBoogie0];
    assume value_is(__ctobpl_const_5119, x_ptr);
    assume value_is(__ctobpl_const_5120, Mem_T.FLOAT[x_ptr]);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5364} true;
    goto label_12;

  label_3_case_1:
    assume INT_EQ(unit, 0);
    assume value_is(__ctobpl_const_5118, unit);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5360} true;
    goto label_12;

  label_3_case_0:
    assume INT_NEQ(unit, 0);
    assume INT_NEQ(unit, 1);
    assume INT_NEQ(unit, 2);
    assume INT_NEQ(unit, 3);
    assume value_is(__ctobpl_const_5118, unit);
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5376} true;
    call interror(havoc_stringTemp);
    goto label_12;
}



procedure {:extern} moseinit();
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} moseinit()
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} i: int;
  var {:extern} result.strcpy$1: int;
  var {:extern} result.strcpy$3: int;
  var {:extern} result.strcpy$5: int;
  var {:extern} result.strcpy$7: int;
  var {:extern} result.strcpy$9: int;
  var {:extern} result.strcpy$11: int;
  var {:extern} result.strcpy$13: int;
  var {:extern} result.strcpy$15: int;
  var {:extern} result.strcpy$17: int;
  var {:extern} result.strcpy$19: int;
  var {:extern} result.strcpy$21: int;
  var {:extern} result.strcpy$23: int;
  var {:extern} result.strcpy$25: int;
  var {:extern} result.strcpy$27: int;
  var {:extern} result.strcpy$29: int;
  var {:extern} result.strcpy$31: int;
  var {:extern} result.strcpy$33: int;
  var {:extern} result.strcpy$35: int;
  var {:extern} result.strcpy$37: int;
  var {:extern} result.strcpy$39: int;
  var {:extern} $strcpy.arg.1$10$: int;
  var {:extern} $strcpy.arg.1$12$: int;
  var {:extern} $strcpy.arg.1$14$: int;
  var {:extern} $strcpy.arg.1$16$: int;
  var {:extern} $strcpy.arg.1$18$: int;
  var {:extern} $strcpy.arg.1$2$: int;
  var {:extern} $strcpy.arg.1$20$: int;
  var {:extern} $strcpy.arg.1$22$: int;
  var {:extern} $strcpy.arg.1$24$: int;
  var {:extern} $strcpy.arg.1$26$: int;
  var {:extern} $strcpy.arg.1$28$: int;
  var {:extern} $strcpy.arg.1$30$: int;
  var {:extern} $strcpy.arg.1$32$: int;
  var {:extern} $strcpy.arg.1$34$: int;
  var {:extern} $strcpy.arg.1$36$: int;
  var {:extern} $strcpy.arg.1$38$: int;
  var {:extern} $strcpy.arg.1$4$: int;
  var {:extern} $strcpy.arg.1$40$: int;
  var {:extern} $strcpy.arg.1$6$: int;
  var {:extern} $strcpy.arg.1$8$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    i := 0;
    result.strcpy$1 := 0;
    result.strcpy$3 := 0;
    result.strcpy$5 := 0;
    result.strcpy$7 := 0;
    result.strcpy$9 := 0;
    result.strcpy$11 := 0;
    result.strcpy$13 := 0;
    result.strcpy$15 := 0;
    result.strcpy$17 := 0;
    result.strcpy$19 := 0;
    result.strcpy$21 := 0;
    result.strcpy$23 := 0;
    result.strcpy$25 := 0;
    result.strcpy$27 := 0;
    result.strcpy$29 := 0;
    result.strcpy$31 := 0;
    result.strcpy$33 := 0;
    result.strcpy$35 := 0;
    result.strcpy$37 := 0;
    result.strcpy$39 := 0;
    $strcpy.arg.1$10$ := 0;
    $strcpy.arg.1$12$ := 0;
    $strcpy.arg.1$14$ := 0;
    $strcpy.arg.1$16$ := 0;
    $strcpy.arg.1$18$ := 0;
    $strcpy.arg.1$2$ := 0;
    $strcpy.arg.1$20$ := 0;
    $strcpy.arg.1$22$ := 0;
    $strcpy.arg.1$24$ := 0;
    $strcpy.arg.1$26$ := 0;
    $strcpy.arg.1$28$ := 0;
    $strcpy.arg.1$30$ := 0;
    $strcpy.arg.1$32$ := 0;
    $strcpy.arg.1$34$ := 0;
    $strcpy.arg.1$36$ := 0;
    $strcpy.arg.1$38$ := 0;
    $strcpy.arg.1$4$ := 0;
    $strcpy.arg.1$40$ := 0;
    $strcpy.arg.1$6$ := 0;
    $strcpy.arg.1$8$ := 0;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5477} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5483} true;
    i := 0;
    assume value_is(__ctobpl_const_5125, i);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5483} true;
    goto label_5_head;

  label_5_head:
    call i := moseinit_loop_label_5_head(i);
    goto label_5_head_last;

  label_5_false:
    assume !INT_LEQ(i, 20);
    assume value_is(__ctobpl_const_5126, i);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5486} true;
    $strcpy.arg.1$2$ := PLUS(MOSErrors, 101, 0);
    assume value_is(__ctobpl_const_5127, $strcpy.arg.1$2$);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5486} true;
    call result.strcpy$1 := strcpy($strcpy.arg.1$2$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5128, $strcpy.arg.1$2$);
    assume value_is(__ctobpl_const_5129, $strcpy.arg.1$2$);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5487} true;
    $strcpy.arg.1$4$ := PLUS(MOSErrors, 101, 1);
    assume value_is(__ctobpl_const_5130, $strcpy.arg.1$4$);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5487} true;
    call result.strcpy$3 := strcpy($strcpy.arg.1$4$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5131, $strcpy.arg.1$4$);
    assume value_is(__ctobpl_const_5132, $strcpy.arg.1$4$);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5488} true;
    $strcpy.arg.1$6$ := PLUS(MOSErrors, 101, 2);
    assume value_is(__ctobpl_const_5133, $strcpy.arg.1$6$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5488} true;
    call result.strcpy$5 := strcpy($strcpy.arg.1$6$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5134, $strcpy.arg.1$6$);
    assume value_is(__ctobpl_const_5135, $strcpy.arg.1$6$);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5489} true;
    $strcpy.arg.1$8$ := PLUS(MOSErrors, 101, 3);
    assume value_is(__ctobpl_const_5136, $strcpy.arg.1$8$);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5489} true;
    call result.strcpy$7 := strcpy($strcpy.arg.1$8$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5137, $strcpy.arg.1$8$);
    assume value_is(__ctobpl_const_5138, $strcpy.arg.1$8$);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5490} true;
    $strcpy.arg.1$10$ := PLUS(MOSErrors, 101, 4);
    assume value_is(__ctobpl_const_5139, $strcpy.arg.1$10$);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5490} true;
    call result.strcpy$9 := strcpy($strcpy.arg.1$10$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5140, $strcpy.arg.1$10$);
    assume value_is(__ctobpl_const_5141, $strcpy.arg.1$10$);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5491} true;
    $strcpy.arg.1$12$ := PLUS(MOSErrors, 101, 5);
    assume value_is(__ctobpl_const_5142, $strcpy.arg.1$12$);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5491} true;
    call result.strcpy$11 := strcpy($strcpy.arg.1$12$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5143, $strcpy.arg.1$12$);
    assume value_is(__ctobpl_const_5144, $strcpy.arg.1$12$);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5492} true;
    $strcpy.arg.1$14$ := PLUS(MOSErrors, 101, 6);
    assume value_is(__ctobpl_const_5145, $strcpy.arg.1$14$);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5492} true;
    call result.strcpy$13 := strcpy($strcpy.arg.1$14$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5146, $strcpy.arg.1$14$);
    assume value_is(__ctobpl_const_5147, $strcpy.arg.1$14$);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5493} true;
    $strcpy.arg.1$16$ := PLUS(MOSErrors, 101, 7);
    assume value_is(__ctobpl_const_5148, $strcpy.arg.1$16$);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5493} true;
    call result.strcpy$15 := strcpy($strcpy.arg.1$16$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5149, $strcpy.arg.1$16$);
    assume value_is(__ctobpl_const_5150, $strcpy.arg.1$16$);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5494} true;
    $strcpy.arg.1$18$ := PLUS(MOSErrors, 101, 8);
    assume value_is(__ctobpl_const_5151, $strcpy.arg.1$18$);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5494} true;
    call result.strcpy$17 := strcpy($strcpy.arg.1$18$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5152, $strcpy.arg.1$18$);
    assume value_is(__ctobpl_const_5153, $strcpy.arg.1$18$);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5495} true;
    $strcpy.arg.1$20$ := PLUS(MOSErrors, 101, 9);
    assume value_is(__ctobpl_const_5154, $strcpy.arg.1$20$);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5495} true;
    call result.strcpy$19 := strcpy($strcpy.arg.1$20$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5155, $strcpy.arg.1$20$);
    assume value_is(__ctobpl_const_5156, $strcpy.arg.1$20$);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5496} true;
    $strcpy.arg.1$22$ := PLUS(MOSErrors, 101, 10);
    assume value_is(__ctobpl_const_5157, $strcpy.arg.1$22$);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5496} true;
    call result.strcpy$21 := strcpy($strcpy.arg.1$22$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5158, $strcpy.arg.1$22$);
    assume value_is(__ctobpl_const_5159, $strcpy.arg.1$22$);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5497} true;
    $strcpy.arg.1$24$ := PLUS(MOSErrors, 101, 11);
    assume value_is(__ctobpl_const_5160, $strcpy.arg.1$24$);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5497} true;
    call result.strcpy$23 := strcpy($strcpy.arg.1$24$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5161, $strcpy.arg.1$24$);
    assume value_is(__ctobpl_const_5162, $strcpy.arg.1$24$);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5498} true;
    $strcpy.arg.1$26$ := PLUS(MOSErrors, 101, 12);
    assume value_is(__ctobpl_const_5163, $strcpy.arg.1$26$);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5498} true;
    call result.strcpy$25 := strcpy($strcpy.arg.1$26$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5164, $strcpy.arg.1$26$);
    assume value_is(__ctobpl_const_5165, $strcpy.arg.1$26$);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5499} true;
    $strcpy.arg.1$28$ := PLUS(MOSErrors, 101, 13);
    assume value_is(__ctobpl_const_5166, $strcpy.arg.1$28$);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5499} true;
    call result.strcpy$27 := strcpy($strcpy.arg.1$28$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5167, $strcpy.arg.1$28$);
    assume value_is(__ctobpl_const_5168, $strcpy.arg.1$28$);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5500} true;
    $strcpy.arg.1$30$ := PLUS(MOSErrors, 101, 14);
    assume value_is(__ctobpl_const_5169, $strcpy.arg.1$30$);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5500} true;
    call result.strcpy$29 := strcpy($strcpy.arg.1$30$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5170, $strcpy.arg.1$30$);
    assume value_is(__ctobpl_const_5171, $strcpy.arg.1$30$);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5501} true;
    $strcpy.arg.1$32$ := PLUS(MOSErrors, 101, 15);
    assume value_is(__ctobpl_const_5172, $strcpy.arg.1$32$);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5501} true;
    call result.strcpy$31 := strcpy($strcpy.arg.1$32$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5173, $strcpy.arg.1$32$);
    assume value_is(__ctobpl_const_5174, $strcpy.arg.1$32$);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5502} true;
    $strcpy.arg.1$34$ := PLUS(MOSErrors, 101, 16);
    assume value_is(__ctobpl_const_5175, $strcpy.arg.1$34$);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5502} true;
    call result.strcpy$33 := strcpy($strcpy.arg.1$34$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5176, $strcpy.arg.1$34$);
    assume value_is(__ctobpl_const_5177, $strcpy.arg.1$34$);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5503} true;
    $strcpy.arg.1$36$ := PLUS(MOSErrors, 101, 17);
    assume value_is(__ctobpl_const_5178, $strcpy.arg.1$36$);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5503} true;
    call result.strcpy$35 := strcpy($strcpy.arg.1$36$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5179, $strcpy.arg.1$36$);
    assume value_is(__ctobpl_const_5180, $strcpy.arg.1$36$);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5504} true;
    $strcpy.arg.1$38$ := PLUS(MOSErrors, 101, 18);
    assume value_is(__ctobpl_const_5181, $strcpy.arg.1$38$);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5504} true;
    call result.strcpy$37 := strcpy($strcpy.arg.1$38$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5182, $strcpy.arg.1$38$);
    assume value_is(__ctobpl_const_5183, $strcpy.arg.1$38$);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5505} true;
    $strcpy.arg.1$40$ := PLUS(MOSErrors, 101, 19);
    assume value_is(__ctobpl_const_5184, $strcpy.arg.1$40$);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5505} true;
    call result.strcpy$39 := strcpy($strcpy.arg.1$40$, havoc_stringTemp);
    assume value_is(__ctobpl_const_5185, $strcpy.arg.1$40$);
    assume value_is(__ctobpl_const_5186, $strcpy.arg.1$40$);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5509} true;
    return;

  label_5_true:
    assume INT_LEQ(i, 20);
    assume value_is(__ctobpl_const_5126, i);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5484} true;
    assert PLUS(MOSErrors, 101, i) != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(PLUS(MOSErrors, 101, i), 1, 0) := 0];
    assume value_is(__ctobpl_const_5187, i);
    assume value_is(__ctobpl_const_5188, Mem_T.CHAR[PLUS(PLUS(MOSErrors, 101, i), 1, 0)]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5483} true;
    assume value_is(__ctobpl_const_5189, i);
    i := PLUS(i, 1, 1);
    goto label_8_dummy;

  label_8_dummy:
    assume false;
    return;

  label_5_head_last:
    goto label_5_true, label_5_false;
}



procedure {:extern} nodecoor(p1.__1: int, pp2.__1: int, pcoord_ptr.__1: int, qcoord_ptr.__1: int) returns (result.nodecoor$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} nodecoor(p1.__1: int, pp2.__1: int, pcoord_ptr.__1: int, qcoord_ptr.__1: int) returns (result.nodecoor$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$6$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pcoord_ptr: int;
  var {:extern} pp2: int;
  var {:extern} qcoord_ptr: int;
  var {:extern} result.GetInt$4: int;
  var {:extern} result.GetInt$7: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$5: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(pcoord_ptr.__1, alloc);
    assume INT_LT(qcoord_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$6$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pcoord_ptr := 0;
    pp2 := 0;
    qcoord_ptr := 0;
    result.GetInt$4 := 0;
    result.GetInt$7 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$5 := 0;
    result.nodecoor$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    pcoord_ptr := pcoord_ptr.__1;
    qcoord_ptr := qcoord_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5521} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5521} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5521} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5190, curr_ptr);
    assume value_is(__ctobpl_const_5191, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5522} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5529} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5192, curr_ptr);
    assume value_is(__ctobpl_const_5193, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5194, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5532} true;
    error := 0;
    assume value_is(__ctobpl_const_5195, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5535} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 74);
    assume value_is(__ctobpl_const_5196, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5535} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5197, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5198, curr_ptr);
    assume value_is(__ctobpl_const_5199, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5200, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5535} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5201, error);
    assume value_is(__ctobpl_const_5202, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5536} true;
    error := 0;
    assume value_is(__ctobpl_const_5203, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5539} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.GetInt$4 := GetInt(Mem_T.Pcharac[curr_ptr], curr_ptr, pcoord_ptr);
    assume value_is(__ctobpl_const_5204, curr_ptr);
    assume value_is(__ctobpl_const_5205, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5206, curr_ptr);
    assume value_is(__ctobpl_const_5207, pcoord_ptr);
    assume value_is(__ctobpl_const_5208, curr_ptr);
    assume value_is(__ctobpl_const_5209, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5210, curr_ptr);
    assume value_is(__ctobpl_const_5211, pcoord_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5539} true;
    error := result.GetInt$4;
    assume value_is(__ctobpl_const_5212, error);
    assume value_is(__ctobpl_const_5213, result.GetInt$4);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5540} true;
    goto label_19_true, label_19_false;

  label_19_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5214, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5546} true;
    $GetKeyword.arg.1$6$ := PLUS(Keywords, 21, 75);
    assume value_is(__ctobpl_const_5215, $GetKeyword.arg.1$6$);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5546} true;
    call result.GetKeyword$5 := GetKeyword($GetKeyword.arg.1$6$, curr_ptr);
    assume value_is(__ctobpl_const_5216, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_5217, curr_ptr);
    assume value_is(__ctobpl_const_5218, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_5219, curr_ptr);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5546} true;
    error := result.GetKeyword$5;
    assume value_is(__ctobpl_const_5220, error);
    assume value_is(__ctobpl_const_5221, result.GetKeyword$5);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5547} true;
    error := 0;
    assume value_is(__ctobpl_const_5222, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5550} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.GetInt$7 := GetInt(Mem_T.Pcharac[curr_ptr], curr_ptr, qcoord_ptr);
    assume value_is(__ctobpl_const_5223, curr_ptr);
    assume value_is(__ctobpl_const_5224, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5225, curr_ptr);
    assume value_is(__ctobpl_const_5226, qcoord_ptr);
    assume value_is(__ctobpl_const_5227, curr_ptr);
    assume value_is(__ctobpl_const_5228, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5229, curr_ptr);
    assume value_is(__ctobpl_const_5230, qcoord_ptr);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5550} true;
    error := result.GetInt$7;
    assume value_is(__ctobpl_const_5231, error);
    assume value_is(__ctobpl_const_5232, result.GetInt$7);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5551} true;
    goto label_31_true, label_31_false;

  label_31_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5233, error);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5557} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5234, pp2);
    assume value_is(__ctobpl_const_5235, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5236, curr_ptr);
    assume value_is(__ctobpl_const_5237, Mem_T.Pcharac[curr_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5558} true;
    result.nodecoor$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5559} true;
    call __HAVOC_free(curr);
    return;

  label_31_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5233, error);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5553} true;
    result.nodecoor$1 := 17;
    goto label_1;

  label_19_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5214, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5542} true;
    result.nodecoor$1 := 17;
    goto label_1;
}



procedure {:extern} nodedef(p1.__1: int, pp2.__1: int, node_ptr.__1: int) returns (result.nodedef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} nodedef(p1.__1: int, pp2.__1: int, node_ptr.__1: int) returns (result.nodedef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} angle_unit: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} node_ptr: int;
  var {:extern} omit_orient: int;
  var {:extern} p1: int;
  var {:extern} pcoord: int;
  var {:extern} pcoord_ptr: int;
  var {:extern} phea: int;
  var {:extern} phea_ptr: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$7$: int;
  var {:extern} psea: int;
  var {:extern} psea_ptr: int;
  var {:extern} qcoord: int;
  var {:extern} qcoord_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.malloc$8: int;
  var {:extern} result.nodecoor$4: int;
  var {:extern} result.nodorien$5: int;
  var {:extern} result.printf$6: int;
  var {:extern} thea: int;
  var {:extern} thea_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(node_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call angle_unit := __HAVOC_det_malloc(4);
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    node_ptr := 0;
    omit_orient := 0;
    p1 := 0;
    call pcoord := __HAVOC_det_malloc(4);
    pcoord_ptr := 0;
    call phea := __HAVOC_det_malloc(8);
    phea_ptr := 0;
    pp2 := 0;
    $printf.arg.2$7$ := 0;
    call psea := __HAVOC_det_malloc(8);
    psea_ptr := 0;
    call qcoord := __HAVOC_det_malloc(4);
    qcoord_ptr := 0;
    result.GetKeyword$2 := 0;
    result.malloc$8 := 0;
    result.nodecoor$4 := 0;
    result.nodedef$1 := 0;
    result.nodorien$5 := 0;
    result.printf$6 := 0;
    call thea := __HAVOC_det_malloc(8);
    thea_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    node_ptr := node_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5568} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5568} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5568} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5238, curr_ptr);
    assume value_is(__ctobpl_const_5239, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5569} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5574} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5574} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5574} true;
    pcoord_ptr := pcoord;
    assume value_is(__ctobpl_const_5240, pcoord_ptr);
    assume value_is(__ctobpl_const_5241, Mem_T.INT4[pcoord]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5575} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5575} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5575} true;
    qcoord_ptr := qcoord;
    assume value_is(__ctobpl_const_5242, qcoord_ptr);
    assume value_is(__ctobpl_const_5243, Mem_T.INT4[qcoord]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5576} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5576} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5576} true;
    thea_ptr := thea;
    assume value_is(__ctobpl_const_5244, thea_ptr);
    assume value_is(__ctobpl_const_5245, Mem_T.FLOAT[thea]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5577} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5577} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5577} true;
    phea_ptr := phea;
    assume value_is(__ctobpl_const_5246, phea_ptr);
    assume value_is(__ctobpl_const_5247, Mem_T.FLOAT[phea]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5578} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5578} true;
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5578} true;
    psea_ptr := psea;
    assume value_is(__ctobpl_const_5248, psea_ptr);
    assume value_is(__ctobpl_const_5249, Mem_T.FLOAT[psea]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5579} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5579} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5579} true;
    angle_unit_ptr := angle_unit;
    assume value_is(__ctobpl_const_5250, angle_unit_ptr);
    assume value_is(__ctobpl_const_5251, Mem_T.INT4[angle_unit]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5580} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5587} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5252, curr_ptr);
    assume value_is(__ctobpl_const_5253, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5254, p1);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5588} true;
    error := 0;
    assume value_is(__ctobpl_const_5255, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5589} true;
    omit_orient := 0;
    assume value_is(__ctobpl_const_5256, omit_orient);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5592} true;
    assert node_ptr != 0;
    Mem_T.PNode := Mem_T.PNode[node_ptr := 0];
    assume value_is(__ctobpl_const_5257, node_ptr);
    assume value_is(__ctobpl_const_5258, Mem_T.PNode[node_ptr]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5595} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 73);
    assume value_is(__ctobpl_const_5259, $GetKeyword.arg.1$3$);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5595} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5260, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5261, curr_ptr);
    assume value_is(__ctobpl_const_5262, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5263, curr_ptr);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5595} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5264, error);
    assume value_is(__ctobpl_const_5265, result.GetKeyword$2);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5596} true;
    goto label_35_true, label_35_false;

  label_35_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5266, error);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5601} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.nodecoor$4 := nodecoor(Mem_T.Pcharac[curr_ptr], curr_ptr, pcoord_ptr, qcoord_ptr);
    assume value_is(__ctobpl_const_5267, curr_ptr);
    assume value_is(__ctobpl_const_5268, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5269, curr_ptr);
    assume value_is(__ctobpl_const_5270, pcoord_ptr);
    assume value_is(__ctobpl_const_5271, qcoord_ptr);
    assume value_is(__ctobpl_const_5272, curr_ptr);
    assume value_is(__ctobpl_const_5273, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5274, curr_ptr);
    assume value_is(__ctobpl_const_5275, pcoord_ptr);
    assume value_is(__ctobpl_const_5276, qcoord_ptr);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5601} true;
    error := result.nodecoor$4;
    assume value_is(__ctobpl_const_5277, error);
    assume value_is(__ctobpl_const_5278, result.nodecoor$4);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5603} true;
    goto label_41_true, label_41_false;

  label_41_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5279, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5609} true;
    goto label_42_true, label_42_false;

  label_42_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5280, error);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5616} true;
    goto label_47_true, label_47_false;

  label_47_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5281, error);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5617} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.nodorien$5 := nodorien(Mem_T.Pcharac[curr_ptr], curr_ptr, thea_ptr, phea_ptr, psea_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_5282, curr_ptr);
    assume value_is(__ctobpl_const_5283, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5284, curr_ptr);
    assume value_is(__ctobpl_const_5285, thea_ptr);
    assume value_is(__ctobpl_const_5286, phea_ptr);
    assume value_is(__ctobpl_const_5287, psea_ptr);
    assume value_is(__ctobpl_const_5288, angle_unit_ptr);
    assume value_is(__ctobpl_const_5289, curr_ptr);
    assume value_is(__ctobpl_const_5290, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5291, curr_ptr);
    assume value_is(__ctobpl_const_5292, thea_ptr);
    assume value_is(__ctobpl_const_5293, phea_ptr);
    assume value_is(__ctobpl_const_5294, psea_ptr);
    assume value_is(__ctobpl_const_5295, angle_unit_ptr);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5617} true;
    error := result.nodorien$5;
    assume value_is(__ctobpl_const_5296, error);
    assume value_is(__ctobpl_const_5297, result.nodorien$5);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5620} true;
    goto label_55_true, label_55_false;

  label_55_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5298, error);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5625} true;
    goto label_56_true, label_56_false;

  label_56_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5299, error);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5633} true;
    call result.malloc$8 := __HAVOC_det_malloc(48);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5633} true;
    assert node_ptr != 0;
    Mem_T.PNode := Mem_T.PNode[node_ptr := result.malloc$8];
    assume value_is(__ctobpl_const_5301, node_ptr);
    assume value_is(__ctobpl_const_5302, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5303, result.malloc$8);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5635} true;
    assert node_ptr != 0;
    goto label_67_true, label_67_false;

  label_67_false:
    assume Mem_T.PNode[node_ptr] == 0;
    assume value_is(__ctobpl_const_5304, node_ptr);
    assume value_is(__ctobpl_const_5305, Mem_T.PNode[node_ptr]);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5636} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_5306, curr_ptr);
    assume value_is(__ctobpl_const_5307, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5308, curr_ptr);
    assume value_is(__ctobpl_const_5309, Mem_T.Pcharac[curr_ptr]);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5638} true;
    call interror(havoc_stringTemp);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5644} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(Mem_T.PNode[node_ptr]) := 0];
    assume value_is(__ctobpl_const_5310, node_ptr);
    assume value_is(__ctobpl_const_5311, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5312, Mem_T.NEXT_Node[NEXT_Node(Mem_T.PNode[node_ptr])]);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5646} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.PCOORD_Node := Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.PNode[node_ptr]) := Mem_T.INT4[pcoord]];
    assume value_is(__ctobpl_const_5313, node_ptr);
    assume value_is(__ctobpl_const_5314, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5315, Mem_T.PCOORD_Node[PCOORD_Node(Mem_T.PNode[node_ptr])]);
    assume value_is(__ctobpl_const_5316, Mem_T.INT4[pcoord]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5647} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.QCOORD_Node := Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.PNode[node_ptr]) := Mem_T.INT4[qcoord]];
    assume value_is(__ctobpl_const_5317, node_ptr);
    assume value_is(__ctobpl_const_5318, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5319, Mem_T.QCOORD_Node[QCOORD_Node(Mem_T.PNode[node_ptr])]);
    assume value_is(__ctobpl_const_5320, Mem_T.INT4[qcoord]);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5648} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.THEA_Node := Mem_T.THEA_Node[THEA_Node(Mem_T.PNode[node_ptr]) := Mem_T.FLOAT[thea]];
    assume value_is(__ctobpl_const_5321, node_ptr);
    assume value_is(__ctobpl_const_5322, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5323, Mem_T.THEA_Node[THEA_Node(Mem_T.PNode[node_ptr])]);
    assume value_is(__ctobpl_const_5324, Mem_T.FLOAT[thea]);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5649} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.PHEA_Node := Mem_T.PHEA_Node[PHEA_Node(Mem_T.PNode[node_ptr]) := Mem_T.FLOAT[phea]];
    assume value_is(__ctobpl_const_5325, node_ptr);
    assume value_is(__ctobpl_const_5326, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5327, Mem_T.PHEA_Node[PHEA_Node(Mem_T.PNode[node_ptr])]);
    assume value_is(__ctobpl_const_5328, Mem_T.FLOAT[phea]);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5650} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.PSEA_Node := Mem_T.PSEA_Node[PSEA_Node(Mem_T.PNode[node_ptr]) := Mem_T.FLOAT[psea]];
    assume value_is(__ctobpl_const_5329, node_ptr);
    assume value_is(__ctobpl_const_5330, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5331, Mem_T.PSEA_Node[PSEA_Node(Mem_T.PNode[node_ptr])]);
    assume value_is(__ctobpl_const_5332, Mem_T.FLOAT[psea]);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5651} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.ANGLE_UNIT_Node := Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(Mem_T.PNode[node_ptr]) := Mem_T.INT4[angle_unit]];
    assume value_is(__ctobpl_const_5333, node_ptr);
    assume value_is(__ctobpl_const_5334, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5335, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(Mem_T.PNode[node_ptr])]);
    assume value_is(__ctobpl_const_5336, Mem_T.INT4[angle_unit]);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5652} true;
    assert node_ptr != 0;
    assert Mem_T.PNode[node_ptr] != 0;
    Mem_T.OMIT_ORIENT_Node := Mem_T.OMIT_ORIENT_Node[OMIT_ORIENT_Node(Mem_T.PNode[node_ptr]) := omit_orient];
    assume value_is(__ctobpl_const_5337, node_ptr);
    assume value_is(__ctobpl_const_5338, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5339, Mem_T.OMIT_ORIENT_Node[OMIT_ORIENT_Node(Mem_T.PNode[node_ptr])]);
    assume value_is(__ctobpl_const_5340, omit_orient);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5655} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5341, pp2);
    assume value_is(__ctobpl_const_5342, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5343, curr_ptr);
    assume value_is(__ctobpl_const_5344, Mem_T.Pcharac[curr_ptr]);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5656} true;
    result.nodedef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5657} true;
    call __HAVOC_free(angle_unit);
    call __HAVOC_free(curr);
    call __HAVOC_free(pcoord);
    call __HAVOC_free(phea);
    call __HAVOC_free(psea);
    call __HAVOC_free(qcoord);
    call __HAVOC_free(thea);
    return;

  label_67_true:
    assume Mem_T.PNode[node_ptr] != 0;
    assume value_is(__ctobpl_const_5304, node_ptr);
    assume value_is(__ctobpl_const_5305, Mem_T.PNode[node_ptr]);
    goto label_71;

  label_56_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5299, error);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5626} true;
    omit_orient := 1;
    assume value_is(__ctobpl_const_5300, omit_orient);
    goto label_62;

  label_55_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5298, error);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5621} true;
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5621} true;
    call result.printf$6 := det_choice();
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5622} true;
    result.nodedef$1 := 17;
    goto label_1;

  label_47_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5281, error);
    goto label_55;

  label_42_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5280, error);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5610} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 53, havoc_stringTemp);
    assume value_is(__ctobpl_const_5345, curr_ptr);
    assume value_is(__ctobpl_const_5346, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5347, curr_ptr);
    assume value_is(__ctobpl_const_5348, Mem_T.Pcharac[curr_ptr]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5612} true;
    result.nodedef$1 := 17;
    goto label_1;

  label_41_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5279, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5604} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 52, havoc_stringTemp);
    assume value_is(__ctobpl_const_5349, curr_ptr);
    assume value_is(__ctobpl_const_5350, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5351, curr_ptr);
    assume value_is(__ctobpl_const_5352, Mem_T.Pcharac[curr_ptr]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5606} true;
    result.nodedef$1 := 17;
    goto label_1;

  label_35_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5266, error);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5597} true;
    result.nodedef$1 := 1;
    goto label_1;
}



procedure {:extern} nodorien(p1.__1: int, pp2.__1: int, theta_ptr.__1: int, phi_ptr.__1: int, psi_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.nodorien$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} nodorien(p1.__1: int, pp2.__1: int, theta_ptr.__1: int, phi_ptr.__1: int, psi_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.nodorien$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$11$: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$8$: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} phi_ptr: int;
  var {:extern} pp2: int;
  var {:extern} psi_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$7: int;
  var {:extern} result.GetKeyword$10: int;
  var {:extern} result.GetReal$6: int;
  var {:extern} result.GetReal$9: int;
  var {:extern} result.GetReal$12: int;
  var {:extern} result.angunit$13: int;
  var {:extern} theta_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(theta_ptr.__1, alloc);
    assume INT_LT(phi_ptr.__1, alloc);
    assume INT_LT(psi_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$11$ := 0;
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$8$ := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    phi_ptr := 0;
    pp2 := 0;
    psi_ptr := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$7 := 0;
    result.GetKeyword$10 := 0;
    result.GetReal$6 := 0;
    result.GetReal$9 := 0;
    result.GetReal$12 := 0;
    result.angunit$13 := 0;
    result.nodorien$1 := 0;
    theta_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    theta_ptr := theta_ptr.__1;
    phi_ptr := phi_ptr.__1;
    psi_ptr := psi_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5671} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5671} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5671} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5353, curr_ptr);
    assume value_is(__ctobpl_const_5354, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5672} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5679} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5355, curr_ptr);
    assume value_is(__ctobpl_const_5356, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5357, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5682} true;
    error := 0;
    assume value_is(__ctobpl_const_5358, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5685} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 37);
    assume value_is(__ctobpl_const_5359, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5685} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5360, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5361, curr_ptr);
    assume value_is(__ctobpl_const_5362, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5363, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5685} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5364, error);
    assume value_is(__ctobpl_const_5365, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5686} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5366, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5691} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 70);
    assume value_is(__ctobpl_const_5367, $GetKeyword.arg.1$5$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5691} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_5368, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_5369, curr_ptr);
    assume value_is(__ctobpl_const_5370, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_5371, curr_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5691} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_5372, error);
    assume value_is(__ctobpl_const_5373, result.GetKeyword$4);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5692} true;
    error := 0;
    assume value_is(__ctobpl_const_5374, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5695} true;
    call result.GetReal$6 := GetReal(theta_ptr, curr_ptr);
    assume value_is(__ctobpl_const_5375, theta_ptr);
    assume value_is(__ctobpl_const_5376, curr_ptr);
    assume value_is(__ctobpl_const_5377, theta_ptr);
    assume value_is(__ctobpl_const_5378, curr_ptr);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5695} true;
    error := result.GetReal$6;
    assume value_is(__ctobpl_const_5379, error);
    assume value_is(__ctobpl_const_5380, result.GetReal$6);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5696} true;
    goto label_26_true, label_26_false;

  label_26_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5381, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5703} true;
    $GetKeyword.arg.1$8$ := PLUS(Keywords, 21, 71);
    assume value_is(__ctobpl_const_5382, $GetKeyword.arg.1$8$);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5703} true;
    call result.GetKeyword$7 := GetKeyword($GetKeyword.arg.1$8$, curr_ptr);
    assume value_is(__ctobpl_const_5383, $GetKeyword.arg.1$8$);
    assume value_is(__ctobpl_const_5384, curr_ptr);
    assume value_is(__ctobpl_const_5385, $GetKeyword.arg.1$8$);
    assume value_is(__ctobpl_const_5386, curr_ptr);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5703} true;
    error := result.GetKeyword$7;
    assume value_is(__ctobpl_const_5387, error);
    assume value_is(__ctobpl_const_5388, result.GetKeyword$7);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5704} true;
    error := 0;
    assume value_is(__ctobpl_const_5389, error);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5707} true;
    call result.GetReal$9 := GetReal(phi_ptr, curr_ptr);
    assume value_is(__ctobpl_const_5390, phi_ptr);
    assume value_is(__ctobpl_const_5391, curr_ptr);
    assume value_is(__ctobpl_const_5392, phi_ptr);
    assume value_is(__ctobpl_const_5393, curr_ptr);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5707} true;
    error := result.GetReal$9;
    assume value_is(__ctobpl_const_5394, error);
    assume value_is(__ctobpl_const_5395, result.GetReal$9);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5708} true;
    goto label_41_true, label_41_false;

  label_41_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5396, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5715} true;
    $GetKeyword.arg.1$11$ := PLUS(Keywords, 21, 72);
    assume value_is(__ctobpl_const_5397, $GetKeyword.arg.1$11$);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5715} true;
    call result.GetKeyword$10 := GetKeyword($GetKeyword.arg.1$11$, curr_ptr);
    assume value_is(__ctobpl_const_5398, $GetKeyword.arg.1$11$);
    assume value_is(__ctobpl_const_5399, curr_ptr);
    assume value_is(__ctobpl_const_5400, $GetKeyword.arg.1$11$);
    assume value_is(__ctobpl_const_5401, curr_ptr);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5715} true;
    error := result.GetKeyword$10;
    assume value_is(__ctobpl_const_5402, error);
    assume value_is(__ctobpl_const_5403, result.GetKeyword$10);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5716} true;
    error := 0;
    assume value_is(__ctobpl_const_5404, error);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5719} true;
    call result.GetReal$12 := GetReal(psi_ptr, curr_ptr);
    assume value_is(__ctobpl_const_5405, psi_ptr);
    assume value_is(__ctobpl_const_5406, curr_ptr);
    assume value_is(__ctobpl_const_5407, psi_ptr);
    assume value_is(__ctobpl_const_5408, curr_ptr);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5719} true;
    error := result.GetReal$12;
    assume value_is(__ctobpl_const_5409, error);
    assume value_is(__ctobpl_const_5410, result.GetReal$12);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5720} true;
    goto label_56_true, label_56_false;

  label_56_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5411, error);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5728} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angunit$13 := angunit(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_5412, curr_ptr);
    assume value_is(__ctobpl_const_5413, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5414, curr_ptr);
    assume value_is(__ctobpl_const_5415, angle_unit_ptr);
    assume value_is(__ctobpl_const_5416, curr_ptr);
    assume value_is(__ctobpl_const_5417, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5418, curr_ptr);
    assume value_is(__ctobpl_const_5419, angle_unit_ptr);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5728} true;
    error := result.angunit$13;
    assume value_is(__ctobpl_const_5420, error);
    assume value_is(__ctobpl_const_5421, result.angunit$13);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5729} true;
    goto label_65_true, label_65_false;

  label_65_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5422, error);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5733} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5425, pp2);
    assume value_is(__ctobpl_const_5426, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5427, curr_ptr);
    assume value_is(__ctobpl_const_5428, Mem_T.Pcharac[curr_ptr]);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5734} true;
    result.nodorien$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5735} true;
    call __HAVOC_free(curr);
    return;

  label_65_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5422, error);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5730} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_5423, angle_unit_ptr);
    assume value_is(__ctobpl_const_5424, Mem_T.INT4[angle_unit_ptr]);
    goto label_66;

  label_56_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5411, error);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5721} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 19, havoc_stringTemp);
    assume value_is(__ctobpl_const_5429, curr_ptr);
    assume value_is(__ctobpl_const_5430, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5431, curr_ptr);
    assume value_is(__ctobpl_const_5432, Mem_T.Pcharac[curr_ptr]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5723} true;
    result.nodorien$1 := 17;
    goto label_1;

  label_41_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5396, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5709} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 19, havoc_stringTemp);
    assume value_is(__ctobpl_const_5433, curr_ptr);
    assume value_is(__ctobpl_const_5434, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5435, curr_ptr);
    assume value_is(__ctobpl_const_5436, Mem_T.Pcharac[curr_ptr]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5711} true;
    result.nodorien$1 := 17;
    goto label_1;

  label_26_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5381, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5697} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 19, havoc_stringTemp);
    assume value_is(__ctobpl_const_5437, curr_ptr);
    assume value_is(__ctobpl_const_5438, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5439, curr_ptr);
    assume value_is(__ctobpl_const_5440, Mem_T.Pcharac[curr_ptr]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5699} true;
    result.nodorien$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5366, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5687} true;
    result.nodorien$1 := 1;
    goto label_1;
}



procedure {:extern} nomefile(fn.__1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} nomefile(fn.__1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} fn: int;
  var {:extern} result.strcpy$1: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(fn.__1, alloc);
    fn := 0;
    result.strcpy$1 := 0;
    fn := fn.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5748} true;
    call result.strcpy$1 := strcpy(fn, GLOBLE_FILENAME);
    assume value_is(__ctobpl_const_5441, fn);
    assume value_is(__ctobpl_const_5442, fn);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5749} true;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5750} true;
    return;
}



procedure {:extern} parserro(err_ptr.__1: int, errcode.__1: int, s.__1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} parserro(err_ptr.__1: int, errcode.__1: int, s.__1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} err_ptr: int;
  var {:extern} errcode: int;
  var {:extern} i: int;
  var {:extern} n: int;
  var {:extern} p: int;
  var {:extern} $printf.arg.2$10$: int;
  var {:extern} $printf.arg.2$8$: int;
  var {:extern} result.printf$1: int;
  var {:extern} result.printf$2: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.printf$4: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.printf$6: int;
  var {:extern} result.printf$7: int;
  var {:extern} result.printf$9: int;
  var {:extern} s: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(err_ptr.__1, alloc);
    assume INT_LT(s.__1, alloc);
    err_ptr := 0;
    errcode := 0;
    i := 0;
    n := 0;
    p := 0;
    $printf.arg.2$10$ := 0;
    $printf.arg.2$8$ := 0;
    result.printf$1 := 0;
    result.printf$2 := 0;
    result.printf$3 := 0;
    result.printf$4 := 0;
    result.printf$5 := 0;
    result.printf$6 := 0;
    result.printf$7 := 0;
    result.printf$9 := 0;
    s := 0;
    err_ptr := err_ptr.__1;
    errcode := errcode.__1;
    s := s.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5760} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5761} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5761} true;
    n := 0;
    assume value_is(__ctobpl_const_5443, n);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5761} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5764} true;
    p := err_ptr;
    assume value_is(__ctobpl_const_5444, p);
    assume value_is(__ctobpl_const_5445, err_ptr);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5766} true;
    goto label_8_true, label_8_false;

  label_8_false:
    assume errline_printed == 0;
    assume value_is(__ctobpl_const_5446, errline_printed);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5768} true;
    errline_printed := 1;
    assume value_is(__ctobpl_const_5447, errline_printed);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5771} true;
    call result.printf$1 := det_choice();
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5774} true;
    goto label_23_head;

  label_23_head:
    call n, p := parserro_loop_label_23_head(err_ptr, n, p);
    goto label_23_head_last;

  label_23_false:
    assume Mem_T.PREV_charac[PREV_charac(p)] == 0;
    assume value_is(__ctobpl_const_5448, p);
    assume value_is(__ctobpl_const_5449, Mem_T.PREV_charac[PREV_charac(p)]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5780} true;
    call result.printf$2 := det_choice();
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5781} true;
    goto label_30_head;

  label_30_head:
    call p, result.printf$3 := parserro_loop_label_30_head(err_ptr, p, result.printf$3);
    goto label_30_head_last;

  label_30_false:
    assume p == 0;
    assume value_is(__ctobpl_const_5455, p);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5787} true;
    call result.printf$4 := det_choice();
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5788} true;
    i := 1;
    assume value_is(__ctobpl_const_5460, i);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5788} true;
    goto label_40_head;

  label_40_head:
    call i, result.printf$5 := parserro_loop_label_40_head(i, n, result.printf$5);
    goto label_40_head_last;

  label_40_false:
    assume !INT_LEQ(i, n);
    assume value_is(__ctobpl_const_5461, i);
    assume value_is(__ctobpl_const_5462, n);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5792} true;
    call result.printf$6 := det_choice();
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5795} true;
    goto label_10_true, label_10_false;

  label_10_false:
    assume s == 0;
    assume value_is(__ctobpl_const_5471, s);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5796} true;
    assume value_is(__ctobpl_const_5472, errcode);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5796} true;
    call result.printf$7 := det_choice();
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5800} true;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5801} true;
    return;

  label_10_true:
    assume s != 0;
    assume value_is(__ctobpl_const_5471, s);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5798} true;
    assume value_is(__ctobpl_const_5473, errcode);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5798} true;
    call result.printf$9 := det_choice();
    goto label_16;

  label_40_true:
    assume INT_LEQ(i, n);
    assume value_is(__ctobpl_const_5461, i);
    assume value_is(__ctobpl_const_5462, n);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5789} true;
    call result.printf$5 := det_choice();
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5788} true;
    assume value_is(__ctobpl_const_5463, i);
    i := PLUS(i, 1, 1);
    goto label_47_dummy;

  label_30_true:
    assume p != 0;
    assume value_is(__ctobpl_const_5455, p);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5781} true;
    assert p != 0;
    assert err_ptr != 0;
    goto label_34_true, label_34_false;

  label_34_false:
    assume !INT_EQ(Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)], Mem_T.LINE_NUM_charac[LINE_NUM_charac(err_ptr)]);
    assume value_is(__ctobpl_const_5456, p);
    assume value_is(__ctobpl_const_5457, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    assume value_is(__ctobpl_const_5458, err_ptr);
    assume value_is(__ctobpl_const_5459, Mem_T.LINE_NUM_charac[LINE_NUM_charac(err_ptr)]);
    goto label_31;

  label_34_true:
    assume INT_EQ(Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)], Mem_T.LINE_NUM_charac[LINE_NUM_charac(err_ptr)]);
    assume value_is(__ctobpl_const_5456, p);
    assume value_is(__ctobpl_const_5457, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    assume value_is(__ctobpl_const_5458, err_ptr);
    assume value_is(__ctobpl_const_5459, Mem_T.LINE_NUM_charac[LINE_NUM_charac(err_ptr)]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5782} true;
    call result.printf$3 := det_choice();
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5783} true;
    assert p != 0;
    p := Mem_T.NEXT_charac[NEXT_charac(p)];
    assume value_is(__ctobpl_const_5464, p);
    assume value_is(__ctobpl_const_5465, p);
    assume value_is(__ctobpl_const_5466, Mem_T.NEXT_charac[NEXT_charac(p)]);
    goto label_38_dummy;

  label_23_true:
    assume Mem_T.PREV_charac[PREV_charac(p)] != 0;
    assume value_is(__ctobpl_const_5448, p);
    assume value_is(__ctobpl_const_5449, Mem_T.PREV_charac[PREV_charac(p)]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5774} true;
    assert p != 0;
    assert Mem_T.PREV_charac[PREV_charac(p)] != 0;
    assert err_ptr != 0;
    goto label_27_true, label_27_false;

  label_27_false:
    assume !INT_EQ(Mem_T.LINE_NUM_charac[LINE_NUM_charac(Mem_T.PREV_charac[PREV_charac(p)])], Mem_T.LINE_NUM_charac[LINE_NUM_charac(err_ptr)]);
    assume value_is(__ctobpl_const_5450, p);
    assume value_is(__ctobpl_const_5451, Mem_T.PREV_charac[PREV_charac(p)]);
    assume value_is(__ctobpl_const_5452, Mem_T.LINE_NUM_charac[LINE_NUM_charac(Mem_T.PREV_charac[PREV_charac(p)])]);
    assume value_is(__ctobpl_const_5453, err_ptr);
    assume value_is(__ctobpl_const_5454, Mem_T.LINE_NUM_charac[LINE_NUM_charac(err_ptr)]);
    goto label_24;

  label_27_true:
    assume INT_EQ(Mem_T.LINE_NUM_charac[LINE_NUM_charac(Mem_T.PREV_charac[PREV_charac(p)])], Mem_T.LINE_NUM_charac[LINE_NUM_charac(err_ptr)]);
    assume value_is(__ctobpl_const_5450, p);
    assume value_is(__ctobpl_const_5451, Mem_T.PREV_charac[PREV_charac(p)]);
    assume value_is(__ctobpl_const_5452, Mem_T.LINE_NUM_charac[LINE_NUM_charac(Mem_T.PREV_charac[PREV_charac(p)])]);
    assume value_is(__ctobpl_const_5453, err_ptr);
    assume value_is(__ctobpl_const_5454, Mem_T.LINE_NUM_charac[LINE_NUM_charac(err_ptr)]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5775} true;
    assume value_is(__ctobpl_const_5467, n);
    n := PLUS(n, 1, 1);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5776} true;
    assert p != 0;
    p := Mem_T.PREV_charac[PREV_charac(p)];
    assume value_is(__ctobpl_const_5468, p);
    assume value_is(__ctobpl_const_5469, p);
    assume value_is(__ctobpl_const_5470, Mem_T.PREV_charac[PREV_charac(p)]);
    goto label_29_dummy;

  label_8_true:
    assume errline_printed != 0;
    assume value_is(__ctobpl_const_5446, errline_printed);
    goto label_10;

  label_47_dummy:
    assume false;
    return;

  label_40_head_last:
    goto label_40_true, label_40_false;

  label_38_dummy:
    assume false;
    return;

  label_30_head_last:
    goto label_30_true, label_30_false;

  label_29_dummy:
    assume false;
    return;

  label_23_head_last:
    assert p != 0;
    goto label_23_true, label_23_false;
}



procedure {:extern} phaserot(p1.__1: int, pp2.__1: int, phase_start_ptr.__1: int, phase_step_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.phaserot$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} phaserot(p1.__1: int, pp2.__1: int, phase_start_ptr.__1: int, phase_step_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.phaserot$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$8$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} phase_start_ptr: int;
  var {:extern} phase_step_ptr: int;
  var {:extern} phase_unit_ptr: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$7: int;
  var {:extern} result.GetReal$6: int;
  var {:extern} result.angval$9: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(phase_start_ptr.__1, alloc);
    assume INT_LT(phase_step_ptr.__1, alloc);
    assume INT_LT(phase_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$8$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    phase_start_ptr := 0;
    phase_step_ptr := 0;
    phase_unit_ptr := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$7 := 0;
    result.GetReal$6 := 0;
    result.angval$9 := 0;
    result.phaserot$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    phase_start_ptr := phase_start_ptr.__1;
    phase_step_ptr := phase_step_ptr.__1;
    phase_unit_ptr := phase_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5816} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5816} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5816} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5474, curr_ptr);
    assume value_is(__ctobpl_const_5475, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5817} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5824} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5476, curr_ptr);
    assume value_is(__ctobpl_const_5477, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5478, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5827} true;
    error := 0;
    assume value_is(__ctobpl_const_5479, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5830} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 43);
    assume value_is(__ctobpl_const_5480, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5830} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5481, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5482, curr_ptr);
    assume value_is(__ctobpl_const_5483, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5484, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5830} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5485, error);
    assume value_is(__ctobpl_const_5486, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5831} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5487, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5836} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 95);
    assume value_is(__ctobpl_const_5488, $GetKeyword.arg.1$5$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5836} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_5489, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_5490, curr_ptr);
    assume value_is(__ctobpl_const_5491, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_5492, curr_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5836} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_5493, error);
    assume value_is(__ctobpl_const_5494, result.GetKeyword$4);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5837} true;
    error := 0;
    assume value_is(__ctobpl_const_5495, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5840} true;
    call result.GetReal$6 := GetReal(phase_start_ptr, curr_ptr);
    assume value_is(__ctobpl_const_5496, phase_start_ptr);
    assume value_is(__ctobpl_const_5497, curr_ptr);
    assume value_is(__ctobpl_const_5498, phase_start_ptr);
    assume value_is(__ctobpl_const_5499, curr_ptr);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5840} true;
    error := result.GetReal$6;
    assume value_is(__ctobpl_const_5500, error);
    assume value_is(__ctobpl_const_5501, result.GetReal$6);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5841} true;
    goto label_26_true, label_26_false;

  label_26_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5502, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5848} true;
    $GetKeyword.arg.1$8$ := PLUS(Keywords, 21, 16);
    assume value_is(__ctobpl_const_5503, $GetKeyword.arg.1$8$);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5848} true;
    call result.GetKeyword$7 := GetKeyword($GetKeyword.arg.1$8$, curr_ptr);
    assume value_is(__ctobpl_const_5504, $GetKeyword.arg.1$8$);
    assume value_is(__ctobpl_const_5505, curr_ptr);
    assume value_is(__ctobpl_const_5506, $GetKeyword.arg.1$8$);
    assume value_is(__ctobpl_const_5507, curr_ptr);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5848} true;
    error := result.GetKeyword$7;
    assume value_is(__ctobpl_const_5508, error);
    assume value_is(__ctobpl_const_5509, result.GetKeyword$7);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5849} true;
    error := 0;
    assume value_is(__ctobpl_const_5510, error);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5852} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$9 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, phase_step_ptr, phase_unit_ptr);
    assume value_is(__ctobpl_const_5511, curr_ptr);
    assume value_is(__ctobpl_const_5512, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5513, curr_ptr);
    assume value_is(__ctobpl_const_5514, phase_step_ptr);
    assume value_is(__ctobpl_const_5515, phase_unit_ptr);
    assume value_is(__ctobpl_const_5516, curr_ptr);
    assume value_is(__ctobpl_const_5517, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5518, curr_ptr);
    assume value_is(__ctobpl_const_5519, phase_step_ptr);
    assume value_is(__ctobpl_const_5520, phase_unit_ptr);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5852} true;
    error := result.angval$9;
    assume value_is(__ctobpl_const_5521, error);
    assume value_is(__ctobpl_const_5522, result.angval$9);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5853} true;
    goto label_41_true, label_41_false;

  label_41_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5523, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5860} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5524, pp2);
    assume value_is(__ctobpl_const_5525, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5526, curr_ptr);
    assume value_is(__ctobpl_const_5527, Mem_T.Pcharac[curr_ptr]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5861} true;
    result.phaserot$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5862} true;
    call __HAVOC_free(curr);
    return;

  label_41_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5523, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5854} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 74, havoc_stringTemp);
    assume value_is(__ctobpl_const_5528, curr_ptr);
    assume value_is(__ctobpl_const_5529, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5530, curr_ptr);
    assume value_is(__ctobpl_const_5531, Mem_T.Pcharac[curr_ptr]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5856} true;
    result.phaserot$1 := 17;
    goto label_1;

  label_26_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5502, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5842} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 74, havoc_stringTemp);
    assume value_is(__ctobpl_const_5532, curr_ptr);
    assume value_is(__ctobpl_const_5533, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5534, curr_ptr);
    assume value_is(__ctobpl_const_5535, Mem_T.Pcharac[curr_ptr]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5844} true;
    result.phaserot$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5487, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5832} true;
    result.phaserot$1 := 1;
    goto label_1;
}



procedure {:extern} polor(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.polor$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} polor(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int) returns (result.polor$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$7$: int;
  var {:extern} angle_ptr: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$6: int;
  var {:extern} result.angval$8: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(angle_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$7$ := 0;
    angle_ptr := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$6 := 0;
    result.angval$8 := 0;
    result.polor$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    angle_ptr := angle_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5874} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5874} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5874} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5536, curr_ptr);
    assume value_is(__ctobpl_const_5537, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5875} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5882} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5538, curr_ptr);
    assume value_is(__ctobpl_const_5539, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5540, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5883} true;
    error := 0;
    assume value_is(__ctobpl_const_5541, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5886} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 37);
    assume value_is(__ctobpl_const_5542, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5886} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5543, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5544, curr_ptr);
    assume value_is(__ctobpl_const_5545, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5546, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5886} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5547, error);
    assume value_is(__ctobpl_const_5548, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5887} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5549, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5894} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_5550, angle_ptr);
    assume value_is(__ctobpl_const_5551, Mem_T.FLOAT[angle_ptr]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5895} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_5552, angle_unit_ptr);
    assume value_is(__ctobpl_const_5553, Mem_T.INT4[angle_unit_ptr]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5896} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 12);
    assume value_is(__ctobpl_const_5554, $GetKeyword.arg.1$5$);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5896} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_5555, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_5556, curr_ptr);
    assume value_is(__ctobpl_const_5557, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_5558, curr_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5896} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_5559, error);
    assume value_is(__ctobpl_const_5560, result.GetKeyword$4);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5898} true;
    goto label_25_true, label_25_false;

  label_25_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5561, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5899} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5562, pp2);
    assume value_is(__ctobpl_const_5563, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5564, curr_ptr);
    assume value_is(__ctobpl_const_5565, Mem_T.Pcharac[curr_ptr]);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5900} true;
    result.polor$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5932} true;
    call __HAVOC_free(curr);
    return;

  label_25_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5561, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5906} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 90];
    assume value_is(__ctobpl_const_5566, angle_ptr);
    assume value_is(__ctobpl_const_5567, Mem_T.FLOAT[angle_ptr]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5907} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_5568, angle_unit_ptr);
    assume value_is(__ctobpl_const_5569, Mem_T.INT4[angle_unit_ptr]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5908} true;
    $GetKeyword.arg.1$7$ := PLUS(Keywords, 21, 13);
    assume value_is(__ctobpl_const_5570, $GetKeyword.arg.1$7$);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5908} true;
    call result.GetKeyword$6 := GetKeyword($GetKeyword.arg.1$7$, curr_ptr);
    assume value_is(__ctobpl_const_5571, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_5572, curr_ptr);
    assume value_is(__ctobpl_const_5573, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_5574, curr_ptr);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5908} true;
    error := result.GetKeyword$6;
    assume value_is(__ctobpl_const_5575, error);
    assume value_is(__ctobpl_const_5576, result.GetKeyword$6);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5910} true;
    goto label_34_true, label_34_false;

  label_34_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5577, error);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5911} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5578, pp2);
    assume value_is(__ctobpl_const_5579, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5580, curr_ptr);
    assume value_is(__ctobpl_const_5581, Mem_T.Pcharac[curr_ptr]);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5912} true;
    result.polor$1 := 0;
    goto label_1;

  label_34_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5577, error);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5916} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$8 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_5582, curr_ptr);
    assume value_is(__ctobpl_const_5583, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5584, curr_ptr);
    assume value_is(__ctobpl_const_5585, angle_ptr);
    assume value_is(__ctobpl_const_5586, angle_unit_ptr);
    assume value_is(__ctobpl_const_5587, curr_ptr);
    assume value_is(__ctobpl_const_5588, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5589, curr_ptr);
    assume value_is(__ctobpl_const_5590, angle_ptr);
    assume value_is(__ctobpl_const_5591, angle_unit_ptr);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5916} true;
    error := result.angval$8;
    assume value_is(__ctobpl_const_5592, error);
    assume value_is(__ctobpl_const_5593, result.angval$8);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5918} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5594, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5919} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5595, pp2);
    assume value_is(__ctobpl_const_5596, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5597, curr_ptr);
    assume value_is(__ctobpl_const_5598, Mem_T.Pcharac[curr_ptr]);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5920} true;
    result.polor$1 := 0;
    goto label_1;

  label_40_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5594, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5923} true;
    goto label_42_true, label_42_false;

  label_42_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5599, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5930} true;
    result.polor$1 := 17;
    goto label_1;

  label_42_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5599, error);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5924} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 30, havoc_stringTemp);
    assume value_is(__ctobpl_const_5600, curr_ptr);
    assume value_is(__ctobpl_const_5601, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5602, curr_ptr);
    assume value_is(__ctobpl_const_5603, Mem_T.Pcharac[curr_ptr]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5926} true;
    result.polor$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5549, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5888} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 90];
    assume value_is(__ctobpl_const_5604, angle_ptr);
    assume value_is(__ctobpl_const_5605, Mem_T.FLOAT[angle_ptr]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5889} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_5606, angle_unit_ptr);
    assume value_is(__ctobpl_const_5607, Mem_T.INT4[angle_unit_ptr]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5890} true;
    result.polor$1 := 1;
    goto label_1;
}



procedure {:extern} polorbis(p1.__1: int, pp2.__1: int, phepol_ptr.__1: int, phepol_unit_ptr.__1: int) returns (result.polorbis$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} polorbis(p1.__1: int, pp2.__1: int, phepol_ptr.__1: int, phepol_unit_ptr.__1: int) returns (result.polorbis$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$7$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} phepol_ptr: int;
  var {:extern} phepol_unit_ptr: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$6: int;
  var {:extern} result.angval$8: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(phepol_ptr.__1, alloc);
    assume INT_LT(phepol_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$7$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    phepol_ptr := 0;
    phepol_unit_ptr := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$6 := 0;
    result.angval$8 := 0;
    result.polorbis$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    phepol_ptr := phepol_ptr.__1;
    phepol_unit_ptr := phepol_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5944} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5944} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5944} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5608, curr_ptr);
    assume value_is(__ctobpl_const_5609, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5945} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5952} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5610, curr_ptr);
    assume value_is(__ctobpl_const_5611, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5612, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5953} true;
    error := 0;
    assume value_is(__ctobpl_const_5613, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5956} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 41);
    assume value_is(__ctobpl_const_5614, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5956} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5615, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5616, curr_ptr);
    assume value_is(__ctobpl_const_5617, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5618, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5956} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5619, error);
    assume value_is(__ctobpl_const_5620, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5957} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5621, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5964} true;
    assert phepol_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[phepol_ptr := 0];
    assume value_is(__ctobpl_const_5622, phepol_ptr);
    assume value_is(__ctobpl_const_5623, Mem_T.FLOAT[phepol_ptr]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5965} true;
    assert phepol_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[phepol_unit_ptr := 0];
    assume value_is(__ctobpl_const_5624, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5625, Mem_T.INT4[phepol_unit_ptr]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5966} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 12);
    assume value_is(__ctobpl_const_5626, $GetKeyword.arg.1$5$);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5966} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_5627, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_5628, curr_ptr);
    assume value_is(__ctobpl_const_5629, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_5630, curr_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5966} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_5631, error);
    assume value_is(__ctobpl_const_5632, result.GetKeyword$4);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5968} true;
    goto label_25_true, label_25_false;

  label_25_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5633, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5969} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5634, pp2);
    assume value_is(__ctobpl_const_5635, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5636, curr_ptr);
    assume value_is(__ctobpl_const_5637, Mem_T.Pcharac[curr_ptr]);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5970} true;
    result.polorbis$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6002} true;
    call __HAVOC_free(curr);
    return;

  label_25_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5633, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5976} true;
    assert phepol_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[phepol_ptr := 90];
    assume value_is(__ctobpl_const_5638, phepol_ptr);
    assume value_is(__ctobpl_const_5639, Mem_T.FLOAT[phepol_ptr]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5977} true;
    assert phepol_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[phepol_unit_ptr := 0];
    assume value_is(__ctobpl_const_5640, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5641, Mem_T.INT4[phepol_unit_ptr]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5978} true;
    $GetKeyword.arg.1$7$ := PLUS(Keywords, 21, 13);
    assume value_is(__ctobpl_const_5642, $GetKeyword.arg.1$7$);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5978} true;
    call result.GetKeyword$6 := GetKeyword($GetKeyword.arg.1$7$, curr_ptr);
    assume value_is(__ctobpl_const_5643, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_5644, curr_ptr);
    assume value_is(__ctobpl_const_5645, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_5646, curr_ptr);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5978} true;
    error := result.GetKeyword$6;
    assume value_is(__ctobpl_const_5647, error);
    assume value_is(__ctobpl_const_5648, result.GetKeyword$6);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5980} true;
    goto label_34_true, label_34_false;

  label_34_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5649, error);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5981} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5650, pp2);
    assume value_is(__ctobpl_const_5651, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5652, curr_ptr);
    assume value_is(__ctobpl_const_5653, Mem_T.Pcharac[curr_ptr]);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5982} true;
    result.polorbis$1 := 0;
    goto label_1;

  label_34_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5649, error);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5986} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$8 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, phepol_ptr, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5654, curr_ptr);
    assume value_is(__ctobpl_const_5655, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5656, curr_ptr);
    assume value_is(__ctobpl_const_5657, phepol_ptr);
    assume value_is(__ctobpl_const_5658, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5659, curr_ptr);
    assume value_is(__ctobpl_const_5660, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5661, curr_ptr);
    assume value_is(__ctobpl_const_5662, phepol_ptr);
    assume value_is(__ctobpl_const_5663, phepol_unit_ptr);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5986} true;
    error := result.angval$8;
    assume value_is(__ctobpl_const_5664, error);
    assume value_is(__ctobpl_const_5665, result.angval$8);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5988} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5666, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5989} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5667, pp2);
    assume value_is(__ctobpl_const_5668, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5669, curr_ptr);
    assume value_is(__ctobpl_const_5670, Mem_T.Pcharac[curr_ptr]);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5990} true;
    result.polorbis$1 := 0;
    goto label_1;

  label_40_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5666, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5993} true;
    goto label_42_true, label_42_false;

  label_42_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5671, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6000} true;
    result.polorbis$1 := 17;
    goto label_1;

  label_42_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5671, error);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5994} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 30, havoc_stringTemp);
    assume value_is(__ctobpl_const_5672, curr_ptr);
    assume value_is(__ctobpl_const_5673, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5674, curr_ptr);
    assume value_is(__ctobpl_const_5675, Mem_T.Pcharac[curr_ptr]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5996} true;
    result.polorbis$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5621, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5958} true;
    assert phepol_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[phepol_ptr := 90];
    assume value_is(__ctobpl_const_5676, phepol_ptr);
    assume value_is(__ctobpl_const_5677, Mem_T.FLOAT[phepol_ptr]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5959} true;
    assert phepol_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[phepol_unit_ptr := 0];
    assume value_is(__ctobpl_const_5678, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5679, Mem_T.INT4[phepol_unit_ptr]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5960} true;
    result.polorbis$1 := 1;
    goto label_1;
}



procedure {:extern} polspec(p1.__1: int, pp2.__1: int, polarization_ptr.__1: int, phepol_ptr.__1: int, phepol_unit_ptr.__1: int, direction_ptr.__1: int) returns (result.polspec$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} polspec(p1.__1: int, pp2.__1: int, polarization_ptr.__1: int, phepol_ptr.__1: int, phepol_unit_ptr.__1: int, direction_ptr.__1: int) returns (result.polspec$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} direction_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} phepol_ptr: int;
  var {:extern} phepol_unit_ptr: int;
  var {:extern} polarization_ptr: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$6$: int;
  var {:extern} $printf.arg.2$9$: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.circpol$7: int;
  var {:extern} result.linpol$4: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.printf$8: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(polarization_ptr.__1, alloc);
    assume INT_LT(phepol_ptr.__1, alloc);
    assume INT_LT(phepol_unit_ptr.__1, alloc);
    assume INT_LT(direction_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    direction_ptr := 0;
    error := 0;
    p1 := 0;
    phepol_ptr := 0;
    phepol_unit_ptr := 0;
    polarization_ptr := 0;
    pp2 := 0;
    $printf.arg.2$6$ := 0;
    $printf.arg.2$9$ := 0;
    result.GetKeyword$2 := 0;
    result.circpol$7 := 0;
    result.linpol$4 := 0;
    result.polspec$1 := 0;
    result.printf$5 := 0;
    result.printf$8 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    polarization_ptr := polarization_ptr.__1;
    phepol_ptr := phepol_ptr.__1;
    phepol_unit_ptr := phepol_unit_ptr.__1;
    direction_ptr := direction_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6020} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6020} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6020} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5680, curr_ptr);
    assume value_is(__ctobpl_const_5681, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6021} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6028} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5682, curr_ptr);
    assume value_is(__ctobpl_const_5683, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5684, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6029} true;
    error := 0;
    assume value_is(__ctobpl_const_5685, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6030} true;
    assert polarization_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[polarization_ptr := 0];
    assume value_is(__ctobpl_const_5686, polarization_ptr);
    assume value_is(__ctobpl_const_5687, Mem_T.INT4[polarization_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6031} true;
    assert phepol_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[phepol_ptr := 90];
    assume value_is(__ctobpl_const_5688, phepol_ptr);
    assume value_is(__ctobpl_const_5689, Mem_T.FLOAT[phepol_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6032} true;
    assert phepol_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[phepol_unit_ptr := 0];
    assume value_is(__ctobpl_const_5690, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5691, Mem_T.INT4[phepol_unit_ptr]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6033} true;
    assert direction_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[direction_ptr := 0];
    assume value_is(__ctobpl_const_5692, direction_ptr);
    assume value_is(__ctobpl_const_5693, Mem_T.INT4[direction_ptr]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6036} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 31);
    assume value_is(__ctobpl_const_5694, $GetKeyword.arg.1$3$);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6036} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5695, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5696, curr_ptr);
    assume value_is(__ctobpl_const_5697, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5698, curr_ptr);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6036} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5699, error);
    assume value_is(__ctobpl_const_5700, result.GetKeyword$2);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6037} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5701, error);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6042} true;
    assert polarization_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[polarization_ptr := 0];
    assume value_is(__ctobpl_const_5702, polarization_ptr);
    assume value_is(__ctobpl_const_5703, Mem_T.INT4[polarization_ptr]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6043} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.linpol$4 := linpol(Mem_T.Pcharac[curr_ptr], curr_ptr, phepol_ptr, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5704, curr_ptr);
    assume value_is(__ctobpl_const_5705, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5706, curr_ptr);
    assume value_is(__ctobpl_const_5707, phepol_ptr);
    assume value_is(__ctobpl_const_5708, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5709, curr_ptr);
    assume value_is(__ctobpl_const_5710, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5711, curr_ptr);
    assume value_is(__ctobpl_const_5712, phepol_ptr);
    assume value_is(__ctobpl_const_5713, phepol_unit_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6043} true;
    error := result.linpol$4;
    assume value_is(__ctobpl_const_5714, error);
    assume value_is(__ctobpl_const_5715, result.linpol$4);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6045} true;
    goto label_25_true, label_25_false;

  label_25_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5716, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6046} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5717, pp2);
    assume value_is(__ctobpl_const_5718, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5719, curr_ptr);
    assume value_is(__ctobpl_const_5720, Mem_T.Pcharac[curr_ptr]);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6047} true;
    result.polspec$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6074} true;
    call __HAVOC_free(curr);
    return;

  label_25_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5716, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6050} true;
    goto label_27_true, label_27_false;

  label_27_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5721, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6058} true;
    assert polarization_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[polarization_ptr := 1];
    assume value_is(__ctobpl_const_5722, polarization_ptr);
    assume value_is(__ctobpl_const_5723, Mem_T.INT4[polarization_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6059} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.circpol$7 := circpol(Mem_T.Pcharac[curr_ptr], curr_ptr, direction_ptr);
    assume value_is(__ctobpl_const_5724, curr_ptr);
    assume value_is(__ctobpl_const_5725, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5726, curr_ptr);
    assume value_is(__ctobpl_const_5727, direction_ptr);
    assume value_is(__ctobpl_const_5728, curr_ptr);
    assume value_is(__ctobpl_const_5729, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5730, curr_ptr);
    assume value_is(__ctobpl_const_5731, direction_ptr);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6059} true;
    error := result.circpol$7;
    assume value_is(__ctobpl_const_5732, error);
    assume value_is(__ctobpl_const_5733, result.circpol$7);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6061} true;
    goto label_38_true, label_38_false;

  label_38_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5734, error);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6062} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5735, pp2);
    assume value_is(__ctobpl_const_5736, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5737, curr_ptr);
    assume value_is(__ctobpl_const_5738, Mem_T.Pcharac[curr_ptr]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6063} true;
    result.polspec$1 := 0;
    goto label_1;

  label_38_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5734, error);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6066} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5739, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6073} true;
    result.polspec$1 := 17;
    goto label_1;

  label_40_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5739, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6067} true;
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6067} true;
    call result.printf$8 := det_choice();
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6068} true;
    result.polspec$1 := 17;
    goto label_1;

  label_27_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5721, error);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6051} true;
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6051} true;
    call result.printf$5 := det_choice();
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6052} true;
    result.polspec$1 := 17;
    goto label_1;

  label_18_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5701, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6038} true;
    result.polspec$1 := 1;
    goto label_1;
}



procedure {:extern} polydef(p1.__1: int, pp2.__1: int, node_ptr.__1: int) returns (result.polydef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} polydef(p1.__1: int, pp2.__1: int, node_ptr.__1: int) returns (result.polydef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} app_ptr: int;
  var {:extern} cont: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} node_ptr: int;
  var {:extern} p1: int;
  var {:extern} pcoord: int;
  var {:extern} pcoord_ptr: int;
  var {:extern} pp2: int;
  var {:extern} primo_ptr: int;
  var {:extern} qcoord: int;
  var {:extern} qcoord_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.malloc$5: int;
  var {:extern} result.nodecoor$4: int;
  var {:extern} ultimo_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(node_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    app_ptr := 0;
    cont := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    node_ptr := 0;
    p1 := 0;
    call pcoord := __HAVOC_det_malloc(4);
    pcoord_ptr := 0;
    pp2 := 0;
    primo_ptr := 0;
    call qcoord := __HAVOC_det_malloc(4);
    qcoord_ptr := 0;
    result.GetKeyword$2 := 0;
    result.malloc$5 := 0;
    result.nodecoor$4 := 0;
    result.polydef$1 := 0;
    ultimo_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    node_ptr := node_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6085} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6085} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6085} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5740, curr_ptr);
    assume value_is(__ctobpl_const_5741, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6086} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6086} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6086} true;
    cont := 0;
    assume value_is(__ctobpl_const_5742, cont);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6089} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6089} true;
    primo_ptr := 0;
    assume value_is(__ctobpl_const_5743, primo_ptr);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6089} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6089} true;
    ultimo_ptr := 0;
    assume value_is(__ctobpl_const_5744, ultimo_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6089} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6089} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_5745, app_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6094} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6094} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6094} true;
    pcoord_ptr := pcoord;
    assume value_is(__ctobpl_const_5746, pcoord_ptr);
    assume value_is(__ctobpl_const_5747, Mem_T.INT4[pcoord]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6095} true;
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6095} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6095} true;
    qcoord_ptr := qcoord;
    assume value_is(__ctobpl_const_5748, qcoord_ptr);
    assume value_is(__ctobpl_const_5749, Mem_T.INT4[qcoord]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6102} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5750, curr_ptr);
    assume value_is(__ctobpl_const_5751, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5752, p1);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6103} true;
    error := 0;
    assume value_is(__ctobpl_const_5753, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6105} true;
    assert node_ptr != 0;
    Mem_T.PNode := Mem_T.PNode[node_ptr := 0];
    assume value_is(__ctobpl_const_5754, node_ptr);
    assume value_is(__ctobpl_const_5755, Mem_T.PNode[node_ptr]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6108} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 77);
    assume value_is(__ctobpl_const_5756, $GetKeyword.arg.1$3$);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6108} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5757, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5758, curr_ptr);
    assume value_is(__ctobpl_const_5759, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5760, curr_ptr);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6108} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5761, error);
    assume value_is(__ctobpl_const_5762, result.GetKeyword$2);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6109} true;
    goto label_29_true, label_29_false;

  label_29_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5763, error);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6119} true;
    goto label_30_head;

  label_30_head:
    call app_ptr, cont, error, primo_ptr, result.malloc$5, result.nodecoor$4, ultimo_ptr := polydef_loop_label_30_head(havoc_stringTemp, app_ptr, cont, curr_ptr, error, pcoord, pcoord_ptr, primo_ptr, qcoord, qcoord_ptr, result.malloc$5, result.nodecoor$4, ultimo_ptr);
    goto label_30_head_last;

  label_30_false:
    assume 1 == 0;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6161} true;
    goto label_32_true, label_32_false;

  label_32_false:
    assume !INT_LT(cont, 3);
    assume value_is(__ctobpl_const_5815, cont);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6169} true;
    assert node_ptr != 0;
    Mem_T.PNode := Mem_T.PNode[node_ptr := primo_ptr];
    assume value_is(__ctobpl_const_5816, node_ptr);
    assume value_is(__ctobpl_const_5817, Mem_T.PNode[node_ptr]);
    assume value_is(__ctobpl_const_5818, primo_ptr);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6170} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5819, pp2);
    assume value_is(__ctobpl_const_5820, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5821, curr_ptr);
    assume value_is(__ctobpl_const_5822, Mem_T.Pcharac[curr_ptr]);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6171} true;
    result.polydef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6172} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(pcoord);
    call __HAVOC_free(qcoord);
    return;

  label_32_true:
    assume INT_LT(cont, 3);
    assume value_is(__ctobpl_const_5815, cont);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6162} true;
    assert node_ptr != 0;
    Mem_T.PNode := Mem_T.PNode[node_ptr := 0];
    assume value_is(__ctobpl_const_5823, node_ptr);
    assume value_is(__ctobpl_const_5824, Mem_T.PNode[node_ptr]);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6163} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 65, havoc_stringTemp);
    assume value_is(__ctobpl_const_5825, curr_ptr);
    assume value_is(__ctobpl_const_5826, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5827, curr_ptr);
    assume value_is(__ctobpl_const_5828, Mem_T.Pcharac[curr_ptr]);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6165} true;
    result.polydef$1 := 17;
    goto label_1;

  label_30_true:
    assume 1 != 0;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6122} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.nodecoor$4 := nodecoor(Mem_T.Pcharac[curr_ptr], curr_ptr, pcoord_ptr, qcoord_ptr);
    assume value_is(__ctobpl_const_5764, curr_ptr);
    assume value_is(__ctobpl_const_5765, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5766, curr_ptr);
    assume value_is(__ctobpl_const_5767, pcoord_ptr);
    assume value_is(__ctobpl_const_5768, qcoord_ptr);
    assume value_is(__ctobpl_const_5769, curr_ptr);
    assume value_is(__ctobpl_const_5770, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5771, curr_ptr);
    assume value_is(__ctobpl_const_5772, pcoord_ptr);
    assume value_is(__ctobpl_const_5773, qcoord_ptr);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6122} true;
    error := result.nodecoor$4;
    assume value_is(__ctobpl_const_5774, error);
    assume value_is(__ctobpl_const_5775, result.nodecoor$4);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6124} true;
    goto label_37_true, label_37_false;

  label_37_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5776, error);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6125} true;
    cont := PLUS(cont, 1, 1);
    assume value_is(__ctobpl_const_5777, cont);
    assume value_is(__ctobpl_const_5778, cont);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6127} true;
    call result.malloc$5 := __HAVOC_det_malloc(48);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6127} true;
    app_ptr := result.malloc$5;
    assume value_is(__ctobpl_const_5779, app_ptr);
    assume value_is(__ctobpl_const_5780, result.malloc$5);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6129} true;
    goto label_45_true, label_45_false;

  label_45_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_5781, app_ptr);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6130} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_5782, curr_ptr);
    assume value_is(__ctobpl_const_5783, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5784, curr_ptr);
    assume value_is(__ctobpl_const_5785, Mem_T.Pcharac[curr_ptr]);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6132} true;
    call interror(havoc_stringTemp);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6135} true;
    assert app_ptr != 0;
    Mem_T.PCOORD_Node := Mem_T.PCOORD_Node[PCOORD_Node(app_ptr) := Mem_T.INT4[pcoord]];
    assume value_is(__ctobpl_const_5786, app_ptr);
    assume value_is(__ctobpl_const_5787, Mem_T.PCOORD_Node[PCOORD_Node(app_ptr)]);
    assume value_is(__ctobpl_const_5788, Mem_T.INT4[pcoord]);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6136} true;
    assert app_ptr != 0;
    Mem_T.QCOORD_Node := Mem_T.QCOORD_Node[QCOORD_Node(app_ptr) := Mem_T.INT4[qcoord]];
    assume value_is(__ctobpl_const_5789, app_ptr);
    assume value_is(__ctobpl_const_5790, Mem_T.QCOORD_Node[QCOORD_Node(app_ptr)]);
    assume value_is(__ctobpl_const_5791, Mem_T.INT4[qcoord]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6137} true;
    assert app_ptr != 0;
    Mem_T.THEA_Node := Mem_T.THEA_Node[THEA_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_5792, app_ptr);
    assume value_is(__ctobpl_const_5793, Mem_T.THEA_Node[THEA_Node(app_ptr)]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6138} true;
    assert app_ptr != 0;
    Mem_T.PHEA_Node := Mem_T.PHEA_Node[PHEA_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_5794, app_ptr);
    assume value_is(__ctobpl_const_5795, Mem_T.PHEA_Node[PHEA_Node(app_ptr)]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6139} true;
    assert app_ptr != 0;
    Mem_T.PSEA_Node := Mem_T.PSEA_Node[PSEA_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_5796, app_ptr);
    assume value_is(__ctobpl_const_5797, Mem_T.PSEA_Node[PSEA_Node(app_ptr)]);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6140} true;
    assert app_ptr != 0;
    Mem_T.ANGLE_UNIT_Node := Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_5798, app_ptr);
    assume value_is(__ctobpl_const_5799, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(app_ptr)]);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6143} true;
    goto label_55_true, label_55_false;

  label_55_false:
    assume primo_ptr == 0;
    assume value_is(__ctobpl_const_5800, primo_ptr);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6144} true;
    primo_ptr := app_ptr;
    assume value_is(__ctobpl_const_5801, primo_ptr);
    assume value_is(__ctobpl_const_5802, app_ptr);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6145} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_5803, ultimo_ptr);
    assume value_is(__ctobpl_const_5804, app_ptr);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6146} true;
    assert app_ptr != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(app_ptr) := 0];
    assume value_is(__ctobpl_const_5805, app_ptr);
    assume value_is(__ctobpl_const_5806, Mem_T.NEXT_Node[NEXT_Node(app_ptr)]);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6154} true;
    goto label_39_true, label_39_false;

  label_39_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5814, error);
    goto label_39_false_dummy;

  label_39_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5814, error);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6155} true;
    goto label_32;

  label_55_true:
    assume primo_ptr != 0;
    assume value_is(__ctobpl_const_5800, primo_ptr);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6148} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(ultimo_ptr) := app_ptr];
    assume value_is(__ctobpl_const_5807, ultimo_ptr);
    assume value_is(__ctobpl_const_5808, Mem_T.NEXT_Node[NEXT_Node(ultimo_ptr)]);
    assume value_is(__ctobpl_const_5809, app_ptr);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6149} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_5810, ultimo_ptr);
    assume value_is(__ctobpl_const_5811, app_ptr);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6150} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_5812, ultimo_ptr);
    assume value_is(__ctobpl_const_5813, Mem_T.NEXT_Node[NEXT_Node(ultimo_ptr)]);
    goto label_39;

  label_45_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_5781, app_ptr);
    goto label_49;

  label_37_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5776, error);
    goto label_39;

  label_29_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5763, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6110} true;
    result.polydef$1 := 1;
    goto label_1;

  label_39_false_dummy:
    assume false;
    return;

  label_30_head_last:
    goto label_30_true, label_30_false;
}



procedure {:extern} portamp(p1.__1: int, pp2.__1: int, amp_ptr.__1: int, amp_unit_ptr.__1: int) returns (result.portamp$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} portamp(p1.__1: int, pp2.__1: int, amp_ptr.__1: int, amp_unit_ptr.__1: int) returns (result.portamp$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} amp_ptr: int;
  var {:extern} amp_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.ampval$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(amp_ptr.__1, alloc);
    assume INT_LT(amp_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    amp_ptr := 0;
    amp_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.ampval$4 := 0;
    result.portamp$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    amp_ptr := amp_ptr.__1;
    amp_unit_ptr := amp_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6183} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6183} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6183} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5829, curr_ptr);
    assume value_is(__ctobpl_const_5830, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6184} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6191} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5831, curr_ptr);
    assume value_is(__ctobpl_const_5832, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5833, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6192} true;
    error := 0;
    assume value_is(__ctobpl_const_5834, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6195} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 42);
    assume value_is(__ctobpl_const_5835, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6195} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5836, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5837, curr_ptr);
    assume value_is(__ctobpl_const_5838, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5839, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6195} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5840, error);
    assume value_is(__ctobpl_const_5841, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6196} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5842, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6201} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.ampval$4 := ampval(Mem_T.Pcharac[curr_ptr], curr_ptr, amp_ptr, amp_unit_ptr);
    assume value_is(__ctobpl_const_5843, curr_ptr);
    assume value_is(__ctobpl_const_5844, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5845, curr_ptr);
    assume value_is(__ctobpl_const_5846, amp_ptr);
    assume value_is(__ctobpl_const_5847, amp_unit_ptr);
    assume value_is(__ctobpl_const_5848, curr_ptr);
    assume value_is(__ctobpl_const_5849, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5850, curr_ptr);
    assume value_is(__ctobpl_const_5851, amp_ptr);
    assume value_is(__ctobpl_const_5852, amp_unit_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6201} true;
    error := result.ampval$4;
    assume value_is(__ctobpl_const_5853, error);
    assume value_is(__ctobpl_const_5854, result.ampval$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6202} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5855, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6209} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_5856, pp2);
    assume value_is(__ctobpl_const_5857, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_5858, curr_ptr);
    assume value_is(__ctobpl_const_5859, Mem_T.Pcharac[curr_ptr]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6210} true;
    result.portamp$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6211} true;
    call __HAVOC_free(curr);
    return;

  label_20_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5855, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6203} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 27, havoc_stringTemp);
    assume value_is(__ctobpl_const_5860, curr_ptr);
    assume value_is(__ctobpl_const_5861, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5862, curr_ptr);
    assume value_is(__ctobpl_const_5863, Mem_T.Pcharac[curr_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6205} true;
    result.portamp$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5842, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6197} true;
    result.portamp$1 := 1;
    goto label_1;
}



procedure {:extern} portdef(p1.__1: int, pp2.__1: int, PORT_PTR.__1: int, portnum_ptr.__1: int) returns (result.portdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} portdef(p1.__1: int, pp2.__1: int, PORT_PTR.__1: int, portnum_ptr.__1: int) returns (result.portdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} PORT_PTR: int;
  var {:extern} amp: int;
  var {:extern} amp_ptr: int;
  var {:extern} amp_unit: int;
  var {:extern} amp_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} omit_pol: int;
  var {:extern} omit_pol_ptr: int;
  var {:extern} p1: int;
  var {:extern} $parserro.arg.3$4$: int;
  var {:extern} phepol: int;
  var {:extern} phepol_ptr: int;
  var {:extern} phepol_unit: int;
  var {:extern} phepol_unit_ptr: int;
  var {:extern} portnum_ptr: int;
  var {:extern} pp2: int;
  var {:extern} ppa: int;
  var {:extern} ppa_ptr: int;
  var {:extern} ppa_unit: int;
  var {:extern} ppa_unit_ptr: int;
  var {:extern} $printf.arg.2$11$: int;
  var {:extern} $printf.arg.2$14$: int;
  var {:extern} $printf.arg.2$17$: int;
  var {:extern} $printf.arg.2$20$: int;
  var {:extern} $printf.arg.2$8$: int;
  var {:extern} psc: int;
  var {:extern} psc_ptr: int;
  var {:extern} psc_unit: int;
  var {:extern} psc_unit_ptr: int;
  var {:extern} psh: int;
  var {:extern} psh_ptr: int;
  var {:extern} psh_unit: int;
  var {:extern} psh_unit_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetNatur$5: int;
  var {:extern} result.polorbis$6: int;
  var {:extern} result.portamp$9: int;
  var {:extern} result.ppadef1$18: int;
  var {:extern} result.printf$7: int;
  var {:extern} result.printf$10: int;
  var {:extern} result.printf$13: int;
  var {:extern} result.printf$16: int;
  var {:extern} result.printf$19: int;
  var {:extern} result.pscdef1$15: int;
  var {:extern} result.pshdef1$12: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(PORT_PTR.__1, alloc);
    assume INT_LT(portnum_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    PORT_PTR := 0;
    call amp := __HAVOC_det_malloc(8);
    amp_ptr := 0;
    call amp_unit := __HAVOC_det_malloc(4);
    amp_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    call omit_pol := __HAVOC_det_malloc(4);
    omit_pol_ptr := 0;
    p1 := 0;
    $parserro.arg.3$4$ := 0;
    call phepol := __HAVOC_det_malloc(8);
    phepol_ptr := 0;
    call phepol_unit := __HAVOC_det_malloc(4);
    phepol_unit_ptr := 0;
    portnum_ptr := 0;
    pp2 := 0;
    call ppa := __HAVOC_det_malloc(8);
    ppa_ptr := 0;
    call ppa_unit := __HAVOC_det_malloc(4);
    ppa_unit_ptr := 0;
    $printf.arg.2$11$ := 0;
    $printf.arg.2$14$ := 0;
    $printf.arg.2$17$ := 0;
    $printf.arg.2$20$ := 0;
    $printf.arg.2$8$ := 0;
    call psc := __HAVOC_det_malloc(8);
    psc_ptr := 0;
    call psc_unit := __HAVOC_det_malloc(4);
    psc_unit_ptr := 0;
    call psh := __HAVOC_det_malloc(8);
    psh_ptr := 0;
    call psh_unit := __HAVOC_det_malloc(4);
    psh_unit_ptr := 0;
    result.GetKeyword$2 := 0;
    result.GetNatur$5 := 0;
    result.polorbis$6 := 0;
    result.portamp$9 := 0;
    result.portdef$1 := 0;
    result.ppadef1$18 := 0;
    result.printf$7 := 0;
    result.printf$10 := 0;
    result.printf$13 := 0;
    result.printf$16 := 0;
    result.printf$19 := 0;
    result.pscdef1$15 := 0;
    result.pshdef1$12 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    PORT_PTR := PORT_PTR.__1;
    portnum_ptr := portnum_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6220} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6220} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6220} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_5864, curr_ptr);
    assume value_is(__ctobpl_const_5865, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6221} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6226} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6226} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6226} true;
    amp_ptr := amp;
    assume value_is(__ctobpl_const_5866, amp_ptr);
    assume value_is(__ctobpl_const_5867, Mem_T.FLOAT[amp]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6227} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6227} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6227} true;
    amp_unit_ptr := amp_unit;
    assume value_is(__ctobpl_const_5868, amp_unit_ptr);
    assume value_is(__ctobpl_const_5869, Mem_T.INT4[amp_unit]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6228} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6228} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6228} true;
    psc_ptr := psc;
    assume value_is(__ctobpl_const_5870, psc_ptr);
    assume value_is(__ctobpl_const_5871, Mem_T.FLOAT[psc]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6229} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6229} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6229} true;
    psc_unit_ptr := psc_unit;
    assume value_is(__ctobpl_const_5872, psc_unit_ptr);
    assume value_is(__ctobpl_const_5873, Mem_T.INT4[psc_unit]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6230} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6230} true;
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6230} true;
    psh_ptr := psh;
    assume value_is(__ctobpl_const_5874, psh_ptr);
    assume value_is(__ctobpl_const_5875, Mem_T.FLOAT[psh]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6231} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6231} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6231} true;
    psh_unit_ptr := psh_unit;
    assume value_is(__ctobpl_const_5876, psh_unit_ptr);
    assume value_is(__ctobpl_const_5877, Mem_T.INT4[psh_unit]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6232} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6232} true;
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6232} true;
    ppa_ptr := ppa;
    assume value_is(__ctobpl_const_5878, ppa_ptr);
    assume value_is(__ctobpl_const_5879, Mem_T.FLOAT[ppa]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6233} true;
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6233} true;
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6233} true;
    ppa_unit_ptr := ppa_unit;
    assume value_is(__ctobpl_const_5880, ppa_unit_ptr);
    assume value_is(__ctobpl_const_5881, Mem_T.INT4[ppa_unit]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6234} true;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6234} true;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6234} true;
    phepol_ptr := phepol;
    assume value_is(__ctobpl_const_5882, phepol_ptr);
    assume value_is(__ctobpl_const_5883, Mem_T.FLOAT[phepol]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6235} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6235} true;
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6235} true;
    phepol_unit_ptr := phepol_unit;
    assume value_is(__ctobpl_const_5884, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5885, Mem_T.INT4[phepol_unit]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6236} true;
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6236} true;
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6236} true;
    omit_pol_ptr := omit_pol;
    assume value_is(__ctobpl_const_5886, omit_pol_ptr);
    assume value_is(__ctobpl_const_5887, Mem_T.INT4[omit_pol]);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6243} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_5888, curr_ptr);
    assume value_is(__ctobpl_const_5889, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5890, p1);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6244} true;
    error := 0;
    assume value_is(__ctobpl_const_5891, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6248} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 40);
    assume value_is(__ctobpl_const_5892, $GetKeyword.arg.1$3$);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6248} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_5893, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5894, curr_ptr);
    assume value_is(__ctobpl_const_5895, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_5896, curr_ptr);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6248} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_5897, error);
    assume value_is(__ctobpl_const_5898, result.GetKeyword$2);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6249} true;
    goto label_47_true, label_47_false;

  label_47_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5899, error);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6256} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.GetNatur$5 := GetNatur(Mem_T.Pcharac[curr_ptr], curr_ptr, portnum_ptr);
    assume value_is(__ctobpl_const_5900, curr_ptr);
    assume value_is(__ctobpl_const_5901, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5902, curr_ptr);
    assume value_is(__ctobpl_const_5903, portnum_ptr);
    assume value_is(__ctobpl_const_5904, curr_ptr);
    assume value_is(__ctobpl_const_5905, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5906, curr_ptr);
    assume value_is(__ctobpl_const_5907, portnum_ptr);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6256} true;
    error := result.GetNatur$5;
    assume value_is(__ctobpl_const_5908, error);
    assume value_is(__ctobpl_const_5909, result.GetNatur$5);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6257} true;
    goto label_57_true, label_57_false;

  label_57_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5910, error);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6266} true;
    assert omit_pol_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_pol_ptr := 0];
    assume value_is(__ctobpl_const_5911, omit_pol_ptr);
    assume value_is(__ctobpl_const_5912, Mem_T.INT4[omit_pol_ptr]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6267} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.polorbis$6 := polorbis(Mem_T.Pcharac[curr_ptr], curr_ptr, phepol_ptr, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5913, curr_ptr);
    assume value_is(__ctobpl_const_5914, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5915, curr_ptr);
    assume value_is(__ctobpl_const_5916, phepol_ptr);
    assume value_is(__ctobpl_const_5917, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5918, curr_ptr);
    assume value_is(__ctobpl_const_5919, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5920, curr_ptr);
    assume value_is(__ctobpl_const_5921, phepol_ptr);
    assume value_is(__ctobpl_const_5922, phepol_unit_ptr);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6267} true;
    error := result.polorbis$6;
    assume value_is(__ctobpl_const_5923, error);
    assume value_is(__ctobpl_const_5924, result.polorbis$6);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6270} true;
    goto label_67_true, label_67_false;

  label_67_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5925, error);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6277} true;
    goto label_68_true, label_68_false;

  label_68_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5932, error);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6283} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.portamp$9 := portamp(Mem_T.Pcharac[curr_ptr], curr_ptr, amp_ptr, amp_unit_ptr);
    assume value_is(__ctobpl_const_5933, curr_ptr);
    assume value_is(__ctobpl_const_5934, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5935, curr_ptr);
    assume value_is(__ctobpl_const_5936, amp_ptr);
    assume value_is(__ctobpl_const_5937, amp_unit_ptr);
    assume value_is(__ctobpl_const_5938, curr_ptr);
    assume value_is(__ctobpl_const_5939, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5940, curr_ptr);
    assume value_is(__ctobpl_const_5941, amp_ptr);
    assume value_is(__ctobpl_const_5942, amp_unit_ptr);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6283} true;
    error := result.portamp$9;
    assume value_is(__ctobpl_const_5943, error);
    assume value_is(__ctobpl_const_5944, result.portamp$9);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6286} true;
    goto label_81_true, label_81_false;

  label_81_false:
    assume error == 0;
    assume value_is(__ctobpl_const_5945, error);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6292} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.pshdef1$12 := pshdef1(Mem_T.Pcharac[curr_ptr], curr_ptr, psh_ptr, psh_unit_ptr);
    assume value_is(__ctobpl_const_5946, curr_ptr);
    assume value_is(__ctobpl_const_5947, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5948, curr_ptr);
    assume value_is(__ctobpl_const_5949, psh_ptr);
    assume value_is(__ctobpl_const_5950, psh_unit_ptr);
    assume value_is(__ctobpl_const_5951, curr_ptr);
    assume value_is(__ctobpl_const_5952, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5953, curr_ptr);
    assume value_is(__ctobpl_const_5954, psh_ptr);
    assume value_is(__ctobpl_const_5955, psh_unit_ptr);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6292} true;
    error := result.pshdef1$12;
    assume value_is(__ctobpl_const_5956, error);
    assume value_is(__ctobpl_const_5957, result.pshdef1$12);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6294} true;
    goto label_91_true, label_91_false;

  label_91_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5958, error);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6299} true;
    goto label_92_true, label_92_false;

  label_92_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5963, error);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6305} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.pscdef1$15 := pscdef1(Mem_T.Pcharac[curr_ptr], curr_ptr, psc_ptr, psc_unit_ptr);
    assume value_is(__ctobpl_const_5964, curr_ptr);
    assume value_is(__ctobpl_const_5965, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5966, curr_ptr);
    assume value_is(__ctobpl_const_5967, psc_ptr);
    assume value_is(__ctobpl_const_5968, psc_unit_ptr);
    assume value_is(__ctobpl_const_5969, curr_ptr);
    assume value_is(__ctobpl_const_5970, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5971, curr_ptr);
    assume value_is(__ctobpl_const_5972, psc_ptr);
    assume value_is(__ctobpl_const_5973, psc_unit_ptr);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6305} true;
    error := result.pscdef1$15;
    assume value_is(__ctobpl_const_5974, error);
    assume value_is(__ctobpl_const_5975, result.pscdef1$15);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6307} true;
    goto label_104_true, label_104_false;

  label_104_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5976, error);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6312} true;
    goto label_105_true, label_105_false;

  label_105_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5981, error);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6318} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.ppadef1$18 := ppadef1(Mem_T.Pcharac[curr_ptr], curr_ptr, ppa_ptr, ppa_unit_ptr);
    assume value_is(__ctobpl_const_5982, curr_ptr);
    assume value_is(__ctobpl_const_5983, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5984, curr_ptr);
    assume value_is(__ctobpl_const_5985, ppa_ptr);
    assume value_is(__ctobpl_const_5986, ppa_unit_ptr);
    assume value_is(__ctobpl_const_5987, curr_ptr);
    assume value_is(__ctobpl_const_5988, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_5989, curr_ptr);
    assume value_is(__ctobpl_const_5990, ppa_ptr);
    assume value_is(__ctobpl_const_5991, ppa_unit_ptr);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6318} true;
    error := result.ppadef1$18;
    assume value_is(__ctobpl_const_5992, error);
    assume value_is(__ctobpl_const_5993, result.ppadef1$18);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6320} true;
    goto label_117_true, label_117_false;

  label_117_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5994, error);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6325} true;
    goto label_118_true, label_118_false;

  label_118_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5999, error);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6331} true;
    assert PORT_PTR != 0;
    Mem_T.AMP_Port := Mem_T.AMP_Port[AMP_Port(PORT_PTR) := Mem_T.FLOAT[amp]];
    assume value_is(__ctobpl_const_6000, PORT_PTR);
    assume value_is(__ctobpl_const_6001, Mem_T.AMP_Port[AMP_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6002, Mem_T.FLOAT[amp]);
    goto label_127;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6332} true;
    assert PORT_PTR != 0;
    Mem_T.AMP_UNIT_Port := Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(PORT_PTR) := Mem_T.INT4[amp_unit]];
    assume value_is(__ctobpl_const_6003, PORT_PTR);
    assume value_is(__ctobpl_const_6004, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6005, Mem_T.INT4[amp_unit]);
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6333} true;
    assert PORT_PTR != 0;
    Mem_T.PSC_Port := Mem_T.PSC_Port[PSC_Port(PORT_PTR) := Mem_T.FLOAT[psc]];
    assume value_is(__ctobpl_const_6006, PORT_PTR);
    assume value_is(__ctobpl_const_6007, Mem_T.PSC_Port[PSC_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6008, Mem_T.FLOAT[psc]);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6334} true;
    assert PORT_PTR != 0;
    Mem_T.PSC_UNIT_Port := Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(PORT_PTR) := Mem_T.INT4[psc_unit]];
    assume value_is(__ctobpl_const_6009, PORT_PTR);
    assume value_is(__ctobpl_const_6010, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6011, Mem_T.INT4[psc_unit]);
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6335} true;
    assert PORT_PTR != 0;
    Mem_T.PSH_Port := Mem_T.PSH_Port[PSH_Port(PORT_PTR) := Mem_T.FLOAT[psh]];
    assume value_is(__ctobpl_const_6012, PORT_PTR);
    assume value_is(__ctobpl_const_6013, Mem_T.PSH_Port[PSH_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6014, Mem_T.FLOAT[psh]);
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6336} true;
    assert PORT_PTR != 0;
    Mem_T.PSH_UNIT_Port := Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(PORT_PTR) := Mem_T.INT4[psh_unit]];
    assume value_is(__ctobpl_const_6015, PORT_PTR);
    assume value_is(__ctobpl_const_6016, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6017, Mem_T.INT4[psh_unit]);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6337} true;
    assert PORT_PTR != 0;
    Mem_T.PPA_Port := Mem_T.PPA_Port[PPA_Port(PORT_PTR) := Mem_T.FLOAT[ppa]];
    assume value_is(__ctobpl_const_6018, PORT_PTR);
    assume value_is(__ctobpl_const_6019, Mem_T.PPA_Port[PPA_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6020, Mem_T.FLOAT[ppa]);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6338} true;
    assert PORT_PTR != 0;
    Mem_T.PPA_UNIT_Port := Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(PORT_PTR) := Mem_T.INT4[ppa_unit]];
    assume value_is(__ctobpl_const_6021, PORT_PTR);
    assume value_is(__ctobpl_const_6022, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6023, Mem_T.INT4[ppa_unit]);
    goto label_134;

  label_134:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6339} true;
    assert PORT_PTR != 0;
    Mem_T.PHEPOL_Port := Mem_T.PHEPOL_Port[PHEPOL_Port(PORT_PTR) := Mem_T.FLOAT[phepol]];
    assume value_is(__ctobpl_const_6024, PORT_PTR);
    assume value_is(__ctobpl_const_6025, Mem_T.PHEPOL_Port[PHEPOL_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6026, Mem_T.FLOAT[phepol]);
    goto label_135;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6340} true;
    assert PORT_PTR != 0;
    Mem_T.PHEPOL_UNIT_Port := Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(PORT_PTR) := Mem_T.INT4[phepol_unit]];
    assume value_is(__ctobpl_const_6027, PORT_PTR);
    assume value_is(__ctobpl_const_6028, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6029, Mem_T.INT4[phepol_unit]);
    goto label_136;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6341} true;
    assert PORT_PTR != 0;
    Mem_T.OMIT_POL_Port := Mem_T.OMIT_POL_Port[OMIT_POL_Port(PORT_PTR) := Mem_T.INT4[omit_pol]];
    assume value_is(__ctobpl_const_6030, PORT_PTR);
    assume value_is(__ctobpl_const_6031, Mem_T.OMIT_POL_Port[OMIT_POL_Port(PORT_PTR)]);
    assume value_is(__ctobpl_const_6032, Mem_T.INT4[omit_pol]);
    goto label_137;

  label_137:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6344} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6033, pp2);
    assume value_is(__ctobpl_const_6034, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6035, curr_ptr);
    assume value_is(__ctobpl_const_6036, Mem_T.Pcharac[curr_ptr]);
    goto label_138;

  label_138:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6345} true;
    result.portdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6346} true;
    call __HAVOC_free(amp);
    call __HAVOC_free(amp_unit);
    call __HAVOC_free(curr);
    call __HAVOC_free(omit_pol);
    call __HAVOC_free(phepol);
    call __HAVOC_free(phepol_unit);
    call __HAVOC_free(ppa);
    call __HAVOC_free(ppa_unit);
    call __HAVOC_free(psc);
    call __HAVOC_free(psc_unit);
    call __HAVOC_free(psh);
    call __HAVOC_free(psh_unit);
    return;

  label_118_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5999, error);
    goto label_122;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6326} true;
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6326} true;
    call result.printf$19 := det_choice();
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6327} true;
    result.portdef$1 := 17;
    goto label_1;

  label_117_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5994, error);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6321} true;
    assert ppa_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[ppa_ptr := 0];
    assume value_is(__ctobpl_const_5995, ppa_ptr);
    assume value_is(__ctobpl_const_5996, Mem_T.FLOAT[ppa_ptr]);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6322} true;
    assert ppa_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[ppa_unit_ptr := 0];
    assume value_is(__ctobpl_const_5997, ppa_unit_ptr);
    assume value_is(__ctobpl_const_5998, Mem_T.INT4[ppa_unit_ptr]);
    goto label_118;

  label_105_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5981, error);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6313} true;
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6313} true;
    call result.printf$16 := det_choice();
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6314} true;
    result.portdef$1 := 17;
    goto label_1;

  label_104_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5976, error);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6308} true;
    assert psc_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[psc_ptr := 0];
    assume value_is(__ctobpl_const_5977, psc_ptr);
    assume value_is(__ctobpl_const_5978, Mem_T.FLOAT[psc_ptr]);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6309} true;
    assert psc_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[psc_unit_ptr := 0];
    assume value_is(__ctobpl_const_5979, psc_unit_ptr);
    assume value_is(__ctobpl_const_5980, Mem_T.INT4[psc_unit_ptr]);
    goto label_105;

  label_92_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5963, error);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6300} true;
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6300} true;
    call result.printf$13 := det_choice();
    goto label_102;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6301} true;
    result.portdef$1 := 17;
    goto label_1;

  label_91_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5958, error);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6295} true;
    assert psh_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[psh_ptr := 0];
    assume value_is(__ctobpl_const_5959, psh_ptr);
    assume value_is(__ctobpl_const_5960, Mem_T.FLOAT[psh_ptr]);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6296} true;
    assert psh_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[psh_unit_ptr := 0];
    assume value_is(__ctobpl_const_5961, psh_unit_ptr);
    assume value_is(__ctobpl_const_5962, Mem_T.INT4[psh_unit_ptr]);
    goto label_92;

  label_81_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5945, error);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6287} true;
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6287} true;
    call result.printf$10 := det_choice();
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6288} true;
    result.portdef$1 := 17;
    goto label_1;

  label_68_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_5932, error);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6278} true;
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6278} true;
    call result.printf$7 := det_choice();
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6279} true;
    result.portdef$1 := 17;
    goto label_1;

  label_67_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_5925, error);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6271} true;
    assert omit_pol_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_pol_ptr := 1];
    assume value_is(__ctobpl_const_5926, omit_pol_ptr);
    assume value_is(__ctobpl_const_5927, Mem_T.INT4[omit_pol_ptr]);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6272} true;
    assert phepol_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[phepol_ptr := 90];
    assume value_is(__ctobpl_const_5928, phepol_ptr);
    assume value_is(__ctobpl_const_5929, Mem_T.FLOAT[phepol_ptr]);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6273} true;
    assert phepol_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[phepol_unit_ptr := 0];
    assume value_is(__ctobpl_const_5930, phepol_unit_ptr);
    assume value_is(__ctobpl_const_5931, Mem_T.INT4[phepol_unit_ptr]);
    goto label_68;

  label_57_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5910, error);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6258} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_6037, curr_ptr);
    assume value_is(__ctobpl_const_6038, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6039, error);
    assume value_is(__ctobpl_const_6040, curr_ptr);
    assume value_is(__ctobpl_const_6041, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6042, error);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6260} true;
    result.portdef$1 := 17;
    goto label_1;

  label_47_true:
    assume error != 0;
    assume value_is(__ctobpl_const_5899, error);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6250} true;
    $parserro.arg.3$4$ := PLUS(Keywords, 21, 40);
    assume value_is(__ctobpl_const_6043, $parserro.arg.3$4$);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6250} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 1, $parserro.arg.3$4$);
    assume value_is(__ctobpl_const_6044, curr_ptr);
    assume value_is(__ctobpl_const_6045, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6046, $parserro.arg.3$4$);
    assume value_is(__ctobpl_const_6047, curr_ptr);
    assume value_is(__ctobpl_const_6048, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6049, $parserro.arg.3$4$);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6252} true;
    result.portdef$1 := 1;
    goto label_1;
}



procedure {:extern} portspec(p1.__1: int, pp2.__1: int, nports_ptr.__1: int, port_ptr.__1: int) returns (result.portspec$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} portspec(p1.__1: int, pp2.__1: int, nports_ptr.__1: int, port_ptr.__1: int) returns (result.portspec$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} app_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} n: int;
  var {:extern} nports_ptr: int;
  var {:extern} p1: int;
  var {:extern} port_ptr: int;
  var {:extern} portnum: int;
  var {:extern} portnum_ptr: int;
  var {:extern} pp2: int;
  var {:extern} primo_ptr: int;
  var {:extern} $printf.arg.2$8$: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetNatur$4: int;
  var {:extern} result.malloc$5: int;
  var {:extern} result.portdef$6: int;
  var {:extern} result.printf$7: int;
  var {:extern} ultimo_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(nports_ptr.__1, alloc);
    assume INT_LT(port_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    app_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    n := 0;
    nports_ptr := 0;
    p1 := 0;
    port_ptr := 0;
    call portnum := __HAVOC_det_malloc(4);
    portnum_ptr := 0;
    pp2 := 0;
    primo_ptr := 0;
    $printf.arg.2$8$ := 0;
    result.GetKeyword$2 := 0;
    result.GetNatur$4 := 0;
    result.malloc$5 := 0;
    result.portdef$6 := 0;
    result.portspec$1 := 0;
    result.printf$7 := 0;
    ultimo_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    nports_ptr := nports_ptr.__1;
    port_ptr := port_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6362} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6362} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6362} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_6050, curr_ptr);
    assume value_is(__ctobpl_const_6051, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6363} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6363} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6364} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6364} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6364} true;
    portnum_ptr := portnum;
    assume value_is(__ctobpl_const_6052, portnum_ptr);
    assume value_is(__ctobpl_const_6053, Mem_T.INT4[portnum]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6367} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6367} true;
    primo_ptr := 0;
    assume value_is(__ctobpl_const_6054, primo_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6367} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6367} true;
    ultimo_ptr := 0;
    assume value_is(__ctobpl_const_6055, ultimo_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6367} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6367} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_6056, app_ptr);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6374} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_6057, curr_ptr);
    assume value_is(__ctobpl_const_6058, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6059, p1);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6375} true;
    error := 0;
    assume value_is(__ctobpl_const_6060, error);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6378} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 39);
    assume value_is(__ctobpl_const_6061, $GetKeyword.arg.1$3$);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6378} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_6062, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6063, curr_ptr);
    assume value_is(__ctobpl_const_6064, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6065, curr_ptr);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6378} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_6066, error);
    assume value_is(__ctobpl_const_6067, result.GetKeyword$2);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6379} true;
    goto label_24_true, label_24_false;

  label_24_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6068, error);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6384} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.GetNatur$4 := GetNatur(Mem_T.Pcharac[curr_ptr], curr_ptr, nports_ptr);
    assume value_is(__ctobpl_const_6069, curr_ptr);
    assume value_is(__ctobpl_const_6070, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6071, curr_ptr);
    assume value_is(__ctobpl_const_6072, nports_ptr);
    assume value_is(__ctobpl_const_6073, curr_ptr);
    assume value_is(__ctobpl_const_6074, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6075, curr_ptr);
    assume value_is(__ctobpl_const_6076, nports_ptr);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6384} true;
    error := result.GetNatur$4;
    assume value_is(__ctobpl_const_6077, error);
    assume value_is(__ctobpl_const_6078, result.GetNatur$4);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6385} true;
    goto label_30_true, label_30_false;

  label_30_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6079, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6395} true;
    n := 1;
    assume value_is(__ctobpl_const_6080, n);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6395} true;
    goto label_37_head;

  label_37_head:
    call app_ptr, error, n, primo_ptr, result.malloc$5, result.portdef$6, ultimo_ptr := portspec_loop_label_37_head(havoc_stringTemp, app_ptr, curr_ptr, error, n, nports_ptr, portnum_ptr, primo_ptr, result.malloc$5, result.portdef$6, ultimo_ptr);
    goto label_37_head_last;

  label_37_false:
    assume !INT_LEQ(n, Mem_T.INT4[nports_ptr]);
    assume value_is(__ctobpl_const_6081, n);
    assume value_is(__ctobpl_const_6082, nports_ptr);
    assume value_is(__ctobpl_const_6083, Mem_T.INT4[nports_ptr]);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6441} true;
    assert port_ptr != 0;
    Mem_T.PPort := Mem_T.PPort[port_ptr := primo_ptr];
    assume value_is(__ctobpl_const_6084, port_ptr);
    assume value_is(__ctobpl_const_6085, Mem_T.PPort[port_ptr]);
    assume value_is(__ctobpl_const_6086, primo_ptr);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6444} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6087, pp2);
    assume value_is(__ctobpl_const_6088, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6089, curr_ptr);
    assume value_is(__ctobpl_const_6090, Mem_T.Pcharac[curr_ptr]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6445} true;
    result.portspec$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6446} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(portnum);
    return;

  label_37_true:
    assume INT_LEQ(n, Mem_T.INT4[nports_ptr]);
    assume value_is(__ctobpl_const_6081, n);
    assume value_is(__ctobpl_const_6082, nports_ptr);
    assume value_is(__ctobpl_const_6083, Mem_T.INT4[nports_ptr]);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6397} true;
    call result.malloc$5 := __HAVOC_det_malloc(96);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6397} true;
    app_ptr := result.malloc$5;
    assume value_is(__ctobpl_const_6091, app_ptr);
    assume value_is(__ctobpl_const_6092, result.malloc$5);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6399} true;
    goto label_43_true, label_43_false;

  label_43_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_6093, app_ptr);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6400} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_6094, curr_ptr);
    assume value_is(__ctobpl_const_6095, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6096, curr_ptr);
    assume value_is(__ctobpl_const_6097, Mem_T.Pcharac[curr_ptr]);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6402} true;
    call interror(havoc_stringTemp);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6404} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.portdef$6 := portdef(Mem_T.Pcharac[curr_ptr], curr_ptr, app_ptr, portnum_ptr);
    assume value_is(__ctobpl_const_6098, curr_ptr);
    assume value_is(__ctobpl_const_6099, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6100, curr_ptr);
    assume value_is(__ctobpl_const_6101, app_ptr);
    assume value_is(__ctobpl_const_6102, portnum_ptr);
    assume value_is(__ctobpl_const_6103, curr_ptr);
    assume value_is(__ctobpl_const_6104, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6105, curr_ptr);
    assume value_is(__ctobpl_const_6106, app_ptr);
    assume value_is(__ctobpl_const_6107, portnum_ptr);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6404} true;
    error := result.portdef$6;
    assume value_is(__ctobpl_const_6108, error);
    assume value_is(__ctobpl_const_6109, result.portdef$6);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6407} true;
    goto label_51_true, label_51_false;

  label_51_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_6110, error);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6413} true;
    goto label_52_true, label_52_false;

  label_52_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6111, error);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6420} true;
    assert app_ptr != 0;
    assert portnum_ptr != 0;
    Mem_T.PORTNUM_Port := Mem_T.PORTNUM_Port[PORTNUM_Port(app_ptr) := Mem_T.INT4[portnum_ptr]];
    assume value_is(__ctobpl_const_6112, app_ptr);
    assume value_is(__ctobpl_const_6113, Mem_T.PORTNUM_Port[PORTNUM_Port(app_ptr)]);
    assume value_is(__ctobpl_const_6114, portnum_ptr);
    assume value_is(__ctobpl_const_6115, Mem_T.INT4[portnum_ptr]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6425} true;
    goto label_63_true, label_63_false;

  label_63_false:
    assume primo_ptr == 0;
    assume value_is(__ctobpl_const_6116, primo_ptr);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6426} true;
    primo_ptr := app_ptr;
    assume value_is(__ctobpl_const_6117, primo_ptr);
    assume value_is(__ctobpl_const_6118, app_ptr);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6431} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_6122, ultimo_ptr);
    assume value_is(__ctobpl_const_6123, app_ptr);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6434} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Port := Mem_T.NEXT_Port[NEXT_Port(ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_6124, ultimo_ptr);
    assume value_is(__ctobpl_const_6125, Mem_T.NEXT_Port[NEXT_Port(ultimo_ptr)]);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6395} true;
    assume value_is(__ctobpl_const_6126, n);
    n := PLUS(n, 1, 1);
    goto label_68_dummy;

  label_63_true:
    assume primo_ptr != 0;
    assume value_is(__ctobpl_const_6116, primo_ptr);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6428} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Port := Mem_T.NEXT_Port[NEXT_Port(ultimo_ptr) := app_ptr];
    assume value_is(__ctobpl_const_6119, ultimo_ptr);
    assume value_is(__ctobpl_const_6120, Mem_T.NEXT_Port[NEXT_Port(ultimo_ptr)]);
    assume value_is(__ctobpl_const_6121, app_ptr);
    goto label_66;

  label_52_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6111, error);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6414} true;
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6414} true;
    call result.printf$7 := det_choice();
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6415} true;
    result.portspec$1 := 17;
    goto label_1;

  label_51_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_6110, error);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6408} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 46, havoc_stringTemp);
    assume value_is(__ctobpl_const_6127, curr_ptr);
    assume value_is(__ctobpl_const_6128, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6129, curr_ptr);
    assume value_is(__ctobpl_const_6130, Mem_T.Pcharac[curr_ptr]);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6410} true;
    result.portspec$1 := 17;
    goto label_1;

  label_43_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_6093, app_ptr);
    goto label_47;

  label_30_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6079, error);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6386} true;
    assert nports_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[nports_ptr := 0];
    assume value_is(__ctobpl_const_6131, nports_ptr);
    assume value_is(__ctobpl_const_6132, Mem_T.INT4[nports_ptr]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6387} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 93, havoc_stringTemp);
    assume value_is(__ctobpl_const_6133, curr_ptr);
    assume value_is(__ctobpl_const_6134, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6135, curr_ptr);
    assume value_is(__ctobpl_const_6136, Mem_T.Pcharac[curr_ptr]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6388} true;
    result.portspec$1 := 17;
    goto label_1;

  label_24_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6068, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6380} true;
    result.portspec$1 := 1;
    goto label_1;

  label_68_dummy:
    assume false;
    return;

  label_37_head_last:
    assert nports_ptr != 0;
    goto label_37_true, label_37_false;
}



procedure {:extern} ppadef1(p1.__1: int, pp2.__1: int, ppa_ptr.__1: int, ppa_unit_ptr.__1: int) returns (result.ppadef1$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} ppadef1(p1.__1: int, pp2.__1: int, ppa_ptr.__1: int, ppa_unit_ptr.__1: int) returns (result.ppadef1$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} ppa_ptr: int;
  var {:extern} ppa_unit_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.angval$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(ppa_ptr.__1, alloc);
    assume INT_LT(ppa_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    ppa_ptr := 0;
    ppa_unit_ptr := 0;
    result.GetKeyword$2 := 0;
    result.angval$4 := 0;
    result.ppadef1$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    ppa_ptr := ppa_ptr.__1;
    ppa_unit_ptr := ppa_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6460} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6460} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6460} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_6137, curr_ptr);
    assume value_is(__ctobpl_const_6138, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6461} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6468} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_6139, curr_ptr);
    assume value_is(__ctobpl_const_6140, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6141, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6469} true;
    error := 0;
    assume value_is(__ctobpl_const_6142, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6472} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 69);
    assume value_is(__ctobpl_const_6143, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6472} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_6144, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6145, curr_ptr);
    assume value_is(__ctobpl_const_6146, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6147, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6472} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_6148, error);
    assume value_is(__ctobpl_const_6149, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6473} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6150, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6478} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$4 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, ppa_ptr, ppa_unit_ptr);
    assume value_is(__ctobpl_const_6151, curr_ptr);
    assume value_is(__ctobpl_const_6152, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6153, curr_ptr);
    assume value_is(__ctobpl_const_6154, ppa_ptr);
    assume value_is(__ctobpl_const_6155, ppa_unit_ptr);
    assume value_is(__ctobpl_const_6156, curr_ptr);
    assume value_is(__ctobpl_const_6157, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6158, curr_ptr);
    assume value_is(__ctobpl_const_6159, ppa_ptr);
    assume value_is(__ctobpl_const_6160, ppa_unit_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6478} true;
    error := result.angval$4;
    assume value_is(__ctobpl_const_6161, error);
    assume value_is(__ctobpl_const_6162, result.angval$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6479} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6163, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6486} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6164, pp2);
    assume value_is(__ctobpl_const_6165, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6166, curr_ptr);
    assume value_is(__ctobpl_const_6167, Mem_T.Pcharac[curr_ptr]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6487} true;
    result.ppadef1$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6488} true;
    call __HAVOC_free(curr);
    return;

  label_20_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6163, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6480} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 37, havoc_stringTemp);
    assume value_is(__ctobpl_const_6168, curr_ptr);
    assume value_is(__ctobpl_const_6169, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6170, curr_ptr);
    assume value_is(__ctobpl_const_6171, Mem_T.Pcharac[curr_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6482} true;
    result.ppadef1$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6150, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6474} true;
    result.ppadef1$1 := 1;
    goto label_1;
}



procedure {:extern} pqlimits(gnode_ptr.__1: int, pmin_ptr.__1: int, pmax_ptr.__1: int, qmin_ptr.__1: int, qmax_ptr.__1: int) returns (result.pqlimits$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} pqlimits(gnode_ptr.__1: int, pmin_ptr.__1: int, pmax_ptr.__1: int, qmin_ptr.__1: int, qmax_ptr.__1: int) returns (result.pqlimits$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} app_ptr: int;
  var {:extern} gnode_ptr: int;
  var {:extern} pmax: int;
  var {:extern} pmax_ptr: int;
  var {:extern} pmin: int;
  var {:extern} pmin_ptr: int;
  var {:extern} qmax: int;
  var {:extern} qmax_ptr: int;
  var {:extern} qmin: int;
  var {:extern} qmin_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(gnode_ptr.__1, alloc);
    assume INT_LT(pmin_ptr.__1, alloc);
    assume INT_LT(pmax_ptr.__1, alloc);
    assume INT_LT(qmin_ptr.__1, alloc);
    assume INT_LT(qmax_ptr.__1, alloc);
    app_ptr := 0;
    gnode_ptr := 0;
    pmax := 0;
    pmax_ptr := 0;
    pmin := 0;
    pmin_ptr := 0;
    qmax := 0;
    qmax_ptr := 0;
    qmin := 0;
    qmin_ptr := 0;
    result.pqlimits$1 := 0;
    gnode_ptr := gnode_ptr.__1;
    pmin_ptr := pmin_ptr.__1;
    pmax_ptr := pmax_ptr.__1;
    qmin_ptr := qmin_ptr.__1;
    qmax_ptr := qmax_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6502} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6503} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6503} true;
    pmin := 2147483647;
    assume value_is(__ctobpl_const_6172, pmin);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6503} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6503} true;
    pmax := BOOGIE_LARGE_INT_NEG_2147483648;
    assume value_is(__ctobpl_const_6173, pmax);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6503} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6503} true;
    qmin := 2147483647;
    assume value_is(__ctobpl_const_6174, qmin);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6503} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6503} true;
    qmax := BOOGIE_LARGE_INT_NEG_2147483648;
    assume value_is(__ctobpl_const_6175, qmax);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6509} true;
    app_ptr := gnode_ptr;
    assume value_is(__ctobpl_const_6176, app_ptr);
    assume value_is(__ctobpl_const_6177, gnode_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6509} true;
    assert qmax_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[qmax_ptr := app_ptr];
    assume value_is(__ctobpl_const_6178, qmax_ptr);
    assume value_is(__ctobpl_const_6179, Mem_T.PGeomnode[qmax_ptr]);
    assume value_is(__ctobpl_const_6180, app_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6509} true;
    assert qmin_ptr != 0;
    assert qmax_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[qmin_ptr := Mem_T.PGeomnode[qmax_ptr]];
    assume value_is(__ctobpl_const_6181, qmin_ptr);
    assume value_is(__ctobpl_const_6182, Mem_T.PGeomnode[qmin_ptr]);
    assume value_is(__ctobpl_const_6183, qmax_ptr);
    assume value_is(__ctobpl_const_6184, Mem_T.PGeomnode[qmax_ptr]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6509} true;
    assert pmax_ptr != 0;
    assert qmin_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[pmax_ptr := Mem_T.PGeomnode[qmin_ptr]];
    assume value_is(__ctobpl_const_6185, pmax_ptr);
    assume value_is(__ctobpl_const_6186, Mem_T.PGeomnode[pmax_ptr]);
    assume value_is(__ctobpl_const_6187, qmin_ptr);
    assume value_is(__ctobpl_const_6188, Mem_T.PGeomnode[qmin_ptr]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6509} true;
    assert pmin_ptr != 0;
    assert pmax_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[pmin_ptr := Mem_T.PGeomnode[pmax_ptr]];
    assume value_is(__ctobpl_const_6189, pmin_ptr);
    assume value_is(__ctobpl_const_6190, Mem_T.PGeomnode[pmin_ptr]);
    assume value_is(__ctobpl_const_6191, pmax_ptr);
    assume value_is(__ctobpl_const_6192, Mem_T.PGeomnode[pmax_ptr]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6512} true;
    goto label_17_head;

  label_17_head:
    call app_ptr, pmax, pmin, qmax, qmin := pqlimits_loop_label_17_head(app_ptr, pmax, pmax_ptr, pmin, pmin_ptr, qmax, qmax_ptr, qmin, qmin_ptr);
    goto label_17_head_last;

  label_17_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_6193, app_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6534} true;
    result.pqlimits$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6535} true;
    return;

  label_17_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_6193, app_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6514} true;
    assert app_ptr != 0;
    goto label_19_true, label_19_false;

  label_19_false:
    assume !INT_LT(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)], pmin);
    assume value_is(__ctobpl_const_6194, app_ptr);
    assume value_is(__ctobpl_const_6195, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_6196, pmin);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6518} true;
    assert app_ptr != 0;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_LT(pmax, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_6203, pmax);
    assume value_is(__ctobpl_const_6204, app_ptr);
    assume value_is(__ctobpl_const_6205, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6522} true;
    assert app_ptr != 0;
    goto label_23_true, label_23_false;

  label_23_false:
    assume !INT_LT(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)], qmin);
    assume value_is(__ctobpl_const_6212, app_ptr);
    assume value_is(__ctobpl_const_6213, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_6214, qmin);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6526} true;
    assert app_ptr != 0;
    goto label_26_true, label_26_false;

  label_26_false:
    assume !INT_LT(qmax, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_6221, qmax);
    assume value_is(__ctobpl_const_6222, app_ptr);
    assume value_is(__ctobpl_const_6223, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6531} true;
    assert app_ptr != 0;
    app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_6230, app_ptr);
    assume value_is(__ctobpl_const_6231, app_ptr);
    assume value_is(__ctobpl_const_6232, Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr)]);
    goto label_29_dummy;

  label_26_true:
    assume INT_LT(qmax, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_6221, qmax);
    assume value_is(__ctobpl_const_6222, app_ptr);
    assume value_is(__ctobpl_const_6223, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6527} true;
    assert app_ptr != 0;
    qmax := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_6224, qmax);
    assume value_is(__ctobpl_const_6225, app_ptr);
    assume value_is(__ctobpl_const_6226, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6528} true;
    assert qmax_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[qmax_ptr := app_ptr];
    assume value_is(__ctobpl_const_6227, qmax_ptr);
    assume value_is(__ctobpl_const_6228, Mem_T.PGeomnode[qmax_ptr]);
    assume value_is(__ctobpl_const_6229, app_ptr);
    goto label_29;

  label_23_true:
    assume INT_LT(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)], qmin);
    assume value_is(__ctobpl_const_6212, app_ptr);
    assume value_is(__ctobpl_const_6213, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_6214, qmin);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6523} true;
    assert app_ptr != 0;
    qmin := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_6215, qmin);
    assume value_is(__ctobpl_const_6216, app_ptr);
    assume value_is(__ctobpl_const_6217, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(app_ptr)]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6524} true;
    assert qmin_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[qmin_ptr := app_ptr];
    assume value_is(__ctobpl_const_6218, qmin_ptr);
    assume value_is(__ctobpl_const_6219, Mem_T.PGeomnode[qmin_ptr]);
    assume value_is(__ctobpl_const_6220, app_ptr);
    goto label_26;

  label_20_true:
    assume INT_LT(pmax, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_6203, pmax);
    assume value_is(__ctobpl_const_6204, app_ptr);
    assume value_is(__ctobpl_const_6205, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6519} true;
    assert app_ptr != 0;
    pmax := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_6206, pmax);
    assume value_is(__ctobpl_const_6207, app_ptr);
    assume value_is(__ctobpl_const_6208, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6520} true;
    assert pmax_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[pmax_ptr := app_ptr];
    assume value_is(__ctobpl_const_6209, pmax_ptr);
    assume value_is(__ctobpl_const_6210, Mem_T.PGeomnode[pmax_ptr]);
    assume value_is(__ctobpl_const_6211, app_ptr);
    goto label_23;

  label_19_true:
    assume INT_LT(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)], pmin);
    assume value_is(__ctobpl_const_6194, app_ptr);
    assume value_is(__ctobpl_const_6195, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_6196, pmin);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6515} true;
    assert app_ptr != 0;
    pmin := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_6197, pmin);
    assume value_is(__ctobpl_const_6198, app_ptr);
    assume value_is(__ctobpl_const_6199, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(app_ptr)]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6516} true;
    assert pmin_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[pmin_ptr := app_ptr];
    assume value_is(__ctobpl_const_6200, pmin_ptr);
    assume value_is(__ctobpl_const_6201, Mem_T.PGeomnode[pmin_ptr]);
    assume value_is(__ctobpl_const_6202, app_ptr);
    goto label_20;

  label_29_dummy:
    assume false;
    return;

  label_17_head_last:
    goto label_17_true, label_17_false;
}



procedure {:extern} prnfile(firstel.__1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} prnfile(firstel.__1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} ch: int;
  var {:extern} firstel: int;
  var {:extern} line_num: int;
  var {:extern} p: int;
  var {:extern} $putchar.arg.1$4$: int;
  var {:extern} result.printf$1: int;
  var {:extern} result.printf$2: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.putchar$3: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(firstel.__1, alloc);
    ch := 0;
    firstel := 0;
    line_num := 0;
    p := 0;
    $putchar.arg.1$4$ := 0;
    result.printf$1 := 0;
    result.printf$2 := 0;
    result.printf$5 := 0;
    result.putchar$3 := 0;
    firstel := firstel.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6544} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6545} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6545} true;
    ch := 32;
    assume value_is(__ctobpl_const_6233, ch);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6546} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6546} true;
    line_num := 0;
    assume value_is(__ctobpl_const_6234, line_num);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6551} true;
    call result.printf$1 := det_choice();
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6553} true;
    p := firstel;
    assume value_is(__ctobpl_const_6235, p);
    assume value_is(__ctobpl_const_6236, firstel);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6554} true;
    goto label_12_head;

  label_12_head:
    call ch, line_num, p, $putchar.arg.1$4$, result.printf$2, result.putchar$3 := prnfile_loop_label_12_head(ch, line_num, p, $putchar.arg.1$4$, result.printf$2, result.putchar$3);
    goto label_12_head_last;

  label_12_false:
    assume Mem_T.NEXT_charac[NEXT_charac(p)] == 0;
    assume value_is(__ctobpl_const_6237, p);
    assume value_is(__ctobpl_const_6238, Mem_T.NEXT_charac[NEXT_charac(p)]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6565} true;
    call result.printf$5 := det_choice();
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6566} true;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6567} true;
    return;

  label_12_true:
    assume Mem_T.NEXT_charac[NEXT_charac(p)] != 0;
    assume value_is(__ctobpl_const_6237, p);
    assume value_is(__ctobpl_const_6238, Mem_T.NEXT_charac[NEXT_charac(p)]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6555} true;
    assert p != 0;
    ch := Mem_T.info_charac[info_charac(p)];
    assume value_is(__ctobpl_const_6239, ch);
    assume value_is(__ctobpl_const_6240, p);
    assume value_is(__ctobpl_const_6241, Mem_T.info_charac[info_charac(p)]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6557} true;
    assert p != 0;
    goto label_17_true, label_17_false;

  label_17_false:
    assume !INT_LT(line_num, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    assume value_is(__ctobpl_const_6242, line_num);
    assume value_is(__ctobpl_const_6243, p);
    assume value_is(__ctobpl_const_6244, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6561} true;
    $putchar.arg.1$4$ := ch;
    assume value_is(__ctobpl_const_6248, $putchar.arg.1$4$);
    assume value_is(__ctobpl_const_6249, ch);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6561} true;
    call result.putchar$3 := putchar($putchar.arg.1$4$);
    assume value_is(__ctobpl_const_6250, $putchar.arg.1$4$);
    assume value_is(__ctobpl_const_6251, $putchar.arg.1$4$);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6562} true;
    assert p != 0;
    p := Mem_T.NEXT_charac[NEXT_charac(p)];
    assume value_is(__ctobpl_const_6252, p);
    assume value_is(__ctobpl_const_6253, p);
    assume value_is(__ctobpl_const_6254, Mem_T.NEXT_charac[NEXT_charac(p)]);
    goto label_26_dummy;

  label_17_true:
    assume INT_LT(line_num, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    assume value_is(__ctobpl_const_6242, line_num);
    assume value_is(__ctobpl_const_6243, p);
    assume value_is(__ctobpl_const_6244, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6558} true;
    assert p != 0;
    line_num := Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)];
    assume value_is(__ctobpl_const_6245, line_num);
    assume value_is(__ctobpl_const_6246, p);
    assume value_is(__ctobpl_const_6247, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6559} true;
    call result.printf$2 := det_choice();
    goto label_18;

  label_26_dummy:
    assume false;
    return;

  label_12_head_last:
    assert p != 0;
    goto label_12_true, label_12_false;
}



procedure {:extern} pscdef1(p1.__1: int, pp2.__1: int, psc_ptr.__1: int, psc_unit_ptr.__1: int) returns (result.pscdef1$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} pscdef1(p1.__1: int, pp2.__1: int, psc_ptr.__1: int, psc_unit_ptr.__1: int) returns (result.pscdef1$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} psc_ptr: int;
  var {:extern} psc_unit_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.angval$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(psc_ptr.__1, alloc);
    assume INT_LT(psc_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    psc_ptr := 0;
    psc_unit_ptr := 0;
    result.GetKeyword$2 := 0;
    result.angval$4 := 0;
    result.pscdef1$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    psc_ptr := psc_ptr.__1;
    psc_unit_ptr := psc_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6579} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6579} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6579} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_6255, curr_ptr);
    assume value_is(__ctobpl_const_6256, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6580} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6587} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_6257, curr_ptr);
    assume value_is(__ctobpl_const_6258, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6259, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6588} true;
    error := 0;
    assume value_is(__ctobpl_const_6260, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6591} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 68);
    assume value_is(__ctobpl_const_6261, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6591} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_6262, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6263, curr_ptr);
    assume value_is(__ctobpl_const_6264, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6265, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6591} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_6266, error);
    assume value_is(__ctobpl_const_6267, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6592} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6268, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6597} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$4 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, psc_ptr, psc_unit_ptr);
    assume value_is(__ctobpl_const_6269, curr_ptr);
    assume value_is(__ctobpl_const_6270, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6271, curr_ptr);
    assume value_is(__ctobpl_const_6272, psc_ptr);
    assume value_is(__ctobpl_const_6273, psc_unit_ptr);
    assume value_is(__ctobpl_const_6274, curr_ptr);
    assume value_is(__ctobpl_const_6275, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6276, curr_ptr);
    assume value_is(__ctobpl_const_6277, psc_ptr);
    assume value_is(__ctobpl_const_6278, psc_unit_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6597} true;
    error := result.angval$4;
    assume value_is(__ctobpl_const_6279, error);
    assume value_is(__ctobpl_const_6280, result.angval$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6598} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6281, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6605} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6282, pp2);
    assume value_is(__ctobpl_const_6283, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6284, curr_ptr);
    assume value_is(__ctobpl_const_6285, Mem_T.Pcharac[curr_ptr]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6606} true;
    result.pscdef1$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6607} true;
    call __HAVOC_free(curr);
    return;

  label_20_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6281, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6599} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 37, havoc_stringTemp);
    assume value_is(__ctobpl_const_6286, curr_ptr);
    assume value_is(__ctobpl_const_6287, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6288, curr_ptr);
    assume value_is(__ctobpl_const_6289, Mem_T.Pcharac[curr_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6601} true;
    result.pscdef1$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6268, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6593} true;
    result.pscdef1$1 := 1;
    goto label_1;
}



procedure {:extern} pshdef1(p1.__1: int, pp2.__1: int, psh_ptr.__1: int, psh_unit_ptr.__1: int) returns (result.pshdef1$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} pshdef1(p1.__1: int, pp2.__1: int, psh_ptr.__1: int, psh_unit_ptr.__1: int) returns (result.pshdef1$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} psh_ptr: int;
  var {:extern} psh_unit_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.angval$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(psh_ptr.__1, alloc);
    assume INT_LT(psh_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    psh_ptr := 0;
    psh_unit_ptr := 0;
    result.GetKeyword$2 := 0;
    result.angval$4 := 0;
    result.pshdef1$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    psh_ptr := psh_ptr.__1;
    psh_unit_ptr := psh_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6621} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6621} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6621} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_6290, curr_ptr);
    assume value_is(__ctobpl_const_6291, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6622} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6629} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_6292, curr_ptr);
    assume value_is(__ctobpl_const_6293, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6294, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6630} true;
    error := 0;
    assume value_is(__ctobpl_const_6295, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6633} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 67);
    assume value_is(__ctobpl_const_6296, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6633} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_6297, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6298, curr_ptr);
    assume value_is(__ctobpl_const_6299, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6300, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6633} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_6301, error);
    assume value_is(__ctobpl_const_6302, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6634} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6303, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6639} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$4 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, psh_ptr, psh_unit_ptr);
    assume value_is(__ctobpl_const_6304, curr_ptr);
    assume value_is(__ctobpl_const_6305, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6306, curr_ptr);
    assume value_is(__ctobpl_const_6307, psh_ptr);
    assume value_is(__ctobpl_const_6308, psh_unit_ptr);
    assume value_is(__ctobpl_const_6309, curr_ptr);
    assume value_is(__ctobpl_const_6310, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6311, curr_ptr);
    assume value_is(__ctobpl_const_6312, psh_ptr);
    assume value_is(__ctobpl_const_6313, psh_unit_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6639} true;
    error := result.angval$4;
    assume value_is(__ctobpl_const_6314, error);
    assume value_is(__ctobpl_const_6315, result.angval$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6640} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6316, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6647} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6317, pp2);
    assume value_is(__ctobpl_const_6318, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6319, curr_ptr);
    assume value_is(__ctobpl_const_6320, Mem_T.Pcharac[curr_ptr]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6648} true;
    result.pshdef1$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6649} true;
    call __HAVOC_free(curr);
    return;

  label_20_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6316, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6641} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 37, havoc_stringTemp);
    assume value_is(__ctobpl_const_6321, curr_ptr);
    assume value_is(__ctobpl_const_6322, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6323, curr_ptr);
    assume value_is(__ctobpl_const_6324, Mem_T.Pcharac[curr_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6643} true;
    result.pshdef1$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6303, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6635} true;
    result.pshdef1$1 := 1;
    goto label_1;
}



procedure {:extern} readfil3(filename.__1: int, firstel.__1: int, lastel.__1: int) returns (result.readfil3$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} readfil3(filename.__1: int, firstel.__1: int, lastel.__1: int) returns (result.readfil3$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} CR: int;
  var {:extern} adlfilename: int;
  var {:extern} c: int;
  var {:extern} f: int;
  var {:extern} filename: int;
  var {:extern} firstel: int;
  var {:extern} $isspace.arg.1$13$: int;
  var {:extern} $isspace.arg.1$21$: int;
  var {:extern} $isspace.arg.1$24$: int;
  var {:extern} lastel: int;
  var {:extern} line_num: int;
  var {:extern} p: int;
  var {:extern} $printf.arg.2$11$: int;
  var {:extern} $printf.arg.2$17$: int;
  var {:extern} $printf.arg.2$27$: int;
  var {:extern} $printf.arg.2$30$: int;
  var {:extern} $printf.arg.2$7$: int;
  var {:extern} $printf.arg.3$10$: int;
  var {:extern} $printf.arg.3$6$: int;
  var {:extern} result.fclose$32: int;
  var {:extern} result.fopen$4: int;
  var {:extern} result.getc$8: int;
  var {:extern} result.getc$14: int;
  var {:extern} result.getc$19: int;
  var {:extern} result.getc$22: int;
  var {:extern} result.getc$31: int;
  var {:extern} result.isspace$12: int;
  var {:extern} result.isspace$20: int;
  var {:extern} result.isspace$23: int;
  var {:extern} result.malloc$15: int;
  var {:extern} result.malloc$25: int;
  var {:extern} result.malloc$28: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.printf$9: int;
  var {:extern} result.printf$16: int;
  var {:extern} result.printf$18: int;
  var {:extern} result.printf$26: int;
  var {:extern} result.printf$29: int;
  var {:extern} result.strcat$3: int;
  var {:extern} result.strcpy$2: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(filename.__1, alloc);
    assume INT_LT(firstel.__1, alloc);
    assume INT_LT(lastel.__1, alloc);
    CR := 0;
    call adlfilename := __HAVOC_det_malloc(31);
    c := 0;
    f := 0;
    filename := 0;
    firstel := 0;
    $isspace.arg.1$13$ := 0;
    $isspace.arg.1$21$ := 0;
    $isspace.arg.1$24$ := 0;
    lastel := 0;
    line_num := 0;
    p := 0;
    $printf.arg.2$11$ := 0;
    $printf.arg.2$17$ := 0;
    $printf.arg.2$27$ := 0;
    $printf.arg.2$30$ := 0;
    $printf.arg.2$7$ := 0;
    $printf.arg.3$10$ := 0;
    $printf.arg.3$6$ := 0;
    result.fclose$32 := 0;
    result.fopen$4 := 0;
    result.getc$8 := 0;
    result.getc$14 := 0;
    result.getc$19 := 0;
    result.getc$22 := 0;
    result.getc$31 := 0;
    result.isspace$12 := 0;
    result.isspace$20 := 0;
    result.isspace$23 := 0;
    result.malloc$15 := 0;
    result.malloc$25 := 0;
    result.malloc$28 := 0;
    result.printf$5 := 0;
    result.printf$9 := 0;
    result.printf$16 := 0;
    result.printf$18 := 0;
    result.printf$26 := 0;
    result.printf$29 := 0;
    result.readfil3$1 := 0;
    result.strcat$3 := 0;
    result.strcpy$2 := 0;
    filename := filename.__1;
    firstel := firstel.__1;
    lastel := lastel.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6656} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6657} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6658} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6659} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6659} true;
    line_num := 1;
    assume value_is(__ctobpl_const_6325, line_num);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6660} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6660} true;
    CR := 10;
    assume value_is(__ctobpl_const_6326, CR);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6661} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6667} true;
    assert firstel != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[firstel := 0];
    assume value_is(__ctobpl_const_6327, firstel);
    assume value_is(__ctobpl_const_6328, Mem_T.Pcharac[firstel]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6668} true;
    assert lastel != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[lastel := 0];
    assume value_is(__ctobpl_const_6329, lastel);
    assume value_is(__ctobpl_const_6330, Mem_T.Pcharac[lastel]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6671} true;
    call result.strcpy$2 := strcpy(adlfilename, filename);
    assume value_is(__ctobpl_const_6331, filename);
    assume value_is(__ctobpl_const_6332, filename);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6672} true;
    call result.strcat$3 := strcat(adlfilename, havoc_stringTemp);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6673} true;
    call result.fopen$4 := fopen(adlfilename, havoc_stringTemp);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6673} true;
    f := result.fopen$4;
    assume value_is(__ctobpl_const_6333, f);
    assume value_is(__ctobpl_const_6334, result.fopen$4);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6673} true;
    goto label_23_true, label_23_false;

  label_23_false:
    assume f == 0;
    assume value_is(__ctobpl_const_6335, f);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6674} true;
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6674} true;
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6674} true;
    call result.printf$5 := det_choice();
    goto label_134;

  label_134:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6675} true;
    result.readfil3$1 := 21;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6753} true;
    call __HAVOC_free(adlfilename);
    return;

  label_23_true:
    assume f != 0;
    assume value_is(__ctobpl_const_6335, f);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6679} true;
    call result.getc$8 := getc(f);
    assume value_is(__ctobpl_const_6336, f);
    assume value_is(__ctobpl_const_6337, f);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6679} true;
    c := result.getc$8;
    assume value_is(__ctobpl_const_6338, c);
    assume value_is(__ctobpl_const_6339, result.getc$8);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6681} true;
    goto label_29_true, label_29_false;

  label_29_false:
    assume !INT_EQ(c, -1);
    assume value_is(__ctobpl_const_6340, c);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6687} true;
    goto label_30_head;

  label_30_head:
    call c, $isspace.arg.1$13$, line_num, result.getc$14, result.isspace$12 := readfil3_loop_label_30_head(CR, c, f, $isspace.arg.1$13$, line_num, result.getc$14, result.isspace$12);
    goto label_30_head_last;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6687} true;
    call result.isspace$12 := isspace($isspace.arg.1$13$);
    assume value_is(__ctobpl_const_6343, $isspace.arg.1$13$);
    assume value_is(__ctobpl_const_6344, $isspace.arg.1$13$);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6687} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume result.isspace$12 == 0;
    assume value_is(__ctobpl_const_6345, result.isspace$12);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6687} true;
    goto label_41_true, label_41_false;

  label_41_false:
    assume !INT_EQ(c, 44);
    assume value_is(__ctobpl_const_6346, c);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6693} true;
    call result.malloc$15 := __HAVOC_det_malloc(16);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6693} true;
    p := result.malloc$15;
    assume value_is(__ctobpl_const_6347, p);
    assume value_is(__ctobpl_const_6348, result.malloc$15);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6694} true;
    goto label_52_true, label_52_false;

  label_52_false:
    assume p == 0;
    assume value_is(__ctobpl_const_6349, p);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6695} true;
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6695} true;
    call result.printf$16 := det_choice();
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6696} true;
    result.readfil3$1 := 22;
    goto label_1;

  label_52_true:
    assume p != 0;
    assume value_is(__ctobpl_const_6349, p);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6699} true;
    assert p != 0;
    Mem_T.info_charac := Mem_T.info_charac[info_charac(p) := c];
    assume value_is(__ctobpl_const_6350, p);
    assume value_is(__ctobpl_const_6351, Mem_T.info_charac[info_charac(p)]);
    assume value_is(__ctobpl_const_6352, c);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6700} true;
    assert p != 0;
    Mem_T.LINE_NUM_charac := Mem_T.LINE_NUM_charac[LINE_NUM_charac(p) := line_num];
    assume value_is(__ctobpl_const_6353, p);
    assume value_is(__ctobpl_const_6354, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    assume value_is(__ctobpl_const_6355, line_num);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6701} true;
    assert p != 0;
    Mem_T.PREV_charac := Mem_T.PREV_charac[PREV_charac(p) := 0];
    assume value_is(__ctobpl_const_6356, p);
    assume value_is(__ctobpl_const_6357, Mem_T.PREV_charac[PREV_charac(p)]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6702} true;
    assert p != 0;
    Mem_T.NEXT_charac := Mem_T.NEXT_charac[NEXT_charac(p) := 0];
    assume value_is(__ctobpl_const_6358, p);
    assume value_is(__ctobpl_const_6359, Mem_T.NEXT_charac[NEXT_charac(p)]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6704} true;
    assert firstel != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[firstel := p];
    assume value_is(__ctobpl_const_6360, firstel);
    assume value_is(__ctobpl_const_6361, Mem_T.Pcharac[firstel]);
    assume value_is(__ctobpl_const_6362, p);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6705} true;
    assert lastel != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[lastel := p];
    assume value_is(__ctobpl_const_6363, lastel);
    assume value_is(__ctobpl_const_6364, Mem_T.Pcharac[lastel]);
    assume value_is(__ctobpl_const_6365, p);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6706} true;
    call result.printf$18 := det_choice();
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6708} true;
    call result.getc$19 := getc(f);
    assume value_is(__ctobpl_const_6366, f);
    assume value_is(__ctobpl_const_6367, f);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6708} true;
    c := result.getc$19;
    assume value_is(__ctobpl_const_6368, c);
    assume value_is(__ctobpl_const_6369, result.getc$19);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6711} true;
    goto label_67_head;

  label_67_head:
    call c, $isspace.arg.1$21$, $isspace.arg.1$24$, line_num, p, result.getc$22, result.getc$31, result.isspace$20, result.isspace$23, result.malloc$25, result.malloc$28 := readfil3_loop_label_67_head(CR, c, f, $isspace.arg.1$21$, $isspace.arg.1$24$, lastel, line_num, p, result.getc$22, result.getc$31, result.isspace$20, result.isspace$23, result.malloc$25, result.malloc$28);
    goto label_67_head_last;

  label_67_false:
    assume !INT_NEQ(c, -1);
    assume value_is(__ctobpl_const_6370, c);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6751} true;
    call result.fclose$32 := fclose(f);
    assume value_is(__ctobpl_const_6371, f);
    assume value_is(__ctobpl_const_6372, f);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6752} true;
    result.readfil3$1 := 0;
    goto label_1;

  label_67_true:
    assume INT_NEQ(c, -1);
    assume value_is(__ctobpl_const_6370, c);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6712} true;
    $isspace.arg.1$21$ := c;
    assume value_is(__ctobpl_const_6373, $isspace.arg.1$21$);
    assume value_is(__ctobpl_const_6374, c);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6712} true;
    call result.isspace$20 := isspace($isspace.arg.1$21$);
    assume value_is(__ctobpl_const_6375, $isspace.arg.1$21$);
    assume value_is(__ctobpl_const_6376, $isspace.arg.1$21$);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6712} true;
    goto label_75_true, label_75_false;

  label_75_false:
    assume result.isspace$20 == 0;
    assume value_is(__ctobpl_const_6377, result.isspace$20);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6712} true;
    goto label_76_true, label_76_false;

  label_76_false:
    assume !INT_EQ(c, 44);
    assume value_is(__ctobpl_const_6378, c);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6732} true;
    call result.malloc$28 := __HAVOC_det_malloc(16);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6732} true;
    p := result.malloc$28;
    assume value_is(__ctobpl_const_6379, p);
    assume value_is(__ctobpl_const_6380, result.malloc$28);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6733} true;
    goto label_109_true, label_109_false;

  label_109_false:
    assume p == 0;
    assume value_is(__ctobpl_const_6381, p);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6734} true;
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6734} true;
    call result.printf$29 := det_choice();
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6735} true;
    result.readfil3$1 := 22;
    goto label_1;

  label_109_true:
    assume p != 0;
    assume value_is(__ctobpl_const_6381, p);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6738} true;
    assert p != 0;
    Mem_T.info_charac := Mem_T.info_charac[info_charac(p) := c];
    assume value_is(__ctobpl_const_6382, p);
    assume value_is(__ctobpl_const_6383, Mem_T.info_charac[info_charac(p)]);
    assume value_is(__ctobpl_const_6384, c);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6739} true;
    assert p != 0;
    Mem_T.LINE_NUM_charac := Mem_T.LINE_NUM_charac[LINE_NUM_charac(p) := line_num];
    assume value_is(__ctobpl_const_6385, p);
    assume value_is(__ctobpl_const_6386, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    assume value_is(__ctobpl_const_6387, line_num);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6741} true;
    assert p != 0;
    assert lastel != 0;
    Mem_T.PREV_charac := Mem_T.PREV_charac[PREV_charac(p) := Mem_T.Pcharac[lastel]];
    assume value_is(__ctobpl_const_6388, p);
    assume value_is(__ctobpl_const_6389, Mem_T.PREV_charac[PREV_charac(p)]);
    assume value_is(__ctobpl_const_6390, lastel);
    assume value_is(__ctobpl_const_6391, Mem_T.Pcharac[lastel]);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6742} true;
    assert p != 0;
    Mem_T.NEXT_charac := Mem_T.NEXT_charac[NEXT_charac(p) := 0];
    assume value_is(__ctobpl_const_6392, p);
    assume value_is(__ctobpl_const_6393, Mem_T.NEXT_charac[NEXT_charac(p)]);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6743} true;
    assert lastel != 0;
    assert Mem_T.Pcharac[lastel] != 0;
    Mem_T.NEXT_charac := Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[lastel]) := p];
    assume value_is(__ctobpl_const_6394, lastel);
    assume value_is(__ctobpl_const_6395, Mem_T.Pcharac[lastel]);
    assume value_is(__ctobpl_const_6396, Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[lastel])]);
    assume value_is(__ctobpl_const_6397, p);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6744} true;
    assert lastel != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[lastel := p];
    assume value_is(__ctobpl_const_6398, lastel);
    assume value_is(__ctobpl_const_6399, Mem_T.Pcharac[lastel]);
    assume value_is(__ctobpl_const_6400, p);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6746} true;
    call result.getc$31 := getc(f);
    assume value_is(__ctobpl_const_6401, f);
    assume value_is(__ctobpl_const_6402, f);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6746} true;
    c := result.getc$31;
    assume value_is(__ctobpl_const_6403, c);
    assume value_is(__ctobpl_const_6404, result.getc$31);
    goto label_120_dummy;

  label_76_true:
    assume INT_EQ(c, 44);
    assume value_is(__ctobpl_const_6378, c);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6714} true;
    goto label_77_head;

  label_77_head:
    call c, $isspace.arg.1$24$, line_num, result.getc$22, result.isspace$23 := readfil3_loop_label_77_head(CR, c, f, $isspace.arg.1$24$, line_num, result.getc$22, result.isspace$23);
    goto label_77_head_last;

  label_77_false:
    assume !INT_EQ(c, CR);
    assume value_is(__ctobpl_const_6405, c);
    assume value_is(__ctobpl_const_6406, CR);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6716} true;
    call result.getc$22 := getc(f);
    assume value_is(__ctobpl_const_6408, f);
    assume value_is(__ctobpl_const_6409, f);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6716} true;
    c := result.getc$22;
    assume value_is(__ctobpl_const_6410, c);
    assume value_is(__ctobpl_const_6411, result.getc$22);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    $isspace.arg.1$24$ := c;
    assume value_is(__ctobpl_const_6412, $isspace.arg.1$24$);
    assume value_is(__ctobpl_const_6413, c);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    call result.isspace$23 := isspace($isspace.arg.1$24$);
    assume value_is(__ctobpl_const_6414, $isspace.arg.1$24$);
    assume value_is(__ctobpl_const_6415, $isspace.arg.1$24$);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    goto label_87_true, label_87_false;

  label_87_false:
    assume result.isspace$23 == 0;
    assume value_is(__ctobpl_const_6416, result.isspace$23);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    goto label_88_true, label_88_false;

  label_88_false:
    assume !INT_EQ(c, 44);
    assume value_is(__ctobpl_const_6417, c);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6719} true;
    call result.malloc$25 := __HAVOC_det_malloc(16);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6719} true;
    p := result.malloc$25;
    assume value_is(__ctobpl_const_6418, p);
    assume value_is(__ctobpl_const_6419, result.malloc$25);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6720} true;
    goto label_93_true, label_93_false;

  label_93_false:
    assume p == 0;
    assume value_is(__ctobpl_const_6420, p);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6721} true;
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6721} true;
    call result.printf$26 := det_choice();
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6722} true;
    result.readfil3$1 := 22;
    goto label_1;

  label_93_true:
    assume p != 0;
    assume value_is(__ctobpl_const_6420, p);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6724} true;
    assert p != 0;
    Mem_T.info_charac := Mem_T.info_charac[info_charac(p) := 32];
    assume value_is(__ctobpl_const_6421, p);
    assume value_is(__ctobpl_const_6422, Mem_T.info_charac[info_charac(p)]);
    goto label_96;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6725} true;
    assert p != 0;
    Mem_T.LINE_NUM_charac := Mem_T.LINE_NUM_charac[LINE_NUM_charac(p) := line_num];
    assume value_is(__ctobpl_const_6423, p);
    assume value_is(__ctobpl_const_6424, Mem_T.LINE_NUM_charac[LINE_NUM_charac(p)]);
    assume value_is(__ctobpl_const_6425, line_num);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6726} true;
    assert p != 0;
    assert lastel != 0;
    Mem_T.PREV_charac := Mem_T.PREV_charac[PREV_charac(p) := Mem_T.Pcharac[lastel]];
    assume value_is(__ctobpl_const_6426, p);
    assume value_is(__ctobpl_const_6427, Mem_T.PREV_charac[PREV_charac(p)]);
    assume value_is(__ctobpl_const_6428, lastel);
    assume value_is(__ctobpl_const_6429, Mem_T.Pcharac[lastel]);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6727} true;
    assert p != 0;
    Mem_T.NEXT_charac := Mem_T.NEXT_charac[NEXT_charac(p) := 0];
    assume value_is(__ctobpl_const_6430, p);
    assume value_is(__ctobpl_const_6431, Mem_T.NEXT_charac[NEXT_charac(p)]);
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6728} true;
    assert lastel != 0;
    assert Mem_T.Pcharac[lastel] != 0;
    Mem_T.NEXT_charac := Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[lastel]) := p];
    assume value_is(__ctobpl_const_6432, lastel);
    assume value_is(__ctobpl_const_6433, Mem_T.Pcharac[lastel]);
    assume value_is(__ctobpl_const_6434, Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[lastel])]);
    assume value_is(__ctobpl_const_6435, p);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6729} true;
    assert lastel != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[lastel := p];
    assume value_is(__ctobpl_const_6436, lastel);
    assume value_is(__ctobpl_const_6437, Mem_T.Pcharac[lastel]);
    assume value_is(__ctobpl_const_6438, p);
    goto label_100_dummy;

  label_88_true:
    assume INT_EQ(c, 44);
    assume value_is(__ctobpl_const_6417, c);
    goto label_88_true_dummy;

  label_87_true:
    assume result.isspace$23 != 0;
    assume value_is(__ctobpl_const_6416, result.isspace$23);
    goto label_87_true_dummy;

  label_77_true:
    assume INT_EQ(c, CR);
    assume value_is(__ctobpl_const_6405, c);
    assume value_is(__ctobpl_const_6406, CR);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6715} true;
    assume value_is(__ctobpl_const_6407, line_num);
    line_num := PLUS(line_num, 1, 1);
    goto label_78;

  label_75_true:
    assume result.isspace$20 != 0;
    assume value_is(__ctobpl_const_6377, result.isspace$20);
    goto label_77;

  label_41_true:
    assume INT_EQ(c, 44);
    assume value_is(__ctobpl_const_6346, c);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6688} true;
    goto label_42_true, label_42_false;

  label_42_false:
    assume !INT_EQ(c, CR);
    assume value_is(__ctobpl_const_6439, c);
    assume value_is(__ctobpl_const_6440, CR);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6690} true;
    call result.getc$14 := getc(f);
    assume value_is(__ctobpl_const_6442, f);
    assume value_is(__ctobpl_const_6443, f);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6690} true;
    c := result.getc$14;
    assume value_is(__ctobpl_const_6444, c);
    assume value_is(__ctobpl_const_6445, result.getc$14);
    goto label_47_dummy;

  label_42_true:
    assume INT_EQ(c, CR);
    assume value_is(__ctobpl_const_6439, c);
    assume value_is(__ctobpl_const_6440, CR);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6689} true;
    assume value_is(__ctobpl_const_6441, line_num);
    line_num := PLUS(line_num, 1, 1);
    goto label_43;

  label_40_true:
    assume result.isspace$12 != 0;
    assume value_is(__ctobpl_const_6345, result.isspace$12);
    goto label_42;

  label_29_true:
    assume INT_EQ(c, -1);
    assume value_is(__ctobpl_const_6340, c);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6682} true;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6682} true;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6682} true;
    call result.printf$9 := det_choice();
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6683} true;
    result.readfil3$1 := 23;
    goto label_1;

  label_88_true_dummy:
    assume false;
    return;

  label_87_true_dummy:
    assume false;
    return;

  label_77_head_last:
    goto label_77_true, label_77_false;

  label_120_dummy:
    assume false;
    return;

  label_100_dummy:
    assume false;
    return;

  label_67_head_last:
    goto label_67_true, label_67_false;

  label_47_dummy:
    assume false;
    return;

  label_30_head_last:
    $isspace.arg.1$13$ := c;
    assume value_is(__ctobpl_const_6341, $isspace.arg.1$13$);
    assume value_is(__ctobpl_const_6342, c);
    goto label_37;
}



procedure {:extern} recgrdef(p1.__1: int, pp2.__1: int, pstep_ptr.__1: int, qstep_ptr.__1: int, pqstep_unit_ptr.__1: int) returns (result.recgrdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} recgrdef(p1.__1: int, pp2.__1: int, pstep_ptr.__1: int, qstep_ptr.__1: int, pqstep_unit_ptr.__1: int) returns (result.recgrdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} pqstep_unit_ptr: int;
  var {:extern} pstep_ptr: int;
  var {:extern} qstep_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.doubstep$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(pstep_ptr.__1, alloc);
    assume INT_LT(qstep_ptr.__1, alloc);
    assume INT_LT(pqstep_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    pqstep_unit_ptr := 0;
    pstep_ptr := 0;
    qstep_ptr := 0;
    result.GetKeyword$2 := 0;
    result.doubstep$4 := 0;
    result.recgrdef$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    pstep_ptr := pstep_ptr.__1;
    qstep_ptr := qstep_ptr.__1;
    pqstep_unit_ptr := pqstep_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6763} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6763} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6763} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_6446, curr_ptr);
    assume value_is(__ctobpl_const_6447, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6764} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6767} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_6448, curr_ptr);
    assume value_is(__ctobpl_const_6449, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6450, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6770} true;
    error := 0;
    assume value_is(__ctobpl_const_6451, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6771} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_6452, pstep_ptr);
    assume value_is(__ctobpl_const_6453, Mem_T.FLOAT[pstep_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6772} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_6454, qstep_ptr);
    assume value_is(__ctobpl_const_6455, Mem_T.FLOAT[qstep_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6773} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_6456, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_6457, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6776} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 18);
    assume value_is(__ctobpl_const_6458, $GetKeyword.arg.1$3$);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6776} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_6459, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6460, curr_ptr);
    assume value_is(__ctobpl_const_6461, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6462, curr_ptr);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6776} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_6463, error);
    assume value_is(__ctobpl_const_6464, result.GetKeyword$2);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6777} true;
    goto label_17_true, label_17_false;

  label_17_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6465, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6782} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.doubstep$4 := doubstep(Mem_T.Pcharac[curr_ptr], curr_ptr, pstep_ptr, qstep_ptr, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_6466, curr_ptr);
    assume value_is(__ctobpl_const_6467, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6468, curr_ptr);
    assume value_is(__ctobpl_const_6469, pstep_ptr);
    assume value_is(__ctobpl_const_6470, qstep_ptr);
    assume value_is(__ctobpl_const_6471, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_6472, curr_ptr);
    assume value_is(__ctobpl_const_6473, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6474, curr_ptr);
    assume value_is(__ctobpl_const_6475, pstep_ptr);
    assume value_is(__ctobpl_const_6476, qstep_ptr);
    assume value_is(__ctobpl_const_6477, pqstep_unit_ptr);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6782} true;
    error := result.doubstep$4;
    assume value_is(__ctobpl_const_6478, error);
    assume value_is(__ctobpl_const_6479, result.doubstep$4);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6783} true;
    goto label_23_true, label_23_false;

  label_23_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_6480, error);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6793} true;
    goto label_24_true, label_24_false;

  label_24_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6481, error);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6805} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6482, pp2);
    assume value_is(__ctobpl_const_6483, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6484, curr_ptr);
    assume value_is(__ctobpl_const_6485, Mem_T.Pcharac[curr_ptr]);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6806} true;
    result.recgrdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6807} true;
    call __HAVOC_free(curr);
    return;

  label_24_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6481, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6794} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_6486, curr_ptr);
    assume value_is(__ctobpl_const_6487, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6488, error);
    assume value_is(__ctobpl_const_6489, curr_ptr);
    assume value_is(__ctobpl_const_6490, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6491, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6796} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_6492, pstep_ptr);
    assume value_is(__ctobpl_const_6493, Mem_T.FLOAT[pstep_ptr]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6797} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_6494, qstep_ptr);
    assume value_is(__ctobpl_const_6495, Mem_T.FLOAT[qstep_ptr]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6798} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_6496, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_6497, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6799} true;
    result.recgrdef$1 := 17;
    goto label_1;

  label_23_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_6480, error);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6784} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_6498, pstep_ptr);
    assume value_is(__ctobpl_const_6499, Mem_T.FLOAT[pstep_ptr]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6785} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_6500, qstep_ptr);
    assume value_is(__ctobpl_const_6501, Mem_T.FLOAT[qstep_ptr]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6786} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_6502, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_6503, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6788} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6504, pp2);
    assume value_is(__ctobpl_const_6505, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6506, curr_ptr);
    assume value_is(__ctobpl_const_6507, Mem_T.Pcharac[curr_ptr]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6789} true;
    result.recgrdef$1 := 0;
    goto label_1;

  label_17_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6465, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6778} true;
    result.recgrdef$1 := 1;
    goto label_1;
}



procedure {:extern} recspec(p1.__1: int, pp2.__1: int, pdim_ptr.__1: int, qdim_ptr.__1: int, pqdim_unit_ptr.__1: int) returns (result.recspec$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} recspec(p1.__1: int, pp2.__1: int, pdim_ptr.__1: int, qdim_ptr.__1: int, pqdim_unit_ptr.__1: int) returns (result.recspec$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$8$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pdim_ptr: int;
  var {:extern} pp2: int;
  var {:extern} pqdim_unit_ptr: int;
  var {:extern} qdim_ptr: int;
  var {:extern} result.Get1Real$6: int;
  var {:extern} result.Get1Real$9: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$7: int;
  var {:extern} result.lenunit$10: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(pdim_ptr.__1, alloc);
    assume INT_LT(qdim_ptr.__1, alloc);
    assume INT_LT(pqdim_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$8$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pdim_ptr := 0;
    pp2 := 0;
    pqdim_unit_ptr := 0;
    qdim_ptr := 0;
    result.Get1Real$6 := 0;
    result.Get1Real$9 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$7 := 0;
    result.lenunit$10 := 0;
    result.recspec$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    pdim_ptr := pdim_ptr.__1;
    qdim_ptr := qdim_ptr.__1;
    pqdim_unit_ptr := pqdim_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6819} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6819} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6819} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_6508, curr_ptr);
    assume value_is(__ctobpl_const_6509, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6820} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6823} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_6510, curr_ptr);
    assume value_is(__ctobpl_const_6511, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6512, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6826} true;
    error := 0;
    assume value_is(__ctobpl_const_6513, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6829} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 18);
    assume value_is(__ctobpl_const_6514, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6829} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_6515, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6516, curr_ptr);
    assume value_is(__ctobpl_const_6517, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6518, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6829} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_6519, error);
    assume value_is(__ctobpl_const_6520, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6830} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6521, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6835} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 57);
    assume value_is(__ctobpl_const_6522, $GetKeyword.arg.1$5$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6835} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_6523, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_6524, curr_ptr);
    assume value_is(__ctobpl_const_6525, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_6526, curr_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6835} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_6527, error);
    assume value_is(__ctobpl_const_6528, result.GetKeyword$4);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6836} true;
    error := 0;
    assume value_is(__ctobpl_const_6529, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6839} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.Get1Real$6 := Get1Real(Mem_T.Pcharac[curr_ptr], curr_ptr, pdim_ptr);
    assume value_is(__ctobpl_const_6530, curr_ptr);
    assume value_is(__ctobpl_const_6531, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6532, curr_ptr);
    assume value_is(__ctobpl_const_6533, pdim_ptr);
    assume value_is(__ctobpl_const_6534, curr_ptr);
    assume value_is(__ctobpl_const_6535, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6536, curr_ptr);
    assume value_is(__ctobpl_const_6537, pdim_ptr);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6839} true;
    error := result.Get1Real$6;
    assume value_is(__ctobpl_const_6538, error);
    assume value_is(__ctobpl_const_6539, result.Get1Real$6);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6840} true;
    goto label_26_true, label_26_false;

  label_26_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6540, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6847} true;
    $GetKeyword.arg.1$8$ := PLUS(Keywords, 21, 58);
    assume value_is(__ctobpl_const_6541, $GetKeyword.arg.1$8$);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6847} true;
    call result.GetKeyword$7 := GetKeyword($GetKeyword.arg.1$8$, curr_ptr);
    assume value_is(__ctobpl_const_6542, $GetKeyword.arg.1$8$);
    assume value_is(__ctobpl_const_6543, curr_ptr);
    assume value_is(__ctobpl_const_6544, $GetKeyword.arg.1$8$);
    assume value_is(__ctobpl_const_6545, curr_ptr);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6847} true;
    error := result.GetKeyword$7;
    assume value_is(__ctobpl_const_6546, error);
    assume value_is(__ctobpl_const_6547, result.GetKeyword$7);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6848} true;
    error := 0;
    assume value_is(__ctobpl_const_6548, error);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6851} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.Get1Real$9 := Get1Real(Mem_T.Pcharac[curr_ptr], curr_ptr, qdim_ptr);
    assume value_is(__ctobpl_const_6549, curr_ptr);
    assume value_is(__ctobpl_const_6550, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6551, curr_ptr);
    assume value_is(__ctobpl_const_6552, qdim_ptr);
    assume value_is(__ctobpl_const_6553, curr_ptr);
    assume value_is(__ctobpl_const_6554, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6555, curr_ptr);
    assume value_is(__ctobpl_const_6556, qdim_ptr);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6851} true;
    error := result.Get1Real$9;
    assume value_is(__ctobpl_const_6557, error);
    assume value_is(__ctobpl_const_6558, result.Get1Real$9);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6852} true;
    goto label_41_true, label_41_false;

  label_41_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6559, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6859} true;
    call result.lenunit$10 := lenunit(curr_ptr, pqdim_unit_ptr);
    assume value_is(__ctobpl_const_6560, curr_ptr);
    assume value_is(__ctobpl_const_6561, pqdim_unit_ptr);
    assume value_is(__ctobpl_const_6562, curr_ptr);
    assume value_is(__ctobpl_const_6563, pqdim_unit_ptr);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6859} true;
    error := result.lenunit$10;
    assume value_is(__ctobpl_const_6564, error);
    assume value_is(__ctobpl_const_6565, result.lenunit$10);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6863} true;
    goto label_50_true, label_50_false;

  label_50_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6566, error);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6867} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6569, pp2);
    assume value_is(__ctobpl_const_6570, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6571, curr_ptr);
    assume value_is(__ctobpl_const_6572, Mem_T.Pcharac[curr_ptr]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6868} true;
    result.recspec$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6869} true;
    call __HAVOC_free(curr);
    return;

  label_50_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6566, error);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6864} true;
    assert pqdim_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqdim_unit_ptr := 0];
    assume value_is(__ctobpl_const_6567, pqdim_unit_ptr);
    assume value_is(__ctobpl_const_6568, Mem_T.INT4[pqdim_unit_ptr]);
    goto label_51;

  label_41_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6559, error);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6853} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_6573, curr_ptr);
    assume value_is(__ctobpl_const_6574, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6575, error);
    assume value_is(__ctobpl_const_6576, curr_ptr);
    assume value_is(__ctobpl_const_6577, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6578, error);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6855} true;
    result.recspec$1 := 17;
    goto label_1;

  label_26_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6540, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6841} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_6579, curr_ptr);
    assume value_is(__ctobpl_const_6580, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6581, error);
    assume value_is(__ctobpl_const_6582, curr_ptr);
    assume value_is(__ctobpl_const_6583, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6584, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6843} true;
    result.recspec$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6521, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6831} true;
    result.recspec$1 := 1;
    goto label_1;
}



procedure {:extern} remdef(p1.__1: int, pp2.__1: int, addrem_ptr.__1: int) returns (result.remdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} remdef(p1.__1: int, pp2.__1: int, addrem_ptr.__1: int) returns (result.remdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} addrem_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} no_ptr: int;
  var {:extern} node_ptr: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$10$: int;
  var {:extern} $printf.arg.2$14$: int;
  var {:extern} $printf.arg.2$18$: int;
  var {:extern} $printf.arg.2$6$: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.blockdef$8: int;
  var {:extern} result.hexdef$16: int;
  var {:extern} result.malloc$7: int;
  var {:extern} result.malloc$11: int;
  var {:extern} result.malloc$15: int;
  var {:extern} result.malloc$19: int;
  var {:extern} result.nodedef$4: int;
  var {:extern} result.polydef$12: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.printf$9: int;
  var {:extern} result.printf$13: int;
  var {:extern} result.printf$17: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(addrem_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    addrem_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    call no_ptr := __HAVOC_det_malloc(4);
    node_ptr := 0;
    p1 := 0;
    pp2 := 0;
    $printf.arg.2$10$ := 0;
    $printf.arg.2$14$ := 0;
    $printf.arg.2$18$ := 0;
    $printf.arg.2$6$ := 0;
    result.GetKeyword$2 := 0;
    result.blockdef$8 := 0;
    result.hexdef$16 := 0;
    result.malloc$7 := 0;
    result.malloc$11 := 0;
    result.malloc$15 := 0;
    result.malloc$19 := 0;
    result.nodedef$4 := 0;
    result.polydef$12 := 0;
    result.printf$5 := 0;
    result.printf$9 := 0;
    result.printf$13 := 0;
    result.printf$17 := 0;
    result.remdef$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    addrem_ptr := addrem_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6879} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6879} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6879} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_6585, curr_ptr);
    assume value_is(__ctobpl_const_6586, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6880} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6882} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6882} true;
    Mem_T.PNode := Mem_T.PNode[no_ptr := 0];
    assume value_is(__ctobpl_const_6587, Mem_T.PNode[no_ptr]);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6882} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6882} true;
    node_ptr := no_ptr;
    assume value_is(__ctobpl_const_6588, node_ptr);
    assume value_is(__ctobpl_const_6589, Mem_T.PNode[no_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6890} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_6590, curr_ptr);
    assume value_is(__ctobpl_const_6591, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6592, p1);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6891} true;
    error := 0;
    assume value_is(__ctobpl_const_6593, error);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6894} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 80);
    assume value_is(__ctobpl_const_6594, $GetKeyword.arg.1$3$);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6894} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_6595, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6596, curr_ptr);
    assume value_is(__ctobpl_const_6597, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6598, curr_ptr);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6894} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_6599, error);
    assume value_is(__ctobpl_const_6600, result.GetKeyword$2);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6895} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6601, error);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6905} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.nodedef$4 := nodedef(Mem_T.Pcharac[curr_ptr], curr_ptr, node_ptr);
    assume value_is(__ctobpl_const_6602, curr_ptr);
    assume value_is(__ctobpl_const_6603, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6604, curr_ptr);
    assume value_is(__ctobpl_const_6605, node_ptr);
    assume value_is(__ctobpl_const_6606, curr_ptr);
    assume value_is(__ctobpl_const_6607, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6608, curr_ptr);
    assume value_is(__ctobpl_const_6609, node_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6905} true;
    error := result.nodedef$4;
    assume value_is(__ctobpl_const_6610, error);
    assume value_is(__ctobpl_const_6611, result.nodedef$4);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6908} true;
    goto label_25_true, label_25_false;

  label_25_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6612, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6915} true;
    goto label_26_true, label_26_false;

  label_26_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6613, error);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6917} true;
    call result.malloc$7 := __HAVOC_det_malloc(16);
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6917} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := result.malloc$7];
    assume value_is(__ctobpl_const_6614, addrem_ptr);
    assume value_is(__ctobpl_const_6615, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6616, result.malloc$7);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6919} true;
    assert addrem_ptr != 0;
    goto label_129_true, label_129_false;

  label_129_false:
    assume Mem_T.PAddRem[addrem_ptr] == 0;
    assume value_is(__ctobpl_const_6617, addrem_ptr);
    assume value_is(__ctobpl_const_6618, Mem_T.PAddRem[addrem_ptr]);
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6920} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_6619, curr_ptr);
    assume value_is(__ctobpl_const_6620, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6621, curr_ptr);
    assume value_is(__ctobpl_const_6622, Mem_T.Pcharac[curr_ptr]);
    goto label_139;

  label_139:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6922} true;
    call interror(havoc_stringTemp);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6925} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.ADDREM_TYPE_AddRem := Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 1];
    assume value_is(__ctobpl_const_6623, addrem_ptr);
    assume value_is(__ctobpl_const_6624, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6625, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_134;

  label_134:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6926} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.BLOCK_TYPE_AddRem := Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_6626, addrem_ptr);
    assume value_is(__ctobpl_const_6627, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6628, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_135;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6927} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    assert node_ptr != 0;
    Mem_T.NODE_PTR_AddRem := Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr]) := Mem_T.PNode[node_ptr]];
    assume value_is(__ctobpl_const_6629, addrem_ptr);
    assume value_is(__ctobpl_const_6630, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6631, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    assume value_is(__ctobpl_const_6632, node_ptr);
    assume value_is(__ctobpl_const_6633, Mem_T.PNode[node_ptr]);
    goto label_136;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6928} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_6634, addrem_ptr);
    assume value_is(__ctobpl_const_6635, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6636, Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_137;

  label_137:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6930} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6637, pp2);
    assume value_is(__ctobpl_const_6638, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6639, curr_ptr);
    assume value_is(__ctobpl_const_6640, Mem_T.Pcharac[curr_ptr]);
    goto label_138;

  label_138:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6931} true;
    result.remdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7042} true;
    call __HAVOC_free(curr);
    call __HAVOC_free(no_ptr);
    return;

  label_129_true:
    assume Mem_T.PAddRem[addrem_ptr] != 0;
    assume value_is(__ctobpl_const_6617, addrem_ptr);
    assume value_is(__ctobpl_const_6618, Mem_T.PAddRem[addrem_ptr]);
    goto label_133;

  label_26_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6613, error);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6939} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.blockdef$8 := blockdef(Mem_T.Pcharac[curr_ptr], curr_ptr, node_ptr);
    assume value_is(__ctobpl_const_6641, curr_ptr);
    assume value_is(__ctobpl_const_6642, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6643, curr_ptr);
    assume value_is(__ctobpl_const_6644, node_ptr);
    assume value_is(__ctobpl_const_6645, curr_ptr);
    assume value_is(__ctobpl_const_6646, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6647, curr_ptr);
    assume value_is(__ctobpl_const_6648, node_ptr);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6939} true;
    error := result.blockdef$8;
    assume value_is(__ctobpl_const_6649, error);
    assume value_is(__ctobpl_const_6650, result.blockdef$8);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6941} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6651, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6948} true;
    goto label_41_true, label_41_false;

  label_41_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6652, error);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6950} true;
    call result.malloc$11 := __HAVOC_det_malloc(16);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6950} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := result.malloc$11];
    assume value_is(__ctobpl_const_6653, addrem_ptr);
    assume value_is(__ctobpl_const_6654, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6655, result.malloc$11);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6952} true;
    assert addrem_ptr != 0;
    goto label_115_true, label_115_false;

  label_115_false:
    assume Mem_T.PAddRem[addrem_ptr] == 0;
    assume value_is(__ctobpl_const_6656, addrem_ptr);
    assume value_is(__ctobpl_const_6657, Mem_T.PAddRem[addrem_ptr]);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6953} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_6658, curr_ptr);
    assume value_is(__ctobpl_const_6659, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6660, curr_ptr);
    assume value_is(__ctobpl_const_6661, Mem_T.Pcharac[curr_ptr]);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6955} true;
    call interror(havoc_stringTemp);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6958} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.ADDREM_TYPE_AddRem := Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 1];
    assume value_is(__ctobpl_const_6662, addrem_ptr);
    assume value_is(__ctobpl_const_6663, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6664, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6959} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.BLOCK_TYPE_AddRem := Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 1];
    assume value_is(__ctobpl_const_6665, addrem_ptr);
    assume value_is(__ctobpl_const_6666, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6667, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6960} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    assert node_ptr != 0;
    Mem_T.NODE_PTR_AddRem := Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr]) := Mem_T.PNode[node_ptr]];
    assume value_is(__ctobpl_const_6668, addrem_ptr);
    assume value_is(__ctobpl_const_6669, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6670, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    assume value_is(__ctobpl_const_6671, node_ptr);
    assume value_is(__ctobpl_const_6672, Mem_T.PNode[node_ptr]);
    goto label_122;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6961} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_6673, addrem_ptr);
    assume value_is(__ctobpl_const_6674, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6675, Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6963} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6676, pp2);
    assume value_is(__ctobpl_const_6677, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6678, curr_ptr);
    assume value_is(__ctobpl_const_6679, Mem_T.Pcharac[curr_ptr]);
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6964} true;
    result.remdef$1 := 0;
    goto label_1;

  label_115_true:
    assume Mem_T.PAddRem[addrem_ptr] != 0;
    assume value_is(__ctobpl_const_6656, addrem_ptr);
    assume value_is(__ctobpl_const_6657, Mem_T.PAddRem[addrem_ptr]);
    goto label_119;

  label_41_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6652, error);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6971} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.polydef$12 := polydef(Mem_T.Pcharac[curr_ptr], curr_ptr, node_ptr);
    assume value_is(__ctobpl_const_6680, curr_ptr);
    assume value_is(__ctobpl_const_6681, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6682, curr_ptr);
    assume value_is(__ctobpl_const_6683, node_ptr);
    assume value_is(__ctobpl_const_6684, curr_ptr);
    assume value_is(__ctobpl_const_6685, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6686, curr_ptr);
    assume value_is(__ctobpl_const_6687, node_ptr);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6971} true;
    error := result.polydef$12;
    assume value_is(__ctobpl_const_6688, error);
    assume value_is(__ctobpl_const_6689, result.polydef$12);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6973} true;
    goto label_55_true, label_55_false;

  label_55_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6690, error);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6980} true;
    goto label_56_true, label_56_false;

  label_56_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6691, error);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6982} true;
    call result.malloc$15 := __HAVOC_det_malloc(16);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6982} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := result.malloc$15];
    assume value_is(__ctobpl_const_6692, addrem_ptr);
    assume value_is(__ctobpl_const_6693, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6694, result.malloc$15);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6984} true;
    assert addrem_ptr != 0;
    goto label_101_true, label_101_false;

  label_101_false:
    assume Mem_T.PAddRem[addrem_ptr] == 0;
    assume value_is(__ctobpl_const_6695, addrem_ptr);
    assume value_is(__ctobpl_const_6696, Mem_T.PAddRem[addrem_ptr]);
    goto label_102;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6985} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_6697, curr_ptr);
    assume value_is(__ctobpl_const_6698, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6699, curr_ptr);
    assume value_is(__ctobpl_const_6700, Mem_T.Pcharac[curr_ptr]);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6987} true;
    call interror(havoc_stringTemp);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6990} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.ADDREM_TYPE_AddRem := Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 1];
    assume value_is(__ctobpl_const_6701, addrem_ptr);
    assume value_is(__ctobpl_const_6702, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6703, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6991} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.BLOCK_TYPE_AddRem := Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 2];
    assume value_is(__ctobpl_const_6704, addrem_ptr);
    assume value_is(__ctobpl_const_6705, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6706, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6992} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    assert node_ptr != 0;
    Mem_T.NODE_PTR_AddRem := Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr]) := Mem_T.PNode[node_ptr]];
    assume value_is(__ctobpl_const_6707, addrem_ptr);
    assume value_is(__ctobpl_const_6708, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6709, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    assume value_is(__ctobpl_const_6710, node_ptr);
    assume value_is(__ctobpl_const_6711, Mem_T.PNode[node_ptr]);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6993} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_6712, addrem_ptr);
    assume value_is(__ctobpl_const_6713, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6714, Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6995} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6715, pp2);
    assume value_is(__ctobpl_const_6716, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6717, curr_ptr);
    assume value_is(__ctobpl_const_6718, Mem_T.Pcharac[curr_ptr]);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6996} true;
    result.remdef$1 := 0;
    goto label_1;

  label_101_true:
    assume Mem_T.PAddRem[addrem_ptr] != 0;
    assume value_is(__ctobpl_const_6695, addrem_ptr);
    assume value_is(__ctobpl_const_6696, Mem_T.PAddRem[addrem_ptr]);
    goto label_105;

  label_56_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6691, error);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7005} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.hexdef$16 := hexdef(Mem_T.Pcharac[curr_ptr], curr_ptr, node_ptr);
    assume value_is(__ctobpl_const_6719, curr_ptr);
    assume value_is(__ctobpl_const_6720, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6721, curr_ptr);
    assume value_is(__ctobpl_const_6722, node_ptr);
    assume value_is(__ctobpl_const_6723, curr_ptr);
    assume value_is(__ctobpl_const_6724, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6725, curr_ptr);
    assume value_is(__ctobpl_const_6726, node_ptr);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7005} true;
    error := result.hexdef$16;
    assume value_is(__ctobpl_const_6727, error);
    assume value_is(__ctobpl_const_6728, result.hexdef$16);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7007} true;
    goto label_70_true, label_70_false;

  label_70_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6729, error);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7014} true;
    goto label_71_true, label_71_false;

  label_71_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6730, error);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7016} true;
    call result.malloc$19 := __HAVOC_det_malloc(16);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7016} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := result.malloc$19];
    assume value_is(__ctobpl_const_6731, addrem_ptr);
    assume value_is(__ctobpl_const_6732, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6733, result.malloc$19);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7018} true;
    assert addrem_ptr != 0;
    goto label_87_true, label_87_false;

  label_87_false:
    assume Mem_T.PAddRem[addrem_ptr] == 0;
    assume value_is(__ctobpl_const_6734, addrem_ptr);
    assume value_is(__ctobpl_const_6735, Mem_T.PAddRem[addrem_ptr]);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7019} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 55, havoc_stringTemp);
    assume value_is(__ctobpl_const_6736, curr_ptr);
    assume value_is(__ctobpl_const_6737, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6738, curr_ptr);
    assume value_is(__ctobpl_const_6739, Mem_T.Pcharac[curr_ptr]);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7021} true;
    call interror(havoc_stringTemp);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7024} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.ADDREM_TYPE_AddRem := Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 1];
    assume value_is(__ctobpl_const_6740, addrem_ptr);
    assume value_is(__ctobpl_const_6741, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6742, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7025} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.BLOCK_TYPE_AddRem := Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr]) := 3];
    assume value_is(__ctobpl_const_6743, addrem_ptr);
    assume value_is(__ctobpl_const_6744, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6745, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7026} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    assert node_ptr != 0;
    Mem_T.NODE_PTR_AddRem := Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr]) := Mem_T.PNode[node_ptr]];
    assume value_is(__ctobpl_const_6746, addrem_ptr);
    assume value_is(__ctobpl_const_6747, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6748, Mem_T.NODE_PTR_AddRem[NODE_PTR_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    assume value_is(__ctobpl_const_6749, node_ptr);
    assume value_is(__ctobpl_const_6750, Mem_T.PNode[node_ptr]);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7027} true;
    assert addrem_ptr != 0;
    assert Mem_T.PAddRem[addrem_ptr] != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr]) := 0];
    assume value_is(__ctobpl_const_6751, addrem_ptr);
    assume value_is(__ctobpl_const_6752, Mem_T.PAddRem[addrem_ptr]);
    assume value_is(__ctobpl_const_6753, Mem_T.NEXT_AddRem[NEXT_AddRem(Mem_T.PAddRem[addrem_ptr])]);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7029} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6754, pp2);
    assume value_is(__ctobpl_const_6755, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6756, curr_ptr);
    assume value_is(__ctobpl_const_6757, Mem_T.Pcharac[curr_ptr]);
    goto label_96;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7030} true;
    result.remdef$1 := 0;
    goto label_1;

  label_87_true:
    assume Mem_T.PAddRem[addrem_ptr] != 0;
    assume value_is(__ctobpl_const_6734, addrem_ptr);
    assume value_is(__ctobpl_const_6735, Mem_T.PAddRem[addrem_ptr]);
    goto label_91;

  label_71_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6730, error);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7038} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_6758, addrem_ptr);
    assume value_is(__ctobpl_const_6759, Mem_T.PAddRem[addrem_ptr]);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7039} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 63, havoc_stringTemp);
    assume value_is(__ctobpl_const_6760, curr_ptr);
    assume value_is(__ctobpl_const_6761, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6762, curr_ptr);
    assume value_is(__ctobpl_const_6763, Mem_T.Pcharac[curr_ptr]);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7041} true;
    result.remdef$1 := 17;
    goto label_1;

  label_70_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6729, error);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7008} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_6764, addrem_ptr);
    assume value_is(__ctobpl_const_6765, Mem_T.PAddRem[addrem_ptr]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7009} true;
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7009} true;
    call result.printf$17 := det_choice();
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7010} true;
    result.remdef$1 := 17;
    goto label_1;

  label_55_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6690, error);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6974} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_6766, addrem_ptr);
    assume value_is(__ctobpl_const_6767, Mem_T.PAddRem[addrem_ptr]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6975} true;
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6975} true;
    call result.printf$13 := det_choice();
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6976} true;
    result.remdef$1 := 17;
    goto label_1;

  label_40_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6651, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6942} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_6768, addrem_ptr);
    assume value_is(__ctobpl_const_6769, Mem_T.PAddRem[addrem_ptr]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6943} true;
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6943} true;
    call result.printf$9 := det_choice();
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6944} true;
    result.remdef$1 := 17;
    goto label_1;

  label_25_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_6612, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6909} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_6770, addrem_ptr);
    assume value_is(__ctobpl_const_6771, Mem_T.PAddRem[addrem_ptr]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6910} true;
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6910} true;
    call result.printf$5 := det_choice();
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6911} true;
    result.remdef$1 := 17;
    goto label_1;

  label_18_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6601, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6896} true;
    assert addrem_ptr != 0;
    Mem_T.PAddRem := Mem_T.PAddRem[addrem_ptr := 0];
    assume value_is(__ctobpl_const_6772, addrem_ptr);
    assume value_is(__ctobpl_const_6773, Mem_T.PAddRem[addrem_ptr]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6897} true;
    result.remdef$1 := 1;
    goto label_1;
}



procedure {:extern} secoramp(p1.__1: int, pp2.__1: int, centre_ptr.__1: int, p1_et_ptr.__1: int, p2_et_ptr.__1: int, q1_et_ptr.__1: int, q2_et_ptr.__1: int, amp_unit_ptr.__1: int) returns (result.secoramp$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} secoramp(p1.__1: int, pp2.__1: int, centre_ptr.__1: int, p1_et_ptr.__1: int, p2_et_ptr.__1: int, q1_et_ptr.__1: int, q2_et_ptr.__1: int, amp_unit_ptr.__1: int) returns (result.secoramp$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$10$: int;
  var {:extern} $GetKeyword.arg.1$13$: int;
  var {:extern} $GetKeyword.arg.1$16$: int;
  var {:extern} $GetKeyword.arg.1$19$: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$7$: int;
  var {:extern} amp_unit_ptr: int;
  var {:extern} centre_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} p1_et_ptr: int;
  var {:extern} p2_et_ptr: int;
  var {:extern} pp2: int;
  var {:extern} q1_et_ptr: int;
  var {:extern} q2_et_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$6: int;
  var {:extern} result.GetKeyword$9: int;
  var {:extern} result.GetKeyword$12: int;
  var {:extern} result.GetKeyword$15: int;
  var {:extern} result.GetKeyword$18: int;
  var {:extern} result.GetReal$8: int;
  var {:extern} result.GetReal$11: int;
  var {:extern} result.GetReal$14: int;
  var {:extern} result.GetReal$17: int;
  var {:extern} result.ampval$20: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(centre_ptr.__1, alloc);
    assume INT_LT(p1_et_ptr.__1, alloc);
    assume INT_LT(p2_et_ptr.__1, alloc);
    assume INT_LT(q1_et_ptr.__1, alloc);
    assume INT_LT(q2_et_ptr.__1, alloc);
    assume INT_LT(amp_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$10$ := 0;
    $GetKeyword.arg.1$13$ := 0;
    $GetKeyword.arg.1$16$ := 0;
    $GetKeyword.arg.1$19$ := 0;
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$7$ := 0;
    amp_unit_ptr := 0;
    centre_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    p1_et_ptr := 0;
    p2_et_ptr := 0;
    pp2 := 0;
    q1_et_ptr := 0;
    q2_et_ptr := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$6 := 0;
    result.GetKeyword$9 := 0;
    result.GetKeyword$12 := 0;
    result.GetKeyword$15 := 0;
    result.GetKeyword$18 := 0;
    result.GetReal$8 := 0;
    result.GetReal$11 := 0;
    result.GetReal$14 := 0;
    result.GetReal$17 := 0;
    result.ampval$20 := 0;
    result.secoramp$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    centre_ptr := centre_ptr.__1;
    p1_et_ptr := p1_et_ptr.__1;
    p2_et_ptr := p2_et_ptr.__1;
    q1_et_ptr := q1_et_ptr.__1;
    q2_et_ptr := q2_et_ptr.__1;
    amp_unit_ptr := amp_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7058} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7058} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7058} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_6774, curr_ptr);
    assume value_is(__ctobpl_const_6775, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7059} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7066} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_6776, curr_ptr);
    assume value_is(__ctobpl_const_6777, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6778, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7069} true;
    error := 0;
    assume value_is(__ctobpl_const_6779, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7072} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 81);
    assume value_is(__ctobpl_const_6780, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7072} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_6781, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6782, curr_ptr);
    assume value_is(__ctobpl_const_6783, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6784, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7072} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_6785, error);
    assume value_is(__ctobpl_const_6786, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7073} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6787, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7078} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 82);
    assume value_is(__ctobpl_const_6788, $GetKeyword.arg.1$5$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7078} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_6789, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_6790, curr_ptr);
    assume value_is(__ctobpl_const_6791, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_6792, curr_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7078} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_6793, error);
    assume value_is(__ctobpl_const_6794, result.GetKeyword$4);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7079} true;
    error := 0;
    assume value_is(__ctobpl_const_6795, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7082} true;
    $GetKeyword.arg.1$7$ := PLUS(Keywords, 21, 83);
    assume value_is(__ctobpl_const_6796, $GetKeyword.arg.1$7$);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7082} true;
    call result.GetKeyword$6 := GetKeyword($GetKeyword.arg.1$7$, curr_ptr);
    assume value_is(__ctobpl_const_6797, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_6798, curr_ptr);
    assume value_is(__ctobpl_const_6799, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_6800, curr_ptr);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7082} true;
    error := result.GetKeyword$6;
    assume value_is(__ctobpl_const_6801, error);
    assume value_is(__ctobpl_const_6802, result.GetKeyword$6);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7083} true;
    error := 0;
    assume value_is(__ctobpl_const_6803, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7086} true;
    call result.GetReal$8 := GetReal(centre_ptr, curr_ptr);
    assume value_is(__ctobpl_const_6804, centre_ptr);
    assume value_is(__ctobpl_const_6805, curr_ptr);
    assume value_is(__ctobpl_const_6806, centre_ptr);
    assume value_is(__ctobpl_const_6807, curr_ptr);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7086} true;
    error := result.GetReal$8;
    assume value_is(__ctobpl_const_6808, error);
    assume value_is(__ctobpl_const_6809, result.GetReal$8);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7087} true;
    goto label_32_true, label_32_false;

  label_32_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6810, error);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7094} true;
    $GetKeyword.arg.1$10$ := PLUS(Keywords, 21, 84);
    assume value_is(__ctobpl_const_6811, $GetKeyword.arg.1$10$);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7094} true;
    call result.GetKeyword$9 := GetKeyword($GetKeyword.arg.1$10$, curr_ptr);
    assume value_is(__ctobpl_const_6812, $GetKeyword.arg.1$10$);
    assume value_is(__ctobpl_const_6813, curr_ptr);
    assume value_is(__ctobpl_const_6814, $GetKeyword.arg.1$10$);
    assume value_is(__ctobpl_const_6815, curr_ptr);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7094} true;
    error := result.GetKeyword$9;
    assume value_is(__ctobpl_const_6816, error);
    assume value_is(__ctobpl_const_6817, result.GetKeyword$9);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7095} true;
    error := 0;
    assume value_is(__ctobpl_const_6818, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7098} true;
    call result.GetReal$11 := GetReal(p1_et_ptr, curr_ptr);
    assume value_is(__ctobpl_const_6819, p1_et_ptr);
    assume value_is(__ctobpl_const_6820, curr_ptr);
    assume value_is(__ctobpl_const_6821, p1_et_ptr);
    assume value_is(__ctobpl_const_6822, curr_ptr);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7098} true;
    error := result.GetReal$11;
    assume value_is(__ctobpl_const_6823, error);
    assume value_is(__ctobpl_const_6824, result.GetReal$11);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7099} true;
    goto label_47_true, label_47_false;

  label_47_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6825, error);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7106} true;
    $GetKeyword.arg.1$13$ := PLUS(Keywords, 21, 85);
    assume value_is(__ctobpl_const_6826, $GetKeyword.arg.1$13$);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7106} true;
    call result.GetKeyword$12 := GetKeyword($GetKeyword.arg.1$13$, curr_ptr);
    assume value_is(__ctobpl_const_6827, $GetKeyword.arg.1$13$);
    assume value_is(__ctobpl_const_6828, curr_ptr);
    assume value_is(__ctobpl_const_6829, $GetKeyword.arg.1$13$);
    assume value_is(__ctobpl_const_6830, curr_ptr);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7106} true;
    error := result.GetKeyword$12;
    assume value_is(__ctobpl_const_6831, error);
    assume value_is(__ctobpl_const_6832, result.GetKeyword$12);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7107} true;
    error := 0;
    assume value_is(__ctobpl_const_6833, error);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7110} true;
    call result.GetReal$14 := GetReal(p2_et_ptr, curr_ptr);
    assume value_is(__ctobpl_const_6834, p2_et_ptr);
    assume value_is(__ctobpl_const_6835, curr_ptr);
    assume value_is(__ctobpl_const_6836, p2_et_ptr);
    assume value_is(__ctobpl_const_6837, curr_ptr);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7110} true;
    error := result.GetReal$14;
    assume value_is(__ctobpl_const_6838, error);
    assume value_is(__ctobpl_const_6839, result.GetReal$14);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7111} true;
    goto label_62_true, label_62_false;

  label_62_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6840, error);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7118} true;
    $GetKeyword.arg.1$16$ := PLUS(Keywords, 21, 86);
    assume value_is(__ctobpl_const_6841, $GetKeyword.arg.1$16$);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7118} true;
    call result.GetKeyword$15 := GetKeyword($GetKeyword.arg.1$16$, curr_ptr);
    assume value_is(__ctobpl_const_6842, $GetKeyword.arg.1$16$);
    assume value_is(__ctobpl_const_6843, curr_ptr);
    assume value_is(__ctobpl_const_6844, $GetKeyword.arg.1$16$);
    assume value_is(__ctobpl_const_6845, curr_ptr);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7118} true;
    error := result.GetKeyword$15;
    assume value_is(__ctobpl_const_6846, error);
    assume value_is(__ctobpl_const_6847, result.GetKeyword$15);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7119} true;
    error := 0;
    assume value_is(__ctobpl_const_6848, error);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7122} true;
    call result.GetReal$17 := GetReal(q1_et_ptr, curr_ptr);
    assume value_is(__ctobpl_const_6849, q1_et_ptr);
    assume value_is(__ctobpl_const_6850, curr_ptr);
    assume value_is(__ctobpl_const_6851, q1_et_ptr);
    assume value_is(__ctobpl_const_6852, curr_ptr);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7122} true;
    error := result.GetReal$17;
    assume value_is(__ctobpl_const_6853, error);
    assume value_is(__ctobpl_const_6854, result.GetReal$17);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7123} true;
    goto label_77_true, label_77_false;

  label_77_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6855, error);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7130} true;
    $GetKeyword.arg.1$19$ := PLUS(Keywords, 21, 87);
    assume value_is(__ctobpl_const_6856, $GetKeyword.arg.1$19$);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7130} true;
    call result.GetKeyword$18 := GetKeyword($GetKeyword.arg.1$19$, curr_ptr);
    assume value_is(__ctobpl_const_6857, $GetKeyword.arg.1$19$);
    assume value_is(__ctobpl_const_6858, curr_ptr);
    assume value_is(__ctobpl_const_6859, $GetKeyword.arg.1$19$);
    assume value_is(__ctobpl_const_6860, curr_ptr);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7130} true;
    error := result.GetKeyword$18;
    assume value_is(__ctobpl_const_6861, error);
    assume value_is(__ctobpl_const_6862, result.GetKeyword$18);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7131} true;
    error := 0;
    assume value_is(__ctobpl_const_6863, error);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7134} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.ampval$20 := ampval(Mem_T.Pcharac[curr_ptr], curr_ptr, q2_et_ptr, amp_unit_ptr);
    assume value_is(__ctobpl_const_6864, curr_ptr);
    assume value_is(__ctobpl_const_6865, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6866, curr_ptr);
    assume value_is(__ctobpl_const_6867, q2_et_ptr);
    assume value_is(__ctobpl_const_6868, amp_unit_ptr);
    assume value_is(__ctobpl_const_6869, curr_ptr);
    assume value_is(__ctobpl_const_6870, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6871, curr_ptr);
    assume value_is(__ctobpl_const_6872, q2_et_ptr);
    assume value_is(__ctobpl_const_6873, amp_unit_ptr);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7134} true;
    error := result.ampval$20;
    assume value_is(__ctobpl_const_6874, error);
    assume value_is(__ctobpl_const_6875, result.ampval$20);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7135} true;
    goto label_92_true, label_92_false;

  label_92_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6876, error);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7142} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_6877, pp2);
    assume value_is(__ctobpl_const_6878, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_6879, curr_ptr);
    assume value_is(__ctobpl_const_6880, Mem_T.Pcharac[curr_ptr]);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7143} true;
    result.secoramp$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7144} true;
    call __HAVOC_free(curr);
    return;

  label_92_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6876, error);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7136} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_6881, curr_ptr);
    assume value_is(__ctobpl_const_6882, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6883, curr_ptr);
    assume value_is(__ctobpl_const_6884, Mem_T.Pcharac[curr_ptr]);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7138} true;
    result.secoramp$1 := 17;
    goto label_1;

  label_77_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6855, error);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7124} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_6885, curr_ptr);
    assume value_is(__ctobpl_const_6886, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6887, curr_ptr);
    assume value_is(__ctobpl_const_6888, Mem_T.Pcharac[curr_ptr]);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7126} true;
    result.secoramp$1 := 17;
    goto label_1;

  label_62_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6840, error);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7112} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_6889, curr_ptr);
    assume value_is(__ctobpl_const_6890, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6891, curr_ptr);
    assume value_is(__ctobpl_const_6892, Mem_T.Pcharac[curr_ptr]);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7114} true;
    result.secoramp$1 := 17;
    goto label_1;

  label_47_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6825, error);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7100} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_6893, curr_ptr);
    assume value_is(__ctobpl_const_6894, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6895, curr_ptr);
    assume value_is(__ctobpl_const_6896, Mem_T.Pcharac[curr_ptr]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7102} true;
    result.secoramp$1 := 17;
    goto label_1;

  label_32_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6810, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7088} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_6897, curr_ptr);
    assume value_is(__ctobpl_const_6898, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6899, curr_ptr);
    assume value_is(__ctobpl_const_6900, Mem_T.Pcharac[curr_ptr]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7090} true;
    result.secoramp$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6787, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7074} true;
    result.secoramp$1 := 1;
    goto label_1;
}



procedure {:extern} secorder(a.__1: int, b.__1: int, c.__1: int, d.__1: int, e.__1: int, x.__1: int, y.__1: int) returns (result.secorder$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} secorder(a.__1: int, b.__1: int, c.__1: int, d.__1: int, e.__1: int, x.__1: int, y.__1: int) returns (result.secorder$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} a: int;
  var {:extern} b: int;
  var {:extern} c: int;
  var {:extern} d: int;
  var {:extern} e: int;
  var {:extern} x: int;
  var {:extern} y: int;
  var {:extern} z: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    a := 0;
    b := 0;
    c := 0;
    d := 0;
    e := 0;
    result.secorder$1 := 0;
    x := 0;
    y := 0;
    z := 0;
    a := a.__1;
    b := b.__1;
    c := c.__1;
    d := d.__1;
    e := e.__1;
    x := x.__1;
    y := y.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7162} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7164} true;
    z := PLUS(PLUS(PLUS(PLUS(MULT(MULT(a, x), x), 1, MULT(MULT(b, y), y)), 1, MULT(c, x)), 1, MULT(d, y)), 1, e);
    assume value_is(__ctobpl_const_6901, z);
    assume value_is(__ctobpl_const_6902, a);
    assume value_is(__ctobpl_const_6903, x);
    assume value_is(__ctobpl_const_6904, x);
    assume value_is(__ctobpl_const_6905, b);
    assume value_is(__ctobpl_const_6906, y);
    assume value_is(__ctobpl_const_6907, y);
    assume value_is(__ctobpl_const_6908, c);
    assume value_is(__ctobpl_const_6909, x);
    assume value_is(__ctobpl_const_6910, d);
    assume value_is(__ctobpl_const_6911, y);
    assume value_is(__ctobpl_const_6912, e);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7166} true;
    result.secorder$1 := z;
    assume value_is(__ctobpl_const_6913, z);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7168} true;
    return;
}



procedure {:extern} secorpha(p1.__1: int, pp2.__1: int, centre_ptr.__1: int, p1_ep_ptr.__1: int, p2_ep_ptr.__1: int, q1_ep_ptr.__1: int, q2_ep_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.secorpha$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} secorpha(p1.__1: int, pp2.__1: int, centre_ptr.__1: int, p1_ep_ptr.__1: int, p2_ep_ptr.__1: int, q1_ep_ptr.__1: int, q2_ep_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.secorpha$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$10$: int;
  var {:extern} $GetKeyword.arg.1$13$: int;
  var {:extern} $GetKeyword.arg.1$16$: int;
  var {:extern} $GetKeyword.arg.1$19$: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} $GetKeyword.arg.1$7$: int;
  var {:extern} centre_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} p1_ep_ptr: int;
  var {:extern} p2_ep_ptr: int;
  var {:extern} phase_unit_ptr: int;
  var {:extern} pp2: int;
  var {:extern} q1_ep_ptr: int;
  var {:extern} q2_ep_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.GetKeyword$6: int;
  var {:extern} result.GetKeyword$9: int;
  var {:extern} result.GetKeyword$12: int;
  var {:extern} result.GetKeyword$15: int;
  var {:extern} result.GetKeyword$18: int;
  var {:extern} result.GetReal$8: int;
  var {:extern} result.GetReal$11: int;
  var {:extern} result.GetReal$14: int;
  var {:extern} result.GetReal$17: int;
  var {:extern} result.angval$20: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(centre_ptr.__1, alloc);
    assume INT_LT(p1_ep_ptr.__1, alloc);
    assume INT_LT(p2_ep_ptr.__1, alloc);
    assume INT_LT(q1_ep_ptr.__1, alloc);
    assume INT_LT(q2_ep_ptr.__1, alloc);
    assume INT_LT(phase_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$10$ := 0;
    $GetKeyword.arg.1$13$ := 0;
    $GetKeyword.arg.1$16$ := 0;
    $GetKeyword.arg.1$19$ := 0;
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    $GetKeyword.arg.1$7$ := 0;
    centre_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    p1_ep_ptr := 0;
    p2_ep_ptr := 0;
    phase_unit_ptr := 0;
    pp2 := 0;
    q1_ep_ptr := 0;
    q2_ep_ptr := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.GetKeyword$6 := 0;
    result.GetKeyword$9 := 0;
    result.GetKeyword$12 := 0;
    result.GetKeyword$15 := 0;
    result.GetKeyword$18 := 0;
    result.GetReal$8 := 0;
    result.GetReal$11 := 0;
    result.GetReal$14 := 0;
    result.GetReal$17 := 0;
    result.angval$20 := 0;
    result.secorpha$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    centre_ptr := centre_ptr.__1;
    p1_ep_ptr := p1_ep_ptr.__1;
    p2_ep_ptr := p2_ep_ptr.__1;
    q1_ep_ptr := q1_ep_ptr.__1;
    q2_ep_ptr := q2_ep_ptr.__1;
    phase_unit_ptr := phase_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7183} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7183} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7183} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_6914, curr_ptr);
    assume value_is(__ctobpl_const_6915, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7184} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7191} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_6916, curr_ptr);
    assume value_is(__ctobpl_const_6917, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_6918, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7194} true;
    error := 0;
    assume value_is(__ctobpl_const_6919, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7197} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 81);
    assume value_is(__ctobpl_const_6920, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7197} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_6921, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6922, curr_ptr);
    assume value_is(__ctobpl_const_6923, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_6924, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7197} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_6925, error);
    assume value_is(__ctobpl_const_6926, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7198} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6927, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7203} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 82);
    assume value_is(__ctobpl_const_6928, $GetKeyword.arg.1$5$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7203} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_6929, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_6930, curr_ptr);
    assume value_is(__ctobpl_const_6931, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_6932, curr_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7203} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_6933, error);
    assume value_is(__ctobpl_const_6934, result.GetKeyword$4);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7204} true;
    error := 0;
    assume value_is(__ctobpl_const_6935, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7207} true;
    $GetKeyword.arg.1$7$ := PLUS(Keywords, 21, 83);
    assume value_is(__ctobpl_const_6936, $GetKeyword.arg.1$7$);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7207} true;
    call result.GetKeyword$6 := GetKeyword($GetKeyword.arg.1$7$, curr_ptr);
    assume value_is(__ctobpl_const_6937, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_6938, curr_ptr);
    assume value_is(__ctobpl_const_6939, $GetKeyword.arg.1$7$);
    assume value_is(__ctobpl_const_6940, curr_ptr);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7207} true;
    error := result.GetKeyword$6;
    assume value_is(__ctobpl_const_6941, error);
    assume value_is(__ctobpl_const_6942, result.GetKeyword$6);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7208} true;
    error := 0;
    assume value_is(__ctobpl_const_6943, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7211} true;
    call result.GetReal$8 := GetReal(centre_ptr, curr_ptr);
    assume value_is(__ctobpl_const_6944, centre_ptr);
    assume value_is(__ctobpl_const_6945, curr_ptr);
    assume value_is(__ctobpl_const_6946, centre_ptr);
    assume value_is(__ctobpl_const_6947, curr_ptr);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7211} true;
    error := result.GetReal$8;
    assume value_is(__ctobpl_const_6948, error);
    assume value_is(__ctobpl_const_6949, result.GetReal$8);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7212} true;
    goto label_32_true, label_32_false;

  label_32_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6950, error);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7219} true;
    $GetKeyword.arg.1$10$ := PLUS(Keywords, 21, 89);
    assume value_is(__ctobpl_const_6951, $GetKeyword.arg.1$10$);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7219} true;
    call result.GetKeyword$9 := GetKeyword($GetKeyword.arg.1$10$, curr_ptr);
    assume value_is(__ctobpl_const_6952, $GetKeyword.arg.1$10$);
    assume value_is(__ctobpl_const_6953, curr_ptr);
    assume value_is(__ctobpl_const_6954, $GetKeyword.arg.1$10$);
    assume value_is(__ctobpl_const_6955, curr_ptr);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7219} true;
    error := result.GetKeyword$9;
    assume value_is(__ctobpl_const_6956, error);
    assume value_is(__ctobpl_const_6957, result.GetKeyword$9);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7220} true;
    error := 0;
    assume value_is(__ctobpl_const_6958, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7223} true;
    call result.GetReal$11 := GetReal(p1_ep_ptr, curr_ptr);
    assume value_is(__ctobpl_const_6959, p1_ep_ptr);
    assume value_is(__ctobpl_const_6960, curr_ptr);
    assume value_is(__ctobpl_const_6961, p1_ep_ptr);
    assume value_is(__ctobpl_const_6962, curr_ptr);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7223} true;
    error := result.GetReal$11;
    assume value_is(__ctobpl_const_6963, error);
    assume value_is(__ctobpl_const_6964, result.GetReal$11);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7224} true;
    goto label_47_true, label_47_false;

  label_47_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6965, error);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7231} true;
    $GetKeyword.arg.1$13$ := PLUS(Keywords, 21, 90);
    assume value_is(__ctobpl_const_6966, $GetKeyword.arg.1$13$);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7231} true;
    call result.GetKeyword$12 := GetKeyword($GetKeyword.arg.1$13$, curr_ptr);
    assume value_is(__ctobpl_const_6967, $GetKeyword.arg.1$13$);
    assume value_is(__ctobpl_const_6968, curr_ptr);
    assume value_is(__ctobpl_const_6969, $GetKeyword.arg.1$13$);
    assume value_is(__ctobpl_const_6970, curr_ptr);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7231} true;
    error := result.GetKeyword$12;
    assume value_is(__ctobpl_const_6971, error);
    assume value_is(__ctobpl_const_6972, result.GetKeyword$12);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7232} true;
    error := 0;
    assume value_is(__ctobpl_const_6973, error);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7235} true;
    call result.GetReal$14 := GetReal(p2_ep_ptr, curr_ptr);
    assume value_is(__ctobpl_const_6974, p2_ep_ptr);
    assume value_is(__ctobpl_const_6975, curr_ptr);
    assume value_is(__ctobpl_const_6976, p2_ep_ptr);
    assume value_is(__ctobpl_const_6977, curr_ptr);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7235} true;
    error := result.GetReal$14;
    assume value_is(__ctobpl_const_6978, error);
    assume value_is(__ctobpl_const_6979, result.GetReal$14);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7236} true;
    goto label_62_true, label_62_false;

  label_62_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6980, error);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7243} true;
    $GetKeyword.arg.1$16$ := PLUS(Keywords, 21, 91);
    assume value_is(__ctobpl_const_6981, $GetKeyword.arg.1$16$);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7243} true;
    call result.GetKeyword$15 := GetKeyword($GetKeyword.arg.1$16$, curr_ptr);
    assume value_is(__ctobpl_const_6982, $GetKeyword.arg.1$16$);
    assume value_is(__ctobpl_const_6983, curr_ptr);
    assume value_is(__ctobpl_const_6984, $GetKeyword.arg.1$16$);
    assume value_is(__ctobpl_const_6985, curr_ptr);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7243} true;
    error := result.GetKeyword$15;
    assume value_is(__ctobpl_const_6986, error);
    assume value_is(__ctobpl_const_6987, result.GetKeyword$15);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7244} true;
    error := 0;
    assume value_is(__ctobpl_const_6988, error);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7247} true;
    call result.GetReal$17 := GetReal(q1_ep_ptr, curr_ptr);
    assume value_is(__ctobpl_const_6989, q1_ep_ptr);
    assume value_is(__ctobpl_const_6990, curr_ptr);
    assume value_is(__ctobpl_const_6991, q1_ep_ptr);
    assume value_is(__ctobpl_const_6992, curr_ptr);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7247} true;
    error := result.GetReal$17;
    assume value_is(__ctobpl_const_6993, error);
    assume value_is(__ctobpl_const_6994, result.GetReal$17);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7248} true;
    goto label_77_true, label_77_false;

  label_77_false:
    assume error == 0;
    assume value_is(__ctobpl_const_6995, error);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7255} true;
    $GetKeyword.arg.1$19$ := PLUS(Keywords, 21, 92);
    assume value_is(__ctobpl_const_6996, $GetKeyword.arg.1$19$);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7255} true;
    call result.GetKeyword$18 := GetKeyword($GetKeyword.arg.1$19$, curr_ptr);
    assume value_is(__ctobpl_const_6997, $GetKeyword.arg.1$19$);
    assume value_is(__ctobpl_const_6998, curr_ptr);
    assume value_is(__ctobpl_const_6999, $GetKeyword.arg.1$19$);
    assume value_is(__ctobpl_const_7000, curr_ptr);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7255} true;
    error := result.GetKeyword$18;
    assume value_is(__ctobpl_const_7001, error);
    assume value_is(__ctobpl_const_7002, result.GetKeyword$18);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7256} true;
    error := 0;
    assume value_is(__ctobpl_const_7003, error);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7259} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$20 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, q2_ep_ptr, phase_unit_ptr);
    assume value_is(__ctobpl_const_7004, curr_ptr);
    assume value_is(__ctobpl_const_7005, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7006, curr_ptr);
    assume value_is(__ctobpl_const_7007, q2_ep_ptr);
    assume value_is(__ctobpl_const_7008, phase_unit_ptr);
    assume value_is(__ctobpl_const_7009, curr_ptr);
    assume value_is(__ctobpl_const_7010, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7011, curr_ptr);
    assume value_is(__ctobpl_const_7012, q2_ep_ptr);
    assume value_is(__ctobpl_const_7013, phase_unit_ptr);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7259} true;
    error := result.angval$20;
    assume value_is(__ctobpl_const_7014, error);
    assume value_is(__ctobpl_const_7015, result.angval$20);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7260} true;
    goto label_92_true, label_92_false;

  label_92_false:
    assume error == 0;
    assume value_is(__ctobpl_const_7016, error);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7267} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_7017, pp2);
    assume value_is(__ctobpl_const_7018, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_7019, curr_ptr);
    assume value_is(__ctobpl_const_7020, Mem_T.Pcharac[curr_ptr]);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7268} true;
    result.secorpha$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7269} true;
    call __HAVOC_free(curr);
    return;

  label_92_true:
    assume error != 0;
    assume value_is(__ctobpl_const_7016, error);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7261} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_7021, curr_ptr);
    assume value_is(__ctobpl_const_7022, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7023, curr_ptr);
    assume value_is(__ctobpl_const_7024, Mem_T.Pcharac[curr_ptr]);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7263} true;
    result.secorpha$1 := 17;
    goto label_1;

  label_77_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6995, error);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7249} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_7025, curr_ptr);
    assume value_is(__ctobpl_const_7026, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7027, curr_ptr);
    assume value_is(__ctobpl_const_7028, Mem_T.Pcharac[curr_ptr]);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7251} true;
    result.secorpha$1 := 17;
    goto label_1;

  label_62_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6980, error);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7237} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_7029, curr_ptr);
    assume value_is(__ctobpl_const_7030, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7031, curr_ptr);
    assume value_is(__ctobpl_const_7032, Mem_T.Pcharac[curr_ptr]);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7239} true;
    result.secorpha$1 := 17;
    goto label_1;

  label_47_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6965, error);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7225} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_7033, curr_ptr);
    assume value_is(__ctobpl_const_7034, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7035, curr_ptr);
    assume value_is(__ctobpl_const_7036, Mem_T.Pcharac[curr_ptr]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7227} true;
    result.secorpha$1 := 17;
    goto label_1;

  label_32_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6950, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7213} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 68, havoc_stringTemp);
    assume value_is(__ctobpl_const_7037, curr_ptr);
    assume value_is(__ctobpl_const_7038, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7039, curr_ptr);
    assume value_is(__ctobpl_const_7040, Mem_T.Pcharac[curr_ptr]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7215} true;
    result.secorpha$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_6927, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7199} true;
    result.secorpha$1 := 1;
    goto label_1;
}



procedure {:extern} seqrothg(angle_start.__1: int, angle_step.__1: int, phase_start.__1: int, phase_step.__1: int, g.__1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} seqrothg(angle_start.__1: int, angle_step.__1: int, phase_start.__1: int, phase_step.__1: int, g.__1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle_start: int;
  var {:extern} angle_step: int;
  var {:extern} can: int;
  var {:extern} cph: int;
  var {:extern} g: int;
  var {:extern} g_app_ptr: int;
  var {:extern} phase_start: int;
  var {:extern} phase_step: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(g.__1, alloc);
    angle_start := 0;
    angle_step := 0;
    can := 0;
    cph := 0;
    g := 0;
    g_app_ptr := 0;
    phase_start := 0;
    phase_step := 0;
    angle_start := angle_start.__1;
    angle_step := angle_step.__1;
    phase_start := phase_start.__1;
    phase_step := phase_step.__1;
    g := g.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7285} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7285} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7286} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7292} true;
    cph := phase_start;
    assume value_is(__ctobpl_const_7041, cph);
    assume value_is(__ctobpl_const_7042, phase_start);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7293} true;
    can := angle_start;
    assume value_is(__ctobpl_const_7043, can);
    assume value_is(__ctobpl_const_7044, angle_start);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7294} true;
    g_app_ptr := g;
    assume value_is(__ctobpl_const_7045, g_app_ptr);
    assume value_is(__ctobpl_const_7046, g);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7299} true;
    goto label_9_head;

  label_9_head:
    call can, cph, g_app_ptr, tempBoogie0 := seqrothg_loop_label_9_head(angle_step, can, cph, g_app_ptr, phase_step, tempBoogie0);
    goto label_9_head_last;

  label_9_false:
    assume g_app_ptr == 0;
    assume value_is(__ctobpl_const_7047, g_app_ptr);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7320} true;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7321} true;
    return;

  label_9_true:
    assume g_app_ptr != 0;
    assume value_is(__ctobpl_const_7047, g_app_ptr);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7301} true;
    assert g_app_ptr != 0;
    assert Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(g_app_ptr)] != 0;
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(g_app_ptr)]) := cph];
    assume value_is(__ctobpl_const_7048, g_app_ptr);
    assume value_is(__ctobpl_const_7049, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(g_app_ptr)]);
    assume value_is(__ctobpl_const_7050, Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(g_app_ptr)])]);
    assume value_is(__ctobpl_const_7051, cph);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7303} true;
    assert g_app_ptr != 0;
    assert g_app_ptr != 0;
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(g_app_ptr) := PLUS(Mem_T.PHEA_Geomnode[PHEA_Geomnode(g_app_ptr)], 1, can)];
    assume value_is(__ctobpl_const_7052, g_app_ptr);
    assume value_is(__ctobpl_const_7053, Mem_T.PHEA_Geomnode[PHEA_Geomnode(g_app_ptr)]);
    assume value_is(__ctobpl_const_7054, g_app_ptr);
    assume value_is(__ctobpl_const_7055, Mem_T.PHEA_Geomnode[PHEA_Geomnode(g_app_ptr)]);
    assume value_is(__ctobpl_const_7056, can);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7308} true;
    tempBoogie0 := PLUS(cph, 1, phase_step);
    cph := tempBoogie0;
    assume value_is(__ctobpl_const_7057, cph);
    assume value_is(__ctobpl_const_7058, phase_step);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7313} true;
    tempBoogie0 := PLUS(can, 1, angle_step);
    can := tempBoogie0;
    assume value_is(__ctobpl_const_7059, can);
    assume value_is(__ctobpl_const_7060, angle_step);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7316} true;
    assert g_app_ptr != 0;
    g_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(g_app_ptr)];
    assume value_is(__ctobpl_const_7061, g_app_ptr);
    assume value_is(__ctobpl_const_7062, g_app_ptr);
    assume value_is(__ctobpl_const_7063, Mem_T.NEXT_Geomnode[NEXT_Geomnode(g_app_ptr)]);
    goto label_15_dummy;

  label_15_dummy:
    assume false;
    return;

  label_9_head_last:
    goto label_9_true, label_9_false;
}



procedure {:extern} seqrotrg(angle_start.__1: int, angle_step.__1: int, phase_start.__1: int, phase_step.__1: int, g.__1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} seqrotrg(angle_start.__1: int, angle_step.__1: int, phase_start.__1: int, phase_step.__1: int, g.__1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle_start: int;
  var {:extern} angle_step: int;
  var {:extern} can: int;
  var {:extern} cont: int;
  var {:extern} cph: int;
  var {:extern} endvisit: int;
  var {:extern} g: int;
  var {:extern} nodes_num: int;
  var {:extern} p: int;
  var {:extern} p1: int;
  var {:extern} p2: int;
  var {:extern} pcorr: int;
  var {:extern} phase_start: int;
  var {:extern} phase_step: int;
  var {:extern} pmax: int;
  var {:extern} pmax_ptr: int;
  var {:extern} pmin: int;
  var {:extern} pmin_ptr: int;
  var {:extern} q: int;
  var {:extern} q1: int;
  var {:extern} q2: int;
  var {:extern} qcorr: int;
  var {:extern} qmax: int;
  var {:extern} qmax_ptr: int;
  var {:extern} qmin: int;
  var {:extern} qmin_ptr: int;
  var {:extern} result.pqlimits$1: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(g.__1, alloc);
    angle_start := 0;
    angle_step := 0;
    can := 0;
    cont := 0;
    cph := 0;
    endvisit := 0;
    g := 0;
    nodes_num := 0;
    p := 0;
    p1 := 0;
    p2 := 0;
    pcorr := 0;
    phase_start := 0;
    phase_step := 0;
    pmax := 0;
    call pmax_ptr := __HAVOC_det_malloc(4);
    pmin := 0;
    call pmin_ptr := __HAVOC_det_malloc(4);
    q := 0;
    q1 := 0;
    q2 := 0;
    qcorr := 0;
    qmax := 0;
    call qmax_ptr := __HAVOC_det_malloc(4);
    qmin := 0;
    call qmin_ptr := __HAVOC_det_malloc(4);
    result.pqlimits$1 := 0;
    angle_start := angle_start.__1;
    angle_step := angle_step.__1;
    phase_start := phase_start.__1;
    phase_step := phase_step.__1;
    g := g.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7335} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7335} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7335} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7335} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7336} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7336} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7336} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7336} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7337} true;
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7338} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7338} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7345} true;
    call result.pqlimits$1 := pqlimits(g, pmin_ptr, pmax_ptr, qmin_ptr, qmax_ptr);
    assume value_is(__ctobpl_const_7064, g);
    assume value_is(__ctobpl_const_7065, Mem_T.PGeomnode[pmin_ptr]);
    assume value_is(__ctobpl_const_7066, Mem_T.PGeomnode[pmax_ptr]);
    assume value_is(__ctobpl_const_7067, Mem_T.PGeomnode[qmin_ptr]);
    assume value_is(__ctobpl_const_7068, Mem_T.PGeomnode[qmax_ptr]);
    assume value_is(__ctobpl_const_7069, g);
    assume value_is(__ctobpl_const_7070, Mem_T.PGeomnode[pmin_ptr]);
    assume value_is(__ctobpl_const_7071, Mem_T.PGeomnode[pmax_ptr]);
    assume value_is(__ctobpl_const_7072, Mem_T.PGeomnode[qmin_ptr]);
    assume value_is(__ctobpl_const_7073, Mem_T.PGeomnode[qmax_ptr]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7347} true;
    assert Mem_T.PGeomnode[pmin_ptr] != 0;
    pmin := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[pmin_ptr])];
    assume value_is(__ctobpl_const_7074, pmin);
    assume value_is(__ctobpl_const_7075, Mem_T.PGeomnode[pmin_ptr]);
    assume value_is(__ctobpl_const_7076, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[pmin_ptr])]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7348} true;
    assert Mem_T.PGeomnode[pmax_ptr] != 0;
    pmax := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[pmax_ptr])];
    assume value_is(__ctobpl_const_7077, pmax);
    assume value_is(__ctobpl_const_7078, Mem_T.PGeomnode[pmax_ptr]);
    assume value_is(__ctobpl_const_7079, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[pmax_ptr])]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7349} true;
    assert Mem_T.PGeomnode[qmin_ptr] != 0;
    qmin := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[qmin_ptr])];
    assume value_is(__ctobpl_const_7080, qmin);
    assume value_is(__ctobpl_const_7081, Mem_T.PGeomnode[qmin_ptr]);
    assume value_is(__ctobpl_const_7082, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[qmin_ptr])]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7350} true;
    assert Mem_T.PGeomnode[qmax_ptr] != 0;
    qmax := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[qmax_ptr])];
    assume value_is(__ctobpl_const_7083, qmax);
    assume value_is(__ctobpl_const_7084, Mem_T.PGeomnode[qmax_ptr]);
    assume value_is(__ctobpl_const_7085, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[qmax_ptr])]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7353} true;
    goto label_31_true, label_31_false;

  label_31_false:
    assume !INT_LT(pmax, pmin);
    assume value_is(__ctobpl_const_7086, pmax);
    assume value_is(__ctobpl_const_7087, pmin);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7353} true;
    goto label_32_true, label_32_false;

  label_32_false:
    assume !INT_LT(qmax, qmin);
    assume value_is(__ctobpl_const_7088, qmax);
    assume value_is(__ctobpl_const_7089, qmin);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7358} true;
    cph := phase_start;
    assume value_is(__ctobpl_const_7090, cph);
    assume value_is(__ctobpl_const_7091, phase_start);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7359} true;
    can := angle_start;
    assume value_is(__ctobpl_const_7092, can);
    assume value_is(__ctobpl_const_7093, angle_start);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7362} true;
    nodes_num := MULT(PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(pmax, pmin, 1), 1, 1), PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(qmax, qmin, 1), 1, 1));
    assume value_is(__ctobpl_const_7094, nodes_num);
    assume value_is(__ctobpl_const_7095, pmax);
    assume value_is(__ctobpl_const_7096, pmin);
    assume value_is(__ctobpl_const_7097, qmax);
    assume value_is(__ctobpl_const_7098, qmin);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7363} true;
    endvisit := 0;
    assume value_is(__ctobpl_const_7099, endvisit);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7364} true;
    cont := 0;
    assume value_is(__ctobpl_const_7100, cont);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7366} true;
    goto label_44_head;

  label_44_head:
    call can, cont, cph, endvisit, p, p1, p2, pcorr, pmax, pmin, q, q1, q2, qcorr, qmax, qmin, tempBoogie0 := seqrotrg_loop_label_44_head(angle_step, can, cont, cph, endvisit, g, nodes_num, p, p1, p2, pcorr, phase_step, pmax, pmin, q, q1, q2, qcorr, qmax, qmin, tempBoogie0);
    goto label_44_head_last;

  label_44_false:
    assume endvisit == 0;
    assume value_is(__ctobpl_const_7101, endvisit);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7369} true;
    goto label_45_true, label_45_false;

  label_45_false:
    assume !INT_EQ(pmin, pmax);
    assume value_is(__ctobpl_const_7102, pmin);
    assume value_is(__ctobpl_const_7103, pmax);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7379} true;
    p1 := pmin;
    assume value_is(__ctobpl_const_7106, p1);
    assume value_is(__ctobpl_const_7107, pmin);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7380} true;
    p2 := MINUS_BOTH_PTR_OR_BOTH_INT(pmax, 1, 1);
    assume value_is(__ctobpl_const_7108, p2);
    assume value_is(__ctobpl_const_7109, pmax);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7381} true;
    q := qmax;
    assume value_is(__ctobpl_const_7110, q);
    assume value_is(__ctobpl_const_7111, qmax);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7382} true;
    goto label_63_true, label_63_false;

  label_63_false:
    assume !INT_LEQ(p1, p2);
    assume value_is(__ctobpl_const_7112, p1);
    assume value_is(__ctobpl_const_7113, p2);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7396} true;
    q1 := qmax;
    assume value_is(__ctobpl_const_7138, q1);
    assume value_is(__ctobpl_const_7139, qmax);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7397} true;
    q2 := PLUS(qmin, 1, 1);
    assume value_is(__ctobpl_const_7140, q2);
    assume value_is(__ctobpl_const_7141, qmin);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7398} true;
    p := pmax;
    assume value_is(__ctobpl_const_7142, p);
    assume value_is(__ctobpl_const_7143, pmax);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7399} true;
    goto label_79_true, label_79_false;

  label_79_false:
    assume !INT_LEQ(q2, q1);
    assume value_is(__ctobpl_const_7144, q2);
    assume value_is(__ctobpl_const_7145, q1);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7413} true;
    p1 := pmax;
    assume value_is(__ctobpl_const_7170, p1);
    assume value_is(__ctobpl_const_7171, pmax);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7414} true;
    p2 := PLUS(pmin, 1, 1);
    assume value_is(__ctobpl_const_7172, p2);
    assume value_is(__ctobpl_const_7173, pmin);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7415} true;
    q := qmin;
    assume value_is(__ctobpl_const_7174, q);
    assume value_is(__ctobpl_const_7175, qmin);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7416} true;
    goto label_95_true, label_95_false;

  label_95_false:
    assume !INT_LEQ(p2, p1);
    assume value_is(__ctobpl_const_7176, p2);
    assume value_is(__ctobpl_const_7177, p1);
    goto label_96;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7430} true;
    q1 := qmin;
    assume value_is(__ctobpl_const_7202, q1);
    assume value_is(__ctobpl_const_7203, qmin);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7431} true;
    q2 := MINUS_BOTH_PTR_OR_BOTH_INT(qmax, 1, 1);
    assume value_is(__ctobpl_const_7204, q2);
    assume value_is(__ctobpl_const_7205, qmax);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7432} true;
    p := pmin;
    assume value_is(__ctobpl_const_7206, p);
    assume value_is(__ctobpl_const_7207, pmin);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7433} true;
    goto label_111_true, label_111_false;

  label_111_false:
    assume !INT_LEQ(q1, q2);
    assume value_is(__ctobpl_const_7208, q1);
    assume value_is(__ctobpl_const_7209, q2);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7450} true;
    assume value_is(__ctobpl_const_7252, pmin);
    pmin := PLUS(pmin, 1, 1);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7451} true;
    assume value_is(__ctobpl_const_7253, pmax);
    pmax := MINUS_BOTH_PTR_OR_BOTH_INT(pmax, 1, 1);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7452} true;
    assume value_is(__ctobpl_const_7254, qmin);
    qmin := PLUS(qmin, 1, 1);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7453} true;
    assume value_is(__ctobpl_const_7255, qmax);
    qmax := MINUS_BOTH_PTR_OR_BOTH_INT(qmax, 1, 1);
    goto label_60_dummy;

  label_111_true:
    assume INT_LEQ(q1, q2);
    assume value_is(__ctobpl_const_7208, q1);
    assume value_is(__ctobpl_const_7209, q2);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7434} true;
    qcorr := q1;
    assume value_is(__ctobpl_const_7210, qcorr);
    assume value_is(__ctobpl_const_7211, q1);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7435} true;
    goto label_113_head;

  label_113_head:
    call can, cont, cph, endvisit, qcorr, tempBoogie0 := seqrotrg_loop_label_113_head(angle_step, can, cont, cph, endvisit, g, nodes_num, p, phase_step, q2, qcorr, tempBoogie0);
    goto label_113_head_last;

  label_113_false:
    assume !INT_LEQ(qcorr, q2);
    assume value_is(__ctobpl_const_7212, qcorr);
    assume value_is(__ctobpl_const_7213, q2);
    goto label_56;

  label_113_true:
    assume INT_LEQ(qcorr, q2);
    assume value_is(__ctobpl_const_7212, qcorr);
    assume value_is(__ctobpl_const_7213, q2);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7435} true;
    goto label_114_true, label_114_false;

  label_114_false:
    assume endvisit == 0;
    assume value_is(__ctobpl_const_7214, endvisit);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7436} true;
    call gnodevis(p, qcorr, cph, can, g);
    assume value_is(__ctobpl_const_7215, p);
    assume value_is(__ctobpl_const_7216, qcorr);
    assume value_is(__ctobpl_const_7217, cph);
    assume value_is(__ctobpl_const_7218, can);
    assume value_is(__ctobpl_const_7219, g);
    assume value_is(__ctobpl_const_7220, p);
    assume value_is(__ctobpl_const_7221, qcorr);
    assume value_is(__ctobpl_const_7222, cph);
    assume value_is(__ctobpl_const_7223, can);
    assume value_is(__ctobpl_const_7224, g);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7437} true;
    tempBoogie0 := PLUS(cph, 1, phase_step);
    cph := tempBoogie0;
    assume value_is(__ctobpl_const_7225, cph);
    assume value_is(__ctobpl_const_7226, phase_step);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7438} true;
    tempBoogie0 := PLUS(can, 1, angle_step);
    can := tempBoogie0;
    assume value_is(__ctobpl_const_7227, can);
    assume value_is(__ctobpl_const_7228, angle_step);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7439} true;
    assume value_is(__ctobpl_const_7229, cont);
    cont := PLUS(cont, 1, 1);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7440} true;
    goto label_121_true, label_121_false;

  label_121_false:
    assume !INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7230, cont);
    assume value_is(__ctobpl_const_7231, nodes_num);
    goto label_122;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7442} true;
    assume value_is(__ctobpl_const_7233, qcorr);
    qcorr := PLUS(qcorr, 1, 1);
    goto label_122_dummy;

  label_121_true:
    assume INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7230, cont);
    assume value_is(__ctobpl_const_7231, nodes_num);
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7441} true;
    endvisit := 1;
    assume value_is(__ctobpl_const_7232, endvisit);
    goto label_122;

  label_114_true:
    assume endvisit != 0;
    assume value_is(__ctobpl_const_7214, endvisit);
    goto label_56;

  label_95_true:
    assume INT_LEQ(p2, p1);
    assume value_is(__ctobpl_const_7176, p2);
    assume value_is(__ctobpl_const_7177, p1);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7417} true;
    pcorr := p1;
    assume value_is(__ctobpl_const_7178, pcorr);
    assume value_is(__ctobpl_const_7179, p1);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7418} true;
    goto label_98_head;

  label_98_head:
    call can, cont, cph, endvisit, pcorr, tempBoogie0 := seqrotrg_loop_label_98_head(angle_step, can, cont, cph, endvisit, g, nodes_num, p2, pcorr, phase_step, q, tempBoogie0);
    goto label_98_head_last;

  label_98_false:
    assume !INT_LEQ(p2, pcorr);
    assume value_is(__ctobpl_const_7180, p2);
    assume value_is(__ctobpl_const_7181, pcorr);
    goto label_96;

  label_98_true:
    assume INT_LEQ(p2, pcorr);
    assume value_is(__ctobpl_const_7180, p2);
    assume value_is(__ctobpl_const_7181, pcorr);
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7418} true;
    goto label_99_true, label_99_false;

  label_99_false:
    assume endvisit == 0;
    assume value_is(__ctobpl_const_7182, endvisit);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7419} true;
    call gnodevis(pcorr, q, cph, can, g);
    assume value_is(__ctobpl_const_7183, pcorr);
    assume value_is(__ctobpl_const_7184, q);
    assume value_is(__ctobpl_const_7185, cph);
    assume value_is(__ctobpl_const_7186, can);
    assume value_is(__ctobpl_const_7187, g);
    assume value_is(__ctobpl_const_7188, pcorr);
    assume value_is(__ctobpl_const_7189, q);
    assume value_is(__ctobpl_const_7190, cph);
    assume value_is(__ctobpl_const_7191, can);
    assume value_is(__ctobpl_const_7192, g);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7420} true;
    tempBoogie0 := PLUS(cph, 1, phase_step);
    cph := tempBoogie0;
    assume value_is(__ctobpl_const_7193, cph);
    assume value_is(__ctobpl_const_7194, phase_step);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7421} true;
    tempBoogie0 := PLUS(can, 1, angle_step);
    can := tempBoogie0;
    assume value_is(__ctobpl_const_7195, can);
    assume value_is(__ctobpl_const_7196, angle_step);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7422} true;
    assume value_is(__ctobpl_const_7197, cont);
    cont := PLUS(cont, 1, 1);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7423} true;
    goto label_106_true, label_106_false;

  label_106_false:
    assume !INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7198, cont);
    assume value_is(__ctobpl_const_7199, nodes_num);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7425} true;
    assume value_is(__ctobpl_const_7201, pcorr);
    pcorr := MINUS_BOTH_PTR_OR_BOTH_INT(pcorr, 1, 1);
    goto label_107_dummy;

  label_106_true:
    assume INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7198, cont);
    assume value_is(__ctobpl_const_7199, nodes_num);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7424} true;
    endvisit := 1;
    assume value_is(__ctobpl_const_7200, endvisit);
    goto label_107;

  label_99_true:
    assume endvisit != 0;
    assume value_is(__ctobpl_const_7182, endvisit);
    goto label_96;

  label_79_true:
    assume INT_LEQ(q2, q1);
    assume value_is(__ctobpl_const_7144, q2);
    assume value_is(__ctobpl_const_7145, q1);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7400} true;
    qcorr := q1;
    assume value_is(__ctobpl_const_7146, qcorr);
    assume value_is(__ctobpl_const_7147, q1);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7401} true;
    goto label_82_head;

  label_82_head:
    call can, cont, cph, endvisit, qcorr, tempBoogie0 := seqrotrg_loop_label_82_head(angle_step, can, cont, cph, endvisit, g, nodes_num, p, phase_step, q2, qcorr, tempBoogie0);
    goto label_82_head_last;

  label_82_false:
    assume !INT_LEQ(q2, qcorr);
    assume value_is(__ctobpl_const_7148, q2);
    assume value_is(__ctobpl_const_7149, qcorr);
    goto label_80;

  label_82_true:
    assume INT_LEQ(q2, qcorr);
    assume value_is(__ctobpl_const_7148, q2);
    assume value_is(__ctobpl_const_7149, qcorr);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7401} true;
    goto label_83_true, label_83_false;

  label_83_false:
    assume endvisit == 0;
    assume value_is(__ctobpl_const_7150, endvisit);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7402} true;
    call gnodevis(p, qcorr, cph, can, g);
    assume value_is(__ctobpl_const_7151, p);
    assume value_is(__ctobpl_const_7152, qcorr);
    assume value_is(__ctobpl_const_7153, cph);
    assume value_is(__ctobpl_const_7154, can);
    assume value_is(__ctobpl_const_7155, g);
    assume value_is(__ctobpl_const_7156, p);
    assume value_is(__ctobpl_const_7157, qcorr);
    assume value_is(__ctobpl_const_7158, cph);
    assume value_is(__ctobpl_const_7159, can);
    assume value_is(__ctobpl_const_7160, g);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7403} true;
    tempBoogie0 := PLUS(cph, 1, phase_step);
    cph := tempBoogie0;
    assume value_is(__ctobpl_const_7161, cph);
    assume value_is(__ctobpl_const_7162, phase_step);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7404} true;
    tempBoogie0 := PLUS(can, 1, angle_step);
    can := tempBoogie0;
    assume value_is(__ctobpl_const_7163, can);
    assume value_is(__ctobpl_const_7164, angle_step);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7405} true;
    assume value_is(__ctobpl_const_7165, cont);
    cont := PLUS(cont, 1, 1);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7406} true;
    goto label_90_true, label_90_false;

  label_90_false:
    assume !INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7166, cont);
    assume value_is(__ctobpl_const_7167, nodes_num);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7408} true;
    assume value_is(__ctobpl_const_7169, qcorr);
    qcorr := MINUS_BOTH_PTR_OR_BOTH_INT(qcorr, 1, 1);
    goto label_91_dummy;

  label_90_true:
    assume INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7166, cont);
    assume value_is(__ctobpl_const_7167, nodes_num);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7407} true;
    endvisit := 1;
    assume value_is(__ctobpl_const_7168, endvisit);
    goto label_91;

  label_83_true:
    assume endvisit != 0;
    assume value_is(__ctobpl_const_7150, endvisit);
    goto label_80;

  label_63_true:
    assume INT_LEQ(p1, p2);
    assume value_is(__ctobpl_const_7112, p1);
    assume value_is(__ctobpl_const_7113, p2);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7383} true;
    pcorr := p1;
    assume value_is(__ctobpl_const_7114, pcorr);
    assume value_is(__ctobpl_const_7115, p1);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7384} true;
    goto label_66_head;

  label_66_head:
    call can, cont, cph, endvisit, pcorr, tempBoogie0 := seqrotrg_loop_label_66_head(angle_step, can, cont, cph, endvisit, g, nodes_num, p2, pcorr, phase_step, q, tempBoogie0);
    goto label_66_head_last;

  label_66_false:
    assume !INT_LEQ(pcorr, p2);
    assume value_is(__ctobpl_const_7116, pcorr);
    assume value_is(__ctobpl_const_7117, p2);
    goto label_64;

  label_66_true:
    assume INT_LEQ(pcorr, p2);
    assume value_is(__ctobpl_const_7116, pcorr);
    assume value_is(__ctobpl_const_7117, p2);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7384} true;
    goto label_67_true, label_67_false;

  label_67_false:
    assume endvisit == 0;
    assume value_is(__ctobpl_const_7118, endvisit);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7385} true;
    call gnodevis(pcorr, q, cph, can, g);
    assume value_is(__ctobpl_const_7119, pcorr);
    assume value_is(__ctobpl_const_7120, q);
    assume value_is(__ctobpl_const_7121, cph);
    assume value_is(__ctobpl_const_7122, can);
    assume value_is(__ctobpl_const_7123, g);
    assume value_is(__ctobpl_const_7124, pcorr);
    assume value_is(__ctobpl_const_7125, q);
    assume value_is(__ctobpl_const_7126, cph);
    assume value_is(__ctobpl_const_7127, can);
    assume value_is(__ctobpl_const_7128, g);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7386} true;
    tempBoogie0 := PLUS(cph, 1, phase_step);
    cph := tempBoogie0;
    assume value_is(__ctobpl_const_7129, cph);
    assume value_is(__ctobpl_const_7130, phase_step);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7387} true;
    tempBoogie0 := PLUS(can, 1, angle_step);
    can := tempBoogie0;
    assume value_is(__ctobpl_const_7131, can);
    assume value_is(__ctobpl_const_7132, angle_step);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7388} true;
    assume value_is(__ctobpl_const_7133, cont);
    cont := PLUS(cont, 1, 1);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7389} true;
    goto label_74_true, label_74_false;

  label_74_false:
    assume !INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7134, cont);
    assume value_is(__ctobpl_const_7135, nodes_num);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7391} true;
    assume value_is(__ctobpl_const_7137, pcorr);
    pcorr := PLUS(pcorr, 1, 1);
    goto label_75_dummy;

  label_74_true:
    assume INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7134, cont);
    assume value_is(__ctobpl_const_7135, nodes_num);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7390} true;
    endvisit := 1;
    assume value_is(__ctobpl_const_7136, endvisit);
    goto label_75;

  label_67_true:
    assume endvisit != 0;
    assume value_is(__ctobpl_const_7118, endvisit);
    goto label_64;

  label_45_true:
    assume INT_EQ(pmin, pmax);
    assume value_is(__ctobpl_const_7102, pmin);
    assume value_is(__ctobpl_const_7103, pmax);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7369} true;
    goto label_48_true, label_48_false;

  label_48_false:
    assume !INT_EQ(qmin, qmax);
    assume value_is(__ctobpl_const_7104, qmin);
    assume value_is(__ctobpl_const_7105, qmax);
    goto label_47;

  label_48_true:
    assume INT_EQ(qmin, qmax);
    assume value_is(__ctobpl_const_7104, qmin);
    assume value_is(__ctobpl_const_7105, qmax);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7370} true;
    call gnodevis(pmin, qmin, cph, can, g);
    assume value_is(__ctobpl_const_7234, pmin);
    assume value_is(__ctobpl_const_7235, qmin);
    assume value_is(__ctobpl_const_7236, cph);
    assume value_is(__ctobpl_const_7237, can);
    assume value_is(__ctobpl_const_7238, g);
    assume value_is(__ctobpl_const_7239, pmin);
    assume value_is(__ctobpl_const_7240, qmin);
    assume value_is(__ctobpl_const_7241, cph);
    assume value_is(__ctobpl_const_7242, can);
    assume value_is(__ctobpl_const_7243, g);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7371} true;
    tempBoogie0 := PLUS(cph, 1, phase_step);
    cph := tempBoogie0;
    assume value_is(__ctobpl_const_7244, cph);
    assume value_is(__ctobpl_const_7245, phase_step);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7372} true;
    tempBoogie0 := PLUS(can, 1, angle_step);
    can := tempBoogie0;
    assume value_is(__ctobpl_const_7246, can);
    assume value_is(__ctobpl_const_7247, angle_step);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7373} true;
    assume value_is(__ctobpl_const_7248, cont);
    cont := PLUS(cont, 1, 1);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7374} true;
    goto label_55_true, label_55_false;

  label_55_false:
    assume !INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7249, cont);
    assume value_is(__ctobpl_const_7250, nodes_num);
    goto label_56;

  label_55_true:
    assume INT_EQ(cont, nodes_num);
    assume value_is(__ctobpl_const_7249, cont);
    assume value_is(__ctobpl_const_7250, nodes_num);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7375} true;
    endvisit := 1;
    assume value_is(__ctobpl_const_7251, endvisit);
    goto label_56;

  label_44_true:
    assume endvisit != 0;
    assume value_is(__ctobpl_const_7101, endvisit);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7457} true;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7459} true;
    call __HAVOC_free(pmax_ptr);
    call __HAVOC_free(pmin_ptr);
    call __HAVOC_free(qmax_ptr);
    call __HAVOC_free(qmin_ptr);
    return;

  label_32_true:
    assume INT_LT(qmax, qmin);
    assume value_is(__ctobpl_const_7088, qmax);
    assume value_is(__ctobpl_const_7089, qmin);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7354} true;
    call interror(havoc_stringTemp);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7355} true;
    return;

  label_31_true:
    assume INT_LT(pmax, pmin);
    assume value_is(__ctobpl_const_7086, pmax);
    assume value_is(__ctobpl_const_7087, pmin);
    goto label_33;

  label_122_dummy:
    assume false;
    return;

  label_113_head_last:
    goto label_113_true, label_113_false;

  label_107_dummy:
    assume false;
    return;

  label_98_head_last:
    goto label_98_true, label_98_false;

  label_91_dummy:
    assume false;
    return;

  label_82_head_last:
    goto label_82_true, label_82_false;

  label_75_dummy:
    assume false;
    return;

  label_66_head_last:
    goto label_66_true, label_66_false;

  label_60_dummy:
    assume false;
    return;

  label_44_head_last:
    goto label_44_true, label_44_false;
}



procedure {:extern} serotdir(p1.__1: int, pp2.__1: int, direction_ptr.__1: int) returns (result.serotdir$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} serotdir(p1.__1: int, pp2.__1: int, direction_ptr.__1: int) returns (result.serotdir$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} direction_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(direction_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    direction_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.serotdir$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    direction_ptr := direction_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7469} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7469} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7469} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_7256, curr_ptr);
    assume value_is(__ctobpl_const_7257, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7470} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7477} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_7258, curr_ptr);
    assume value_is(__ctobpl_const_7259, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7260, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7478} true;
    error := 0;
    assume value_is(__ctobpl_const_7261, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7481} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 93);
    assume value_is(__ctobpl_const_7262, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7481} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_7263, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_7264, curr_ptr);
    assume value_is(__ctobpl_const_7265, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_7266, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7481} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_7267, error);
    assume value_is(__ctobpl_const_7268, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7482} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_7269, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7483} true;
    assert direction_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[direction_ptr := 0];
    assume value_is(__ctobpl_const_7270, direction_ptr);
    assume value_is(__ctobpl_const_7271, Mem_T.INT4[direction_ptr]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7484} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_7272, pp2);
    assume value_is(__ctobpl_const_7273, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_7274, curr_ptr);
    assume value_is(__ctobpl_const_7275, Mem_T.Pcharac[curr_ptr]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7485} true;
    result.serotdir$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7499} true;
    call __HAVOC_free(curr);
    return;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_7269, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7489} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 94);
    assume value_is(__ctobpl_const_7276, $GetKeyword.arg.1$5$);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7489} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_7277, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_7278, curr_ptr);
    assume value_is(__ctobpl_const_7279, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_7280, curr_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7489} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_7281, error);
    assume value_is(__ctobpl_const_7282, result.GetKeyword$4);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7490} true;
    goto label_21_true, label_21_false;

  label_21_false:
    assume error == 0;
    assume value_is(__ctobpl_const_7283, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7491} true;
    assert direction_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[direction_ptr := 1];
    assume value_is(__ctobpl_const_7284, direction_ptr);
    assume value_is(__ctobpl_const_7285, Mem_T.INT4[direction_ptr]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7492} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_7286, pp2);
    assume value_is(__ctobpl_const_7287, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_7288, curr_ptr);
    assume value_is(__ctobpl_const_7289, Mem_T.Pcharac[curr_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7493} true;
    result.serotdir$1 := 0;
    goto label_1;

  label_21_true:
    assume error != 0;
    assume value_is(__ctobpl_const_7283, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7498} true;
    result.serotdir$1 := 1;
    goto label_1;
}



procedure {:extern} serotpar(p1.__1: int, pp2.__1: int, angle_start_ptr.__1: int, angle_step_ptr.__1: int, omit_phase_ptr.__1: int, phase_start_ptr.__1: int, phase_step_ptr.__1: int, angle_unit_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.serotpar$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} serotpar(p1.__1: int, pp2.__1: int, angle_start_ptr.__1: int, angle_step_ptr.__1: int, omit_phase_ptr.__1: int, phase_start_ptr.__1: int, phase_step_ptr.__1: int, angle_unit_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.serotpar$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle_start_ptr: int;
  var {:extern} angle_step_ptr: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} omit_phase_ptr: int;
  var {:extern} p1: int;
  var {:extern} phase_start_ptr: int;
  var {:extern} phase_step_ptr: int;
  var {:extern} phase_unit_ptr: int;
  var {:extern} pp2: int;
  var {:extern} result.anglerot$2: int;
  var {:extern} result.phaserot$3: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(angle_start_ptr.__1, alloc);
    assume INT_LT(angle_step_ptr.__1, alloc);
    assume INT_LT(omit_phase_ptr.__1, alloc);
    assume INT_LT(phase_start_ptr.__1, alloc);
    assume INT_LT(phase_step_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    assume INT_LT(phase_unit_ptr.__1, alloc);
    angle_start_ptr := 0;
    angle_step_ptr := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    omit_phase_ptr := 0;
    p1 := 0;
    phase_start_ptr := 0;
    phase_step_ptr := 0;
    phase_unit_ptr := 0;
    pp2 := 0;
    result.anglerot$2 := 0;
    result.phaserot$3 := 0;
    result.serotpar$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    angle_start_ptr := angle_start_ptr.__1;
    angle_step_ptr := angle_step_ptr.__1;
    omit_phase_ptr := omit_phase_ptr.__1;
    phase_start_ptr := phase_start_ptr.__1;
    phase_step_ptr := phase_step_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    phase_unit_ptr := phase_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7516} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7516} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7516} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_7290, curr_ptr);
    assume value_is(__ctobpl_const_7291, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7517} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7524} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_7292, curr_ptr);
    assume value_is(__ctobpl_const_7293, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7294, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7525} true;
    error := 0;
    assume value_is(__ctobpl_const_7295, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7528} true;
    assert omit_phase_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_phase_ptr := 0];
    assume value_is(__ctobpl_const_7296, omit_phase_ptr);
    assume value_is(__ctobpl_const_7297, Mem_T.INT4[omit_phase_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7531} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.anglerot$2 := anglerot(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_start_ptr, angle_step_ptr, angle_unit_ptr);
    assume value_is(__ctobpl_const_7298, curr_ptr);
    assume value_is(__ctobpl_const_7299, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7300, curr_ptr);
    assume value_is(__ctobpl_const_7301, angle_start_ptr);
    assume value_is(__ctobpl_const_7302, angle_step_ptr);
    assume value_is(__ctobpl_const_7303, angle_unit_ptr);
    assume value_is(__ctobpl_const_7304, curr_ptr);
    assume value_is(__ctobpl_const_7305, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7306, curr_ptr);
    assume value_is(__ctobpl_const_7307, angle_start_ptr);
    assume value_is(__ctobpl_const_7308, angle_step_ptr);
    assume value_is(__ctobpl_const_7309, angle_unit_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7531} true;
    error := result.anglerot$2;
    assume value_is(__ctobpl_const_7310, error);
    assume value_is(__ctobpl_const_7311, result.anglerot$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7533} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_7312, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7537} true;
    goto label_15_true, label_15_false;

  label_15_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_7313, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7543} true;
    assert omit_phase_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_phase_ptr := 0];
    assume value_is(__ctobpl_const_7314, omit_phase_ptr);
    assume value_is(__ctobpl_const_7315, Mem_T.INT4[omit_phase_ptr]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7544} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.phaserot$3 := phaserot(Mem_T.Pcharac[curr_ptr], curr_ptr, phase_start_ptr, phase_step_ptr, phase_unit_ptr);
    assume value_is(__ctobpl_const_7316, curr_ptr);
    assume value_is(__ctobpl_const_7317, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7318, curr_ptr);
    assume value_is(__ctobpl_const_7319, phase_start_ptr);
    assume value_is(__ctobpl_const_7320, phase_step_ptr);
    assume value_is(__ctobpl_const_7321, phase_unit_ptr);
    assume value_is(__ctobpl_const_7322, curr_ptr);
    assume value_is(__ctobpl_const_7323, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7324, curr_ptr);
    assume value_is(__ctobpl_const_7325, phase_start_ptr);
    assume value_is(__ctobpl_const_7326, phase_step_ptr);
    assume value_is(__ctobpl_const_7327, phase_unit_ptr);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7544} true;
    error := result.phaserot$3;
    assume value_is(__ctobpl_const_7328, error);
    assume value_is(__ctobpl_const_7329, result.phaserot$3);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7546} true;
    goto label_24_true, label_24_false;

  label_24_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_7330, error);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7550} true;
    goto label_25_true, label_25_false;

  label_25_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_7331, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7557} true;
    assert omit_phase_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_phase_ptr := 0];
    assume value_is(__ctobpl_const_7332, omit_phase_ptr);
    assume value_is(__ctobpl_const_7333, Mem_T.INT4[omit_phase_ptr]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7558} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_7334, pp2);
    assume value_is(__ctobpl_const_7335, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_7336, curr_ptr);
    assume value_is(__ctobpl_const_7337, Mem_T.Pcharac[curr_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7559} true;
    result.serotpar$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7561} true;
    call __HAVOC_free(curr);
    return;

  label_25_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_7331, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7551} true;
    assert omit_phase_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_phase_ptr := 1];
    assume value_is(__ctobpl_const_7338, omit_phase_ptr);
    assume value_is(__ctobpl_const_7339, Mem_T.INT4[omit_phase_ptr]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7552} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_7340, pp2);
    assume value_is(__ctobpl_const_7341, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_7342, curr_ptr);
    assume value_is(__ctobpl_const_7343, Mem_T.Pcharac[curr_ptr]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7553} true;
    result.serotpar$1 := 0;
    goto label_1;

  label_24_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_7330, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7547} true;
    result.serotpar$1 := 17;
    goto label_1;

  label_15_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_7313, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7538} true;
    assert omit_phase_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_phase_ptr := 1];
    assume value_is(__ctobpl_const_7344, omit_phase_ptr);
    assume value_is(__ctobpl_const_7345, Mem_T.INT4[omit_phase_ptr]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7539} true;
    result.serotpar$1 := 1;
    goto label_1;

  label_14_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_7312, error);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7534} true;
    result.serotpar$1 := 17;
    goto label_1;
}



procedure {:extern} serotpha(p1.__1: int, pp2.__1: int, direction_ptr.__1: int, omit_angle_ptr.__1: int, angle_start_ptr.__1: int, angle_step_ptr.__1: int, omit_phase_ptr.__1: int, phase_start_ptr.__1: int, phase_step_ptr.__1: int, angle_unit_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.serotpha$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} serotpha(p1.__1: int, pp2.__1: int, direction_ptr.__1: int, omit_angle_ptr.__1: int, angle_start_ptr.__1: int, angle_step_ptr.__1: int, omit_phase_ptr.__1: int, phase_start_ptr.__1: int, phase_step_ptr.__1: int, angle_unit_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.serotpha$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$5$: int;
  var {:extern} angle_start_ptr: int;
  var {:extern} angle_step_ptr: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} direction_ptr: int;
  var {:extern} error: int;
  var {:extern} omit_angle_ptr: int;
  var {:extern} omit_phase_ptr: int;
  var {:extern} p1: int;
  var {:extern} $parserro.arg.3$6$: int;
  var {:extern} phase_start_ptr: int;
  var {:extern} phase_step_ptr: int;
  var {:extern} phase_unit_ptr: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$4: int;
  var {:extern} result.serotdir$7: int;
  var {:extern} result.serotpar$8: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(direction_ptr.__1, alloc);
    assume INT_LT(omit_angle_ptr.__1, alloc);
    assume INT_LT(angle_start_ptr.__1, alloc);
    assume INT_LT(angle_step_ptr.__1, alloc);
    assume INT_LT(omit_phase_ptr.__1, alloc);
    assume INT_LT(phase_start_ptr.__1, alloc);
    assume INT_LT(phase_step_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    assume INT_LT(phase_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$5$ := 0;
    angle_start_ptr := 0;
    angle_step_ptr := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    direction_ptr := 0;
    error := 0;
    omit_angle_ptr := 0;
    omit_phase_ptr := 0;
    p1 := 0;
    $parserro.arg.3$6$ := 0;
    phase_start_ptr := 0;
    phase_step_ptr := 0;
    phase_unit_ptr := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$4 := 0;
    result.serotdir$7 := 0;
    result.serotpar$8 := 0;
    result.serotpha$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    direction_ptr := direction_ptr.__1;
    omit_angle_ptr := omit_angle_ptr.__1;
    angle_start_ptr := angle_start_ptr.__1;
    angle_step_ptr := angle_step_ptr.__1;
    omit_phase_ptr := omit_phase_ptr.__1;
    phase_start_ptr := phase_start_ptr.__1;
    phase_step_ptr := phase_step_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    phase_unit_ptr := phase_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7587} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7587} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7587} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_7346, curr_ptr);
    assume value_is(__ctobpl_const_7347, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7588} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7595} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_7348, curr_ptr);
    assume value_is(__ctobpl_const_7349, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7350, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7596} true;
    error := 0;
    assume value_is(__ctobpl_const_7351, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7598} true;
    assert omit_angle_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_angle_ptr := 0];
    assume value_is(__ctobpl_const_7352, omit_angle_ptr);
    assume value_is(__ctobpl_const_7353, Mem_T.INT4[omit_angle_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7599} true;
    assert omit_phase_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_phase_ptr := 0];
    assume value_is(__ctobpl_const_7354, omit_phase_ptr);
    assume value_is(__ctobpl_const_7355, Mem_T.INT4[omit_phase_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7602} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 99);
    assume value_is(__ctobpl_const_7356, $GetKeyword.arg.1$3$);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7602} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_7357, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_7358, curr_ptr);
    assume value_is(__ctobpl_const_7359, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_7360, curr_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7602} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_7361, error);
    assume value_is(__ctobpl_const_7362, result.GetKeyword$2);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7603} true;
    goto label_16_true, label_16_false;

  label_16_false:
    assume error == 0;
    assume value_is(__ctobpl_const_7363, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7608} true;
    $GetKeyword.arg.1$5$ := PLUS(Keywords, 21, 100);
    assume value_is(__ctobpl_const_7364, $GetKeyword.arg.1$5$);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7608} true;
    call result.GetKeyword$4 := GetKeyword($GetKeyword.arg.1$5$, curr_ptr);
    assume value_is(__ctobpl_const_7365, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_7366, curr_ptr);
    assume value_is(__ctobpl_const_7367, $GetKeyword.arg.1$5$);
    assume value_is(__ctobpl_const_7368, curr_ptr);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7608} true;
    error := result.GetKeyword$4;
    assume value_is(__ctobpl_const_7369, error);
    assume value_is(__ctobpl_const_7370, result.GetKeyword$4);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7609} true;
    goto label_23_true, label_23_false;

  label_23_false:
    assume error == 0;
    assume value_is(__ctobpl_const_7371, error);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7615} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.serotdir$7 := serotdir(Mem_T.Pcharac[curr_ptr], curr_ptr, direction_ptr);
    assume value_is(__ctobpl_const_7372, curr_ptr);
    assume value_is(__ctobpl_const_7373, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7374, curr_ptr);
    assume value_is(__ctobpl_const_7375, direction_ptr);
    assume value_is(__ctobpl_const_7376, curr_ptr);
    assume value_is(__ctobpl_const_7377, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7378, curr_ptr);
    assume value_is(__ctobpl_const_7379, direction_ptr);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7615} true;
    error := result.serotdir$7;
    assume value_is(__ctobpl_const_7380, error);
    assume value_is(__ctobpl_const_7381, result.serotdir$7);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7617} true;
    goto label_33_true, label_33_false;

  label_33_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_7382, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7621} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.serotpar$8 := serotpar(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_start_ptr, angle_step_ptr, omit_phase_ptr, phase_start_ptr, phase_step_ptr, angle_unit_ptr, phase_unit_ptr);
    assume value_is(__ctobpl_const_7385, curr_ptr);
    assume value_is(__ctobpl_const_7386, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7387, curr_ptr);
    assume value_is(__ctobpl_const_7388, angle_start_ptr);
    assume value_is(__ctobpl_const_7389, angle_step_ptr);
    assume value_is(__ctobpl_const_7390, omit_phase_ptr);
    assume value_is(__ctobpl_const_7391, phase_start_ptr);
    assume value_is(__ctobpl_const_7392, phase_step_ptr);
    assume value_is(__ctobpl_const_7393, angle_unit_ptr);
    assume value_is(__ctobpl_const_7394, phase_unit_ptr);
    assume value_is(__ctobpl_const_7395, curr_ptr);
    assume value_is(__ctobpl_const_7396, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7397, curr_ptr);
    assume value_is(__ctobpl_const_7398, angle_start_ptr);
    assume value_is(__ctobpl_const_7399, angle_step_ptr);
    assume value_is(__ctobpl_const_7400, omit_phase_ptr);
    assume value_is(__ctobpl_const_7401, phase_start_ptr);
    assume value_is(__ctobpl_const_7402, phase_step_ptr);
    assume value_is(__ctobpl_const_7403, angle_unit_ptr);
    assume value_is(__ctobpl_const_7404, phase_unit_ptr);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7621} true;
    error := result.serotpar$8;
    assume value_is(__ctobpl_const_7405, error);
    assume value_is(__ctobpl_const_7406, result.serotpar$8);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7623} true;
    goto label_39_true, label_39_false;

  label_39_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_7407, error);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7627} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_7408, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7632} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_7411, pp2);
    assume value_is(__ctobpl_const_7412, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_7413, curr_ptr);
    assume value_is(__ctobpl_const_7414, Mem_T.Pcharac[curr_ptr]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7633} true;
    result.serotpha$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7634} true;
    call __HAVOC_free(curr);
    return;

  label_40_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_7408, error);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7628} true;
    assert omit_angle_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[omit_angle_ptr := 1];
    assume value_is(__ctobpl_const_7409, omit_angle_ptr);
    assume value_is(__ctobpl_const_7410, Mem_T.INT4[omit_angle_ptr]);
    goto label_42;

  label_39_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_7407, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7624} true;
    result.serotpha$1 := 17;
    goto label_1;

  label_33_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_7382, error);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7618} true;
    assert direction_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[direction_ptr := 0];
    assume value_is(__ctobpl_const_7383, direction_ptr);
    assume value_is(__ctobpl_const_7384, Mem_T.INT4[direction_ptr]);
    goto label_34;

  label_23_true:
    assume error != 0;
    assume value_is(__ctobpl_const_7371, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7610} true;
    $parserro.arg.3$6$ := PLUS(Keywords, 21, 100);
    assume value_is(__ctobpl_const_7415, $parserro.arg.3$6$);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7610} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 1, $parserro.arg.3$6$);
    assume value_is(__ctobpl_const_7416, curr_ptr);
    assume value_is(__ctobpl_const_7417, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7418, $parserro.arg.3$6$);
    assume value_is(__ctobpl_const_7419, curr_ptr);
    assume value_is(__ctobpl_const_7420, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_7421, $parserro.arg.3$6$);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7611} true;
    result.serotpha$1 := 17;
    goto label_1;

  label_16_true:
    assume error != 0;
    assume value_is(__ctobpl_const_7363, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7604} true;
    result.serotpha$1 := 1;
    goto label_1;
}



procedure {:extern} sgramp2n(grampexc_ptr.__1: int, geomnode_ptr.__1: int, port_ptr.__1: int, group_shape.__1: int) returns (result.sgramp2n$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} sgramp2n(grampexc_ptr.__1: int, geomnode_ptr.__1: int, port_ptr.__1: int, group_shape.__1: int) returns (result.sgramp2n$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} A: int;
  var {:extern} B: int;
  var {:extern} C: int;
  var {:extern} D: int;
  var {:extern} E: int;
  var {:extern} Hx: int;
  var {:extern} Hy: int;
  var {:extern} a: int;
  var {:extern} amp_val: int;
  var {:extern} app_ptr: int;
  var {:extern} b: int;
  var {:extern} c: int;
  var {:extern} centre: int;
  var {:extern} cex: int;
  var {:extern} cey: int;
  var {:extern} d: int;
  var {:extern} e: int;
  var {:extern} geomnode_app_ptr: int;
  var {:extern} geomnode_ptr: int;
  var {:extern} grampexc_ptr: int;
  var {:extern} group_shape: int;
  var {:extern} i: int;
  var {:extern} p1_et: int;
  var {:extern} p1x: int;
  var {:extern} p1y: int;
  var {:extern} p2_et: int;
  var {:extern} p2x: int;
  var {:extern} p2y: int;
  var {:extern} pmax_ptr: int;
  var {:extern} pmax_tp: int;
  var {:extern} pmin_ptr: int;
  var {:extern} pmin_tp: int;
  var {:extern} port_app_ptr: int;
  var {:extern} port_ptr: int;
  var {:extern} primo_ptr: int;
  var {:extern} $printf.arg.2$5$: int;
  var {:extern} $printf.arg.2$9$: int;
  var {:extern} q1_et: int;
  var {:extern} q1x: int;
  var {:extern} q1y: int;
  var {:extern} q2_et: int;
  var {:extern} q2x: int;
  var {:extern} q2y: int;
  var {:extern} qmax_ptr: int;
  var {:extern} qmax_tp: int;
  var {:extern} qmin_ptr: int;
  var {:extern} qmin_tp: int;
  var {:extern} result.malloc$7: int;
  var {:extern} result.pqlimits$2: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.printf$4: int;
  var {:extern} result.printf$8: int;
  var {:extern} result.secorder$6: int;
  var {:extern} ultimo_ptr: int;
  var {:extern} x1: int;
  var {:extern} y1: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(grampexc_ptr.__1, alloc);
    assume INT_LT(geomnode_ptr.__1, alloc);
    assume INT_LT(port_ptr.__1, alloc);
    A := 0;
    B := 0;
    C := 0;
    D := 0;
    E := 0;
    call Hx := __HAVOC_det_malloc(64);
    call Hy := __HAVOC_det_malloc(64);
    a := 0;
    amp_val := 0;
    app_ptr := 0;
    b := 0;
    c := 0;
    centre := 0;
    cex := 0;
    cey := 0;
    d := 0;
    e := 0;
    geomnode_app_ptr := 0;
    geomnode_ptr := 0;
    grampexc_ptr := 0;
    group_shape := 0;
    i := 0;
    p1_et := 0;
    p1x := 0;
    p1y := 0;
    p2_et := 0;
    p2x := 0;
    p2y := 0;
    pmax_ptr := 0;
    call pmax_tp := __HAVOC_det_malloc(4);
    pmin_ptr := 0;
    call pmin_tp := __HAVOC_det_malloc(4);
    port_app_ptr := 0;
    port_ptr := 0;
    primo_ptr := 0;
    $printf.arg.2$5$ := 0;
    $printf.arg.2$9$ := 0;
    q1_et := 0;
    q1x := 0;
    q1y := 0;
    q2_et := 0;
    q2x := 0;
    q2y := 0;
    qmax_ptr := 0;
    call qmax_tp := __HAVOC_det_malloc(4);
    qmin_ptr := 0;
    call qmin_tp := __HAVOC_det_malloc(4);
    result.malloc$7 := 0;
    result.pqlimits$2 := 0;
    result.printf$3 := 0;
    result.printf$4 := 0;
    result.printf$8 := 0;
    result.secorder$6 := 0;
    result.sgramp2n$1 := 0;
    ultimo_ptr := 0;
    x1 := 0;
    y1 := 0;
    grampexc_ptr := grampexc_ptr.__1;
    geomnode_ptr := geomnode_ptr.__1;
    port_ptr := port_ptr.__1;
    group_shape := group_shape.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7649} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7649} true;
    primo_ptr := 0;
    assume value_is(__ctobpl_const_7422, primo_ptr);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7649} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7649} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_7423, app_ptr);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7649} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7649} true;
    ultimo_ptr := 0;
    assume value_is(__ctobpl_const_7424, ultimo_ptr);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7650} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7650} true;
    geomnode_app_ptr := 0;
    assume value_is(__ctobpl_const_7425, geomnode_app_ptr);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7651} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7651} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[pmin_tp := 0];
    assume value_is(__ctobpl_const_7426, Mem_T.PGeomnode[pmin_tp]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7651} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7651} true;
    pmin_ptr := pmin_tp;
    assume value_is(__ctobpl_const_7427, pmin_ptr);
    assume value_is(__ctobpl_const_7428, Mem_T.PGeomnode[pmin_tp]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7652} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7652} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[pmax_tp := 0];
    assume value_is(__ctobpl_const_7429, Mem_T.PGeomnode[pmax_tp]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7652} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7652} true;
    pmax_ptr := pmax_tp;
    assume value_is(__ctobpl_const_7430, pmax_ptr);
    assume value_is(__ctobpl_const_7431, Mem_T.PGeomnode[pmax_tp]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7653} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7653} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[qmin_tp := 0];
    assume value_is(__ctobpl_const_7432, Mem_T.PGeomnode[qmin_tp]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7653} true;
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7653} true;
    qmin_ptr := qmin_tp;
    assume value_is(__ctobpl_const_7433, qmin_ptr);
    assume value_is(__ctobpl_const_7434, Mem_T.PGeomnode[qmin_tp]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7654} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7654} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[qmax_tp := 0];
    assume value_is(__ctobpl_const_7435, Mem_T.PGeomnode[qmax_tp]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7654} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7654} true;
    qmax_ptr := qmax_tp;
    assume value_is(__ctobpl_const_7436, qmax_ptr);
    assume value_is(__ctobpl_const_7437, Mem_T.PGeomnode[qmax_tp]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7655} true;
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7655} true;
    port_app_ptr := 0;
    assume value_is(__ctobpl_const_7438, port_app_ptr);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7656} true;
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7657} true;
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7658} true;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7659} true;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7660} true;
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7661} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7661} true;
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7661} true;
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7661} true;
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7661} true;
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7661} true;
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7661} true;
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7662} true;
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7662} true;
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7662} true;
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7662} true;
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7662} true;
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7663} true;
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7664} true;
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7665} true;
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7665} true;
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7666} true;
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7673} true;
    assert grampexc_ptr != 0;
    centre := Mem_T.CENTRE_GrAmpExc[CENTRE_GrAmpExc(grampexc_ptr)];
    assume value_is(__ctobpl_const_7439, centre);
    assume value_is(__ctobpl_const_7440, grampexc_ptr);
    assume value_is(__ctobpl_const_7441, Mem_T.CENTRE_GrAmpExc[CENTRE_GrAmpExc(grampexc_ptr)]);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7674} true;
    assert grampexc_ptr != 0;
    p1_et := Mem_T.P1_ET_GrAmpExc[P1_ET_GrAmpExc(grampexc_ptr)];
    assume value_is(__ctobpl_const_7442, p1_et);
    assume value_is(__ctobpl_const_7443, grampexc_ptr);
    assume value_is(__ctobpl_const_7444, Mem_T.P1_ET_GrAmpExc[P1_ET_GrAmpExc(grampexc_ptr)]);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7675} true;
    assert grampexc_ptr != 0;
    p2_et := Mem_T.P2_ET_GrAmpExc[P2_ET_GrAmpExc(grampexc_ptr)];
    assume value_is(__ctobpl_const_7445, p2_et);
    assume value_is(__ctobpl_const_7446, grampexc_ptr);
    assume value_is(__ctobpl_const_7447, Mem_T.P2_ET_GrAmpExc[P2_ET_GrAmpExc(grampexc_ptr)]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7676} true;
    assert grampexc_ptr != 0;
    q1_et := Mem_T.Q1_ET_GrAmpExc[Q1_ET_GrAmpExc(grampexc_ptr)];
    assume value_is(__ctobpl_const_7448, q1_et);
    assume value_is(__ctobpl_const_7449, grampexc_ptr);
    assume value_is(__ctobpl_const_7450, Mem_T.Q1_ET_GrAmpExc[Q1_ET_GrAmpExc(grampexc_ptr)]);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7677} true;
    assert grampexc_ptr != 0;
    q2_et := Mem_T.Q2_ET_GrAmpExc[Q2_ET_GrAmpExc(grampexc_ptr)];
    assume value_is(__ctobpl_const_7451, q2_et);
    assume value_is(__ctobpl_const_7452, grampexc_ptr);
    assume value_is(__ctobpl_const_7453, Mem_T.Q2_ET_GrAmpExc[Q2_ET_GrAmpExc(grampexc_ptr)]);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7682} true;
    goto label_65_true, label_65_false;

  label_65_false:
    assume !INT_EQ(group_shape, 3);
    assume value_is(__ctobpl_const_7454, group_shape);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7695} true;
    goto label_66_true, label_66_false;

  label_66_false:
    assume !INT_EQ(group_shape, 2);
    assume value_is(__ctobpl_const_7455, group_shape);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7721} true;
    goto label_157;

  label_157:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7721} true;
    call result.printf$4 := det_choice();
    goto label_160;

  label_160:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7722} true;
    result.sgramp2n$1 := 5;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7809} true;
    call __HAVOC_free(Hx);
    call __HAVOC_free(Hy);
    call __HAVOC_free(pmax_tp);
    call __HAVOC_free(pmin_tp);
    call __HAVOC_free(qmax_tp);
    call __HAVOC_free(qmin_tp);
    return;

  label_66_true:
    assume INT_EQ(group_shape, 2);
    assume value_is(__ctobpl_const_7455, group_shape);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7698} true;
    geomnode_app_ptr := geomnode_ptr;
    assume value_is(__ctobpl_const_7456, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7457, geomnode_ptr);
    goto label_134;

  label_134:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7699} true;
    i := 1;
    assume value_is(__ctobpl_const_7458, i);
    goto label_135;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7699} true;
    goto label_135_head;

  label_135_head:
    call geomnode_app_ptr, i := sgramp2n_loop_label_135_head(Hx, Hy, geomnode_app_ptr, i);
    goto label_135_head_last;

  label_135_false:
    assume !INT_LEQ(i, 7);
    assume value_is(__ctobpl_const_7459, i);
    goto label_136;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7710} true;
    assert Hx != 0;
    p1x := Mem_T.FLOAT[PLUS(Hx, 8, 5)];
    assume value_is(__ctobpl_const_7460, p1x);
    assume value_is(__ctobpl_const_7461, Mem_T.FLOAT[PLUS(Hx, 8, 5)]);
    goto label_148;

  label_148:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7711} true;
    assert Hy != 0;
    p1y := Mem_T.FLOAT[PLUS(Hy, 8, 5)];
    assume value_is(__ctobpl_const_7462, p1y);
    assume value_is(__ctobpl_const_7463, Mem_T.FLOAT[PLUS(Hy, 8, 5)]);
    goto label_149;

  label_149:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7712} true;
    assert Hx != 0;
    p2x := Mem_T.FLOAT[PLUS(Hx, 8, 2)];
    assume value_is(__ctobpl_const_7464, p2x);
    assume value_is(__ctobpl_const_7465, Mem_T.FLOAT[PLUS(Hx, 8, 2)]);
    goto label_150;

  label_150:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7713} true;
    assert Hy != 0;
    p2y := Mem_T.FLOAT[PLUS(Hy, 8, 2)];
    assume value_is(__ctobpl_const_7466, p2y);
    assume value_is(__ctobpl_const_7467, Mem_T.FLOAT[PLUS(Hy, 8, 2)]);
    goto label_151;

  label_151:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7714} true;
    assert Hx != 0;
    assert Hx != 0;
    q1x := BINARY_BOTH_INT(PLUS(Mem_T.FLOAT[PLUS(Hx, 8, 6)], 1, Mem_T.FLOAT[PLUS(Hx, 8, 7)]), 2);
    assume value_is(__ctobpl_const_7468, q1x);
    assume value_is(__ctobpl_const_7469, Mem_T.FLOAT[PLUS(Hx, 8, 6)]);
    assume value_is(__ctobpl_const_7470, Mem_T.FLOAT[PLUS(Hx, 8, 7)]);
    goto label_152;

  label_152:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7715} true;
    assert Hy != 0;
    q1y := Mem_T.FLOAT[PLUS(Hy, 8, 6)];
    assume value_is(__ctobpl_const_7471, q1y);
    assume value_is(__ctobpl_const_7472, Mem_T.FLOAT[PLUS(Hy, 8, 6)]);
    goto label_153;

  label_153:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7716} true;
    assert Hx != 0;
    assert Hx != 0;
    q2x := BINARY_BOTH_INT(PLUS(Mem_T.FLOAT[PLUS(Hx, 8, 4)], 1, Mem_T.FLOAT[PLUS(Hx, 8, 3)]), 2);
    assume value_is(__ctobpl_const_7473, q2x);
    assume value_is(__ctobpl_const_7474, Mem_T.FLOAT[PLUS(Hx, 8, 4)]);
    assume value_is(__ctobpl_const_7475, Mem_T.FLOAT[PLUS(Hx, 8, 3)]);
    goto label_154;

  label_154:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7717} true;
    assert Hy != 0;
    q2y := Mem_T.FLOAT[PLUS(Hy, 8, 4)];
    assume value_is(__ctobpl_const_7476, q2y);
    assume value_is(__ctobpl_const_7477, Mem_T.FLOAT[PLUS(Hy, 8, 4)]);
    goto label_155;

  label_155:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7718} true;
    assert Hx != 0;
    cex := Mem_T.FLOAT[PLUS(Hx, 8, 1)];
    assume value_is(__ctobpl_const_7478, cex);
    assume value_is(__ctobpl_const_7479, Mem_T.FLOAT[PLUS(Hx, 8, 1)]);
    goto label_156;

  label_156:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7719} true;
    assert Hy != 0;
    cey := Mem_T.FLOAT[PLUS(Hy, 8, 1)];
    assume value_is(__ctobpl_const_7480, cey);
    assume value_is(__ctobpl_const_7481, Mem_T.FLOAT[PLUS(Hy, 8, 1)]);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7728} true;
    x1 := MINUS_BOTH_PTR_OR_BOTH_INT(p2x, cex, 1);
    assume value_is(__ctobpl_const_7535, x1);
    assume value_is(__ctobpl_const_7536, p2x);
    assume value_is(__ctobpl_const_7537, cex);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7729} true;
    y1 := MINUS_BOTH_PTR_OR_BOTH_INT(q2y, cey, 1);
    assume value_is(__ctobpl_const_7538, y1);
    assume value_is(__ctobpl_const_7539, q2y);
    assume value_is(__ctobpl_const_7540, cey);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7731} true;
    e := centre;
    assume value_is(__ctobpl_const_7541, e);
    assume value_is(__ctobpl_const_7542, centre);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7733} true;
    goto label_83_true, label_83_false;

  label_83_false:
    assume !INT_EQ(x1, 0);
    assume value_is(__ctobpl_const_7543, x1);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7736} true;
    a := BINARY_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(p1_et, 1, p2_et), MULT(2, e), 1), MULT(MULT(2, x1), x1));
    assume value_is(__ctobpl_const_7544, a);
    assume value_is(__ctobpl_const_7545, p1_et);
    assume value_is(__ctobpl_const_7546, p2_et);
    assume value_is(__ctobpl_const_7547, e);
    assume value_is(__ctobpl_const_7548, x1);
    assume value_is(__ctobpl_const_7549, x1);
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7737} true;
    c := BINARY_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(MULT(MULT(a, x1), x1), 1, e), p1_et, 1), x1);
    assume value_is(__ctobpl_const_7550, c);
    assume value_is(__ctobpl_const_7551, a);
    assume value_is(__ctobpl_const_7552, x1);
    assume value_is(__ctobpl_const_7553, x1);
    assume value_is(__ctobpl_const_7554, e);
    assume value_is(__ctobpl_const_7555, p1_et);
    assume value_is(__ctobpl_const_7556, x1);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7739} true;
    goto label_87_true, label_87_false;

  label_87_false:
    assume !INT_EQ(y1, 0);
    assume value_is(__ctobpl_const_7560, y1);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7742} true;
    b := BINARY_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(q1_et, 1, q2_et), MULT(2, e), 1), MULT(MULT(2, y1), y1));
    assume value_is(__ctobpl_const_7561, b);
    assume value_is(__ctobpl_const_7562, q1_et);
    assume value_is(__ctobpl_const_7563, q2_et);
    assume value_is(__ctobpl_const_7564, e);
    assume value_is(__ctobpl_const_7565, y1);
    assume value_is(__ctobpl_const_7566, y1);
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7743} true;
    d := BINARY_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(MULT(MULT(b, y1), y1), 1, e), q1_et, 1), y1);
    assume value_is(__ctobpl_const_7567, d);
    assume value_is(__ctobpl_const_7568, b);
    assume value_is(__ctobpl_const_7569, y1);
    assume value_is(__ctobpl_const_7570, y1);
    assume value_is(__ctobpl_const_7571, e);
    assume value_is(__ctobpl_const_7572, q1_et);
    assume value_is(__ctobpl_const_7573, y1);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7746} true;
    A := a;
    assume value_is(__ctobpl_const_7577, A);
    assume value_is(__ctobpl_const_7578, a);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7747} true;
    B := b;
    assume value_is(__ctobpl_const_7579, B);
    assume value_is(__ctobpl_const_7580, b);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7748} true;
    C := MINUS_BOTH_PTR_OR_BOTH_INT(c, MULT(MULT(2, a), cex), 1);
    assume value_is(__ctobpl_const_7581, C);
    assume value_is(__ctobpl_const_7582, c);
    assume value_is(__ctobpl_const_7583, a);
    assume value_is(__ctobpl_const_7584, cex);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7749} true;
    D := MINUS_BOTH_PTR_OR_BOTH_INT(d, MULT(MULT(2, b), cey), 1);
    assume value_is(__ctobpl_const_7585, D);
    assume value_is(__ctobpl_const_7586, d);
    assume value_is(__ctobpl_const_7587, b);
    assume value_is(__ctobpl_const_7588, cey);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7750} true;
    E := PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(MULT(MULT(a, cex), cex), 1, MULT(MULT(b, cey), cey)), MULT(c, cex), 1), MULT(d, cey), 1), 1, e);
    assume value_is(__ctobpl_const_7589, E);
    assume value_is(__ctobpl_const_7590, a);
    assume value_is(__ctobpl_const_7591, cex);
    assume value_is(__ctobpl_const_7592, cex);
    assume value_is(__ctobpl_const_7593, b);
    assume value_is(__ctobpl_const_7594, cey);
    assume value_is(__ctobpl_const_7595, cey);
    assume value_is(__ctobpl_const_7596, c);
    assume value_is(__ctobpl_const_7597, cex);
    assume value_is(__ctobpl_const_7598, d);
    assume value_is(__ctobpl_const_7599, cey);
    assume value_is(__ctobpl_const_7600, e);
    goto label_96;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7753} true;
    geomnode_app_ptr := geomnode_ptr;
    assume value_is(__ctobpl_const_7601, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7602, geomnode_ptr);
    goto label_97;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7754} true;
    port_app_ptr := port_ptr;
    assume value_is(__ctobpl_const_7603, port_app_ptr);
    assume value_is(__ctobpl_const_7604, port_ptr);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7757} true;
    goto label_98_head;

  label_98_head:
    call amp_val, app_ptr, geomnode_app_ptr, port_app_ptr, primo_ptr, result.malloc$7, result.printf$8, result.secorder$6, ultimo_ptr := sgramp2n_loop_label_98_head(havoc_stringTemp, A, B, C, D, E, amp_val, app_ptr, geomnode_app_ptr, port_app_ptr, port_ptr, primo_ptr, result.malloc$7, result.printf$8, result.secorder$6, ultimo_ptr);
    goto label_98_head_last;

  label_98_false:
    assume geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7605, geomnode_app_ptr);
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7808} true;
    result.sgramp2n$1 := 0;
    goto label_1;

  label_98_true:
    assume geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7605, geomnode_app_ptr);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7760} true;
    assert geomnode_app_ptr != 0;
    assert geomnode_app_ptr != 0;
    assert geomnode_app_ptr != 0;
    assert geomnode_app_ptr != 0;
    call result.secorder$6 := secorder(A, B, C, D, E, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)], Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7606, A);
    assume value_is(__ctobpl_const_7607, B);
    assume value_is(__ctobpl_const_7608, C);
    assume value_is(__ctobpl_const_7609, D);
    assume value_is(__ctobpl_const_7610, E);
    assume value_is(__ctobpl_const_7611, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7612, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7613, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7614, Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7615, A);
    assume value_is(__ctobpl_const_7616, B);
    assume value_is(__ctobpl_const_7617, C);
    assume value_is(__ctobpl_const_7618, D);
    assume value_is(__ctobpl_const_7619, E);
    assume value_is(__ctobpl_const_7620, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7621, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7622, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7623, Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7760} true;
    amp_val := result.secorder$6;
    assume value_is(__ctobpl_const_7624, amp_val);
    assume value_is(__ctobpl_const_7625, result.secorder$6);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7763} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_7626, app_ptr);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7763} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_7627, ultimo_ptr);
    assume value_is(__ctobpl_const_7628, app_ptr);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7763} true;
    primo_ptr := ultimo_ptr;
    assume value_is(__ctobpl_const_7629, primo_ptr);
    assume value_is(__ctobpl_const_7630, ultimo_ptr);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7766} true;
    port_app_ptr := port_ptr;
    assume value_is(__ctobpl_const_7631, port_app_ptr);
    assume value_is(__ctobpl_const_7632, port_ptr);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7769} true;
    goto label_108_head;

  label_108_head:
    call app_ptr, port_app_ptr, primo_ptr, result.malloc$7, result.printf$8, ultimo_ptr := sgramp2n_loop_label_108_head(havoc_stringTemp, amp_val, app_ptr, port_app_ptr, primo_ptr, result.malloc$7, result.printf$8, ultimo_ptr);
    goto label_108_head_last;

  label_108_false:
    assume port_app_ptr == 0;
    assume value_is(__ctobpl_const_7633, port_app_ptr);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7802} true;
    assert geomnode_app_ptr != 0;
    Mem_T.GEOMPORT_PTR_Geomnode := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr) := primo_ptr];
    assume value_is(__ctobpl_const_7634, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7635, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7636, primo_ptr);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7805} true;
    assert geomnode_app_ptr != 0;
    geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7637, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7638, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7639, Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)]);
    goto label_129_dummy;

  label_108_true:
    assume port_app_ptr != 0;
    assume value_is(__ctobpl_const_7633, port_app_ptr);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7772} true;
    call result.malloc$7 := __HAVOC_det_malloc(48);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7772} true;
    app_ptr := result.malloc$7;
    assume value_is(__ctobpl_const_7640, app_ptr);
    assume value_is(__ctobpl_const_7641, result.malloc$7);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7774} true;
    goto label_114_true, label_114_false;

  label_114_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_7642, app_ptr);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7775} true;
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7775} true;
    call result.printf$8 := det_choice();
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7776} true;
    call interror(havoc_stringTemp);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7780} true;
    assert app_ptr != 0;
    assert port_app_ptr != 0;
    Mem_T.AMP_Geomport := Mem_T.AMP_Geomport[AMP_Geomport(app_ptr) := MULT(amp_val, Mem_T.AMP_Port[AMP_Port(port_app_ptr)])];
    assume value_is(__ctobpl_const_7643, app_ptr);
    assume value_is(__ctobpl_const_7644, Mem_T.AMP_Geomport[AMP_Geomport(app_ptr)]);
    assume value_is(__ctobpl_const_7645, amp_val);
    assume value_is(__ctobpl_const_7646, port_app_ptr);
    assume value_is(__ctobpl_const_7647, Mem_T.AMP_Port[AMP_Port(port_app_ptr)]);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7784} true;
    goto label_117_true, label_117_false;

  label_117_false:
    assume primo_ptr == 0;
    assume value_is(__ctobpl_const_7648, primo_ptr);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7785} true;
    primo_ptr := app_ptr;
    assume value_is(__ctobpl_const_7649, primo_ptr);
    assume value_is(__ctobpl_const_7650, app_ptr);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7790} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_7654, ultimo_ptr);
    assume value_is(__ctobpl_const_7655, app_ptr);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7792} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_7656, ultimo_ptr);
    assume value_is(__ctobpl_const_7657, Mem_T.NEXT_Geomport[NEXT_Geomport(ultimo_ptr)]);
    goto label_122;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7795} true;
    assert port_app_ptr != 0;
    port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)];
    assume value_is(__ctobpl_const_7658, port_app_ptr);
    assume value_is(__ctobpl_const_7659, port_app_ptr);
    assume value_is(__ctobpl_const_7660, Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)]);
    goto label_122_dummy;

  label_117_true:
    assume primo_ptr != 0;
    assume value_is(__ctobpl_const_7648, primo_ptr);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7787} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(ultimo_ptr) := app_ptr];
    assume value_is(__ctobpl_const_7651, ultimo_ptr);
    assume value_is(__ctobpl_const_7652, Mem_T.NEXT_Geomport[NEXT_Geomport(ultimo_ptr)]);
    assume value_is(__ctobpl_const_7653, app_ptr);
    goto label_120;

  label_114_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_7642, app_ptr);
    goto label_116;

  label_87_true:
    assume INT_EQ(y1, 0);
    assume value_is(__ctobpl_const_7560, y1);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7740} true;
    d := 0;
    assume value_is(__ctobpl_const_7574, d);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7740} true;
    b := d;
    assume value_is(__ctobpl_const_7575, b);
    assume value_is(__ctobpl_const_7576, d);
    goto label_91;

  label_83_true:
    assume INT_EQ(x1, 0);
    assume value_is(__ctobpl_const_7543, x1);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7734} true;
    c := 0;
    assume value_is(__ctobpl_const_7557, c);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7734} true;
    a := c;
    assume value_is(__ctobpl_const_7558, a);
    assume value_is(__ctobpl_const_7559, c);
    goto label_87;

  label_135_true:
    assume INT_LEQ(i, 7);
    assume value_is(__ctobpl_const_7459, i);
    goto label_137;

  label_137:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7701} true;
    goto label_137_true, label_137_false;

  label_137_false:
    assume geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7482, geomnode_app_ptr);
    goto label_138;

  label_138:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7706} true;
    call result.printf$3 := det_choice();
    goto label_145;

  label_145:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7707} true;
    return;

  label_137_true:
    assume geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7482, geomnode_app_ptr);
    goto label_141;

  label_141:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7702} true;
    assert Hx != 0;
    assert geomnode_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[PLUS(Hx, 8, i) := Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)]];
    assume value_is(__ctobpl_const_7483, i);
    assume value_is(__ctobpl_const_7484, Mem_T.FLOAT[PLUS(Hx, 8, i)]);
    assume value_is(__ctobpl_const_7485, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7486, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)]);
    goto label_142;

  label_142:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7703} true;
    assert Hy != 0;
    assert geomnode_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[PLUS(Hy, 8, i) := Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]];
    assume value_is(__ctobpl_const_7487, i);
    assume value_is(__ctobpl_const_7488, Mem_T.FLOAT[PLUS(Hy, 8, i)]);
    assume value_is(__ctobpl_const_7489, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7490, Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]);
    goto label_143;

  label_143:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7704} true;
    assert geomnode_app_ptr != 0;
    geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7491, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7492, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7493, Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)]);
    goto label_144;

  label_144:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7699} true;
    assume value_is(__ctobpl_const_7494, i);
    i := PLUS(i, 1, 1);
    goto label_144_dummy;

  label_65_true:
    assume INT_EQ(group_shape, 3);
    assume value_is(__ctobpl_const_7454, group_shape);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7684} true;
    call result.pqlimits$2 := pqlimits(geomnode_ptr, pmin_ptr, pmax_ptr, qmin_ptr, qmax_ptr);
    assume value_is(__ctobpl_const_7495, geomnode_ptr);
    assume value_is(__ctobpl_const_7496, pmin_ptr);
    assume value_is(__ctobpl_const_7497, pmax_ptr);
    assume value_is(__ctobpl_const_7498, qmin_ptr);
    assume value_is(__ctobpl_const_7499, qmax_ptr);
    assume value_is(__ctobpl_const_7500, geomnode_ptr);
    assume value_is(__ctobpl_const_7501, pmin_ptr);
    assume value_is(__ctobpl_const_7502, pmax_ptr);
    assume value_is(__ctobpl_const_7503, qmin_ptr);
    assume value_is(__ctobpl_const_7504, qmax_ptr);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7685} true;
    assert pmin_ptr != 0;
    assert Mem_T.PGeomnode[pmin_ptr] != 0;
    p1x := Mem_T.XA_Geomnode[XA_Geomnode(Mem_T.PGeomnode[pmin_ptr])];
    assume value_is(__ctobpl_const_7505, p1x);
    assume value_is(__ctobpl_const_7506, pmin_ptr);
    assume value_is(__ctobpl_const_7507, Mem_T.PGeomnode[pmin_ptr]);
    assume value_is(__ctobpl_const_7508, Mem_T.XA_Geomnode[XA_Geomnode(Mem_T.PGeomnode[pmin_ptr])]);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7686} true;
    assert pmax_ptr != 0;
    assert Mem_T.PGeomnode[pmax_ptr] != 0;
    p2x := Mem_T.XA_Geomnode[XA_Geomnode(Mem_T.PGeomnode[pmax_ptr])];
    assume value_is(__ctobpl_const_7509, p2x);
    assume value_is(__ctobpl_const_7510, pmax_ptr);
    assume value_is(__ctobpl_const_7511, Mem_T.PGeomnode[pmax_ptr]);
    assume value_is(__ctobpl_const_7512, Mem_T.XA_Geomnode[XA_Geomnode(Mem_T.PGeomnode[pmax_ptr])]);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7687} true;
    assert qmin_ptr != 0;
    assert Mem_T.PGeomnode[qmin_ptr] != 0;
    q1y := Mem_T.YA_Geomnode[YA_Geomnode(Mem_T.PGeomnode[qmin_ptr])];
    assume value_is(__ctobpl_const_7513, q1y);
    assume value_is(__ctobpl_const_7514, qmin_ptr);
    assume value_is(__ctobpl_const_7515, Mem_T.PGeomnode[qmin_ptr]);
    assume value_is(__ctobpl_const_7516, Mem_T.YA_Geomnode[YA_Geomnode(Mem_T.PGeomnode[qmin_ptr])]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7688} true;
    assert qmax_ptr != 0;
    assert Mem_T.PGeomnode[qmax_ptr] != 0;
    q2y := Mem_T.YA_Geomnode[YA_Geomnode(Mem_T.PGeomnode[qmax_ptr])];
    assume value_is(__ctobpl_const_7517, q2y);
    assume value_is(__ctobpl_const_7518, qmax_ptr);
    assume value_is(__ctobpl_const_7519, Mem_T.PGeomnode[qmax_ptr]);
    assume value_is(__ctobpl_const_7520, Mem_T.YA_Geomnode[YA_Geomnode(Mem_T.PGeomnode[qmax_ptr])]);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7689} true;
    p1y := BINARY_BOTH_INT(PLUS(q1y, 1, q2y), 2);
    assume value_is(__ctobpl_const_7521, p1y);
    assume value_is(__ctobpl_const_7522, q1y);
    assume value_is(__ctobpl_const_7523, q2y);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7690} true;
    p2y := p1y;
    assume value_is(__ctobpl_const_7524, p2y);
    assume value_is(__ctobpl_const_7525, p1y);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7691} true;
    q1x := BINARY_BOTH_INT(PLUS(p1x, 1, p2x), 2);
    assume value_is(__ctobpl_const_7526, q1x);
    assume value_is(__ctobpl_const_7527, p1x);
    assume value_is(__ctobpl_const_7528, p2x);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7692} true;
    q2x := q1x;
    assume value_is(__ctobpl_const_7529, q2x);
    assume value_is(__ctobpl_const_7530, q1x);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7693} true;
    cex := q1x;
    assume value_is(__ctobpl_const_7531, cex);
    assume value_is(__ctobpl_const_7532, q1x);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7694} true;
    cey := p1y;
    assume value_is(__ctobpl_const_7533, cey);
    assume value_is(__ctobpl_const_7534, p1y);
    goto label_80;

  label_122_dummy:
    assume false;
    return;

  label_108_head_last:
    goto label_108_true, label_108_false;

  label_129_dummy:
    assume false;
    return;

  label_98_head_last:
    goto label_98_true, label_98_false;

  label_144_dummy:
    assume false;
    return;

  label_135_head_last:
    goto label_135_true, label_135_false;
}



procedure {:extern} sgrampun(grampexc_ptr.__1: int, geomnode_ptr.__1: int, port_ptr.__1: int) returns (result.sgrampun$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} sgrampun(grampexc_ptr.__1: int, geomnode_ptr.__1: int, port_ptr.__1: int) returns (result.sgrampun$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} app_ptr: int;
  var {:extern} geomnode_app_ptr: int;
  var {:extern} geomnode_ptr: int;
  var {:extern} grampexc_ptr: int;
  var {:extern} port_app_ptr: int;
  var {:extern} port_ptr: int;
  var {:extern} primo_ptr: int;
  var {:extern} $printf.arg.2$4$: int;
  var {:extern} result.malloc$2: int;
  var {:extern} result.printf$3: int;
  var {:extern} ultimo_ptr: int;
  var {:extern} unif_val: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(grampexc_ptr.__1, alloc);
    assume INT_LT(geomnode_ptr.__1, alloc);
    assume INT_LT(port_ptr.__1, alloc);
    app_ptr := 0;
    geomnode_app_ptr := 0;
    geomnode_ptr := 0;
    grampexc_ptr := 0;
    port_app_ptr := 0;
    port_ptr := 0;
    primo_ptr := 0;
    $printf.arg.2$4$ := 0;
    result.malloc$2 := 0;
    result.printf$3 := 0;
    result.sgrampun$1 := 0;
    ultimo_ptr := 0;
    unif_val := 0;
    grampexc_ptr := grampexc_ptr.__1;
    geomnode_ptr := geomnode_ptr.__1;
    port_ptr := port_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7821} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7821} true;
    primo_ptr := 0;
    assume value_is(__ctobpl_const_7661, primo_ptr);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7821} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7821} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_7662, app_ptr);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7821} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7821} true;
    ultimo_ptr := 0;
    assume value_is(__ctobpl_const_7663, ultimo_ptr);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7822} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7822} true;
    geomnode_app_ptr := 0;
    assume value_is(__ctobpl_const_7664, geomnode_app_ptr);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7823} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7823} true;
    port_app_ptr := 0;
    assume value_is(__ctobpl_const_7665, port_app_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7824} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7831} true;
    assert grampexc_ptr != 0;
    unif_val := Mem_T.UNIF_VAL_GrAmpExc[UNIF_VAL_GrAmpExc(grampexc_ptr)];
    assume value_is(__ctobpl_const_7666, unif_val);
    assume value_is(__ctobpl_const_7667, grampexc_ptr);
    assume value_is(__ctobpl_const_7668, Mem_T.UNIF_VAL_GrAmpExc[UNIF_VAL_GrAmpExc(grampexc_ptr)]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7834} true;
    geomnode_app_ptr := geomnode_ptr;
    assume value_is(__ctobpl_const_7669, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7670, geomnode_ptr);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7835} true;
    port_app_ptr := port_ptr;
    assume value_is(__ctobpl_const_7671, port_app_ptr);
    assume value_is(__ctobpl_const_7672, port_ptr);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7843} true;
    goto label_17_head;

  label_17_head:
    call app_ptr, geomnode_app_ptr, port_app_ptr, primo_ptr, result.malloc$2, result.printf$3, ultimo_ptr := sgrampun_loop_label_17_head(havoc_stringTemp, app_ptr, geomnode_app_ptr, port_app_ptr, port_ptr, primo_ptr, result.malloc$2, result.printf$3, ultimo_ptr, unif_val);
    goto label_17_head_last;

  label_17_false:
    assume geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7673, geomnode_app_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7891} true;
    result.sgrampun$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7892} true;
    return;

  label_17_true:
    assume geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7673, geomnode_app_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7846} true;
    app_ptr := 0;
    assume value_is(__ctobpl_const_7674, app_ptr);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7846} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_7675, ultimo_ptr);
    assume value_is(__ctobpl_const_7676, app_ptr);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7846} true;
    primo_ptr := ultimo_ptr;
    assume value_is(__ctobpl_const_7677, primo_ptr);
    assume value_is(__ctobpl_const_7678, ultimo_ptr);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7849} true;
    port_app_ptr := port_ptr;
    assume value_is(__ctobpl_const_7679, port_app_ptr);
    assume value_is(__ctobpl_const_7680, port_ptr);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7852} true;
    goto label_23_head;

  label_23_head:
    call app_ptr, port_app_ptr, primo_ptr, result.malloc$2, result.printf$3, ultimo_ptr := sgrampun_loop_label_23_head(havoc_stringTemp, app_ptr, port_app_ptr, primo_ptr, result.malloc$2, result.printf$3, ultimo_ptr, unif_val);
    goto label_23_head_last;

  label_23_false:
    assume port_app_ptr == 0;
    assume value_is(__ctobpl_const_7681, port_app_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7885} true;
    assert geomnode_app_ptr != 0;
    Mem_T.GEOMPORT_PTR_Geomnode := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr) := primo_ptr];
    assume value_is(__ctobpl_const_7682, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7683, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7684, primo_ptr);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7888} true;
    assert geomnode_app_ptr != 0;
    geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7685, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7686, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7687, Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)]);
    goto label_44_dummy;

  label_23_true:
    assume port_app_ptr != 0;
    assume value_is(__ctobpl_const_7681, port_app_ptr);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7855} true;
    call result.malloc$2 := __HAVOC_det_malloc(48);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7855} true;
    app_ptr := result.malloc$2;
    assume value_is(__ctobpl_const_7688, app_ptr);
    assume value_is(__ctobpl_const_7689, result.malloc$2);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7857} true;
    goto label_29_true, label_29_false;

  label_29_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_7690, app_ptr);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7858} true;
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7858} true;
    call result.printf$3 := det_choice();
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7859} true;
    call interror(havoc_stringTemp);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7863} true;
    assert app_ptr != 0;
    assert port_app_ptr != 0;
    Mem_T.AMP_Geomport := Mem_T.AMP_Geomport[AMP_Geomport(app_ptr) := MULT(unif_val, Mem_T.AMP_Port[AMP_Port(port_app_ptr)])];
    assume value_is(__ctobpl_const_7691, app_ptr);
    assume value_is(__ctobpl_const_7692, Mem_T.AMP_Geomport[AMP_Geomport(app_ptr)]);
    assume value_is(__ctobpl_const_7693, unif_val);
    assume value_is(__ctobpl_const_7694, port_app_ptr);
    assume value_is(__ctobpl_const_7695, Mem_T.AMP_Port[AMP_Port(port_app_ptr)]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7867} true;
    goto label_32_true, label_32_false;

  label_32_false:
    assume primo_ptr == 0;
    assume value_is(__ctobpl_const_7696, primo_ptr);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7868} true;
    primo_ptr := app_ptr;
    assume value_is(__ctobpl_const_7697, primo_ptr);
    assume value_is(__ctobpl_const_7698, app_ptr);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7873} true;
    ultimo_ptr := app_ptr;
    assume value_is(__ctobpl_const_7702, ultimo_ptr);
    assume value_is(__ctobpl_const_7703, app_ptr);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7875} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_7704, ultimo_ptr);
    assume value_is(__ctobpl_const_7705, Mem_T.NEXT_Geomport[NEXT_Geomport(ultimo_ptr)]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7878} true;
    assert port_app_ptr != 0;
    port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)];
    assume value_is(__ctobpl_const_7706, port_app_ptr);
    assume value_is(__ctobpl_const_7707, port_app_ptr);
    assume value_is(__ctobpl_const_7708, Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)]);
    goto label_37_dummy;

  label_32_true:
    assume primo_ptr != 0;
    assume value_is(__ctobpl_const_7696, primo_ptr);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7870} true;
    assert ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(ultimo_ptr) := app_ptr];
    assume value_is(__ctobpl_const_7699, ultimo_ptr);
    assume value_is(__ctobpl_const_7700, Mem_T.NEXT_Geomport[NEXT_Geomport(ultimo_ptr)]);
    assume value_is(__ctobpl_const_7701, app_ptr);
    goto label_35;

  label_29_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_7690, app_ptr);
    goto label_31;

  label_37_dummy:
    assume false;
    return;

  label_23_head_last:
    goto label_23_true, label_23_false;

  label_44_dummy:
    assume false;
    return;

  label_17_head_last:
    goto label_17_true, label_17_false;
}



procedure {:extern} sgrpha2n(grphaexc_ptr.__1: int, geomnode_ptr.__1: int, port_ptr.__1: int, group_shape.__1: int) returns (result.sgrpha2n$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} sgrpha2n(grphaexc_ptr.__1: int, geomnode_ptr.__1: int, port_ptr.__1: int, group_shape.__1: int) returns (result.sgrpha2n$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} A: int;
  var {:extern} B: int;
  var {:extern} C: int;
  var {:extern} D: int;
  var {:extern} E: int;
  var {:extern} Hx: int;
  var {:extern} Hy: int;
  var {:extern} a: int;
  var {:extern} b: int;
  var {:extern} c: int;
  var {:extern} centre: int;
  var {:extern} cex: int;
  var {:extern} cey: int;
  var {:extern} d: int;
  var {:extern} e: int;
  var {:extern} geomnode_app_ptr: int;
  var {:extern} geomnode_ptr: int;
  var {:extern} geomport_app_ptr: int;
  var {:extern} group_shape: int;
  var {:extern} grphaexc_ptr: int;
  var {:extern} i: int;
  var {:extern} p1_ep: int;
  var {:extern} p1x: int;
  var {:extern} p1y: int;
  var {:extern} p2_ep: int;
  var {:extern} p2x: int;
  var {:extern} p2y: int;
  var {:extern} phase_val: int;
  var {:extern} pmax_ptr: int;
  var {:extern} pmax_tp: int;
  var {:extern} pmin_ptr: int;
  var {:extern} pmin_tp: int;
  var {:extern} port_app_ptr: int;
  var {:extern} port_ptr: int;
  var {:extern} $printf.arg.2$5$: int;
  var {:extern} q1_ep: int;
  var {:extern} q1x: int;
  var {:extern} q1y: int;
  var {:extern} q2_ep: int;
  var {:extern} q2x: int;
  var {:extern} q2y: int;
  var {:extern} qmax_ptr: int;
  var {:extern} qmax_tp: int;
  var {:extern} qmin_ptr: int;
  var {:extern} qmin_tp: int;
  var {:extern} result.pqlimits$2: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.printf$4: int;
  var {:extern} result.secorder$6: int;
  var {:extern} x1: int;
  var {:extern} y1: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(grphaexc_ptr.__1, alloc);
    assume INT_LT(geomnode_ptr.__1, alloc);
    assume INT_LT(port_ptr.__1, alloc);
    A := 0;
    B := 0;
    C := 0;
    D := 0;
    E := 0;
    call Hx := __HAVOC_det_malloc(64);
    call Hy := __HAVOC_det_malloc(64);
    a := 0;
    b := 0;
    c := 0;
    centre := 0;
    cex := 0;
    cey := 0;
    d := 0;
    e := 0;
    geomnode_app_ptr := 0;
    geomnode_ptr := 0;
    geomport_app_ptr := 0;
    group_shape := 0;
    grphaexc_ptr := 0;
    i := 0;
    p1_ep := 0;
    p1x := 0;
    p1y := 0;
    p2_ep := 0;
    p2x := 0;
    p2y := 0;
    phase_val := 0;
    pmax_ptr := 0;
    call pmax_tp := __HAVOC_det_malloc(4);
    pmin_ptr := 0;
    call pmin_tp := __HAVOC_det_malloc(4);
    port_app_ptr := 0;
    port_ptr := 0;
    $printf.arg.2$5$ := 0;
    q1_ep := 0;
    q1x := 0;
    q1y := 0;
    q2_ep := 0;
    q2x := 0;
    q2y := 0;
    qmax_ptr := 0;
    call qmax_tp := __HAVOC_det_malloc(4);
    qmin_ptr := 0;
    call qmin_tp := __HAVOC_det_malloc(4);
    result.pqlimits$2 := 0;
    result.printf$3 := 0;
    result.printf$4 := 0;
    result.secorder$6 := 0;
    result.sgrpha2n$1 := 0;
    x1 := 0;
    y1 := 0;
    grphaexc_ptr := grphaexc_ptr.__1;
    geomnode_ptr := geomnode_ptr.__1;
    port_ptr := port_ptr.__1;
    group_shape := group_shape.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7907} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7907} true;
    geomport_app_ptr := 0;
    assume value_is(__ctobpl_const_7709, geomport_app_ptr);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7908} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7908} true;
    geomnode_app_ptr := 0;
    assume value_is(__ctobpl_const_7710, geomnode_app_ptr);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7909} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7909} true;
    port_app_ptr := 0;
    assume value_is(__ctobpl_const_7711, port_app_ptr);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7910} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7910} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[pmin_tp := 0];
    assume value_is(__ctobpl_const_7712, Mem_T.PGeomnode[pmin_tp]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7910} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7910} true;
    pmin_ptr := pmin_tp;
    assume value_is(__ctobpl_const_7713, pmin_ptr);
    assume value_is(__ctobpl_const_7714, Mem_T.PGeomnode[pmin_tp]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7911} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7911} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[pmax_tp := 0];
    assume value_is(__ctobpl_const_7715, Mem_T.PGeomnode[pmax_tp]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7911} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7911} true;
    pmax_ptr := pmax_tp;
    assume value_is(__ctobpl_const_7716, pmax_ptr);
    assume value_is(__ctobpl_const_7717, Mem_T.PGeomnode[pmax_tp]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7912} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7912} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[qmin_tp := 0];
    assume value_is(__ctobpl_const_7718, Mem_T.PGeomnode[qmin_tp]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7912} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7912} true;
    qmin_ptr := qmin_tp;
    assume value_is(__ctobpl_const_7719, qmin_ptr);
    assume value_is(__ctobpl_const_7720, Mem_T.PGeomnode[qmin_tp]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7913} true;
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7913} true;
    Mem_T.PGeomnode := Mem_T.PGeomnode[qmax_tp := 0];
    assume value_is(__ctobpl_const_7721, Mem_T.PGeomnode[qmax_tp]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7913} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7913} true;
    qmax_ptr := qmax_tp;
    assume value_is(__ctobpl_const_7722, qmax_ptr);
    assume value_is(__ctobpl_const_7723, Mem_T.PGeomnode[qmax_tp]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7914} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7915} true;
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7916} true;
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7917} true;
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7918} true;
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7919} true;
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7919} true;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7919} true;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7919} true;
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7919} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7919} true;
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7919} true;
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7920} true;
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7920} true;
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7920} true;
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7920} true;
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7920} true;
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7921} true;
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7922} true;
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7923} true;
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7923} true;
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7924} true;
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7931} true;
    assert grphaexc_ptr != 0;
    centre := Mem_T.CENTRE_GrPhaExc[CENTRE_GrPhaExc(grphaexc_ptr)];
    assume value_is(__ctobpl_const_7724, centre);
    assume value_is(__ctobpl_const_7725, grphaexc_ptr);
    assume value_is(__ctobpl_const_7726, Mem_T.CENTRE_GrPhaExc[CENTRE_GrPhaExc(grphaexc_ptr)]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7932} true;
    assert grphaexc_ptr != 0;
    p1_ep := Mem_T.P1_EP_GrPhaExc[P1_EP_GrPhaExc(grphaexc_ptr)];
    assume value_is(__ctobpl_const_7727, p1_ep);
    assume value_is(__ctobpl_const_7728, grphaexc_ptr);
    assume value_is(__ctobpl_const_7729, Mem_T.P1_EP_GrPhaExc[P1_EP_GrPhaExc(grphaexc_ptr)]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7933} true;
    assert grphaexc_ptr != 0;
    p2_ep := Mem_T.P2_EP_GrPhaExc[P2_EP_GrPhaExc(grphaexc_ptr)];
    assume value_is(__ctobpl_const_7730, p2_ep);
    assume value_is(__ctobpl_const_7731, grphaexc_ptr);
    assume value_is(__ctobpl_const_7732, Mem_T.P2_EP_GrPhaExc[P2_EP_GrPhaExc(grphaexc_ptr)]);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7934} true;
    assert grphaexc_ptr != 0;
    q1_ep := Mem_T.Q1_EP_GrPhaExc[Q1_EP_GrPhaExc(grphaexc_ptr)];
    assume value_is(__ctobpl_const_7733, q1_ep);
    assume value_is(__ctobpl_const_7734, grphaexc_ptr);
    assume value_is(__ctobpl_const_7735, Mem_T.Q1_EP_GrPhaExc[Q1_EP_GrPhaExc(grphaexc_ptr)]);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7935} true;
    assert grphaexc_ptr != 0;
    q2_ep := Mem_T.Q2_EP_GrPhaExc[Q2_EP_GrPhaExc(grphaexc_ptr)];
    assume value_is(__ctobpl_const_7736, q2_ep);
    assume value_is(__ctobpl_const_7737, grphaexc_ptr);
    assume value_is(__ctobpl_const_7738, Mem_T.Q2_EP_GrPhaExc[Q2_EP_GrPhaExc(grphaexc_ptr)]);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7940} true;
    goto label_61_true, label_61_false;

  label_61_false:
    assume !INT_EQ(group_shape, 3);
    assume value_is(__ctobpl_const_7739, group_shape);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7953} true;
    goto label_62_true, label_62_false;

  label_62_false:
    assume !INT_EQ(group_shape, 2);
    assume value_is(__ctobpl_const_7740, group_shape);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7979} true;
    goto label_135;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7979} true;
    call result.printf$4 := det_choice();
    goto label_138;

  label_138:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7980} true;
    result.sgrpha2n$1 := 5;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8047} true;
    call __HAVOC_free(Hx);
    call __HAVOC_free(Hy);
    call __HAVOC_free(pmax_tp);
    call __HAVOC_free(pmin_tp);
    call __HAVOC_free(qmax_tp);
    call __HAVOC_free(qmin_tp);
    return;

  label_62_true:
    assume INT_EQ(group_shape, 2);
    assume value_is(__ctobpl_const_7740, group_shape);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7956} true;
    geomnode_app_ptr := geomnode_ptr;
    assume value_is(__ctobpl_const_7741, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7742, geomnode_ptr);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7957} true;
    i := 1;
    assume value_is(__ctobpl_const_7743, i);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7957} true;
    goto label_113_head;

  label_113_head:
    call geomnode_app_ptr, i := sgrpha2n_loop_label_113_head(Hx, Hy, geomnode_app_ptr, i);
    goto label_113_head_last;

  label_113_false:
    assume !INT_LEQ(i, 7);
    assume value_is(__ctobpl_const_7744, i);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7968} true;
    assert Hx != 0;
    p1x := Mem_T.FLOAT[PLUS(Hx, 8, 5)];
    assume value_is(__ctobpl_const_7745, p1x);
    assume value_is(__ctobpl_const_7746, Mem_T.FLOAT[PLUS(Hx, 8, 5)]);
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7969} true;
    assert Hy != 0;
    p1y := Mem_T.FLOAT[PLUS(Hy, 8, 5)];
    assume value_is(__ctobpl_const_7747, p1y);
    assume value_is(__ctobpl_const_7748, Mem_T.FLOAT[PLUS(Hy, 8, 5)]);
    goto label_127;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7970} true;
    assert Hx != 0;
    p2x := Mem_T.FLOAT[PLUS(Hx, 8, 2)];
    assume value_is(__ctobpl_const_7749, p2x);
    assume value_is(__ctobpl_const_7750, Mem_T.FLOAT[PLUS(Hx, 8, 2)]);
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7971} true;
    assert Hy != 0;
    p2y := Mem_T.FLOAT[PLUS(Hy, 8, 2)];
    assume value_is(__ctobpl_const_7751, p2y);
    assume value_is(__ctobpl_const_7752, Mem_T.FLOAT[PLUS(Hy, 8, 2)]);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7972} true;
    assert Hx != 0;
    assert Hx != 0;
    q1x := BINARY_BOTH_INT(PLUS(Mem_T.FLOAT[PLUS(Hx, 8, 6)], 1, Mem_T.FLOAT[PLUS(Hx, 8, 7)]), 2);
    assume value_is(__ctobpl_const_7753, q1x);
    assume value_is(__ctobpl_const_7754, Mem_T.FLOAT[PLUS(Hx, 8, 6)]);
    assume value_is(__ctobpl_const_7755, Mem_T.FLOAT[PLUS(Hx, 8, 7)]);
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7973} true;
    assert Hy != 0;
    q1y := Mem_T.FLOAT[PLUS(Hy, 8, 6)];
    assume value_is(__ctobpl_const_7756, q1y);
    assume value_is(__ctobpl_const_7757, Mem_T.FLOAT[PLUS(Hy, 8, 6)]);
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7974} true;
    assert Hx != 0;
    assert Hx != 0;
    q2x := BINARY_BOTH_INT(PLUS(Mem_T.FLOAT[PLUS(Hx, 8, 4)], 1, Mem_T.FLOAT[PLUS(Hx, 8, 3)]), 2);
    assume value_is(__ctobpl_const_7758, q2x);
    assume value_is(__ctobpl_const_7759, Mem_T.FLOAT[PLUS(Hx, 8, 4)]);
    assume value_is(__ctobpl_const_7760, Mem_T.FLOAT[PLUS(Hx, 8, 3)]);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7975} true;
    assert Hy != 0;
    q2y := Mem_T.FLOAT[PLUS(Hy, 8, 4)];
    assume value_is(__ctobpl_const_7761, q2y);
    assume value_is(__ctobpl_const_7762, Mem_T.FLOAT[PLUS(Hy, 8, 4)]);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7976} true;
    assert Hx != 0;
    cex := Mem_T.FLOAT[PLUS(Hx, 8, 1)];
    assume value_is(__ctobpl_const_7763, cex);
    assume value_is(__ctobpl_const_7764, Mem_T.FLOAT[PLUS(Hx, 8, 1)]);
    goto label_134;

  label_134:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7977} true;
    assert Hy != 0;
    cey := Mem_T.FLOAT[PLUS(Hy, 8, 1)];
    assume value_is(__ctobpl_const_7765, cey);
    assume value_is(__ctobpl_const_7766, Mem_T.FLOAT[PLUS(Hy, 8, 1)]);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7985} true;
    x1 := MINUS_BOTH_PTR_OR_BOTH_INT(p2x, cex, 1);
    assume value_is(__ctobpl_const_7820, x1);
    assume value_is(__ctobpl_const_7821, p2x);
    assume value_is(__ctobpl_const_7822, cex);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7986} true;
    y1 := MINUS_BOTH_PTR_OR_BOTH_INT(q2y, cey, 1);
    assume value_is(__ctobpl_const_7823, y1);
    assume value_is(__ctobpl_const_7824, q2y);
    assume value_is(__ctobpl_const_7825, cey);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7988} true;
    e := centre;
    assume value_is(__ctobpl_const_7826, e);
    assume value_is(__ctobpl_const_7827, centre);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7992} true;
    goto label_79_true, label_79_false;

  label_79_false:
    assume !INT_EQ(x1, 0);
    assume value_is(__ctobpl_const_7828, x1);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7995} true;
    a := BINARY_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(p1_ep, 1, p2_ep), MULT(2, e), 1), MULT(MULT(2, x1), x1));
    assume value_is(__ctobpl_const_7829, a);
    assume value_is(__ctobpl_const_7830, p1_ep);
    assume value_is(__ctobpl_const_7831, p2_ep);
    assume value_is(__ctobpl_const_7832, e);
    assume value_is(__ctobpl_const_7833, x1);
    assume value_is(__ctobpl_const_7834, x1);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7996} true;
    c := BINARY_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(MULT(MULT(a, x1), x1), 1, e), p1_ep, 1), x1);
    assume value_is(__ctobpl_const_7835, c);
    assume value_is(__ctobpl_const_7836, a);
    assume value_is(__ctobpl_const_7837, x1);
    assume value_is(__ctobpl_const_7838, x1);
    assume value_is(__ctobpl_const_7839, e);
    assume value_is(__ctobpl_const_7840, p1_ep);
    assume value_is(__ctobpl_const_7841, x1);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7998} true;
    goto label_83_true, label_83_false;

  label_83_false:
    assume !INT_EQ(y1, 0);
    assume value_is(__ctobpl_const_7845, y1);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8001} true;
    b := BINARY_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(q1_ep, 1, q2_ep), MULT(2, e), 1), MULT(MULT(2, y1), y1));
    assume value_is(__ctobpl_const_7846, b);
    assume value_is(__ctobpl_const_7847, q1_ep);
    assume value_is(__ctobpl_const_7848, q2_ep);
    assume value_is(__ctobpl_const_7849, e);
    assume value_is(__ctobpl_const_7850, y1);
    assume value_is(__ctobpl_const_7851, y1);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8002} true;
    d := BINARY_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(MULT(MULT(b, y1), y1), 1, e), q1_ep, 1), y1);
    assume value_is(__ctobpl_const_7852, d);
    assume value_is(__ctobpl_const_7853, b);
    assume value_is(__ctobpl_const_7854, y1);
    assume value_is(__ctobpl_const_7855, y1);
    assume value_is(__ctobpl_const_7856, e);
    assume value_is(__ctobpl_const_7857, q1_ep);
    assume value_is(__ctobpl_const_7858, y1);
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8006} true;
    A := a;
    assume value_is(__ctobpl_const_7862, A);
    assume value_is(__ctobpl_const_7863, a);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8007} true;
    B := b;
    assume value_is(__ctobpl_const_7864, B);
    assume value_is(__ctobpl_const_7865, b);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8008} true;
    C := MINUS_BOTH_PTR_OR_BOTH_INT(c, MULT(MULT(2, a), cex), 1);
    assume value_is(__ctobpl_const_7866, C);
    assume value_is(__ctobpl_const_7867, c);
    assume value_is(__ctobpl_const_7868, a);
    assume value_is(__ctobpl_const_7869, cex);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8009} true;
    D := MINUS_BOTH_PTR_OR_BOTH_INT(d, MULT(MULT(2, b), cey), 1);
    assume value_is(__ctobpl_const_7870, D);
    assume value_is(__ctobpl_const_7871, d);
    assume value_is(__ctobpl_const_7872, b);
    assume value_is(__ctobpl_const_7873, cey);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8010} true;
    E := PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(MINUS_BOTH_PTR_OR_BOTH_INT(PLUS(MULT(MULT(a, cex), cex), 1, MULT(MULT(b, cey), cey)), MULT(c, cex), 1), MULT(d, cey), 1), 1, e);
    assume value_is(__ctobpl_const_7874, E);
    assume value_is(__ctobpl_const_7875, a);
    assume value_is(__ctobpl_const_7876, cex);
    assume value_is(__ctobpl_const_7877, cex);
    assume value_is(__ctobpl_const_7878, b);
    assume value_is(__ctobpl_const_7879, cey);
    assume value_is(__ctobpl_const_7880, cey);
    assume value_is(__ctobpl_const_7881, c);
    assume value_is(__ctobpl_const_7882, cex);
    assume value_is(__ctobpl_const_7883, d);
    assume value_is(__ctobpl_const_7884, cey);
    assume value_is(__ctobpl_const_7885, e);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8013} true;
    geomnode_app_ptr := geomnode_ptr;
    assume value_is(__ctobpl_const_7886, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7887, geomnode_ptr);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8016} true;
    goto label_93_head;

  label_93_head:
    call geomnode_app_ptr, geomport_app_ptr, phase_val, port_app_ptr, result.secorder$6 := sgrpha2n_loop_label_93_head(A, B, C, D, E, geomnode_app_ptr, geomport_app_ptr, phase_val, port_app_ptr, port_ptr, result.secorder$6);
    goto label_93_head_last;

  label_93_false:
    assume geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7888, geomnode_app_ptr);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8046} true;
    result.sgrpha2n$1 := 0;
    goto label_1;

  label_93_true:
    assume geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7888, geomnode_app_ptr);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8019} true;
    assert geomnode_app_ptr != 0;
    assert geomnode_app_ptr != 0;
    assert geomnode_app_ptr != 0;
    assert geomnode_app_ptr != 0;
    call result.secorder$6 := secorder(A, B, C, D, E, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)], Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7889, A);
    assume value_is(__ctobpl_const_7890, B);
    assume value_is(__ctobpl_const_7891, C);
    assume value_is(__ctobpl_const_7892, D);
    assume value_is(__ctobpl_const_7893, E);
    assume value_is(__ctobpl_const_7894, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7895, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7896, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7897, Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7898, A);
    assume value_is(__ctobpl_const_7899, B);
    assume value_is(__ctobpl_const_7900, C);
    assume value_is(__ctobpl_const_7901, D);
    assume value_is(__ctobpl_const_7902, E);
    assume value_is(__ctobpl_const_7903, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7904, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7905, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7906, Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8019} true;
    phase_val := result.secorder$6;
    assume value_is(__ctobpl_const_7907, phase_val);
    assume value_is(__ctobpl_const_7908, result.secorder$6);
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8022} true;
    assert geomnode_app_ptr != 0;
    geomport_app_ptr := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7909, geomport_app_ptr);
    assume value_is(__ctobpl_const_7910, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7911, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8024} true;
    port_app_ptr := port_ptr;
    assume value_is(__ctobpl_const_7912, port_app_ptr);
    assume value_is(__ctobpl_const_7913, port_ptr);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8027} true;
    goto label_101_head;

  label_101_head:
    call geomport_app_ptr, port_app_ptr := sgrpha2n_loop_label_101_head(geomport_app_ptr, phase_val, port_app_ptr);
    goto label_101_head_last;

  label_101_false:
    assume port_app_ptr == 0;
    assume value_is(__ctobpl_const_7914, port_app_ptr);
    goto label_102;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8043} true;
    assert geomnode_app_ptr != 0;
    geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7915, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7916, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7917, Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)]);
    goto label_102_dummy;

  label_101_true:
    assume port_app_ptr != 0;
    assume value_is(__ctobpl_const_7914, port_app_ptr);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8032} true;
    assert geomport_app_ptr != 0;
    assert port_app_ptr != 0;
    Mem_T.PSH_Geomport := Mem_T.PSH_Geomport[PSH_Geomport(geomport_app_ptr) := PLUS(phase_val, 1, Mem_T.PSH_Port[PSH_Port(port_app_ptr)])];
    assume value_is(__ctobpl_const_7918, geomport_app_ptr);
    assume value_is(__ctobpl_const_7919, Mem_T.PSH_Geomport[PSH_Geomport(geomport_app_ptr)]);
    assume value_is(__ctobpl_const_7920, phase_val);
    assume value_is(__ctobpl_const_7921, port_app_ptr);
    assume value_is(__ctobpl_const_7922, Mem_T.PSH_Port[PSH_Port(port_app_ptr)]);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8034} true;
    assert geomport_app_ptr != 0;
    assert port_app_ptr != 0;
    Mem_T.PSC_Geomport := Mem_T.PSC_Geomport[PSC_Geomport(geomport_app_ptr) := Mem_T.PSC_Port[PSC_Port(port_app_ptr)]];
    assume value_is(__ctobpl_const_7923, geomport_app_ptr);
    assume value_is(__ctobpl_const_7924, Mem_T.PSC_Geomport[PSC_Geomport(geomport_app_ptr)]);
    assume value_is(__ctobpl_const_7925, port_app_ptr);
    assume value_is(__ctobpl_const_7926, Mem_T.PSC_Port[PSC_Port(port_app_ptr)]);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8035} true;
    assert geomport_app_ptr != 0;
    assert port_app_ptr != 0;
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(geomport_app_ptr) := Mem_T.PPA_Port[PPA_Port(port_app_ptr)]];
    assume value_is(__ctobpl_const_7927, geomport_app_ptr);
    assume value_is(__ctobpl_const_7928, Mem_T.PPA_Geomport[PPA_Geomport(geomport_app_ptr)]);
    assume value_is(__ctobpl_const_7929, port_app_ptr);
    assume value_is(__ctobpl_const_7930, Mem_T.PPA_Port[PPA_Port(port_app_ptr)]);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8038} true;
    assert port_app_ptr != 0;
    port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)];
    assume value_is(__ctobpl_const_7931, port_app_ptr);
    assume value_is(__ctobpl_const_7932, port_app_ptr);
    assume value_is(__ctobpl_const_7933, Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)]);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8039} true;
    assert geomport_app_ptr != 0;
    geomport_app_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(geomport_app_ptr)];
    assume value_is(__ctobpl_const_7934, geomport_app_ptr);
    assume value_is(__ctobpl_const_7935, geomport_app_ptr);
    assume value_is(__ctobpl_const_7936, Mem_T.NEXT_Geomport[NEXT_Geomport(geomport_app_ptr)]);
    goto label_107_dummy;

  label_83_true:
    assume INT_EQ(y1, 0);
    assume value_is(__ctobpl_const_7845, y1);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7999} true;
    d := 0;
    assume value_is(__ctobpl_const_7859, d);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7999} true;
    b := d;
    assume value_is(__ctobpl_const_7860, b);
    assume value_is(__ctobpl_const_7861, d);
    goto label_87;

  label_79_true:
    assume INT_EQ(x1, 0);
    assume value_is(__ctobpl_const_7828, x1);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7993} true;
    c := 0;
    assume value_is(__ctobpl_const_7842, c);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7993} true;
    a := c;
    assume value_is(__ctobpl_const_7843, a);
    assume value_is(__ctobpl_const_7844, c);
    goto label_83;

  label_113_true:
    assume INT_LEQ(i, 7);
    assume value_is(__ctobpl_const_7744, i);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7959} true;
    goto label_115_true, label_115_false;

  label_115_false:
    assume geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7767, geomnode_app_ptr);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7964} true;
    call result.printf$3 := det_choice();
    goto label_123;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7965} true;
    return;

  label_115_true:
    assume geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7767, geomnode_app_ptr);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7960} true;
    assert Hx != 0;
    assert geomnode_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[PLUS(Hx, 8, i) := Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)]];
    assume value_is(__ctobpl_const_7768, i);
    assume value_is(__ctobpl_const_7769, Mem_T.FLOAT[PLUS(Hx, 8, i)]);
    assume value_is(__ctobpl_const_7770, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7771, Mem_T.XA_Geomnode[XA_Geomnode(geomnode_app_ptr)]);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7961} true;
    assert Hy != 0;
    assert geomnode_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[PLUS(Hy, 8, i) := Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]];
    assume value_is(__ctobpl_const_7772, i);
    assume value_is(__ctobpl_const_7773, Mem_T.FLOAT[PLUS(Hy, 8, i)]);
    assume value_is(__ctobpl_const_7774, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7775, Mem_T.YA_Geomnode[YA_Geomnode(geomnode_app_ptr)]);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7962} true;
    assert geomnode_app_ptr != 0;
    geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7776, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7777, geomnode_app_ptr);
    assume value_is(__ctobpl_const_7778, Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)]);
    goto label_122;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7957} true;
    assume value_is(__ctobpl_const_7779, i);
    i := PLUS(i, 1, 1);
    goto label_122_dummy;

  label_61_true:
    assume INT_EQ(group_shape, 3);
    assume value_is(__ctobpl_const_7739, group_shape);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7942} true;
    call result.pqlimits$2 := pqlimits(geomnode_ptr, pmin_ptr, pmax_ptr, qmin_ptr, qmax_ptr);
    assume value_is(__ctobpl_const_7780, geomnode_ptr);
    assume value_is(__ctobpl_const_7781, pmin_ptr);
    assume value_is(__ctobpl_const_7782, pmax_ptr);
    assume value_is(__ctobpl_const_7783, qmin_ptr);
    assume value_is(__ctobpl_const_7784, qmax_ptr);
    assume value_is(__ctobpl_const_7785, geomnode_ptr);
    assume value_is(__ctobpl_const_7786, pmin_ptr);
    assume value_is(__ctobpl_const_7787, pmax_ptr);
    assume value_is(__ctobpl_const_7788, qmin_ptr);
    assume value_is(__ctobpl_const_7789, qmax_ptr);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7943} true;
    assert pmin_ptr != 0;
    assert Mem_T.PGeomnode[pmin_ptr] != 0;
    p1x := Mem_T.XA_Geomnode[XA_Geomnode(Mem_T.PGeomnode[pmin_ptr])];
    assume value_is(__ctobpl_const_7790, p1x);
    assume value_is(__ctobpl_const_7791, pmin_ptr);
    assume value_is(__ctobpl_const_7792, Mem_T.PGeomnode[pmin_ptr]);
    assume value_is(__ctobpl_const_7793, Mem_T.XA_Geomnode[XA_Geomnode(Mem_T.PGeomnode[pmin_ptr])]);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7944} true;
    assert pmax_ptr != 0;
    assert Mem_T.PGeomnode[pmax_ptr] != 0;
    p2x := Mem_T.XA_Geomnode[XA_Geomnode(Mem_T.PGeomnode[pmax_ptr])];
    assume value_is(__ctobpl_const_7794, p2x);
    assume value_is(__ctobpl_const_7795, pmax_ptr);
    assume value_is(__ctobpl_const_7796, Mem_T.PGeomnode[pmax_ptr]);
    assume value_is(__ctobpl_const_7797, Mem_T.XA_Geomnode[XA_Geomnode(Mem_T.PGeomnode[pmax_ptr])]);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7945} true;
    assert qmin_ptr != 0;
    assert Mem_T.PGeomnode[qmin_ptr] != 0;
    q1y := Mem_T.YA_Geomnode[YA_Geomnode(Mem_T.PGeomnode[qmin_ptr])];
    assume value_is(__ctobpl_const_7798, q1y);
    assume value_is(__ctobpl_const_7799, qmin_ptr);
    assume value_is(__ctobpl_const_7800, Mem_T.PGeomnode[qmin_ptr]);
    assume value_is(__ctobpl_const_7801, Mem_T.YA_Geomnode[YA_Geomnode(Mem_T.PGeomnode[qmin_ptr])]);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7946} true;
    assert qmax_ptr != 0;
    assert Mem_T.PGeomnode[qmax_ptr] != 0;
    q2y := Mem_T.YA_Geomnode[YA_Geomnode(Mem_T.PGeomnode[qmax_ptr])];
    assume value_is(__ctobpl_const_7802, q2y);
    assume value_is(__ctobpl_const_7803, qmax_ptr);
    assume value_is(__ctobpl_const_7804, Mem_T.PGeomnode[qmax_ptr]);
    assume value_is(__ctobpl_const_7805, Mem_T.YA_Geomnode[YA_Geomnode(Mem_T.PGeomnode[qmax_ptr])]);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7947} true;
    p1y := BINARY_BOTH_INT(PLUS(q1y, 1, q2y), 2);
    assume value_is(__ctobpl_const_7806, p1y);
    assume value_is(__ctobpl_const_7807, q1y);
    assume value_is(__ctobpl_const_7808, q2y);
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7948} true;
    p2y := p1y;
    assume value_is(__ctobpl_const_7809, p2y);
    assume value_is(__ctobpl_const_7810, p1y);
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7949} true;
    q1x := BINARY_BOTH_INT(PLUS(p1x, 1, p2x), 2);
    assume value_is(__ctobpl_const_7811, q1x);
    assume value_is(__ctobpl_const_7812, p1x);
    assume value_is(__ctobpl_const_7813, p2x);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7950} true;
    q2x := q1x;
    assume value_is(__ctobpl_const_7814, q2x);
    assume value_is(__ctobpl_const_7815, q1x);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7951} true;
    cex := q1x;
    assume value_is(__ctobpl_const_7816, cex);
    assume value_is(__ctobpl_const_7817, q1x);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7952} true;
    cey := p1y;
    assume value_is(__ctobpl_const_7818, cey);
    assume value_is(__ctobpl_const_7819, p1y);
    goto label_76;

  label_107_dummy:
    assume false;
    return;

  label_101_head_last:
    goto label_101_true, label_101_false;

  label_102_dummy:
    assume false;
    return;

  label_93_head_last:
    goto label_93_true, label_93_false;

  label_122_dummy:
    assume false;
    return;

  label_113_head_last:
    goto label_113_true, label_113_false;
}



procedure {:extern} sgrphasr(group_ptr.__1: int) returns (result.sgrphasr$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} sgrphasr(group_ptr.__1: int) returns (result.sgrphasr$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle_start: int;
  var {:extern} angle_step: int;
  var {:extern} geomnode_app_ptr: int;
  var {:extern} group_ptr: int;
  var {:extern} phase_start: int;
  var {:extern} phase_step: int;
  var {:extern} $printf.arg.2$3$: int;
  var {:extern} $printf.arg.2$5$: int;
  var {:extern} result.printf$2: int;
  var {:extern} result.printf$4: int;
  var {:extern} sign: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(group_ptr.__1, alloc);
    angle_start := 0;
    angle_step := 0;
    geomnode_app_ptr := 0;
    group_ptr := 0;
    phase_start := 0;
    phase_step := 0;
    $printf.arg.2$3$ := 0;
    $printf.arg.2$5$ := 0;
    result.printf$2 := 0;
    result.printf$4 := 0;
    result.sgrphasr$1 := 0;
    sign := 0;
    group_ptr := group_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8056} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8056} true;
    geomnode_app_ptr := 0;
    assume value_is(__ctobpl_const_7937, geomnode_app_ptr);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8057} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8057} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8057} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8057} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8057} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8065} true;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    goto label_10_true, label_10_false;

  label_10_false:
    assume !INT_LT(1, Mem_T.NPORTS_Elem[NPORTS_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_7938, group_ptr);
    assume value_is(__ctobpl_const_7939, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7940, Mem_T.NPORTS_Elem[NPORTS_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8070} true;
    assert group_ptr != 0;
    goto label_11_true, label_11_false;

  label_11_false:
    assume !INT_EQ(Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)], 5);
    assume value_is(__ctobpl_const_7941, group_ptr);
    assume value_is(__ctobpl_const_7942, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8078} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    goto label_17_true, label_17_false;

  label_17_false:
    assume !INT_EQ(Mem_T.DIRECTION_GrPhaExc[DIRECTION_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_7943, group_ptr);
    assume value_is(__ctobpl_const_7944, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7945, Mem_T.DIRECTION_GrPhaExc[DIRECTION_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8081} true;
    sign := -1;
    assume value_is(__ctobpl_const_7946, sign);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8085} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    goto label_25_true, label_25_false;

  label_25_false:
    assume !INT_EQ(Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_7948, group_ptr);
    assume value_is(__ctobpl_const_7949, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7950, Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8096} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    goto label_26_true, label_26_false;

  label_26_false:
    assume !INT_EQ(Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_7954, group_ptr);
    assume value_is(__ctobpl_const_7955, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7956, Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8103} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    angle_start := Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_7957, angle_start);
    assume value_is(__ctobpl_const_7958, group_ptr);
    assume value_is(__ctobpl_const_7959, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7960, Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8104} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    angle_step := Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_7961, angle_step);
    assume value_is(__ctobpl_const_7962, group_ptr);
    assume value_is(__ctobpl_const_7963, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7964, Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8105} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    phase_start := Mem_T.PHASE_START_GrPhaExc[PHASE_START_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_7965, phase_start);
    assume value_is(__ctobpl_const_7966, group_ptr);
    assume value_is(__ctobpl_const_7967, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7968, Mem_T.PHASE_START_GrPhaExc[PHASE_START_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8106} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    phase_step := Mem_T.PHASE_STEP_GrPhaExc[PHASE_STEP_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_7969, phase_step);
    assume value_is(__ctobpl_const_7970, group_ptr);
    assume value_is(__ctobpl_const_7971, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7972, Mem_T.PHASE_STEP_GrPhaExc[PHASE_STEP_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8110} true;
    assert group_ptr != 0;
    goto label_34_true, label_34_false;

  label_34_false:
    assume !INT_EQ(Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)], 3);
    assume value_is(__ctobpl_const_8003, group_ptr);
    assume value_is(__ctobpl_const_8004, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8112} true;
    assert group_ptr != 0;
    goto label_35_true, label_35_false;

  label_35_false:
    assume !INT_EQ(Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)], 2);
    assume value_is(__ctobpl_const_8005, group_ptr);
    assume value_is(__ctobpl_const_8006, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8115} true;
    assert group_ptr != 0;
    geomnode_app_ptr := Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)];
    assume value_is(__ctobpl_const_8031, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8032, group_ptr);
    assume value_is(__ctobpl_const_8033, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8116} true;
    goto label_40_head;

  label_40_head:
    call geomnode_app_ptr, tempBoogie0 := sgrphasr_loop_label_40_head(geomnode_app_ptr, group_ptr, tempBoogie0);
    goto label_40_head_last;

  label_40_false:
    assume geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_8034, geomnode_app_ptr);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8137} true;
    result.sgrphasr$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8138} true;
    return;

  label_40_true:
    assume geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_8034, geomnode_app_ptr);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8127} true;
    assert geomnode_app_ptr != 0;
    assert Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)] != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    assert Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])] != 0;
    Mem_T.PSH_Geomport := Mem_T.PSH_Geomport[PSH_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]) := Mem_T.PSH_Port[PSH_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])])]];
    assume value_is(__ctobpl_const_8035, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8036, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_8037, Mem_T.PSH_Geomport[PSH_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)])]);
    assume value_is(__ctobpl_const_8038, group_ptr);
    assume value_is(__ctobpl_const_8039, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8040, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8041, Mem_T.PSH_Port[PSH_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])])]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8128} true;
    assert geomnode_app_ptr != 0;
    assert Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)] != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    assert Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])] != 0;
    Mem_T.PSC_Geomport := Mem_T.PSC_Geomport[PSC_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]) := Mem_T.PSC_Port[PSC_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])])]];
    assume value_is(__ctobpl_const_8042, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8043, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_8044, Mem_T.PSC_Geomport[PSC_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)])]);
    assume value_is(__ctobpl_const_8045, group_ptr);
    assume value_is(__ctobpl_const_8046, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8047, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8048, Mem_T.PSC_Port[PSC_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])])]);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8129} true;
    assert geomnode_app_ptr != 0;
    assert Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)] != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    assert Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])] != 0;
    tempBoogie0 := PLUS(Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)])], 1, Mem_T.PPA_Port[PPA_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])])]);
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]) := tempBoogie0];
    assume value_is(__ctobpl_const_8049, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8050, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_8051, Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)])]);
    assume value_is(__ctobpl_const_8052, group_ptr);
    assume value_is(__ctobpl_const_8053, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8054, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8055, Mem_T.PPA_Port[PPA_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])])]);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8133} true;
    assert geomnode_app_ptr != 0;
    geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8056, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8057, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8058, Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)]);
    goto label_45_dummy;

  label_35_true:
    assume INT_EQ(Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)], 2);
    assume value_is(__ctobpl_const_8005, group_ptr);
    assume value_is(__ctobpl_const_8006, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8113} true;
    assert group_ptr != 0;
    assert group_ptr != 0;
    call seqrothg(angle_start, angle_step, phase_start, phase_step, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8007, angle_start);
    assume value_is(__ctobpl_const_8008, angle_step);
    assume value_is(__ctobpl_const_8009, phase_start);
    assume value_is(__ctobpl_const_8010, phase_step);
    assume value_is(__ctobpl_const_8011, group_ptr);
    assume value_is(__ctobpl_const_8012, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8013, angle_start);
    assume value_is(__ctobpl_const_8014, angle_step);
    assume value_is(__ctobpl_const_8015, phase_start);
    assume value_is(__ctobpl_const_8016, phase_step);
    assume value_is(__ctobpl_const_8017, group_ptr);
    assume value_is(__ctobpl_const_8018, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    goto label_39;

  label_34_true:
    assume INT_EQ(Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)], 3);
    assume value_is(__ctobpl_const_8003, group_ptr);
    assume value_is(__ctobpl_const_8004, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8111} true;
    assert group_ptr != 0;
    assert group_ptr != 0;
    call seqrotrg(angle_start, angle_step, phase_start, phase_step, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8019, angle_start);
    assume value_is(__ctobpl_const_8020, angle_step);
    assume value_is(__ctobpl_const_8021, phase_start);
    assume value_is(__ctobpl_const_8022, phase_step);
    assume value_is(__ctobpl_const_8023, group_ptr);
    assume value_is(__ctobpl_const_8024, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8025, angle_start);
    assume value_is(__ctobpl_const_8026, angle_step);
    assume value_is(__ctobpl_const_8027, phase_start);
    assume value_is(__ctobpl_const_8028, phase_step);
    assume value_is(__ctobpl_const_8029, group_ptr);
    assume value_is(__ctobpl_const_8030, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    goto label_39;

  label_26_true:
    assume INT_EQ(Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_7954, group_ptr);
    assume value_is(__ctobpl_const_7955, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7956, Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8097} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    angle_start := Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_7973, angle_start);
    assume value_is(__ctobpl_const_7974, group_ptr);
    assume value_is(__ctobpl_const_7975, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7976, Mem_T.ANGLE_START_GrPhaExc[ANGLE_START_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8098} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    angle_step := Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_7977, angle_step);
    assume value_is(__ctobpl_const_7978, group_ptr);
    assume value_is(__ctobpl_const_7979, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7980, Mem_T.ANGLE_STEP_GrPhaExc[ANGLE_STEP_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8099} true;
    phase_start := angle_start;
    assume value_is(__ctobpl_const_7981, phase_start);
    assume value_is(__ctobpl_const_7982, angle_start);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8100} true;
    phase_step := angle_step;
    assume value_is(__ctobpl_const_7983, phase_step);
    assume value_is(__ctobpl_const_7984, angle_step);
    goto label_34;

  label_25_true:
    assume INT_EQ(Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_7948, group_ptr);
    assume value_is(__ctobpl_const_7949, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7950, Mem_T.OMIT_ANGLE_GrPhaExc[OMIT_ANGLE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8085} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    goto label_27_true, label_27_false;

  label_27_false:
    assume !INT_EQ(Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_7951, group_ptr);
    assume value_is(__ctobpl_const_7952, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7953, Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_26;

  label_27_true:
    assume INT_EQ(Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_7951, group_ptr);
    assume value_is(__ctobpl_const_7952, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7953, Mem_T.OMIT_PHASE_GrPhaExc[OMIT_PHASE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8088} true;
    assert group_ptr != 0;
    goto label_28_true, label_28_false;

  label_28_false:
    assume !INT_LEQ(Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr)], 2);
    assume value_is(__ctobpl_const_7985, group_ptr);
    assume value_is(__ctobpl_const_7986, Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr)]);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8092} true;
    phase_start := 0;
    assume value_is(__ctobpl_const_7987, phase_start);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8092} true;
    angle_start := phase_start;
    assume value_is(__ctobpl_const_7988, angle_start);
    assume value_is(__ctobpl_const_7989, phase_start);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8093} true;
    assert group_ptr != 0;
    phase_step := BINARY_BOTH_INT(MULT(sign, 360), Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7990, phase_step);
    assume value_is(__ctobpl_const_7991, sign);
    assume value_is(__ctobpl_const_7992, group_ptr);
    assume value_is(__ctobpl_const_7993, Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr)]);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8093} true;
    angle_step := phase_step;
    assume value_is(__ctobpl_const_7994, angle_step);
    assume value_is(__ctobpl_const_7995, phase_step);
    goto label_34;

  label_28_true:
    assume INT_LEQ(Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr)], 2);
    assume value_is(__ctobpl_const_7985, group_ptr);
    assume value_is(__ctobpl_const_7986, Mem_T.NUM_OF_NODES_Group[NUM_OF_NODES_Group(group_ptr)]);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8089} true;
    phase_start := 0;
    assume value_is(__ctobpl_const_7996, phase_start);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8089} true;
    angle_start := phase_start;
    assume value_is(__ctobpl_const_7997, angle_start);
    assume value_is(__ctobpl_const_7998, phase_start);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8090} true;
    phase_step := MULT(sign, 90);
    assume value_is(__ctobpl_const_7999, phase_step);
    assume value_is(__ctobpl_const_8000, sign);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8090} true;
    angle_step := phase_step;
    assume value_is(__ctobpl_const_8001, angle_step);
    assume value_is(__ctobpl_const_8002, phase_step);
    goto label_34;

  label_17_true:
    assume INT_EQ(Mem_T.DIRECTION_GrPhaExc[DIRECTION_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_7943, group_ptr);
    assume value_is(__ctobpl_const_7944, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7945, Mem_T.DIRECTION_GrPhaExc[DIRECTION_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8079} true;
    sign := 1;
    assume value_is(__ctobpl_const_7947, sign);
    goto label_25;

  label_11_true:
    assume INT_EQ(Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)], 5);
    assume value_is(__ctobpl_const_7941, group_ptr);
    assume value_is(__ctobpl_const_7942, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8071} true;
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8071} true;
    call result.printf$4 := det_choice();
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8072} true;
    result.sgrphasr$1 := 11;
    goto label_1;

  label_10_true:
    assume INT_LT(1, Mem_T.NPORTS_Elem[NPORTS_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_7938, group_ptr);
    assume value_is(__ctobpl_const_7939, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_7940, Mem_T.NPORTS_Elem[NPORTS_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8066} true;
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8066} true;
    call result.printf$2 := det_choice();
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8067} true;
    result.sgrphasr$1 := 10;
    goto label_1;

  label_45_dummy:
    assume false;
    return;

  label_40_head_last:
    goto label_40_true, label_40_false;
}



procedure {:extern} sgrphaun(grphaexc_ptr.__1: int, geomnode_ptr.__1: int, port_ptr.__1: int) returns (result.sgrphaun$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} sgrphaun(grphaexc_ptr.__1: int, geomnode_ptr.__1: int, port_ptr.__1: int) returns (result.sgrphaun$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} geomnode_app_ptr: int;
  var {:extern} geomnode_ptr: int;
  var {:extern} geomport_app_ptr: int;
  var {:extern} grphaexc_ptr: int;
  var {:extern} port_app_ptr: int;
  var {:extern} port_ptr: int;
  var {:extern} unif_val: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(grphaexc_ptr.__1, alloc);
    assume INT_LT(geomnode_ptr.__1, alloc);
    assume INT_LT(port_ptr.__1, alloc);
    geomnode_app_ptr := 0;
    geomnode_ptr := 0;
    geomport_app_ptr := 0;
    grphaexc_ptr := 0;
    port_app_ptr := 0;
    port_ptr := 0;
    result.sgrphaun$1 := 0;
    unif_val := 0;
    grphaexc_ptr := grphaexc_ptr.__1;
    geomnode_ptr := geomnode_ptr.__1;
    port_ptr := port_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8150} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8150} true;
    geomport_app_ptr := 0;
    assume value_is(__ctobpl_const_8059, geomport_app_ptr);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8151} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8151} true;
    geomnode_app_ptr := 0;
    assume value_is(__ctobpl_const_8060, geomnode_app_ptr);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8152} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8152} true;
    port_app_ptr := 0;
    assume value_is(__ctobpl_const_8061, port_app_ptr);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8153} true;
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8160} true;
    assert grphaexc_ptr != 0;
    unif_val := Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(grphaexc_ptr)];
    assume value_is(__ctobpl_const_8062, unif_val);
    assume value_is(__ctobpl_const_8063, grphaexc_ptr);
    assume value_is(__ctobpl_const_8064, Mem_T.UNIF_VAL_GrPhaExc[UNIF_VAL_GrPhaExc(grphaexc_ptr)]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8163} true;
    geomnode_app_ptr := geomnode_ptr;
    assume value_is(__ctobpl_const_8065, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8066, geomnode_ptr);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8166} true;
    goto label_12_head;

  label_12_head:
    call geomnode_app_ptr, geomport_app_ptr, port_app_ptr := sgrphaun_loop_label_12_head(geomnode_app_ptr, geomport_app_ptr, port_app_ptr, port_ptr, unif_val);
    goto label_12_head_last;

  label_12_false:
    assume geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_8067, geomnode_app_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8193} true;
    result.sgrphaun$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8194} true;
    return;

  label_12_true:
    assume geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_8067, geomnode_app_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8169} true;
    assert geomnode_app_ptr != 0;
    geomport_app_ptr := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8068, geomport_app_ptr);
    assume value_is(__ctobpl_const_8069, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8070, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8171} true;
    port_app_ptr := port_ptr;
    assume value_is(__ctobpl_const_8071, port_app_ptr);
    assume value_is(__ctobpl_const_8072, port_ptr);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8174} true;
    goto label_16_head;

  label_16_head:
    call geomport_app_ptr, port_app_ptr := sgrphaun_loop_label_16_head(geomport_app_ptr, port_app_ptr, unif_val);
    goto label_16_head_last;

  label_16_false:
    assume port_app_ptr == 0;
    assume value_is(__ctobpl_const_8073, port_app_ptr);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8190} true;
    assert geomnode_app_ptr != 0;
    geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8074, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8075, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8076, Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)]);
    goto label_17_dummy;

  label_16_true:
    assume port_app_ptr != 0;
    assume value_is(__ctobpl_const_8073, port_app_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8179} true;
    assert geomport_app_ptr != 0;
    assert port_app_ptr != 0;
    Mem_T.PSH_Geomport := Mem_T.PSH_Geomport[PSH_Geomport(geomport_app_ptr) := PLUS(unif_val, 1, Mem_T.PSH_Port[PSH_Port(port_app_ptr)])];
    assume value_is(__ctobpl_const_8077, geomport_app_ptr);
    assume value_is(__ctobpl_const_8078, Mem_T.PSH_Geomport[PSH_Geomport(geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8079, unif_val);
    assume value_is(__ctobpl_const_8080, port_app_ptr);
    assume value_is(__ctobpl_const_8081, Mem_T.PSH_Port[PSH_Port(port_app_ptr)]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8181} true;
    assert geomport_app_ptr != 0;
    assert port_app_ptr != 0;
    Mem_T.PSC_Geomport := Mem_T.PSC_Geomport[PSC_Geomport(geomport_app_ptr) := Mem_T.PSC_Port[PSC_Port(port_app_ptr)]];
    assume value_is(__ctobpl_const_8082, geomport_app_ptr);
    assume value_is(__ctobpl_const_8083, Mem_T.PSC_Geomport[PSC_Geomport(geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8084, port_app_ptr);
    assume value_is(__ctobpl_const_8085, Mem_T.PSC_Port[PSC_Port(port_app_ptr)]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8182} true;
    assert geomport_app_ptr != 0;
    assert port_app_ptr != 0;
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(geomport_app_ptr) := Mem_T.PPA_Port[PPA_Port(port_app_ptr)]];
    assume value_is(__ctobpl_const_8086, geomport_app_ptr);
    assume value_is(__ctobpl_const_8087, Mem_T.PPA_Geomport[PPA_Geomport(geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8088, port_app_ptr);
    assume value_is(__ctobpl_const_8089, Mem_T.PPA_Port[PPA_Port(port_app_ptr)]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8185} true;
    assert port_app_ptr != 0;
    port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)];
    assume value_is(__ctobpl_const_8090, port_app_ptr);
    assume value_is(__ctobpl_const_8091, port_app_ptr);
    assume value_is(__ctobpl_const_8092, Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8186} true;
    assert geomport_app_ptr != 0;
    geomport_app_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(geomport_app_ptr)];
    assume value_is(__ctobpl_const_8093, geomport_app_ptr);
    assume value_is(__ctobpl_const_8094, geomport_app_ptr);
    assume value_is(__ctobpl_const_8095, Mem_T.NEXT_Geomport[NEXT_Geomport(geomport_app_ptr)]);
    goto label_22_dummy;

  label_22_dummy:
    assume false;
    return;

  label_16_head_last:
    goto label_16_true, label_16_false;

  label_17_dummy:
    assume false;
    return;

  label_12_head_last:
    goto label_12_true, label_12_false;
}



procedure {:extern} sgrrot(start_ptr.__1: int, XC.__1: int, YC.__1: int, phi.__1: int) returns (result.sgrrot$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} sgrrot(start_ptr.__1: int, XC.__1: int, YC.__1: int, phi.__1: int) returns (result.sgrrot$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} XC: int;
  var {:extern} XD: int;
  var {:extern} XE: int;
  var {:extern} YC: int;
  var {:extern} YD: int;
  var {:extern} YE: int;
  var {:extern} app_ptr: int;
  var {:extern} phi: int;
  var {:extern} result.dcos$2: int;
  var {:extern} result.dcos$5: int;
  var {:extern} result.dsin$3: int;
  var {:extern} result.dsin$4: int;
  var {:extern} start_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(start_ptr.__1, alloc);
    XC := 0;
    XD := 0;
    XE := 0;
    YC := 0;
    YD := 0;
    YE := 0;
    app_ptr := 0;
    phi := 0;
    result.dcos$2 := 0;
    result.dcos$5 := 0;
    result.dsin$3 := 0;
    result.dsin$4 := 0;
    result.sgrrot$1 := 0;
    start_ptr := 0;
    start_ptr := start_ptr.__1;
    XC := XC.__1;
    YC := YC.__1;
    phi := phi.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8208} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8209} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8209} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8209} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8209} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8215} true;
    app_ptr := start_ptr;
    assume value_is(__ctobpl_const_8096, app_ptr);
    assume value_is(__ctobpl_const_8097, start_ptr);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8218} true;
    goto label_9_true, label_9_false;

  label_9_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_8098, app_ptr);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8219} true;
    call interror(havoc_stringTemp);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8222} true;
    goto label_13_head;

  label_13_head:
    call XD, XE, YD, YE, app_ptr, result.dcos$2, result.dcos$5, result.dsin$3, result.dsin$4, tempBoogie0 := sgrrot_loop_label_13_head(XC, XD, XE, YC, YD, YE, app_ptr, phi, result.dcos$2, result.dcos$5, result.dsin$3, result.dsin$4, tempBoogie0);
    goto label_13_head_last;

  label_13_false:
    assume app_ptr == 0;
    assume value_is(__ctobpl_const_8099, app_ptr);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8246} true;
    result.sgrrot$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8248} true;
    return;

  label_13_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_8099, app_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8224} true;
    assert app_ptr != 0;
    XD := Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_8100, XD);
    assume value_is(__ctobpl_const_8101, app_ptr);
    assume value_is(__ctobpl_const_8102, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8225} true;
    assert app_ptr != 0;
    YD := Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_8103, YD);
    assume value_is(__ctobpl_const_8104, app_ptr);
    assume value_is(__ctobpl_const_8105, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8231} true;
    call result.dcos$2 := dcos(phi);
    assume value_is(__ctobpl_const_8106, phi);
    assume value_is(__ctobpl_const_8107, phi);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8231} true;
    call result.dsin$3 := dsin(phi);
    assume value_is(__ctobpl_const_8108, phi);
    assume value_is(__ctobpl_const_8109, phi);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8231} true;
    XE := PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(MULT(MINUS_BOTH_PTR_OR_BOTH_INT(XD, XC, 1), result.dcos$2), MULT(MINUS_BOTH_PTR_OR_BOTH_INT(YD, YC, 1), result.dsin$3), 1), 1, XC);
    assume value_is(__ctobpl_const_8110, XE);
    assume value_is(__ctobpl_const_8111, XD);
    assume value_is(__ctobpl_const_8112, XC);
    assume value_is(__ctobpl_const_8113, result.dcos$2);
    assume value_is(__ctobpl_const_8114, YD);
    assume value_is(__ctobpl_const_8115, YC);
    assume value_is(__ctobpl_const_8116, result.dsin$3);
    assume value_is(__ctobpl_const_8117, XC);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8232} true;
    call result.dsin$4 := dsin(phi);
    assume value_is(__ctobpl_const_8118, phi);
    assume value_is(__ctobpl_const_8119, phi);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8232} true;
    call result.dcos$5 := dcos(phi);
    assume value_is(__ctobpl_const_8120, phi);
    assume value_is(__ctobpl_const_8121, phi);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8232} true;
    YE := PLUS(PLUS(MULT(MINUS_BOTH_PTR_OR_BOTH_INT(XD, XC, 1), result.dsin$4), 1, MULT(MINUS_BOTH_PTR_OR_BOTH_INT(YD, YC, 1), result.dcos$5)), 1, YC);
    assume value_is(__ctobpl_const_8122, YE);
    assume value_is(__ctobpl_const_8123, XD);
    assume value_is(__ctobpl_const_8124, XC);
    assume value_is(__ctobpl_const_8125, result.dsin$4);
    assume value_is(__ctobpl_const_8126, YD);
    assume value_is(__ctobpl_const_8127, YC);
    assume value_is(__ctobpl_const_8128, result.dcos$5);
    assume value_is(__ctobpl_const_8129, YC);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8235} true;
    assert app_ptr != 0;
    Mem_T.XA_Geomnode := Mem_T.XA_Geomnode[XA_Geomnode(app_ptr) := XE];
    assume value_is(__ctobpl_const_8130, app_ptr);
    assume value_is(__ctobpl_const_8131, Mem_T.XA_Geomnode[XA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_8132, XE);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8236} true;
    assert app_ptr != 0;
    Mem_T.YA_Geomnode := Mem_T.YA_Geomnode[YA_Geomnode(app_ptr) := YE];
    assume value_is(__ctobpl_const_8133, app_ptr);
    assume value_is(__ctobpl_const_8134, Mem_T.YA_Geomnode[YA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_8135, YE);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8240} true;
    assert app_ptr != 0;
    tempBoogie0 := PLUS(Mem_T.PHEA_Geomnode[PHEA_Geomnode(app_ptr)], 1, phi);
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(app_ptr) := tempBoogie0];
    assume value_is(__ctobpl_const_8136, app_ptr);
    assume value_is(__ctobpl_const_8137, Mem_T.PHEA_Geomnode[PHEA_Geomnode(app_ptr)]);
    assume value_is(__ctobpl_const_8138, phi);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8243} true;
    assert app_ptr != 0;
    app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr)];
    assume value_is(__ctobpl_const_8139, app_ptr);
    assume value_is(__ctobpl_const_8140, app_ptr);
    assume value_is(__ctobpl_const_8141, Mem_T.NEXT_Geomnode[NEXT_Geomnode(app_ptr)]);
    goto label_34_dummy;

  label_9_true:
    assume app_ptr != 0;
    assume value_is(__ctobpl_const_8098, app_ptr);
    goto label_13;

  label_34_dummy:
    assume false;
    return;

  label_13_head_last:
    goto label_13_true, label_13_false;
}



procedure {:extern} simamp(group_ptr.__1: int) returns (result.simamp$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} simamp(group_ptr.__1: int) returns (result.simamp$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} error: int;
  var {:extern} group_ptr: int;
  var {:extern} $printf.arg.2$7$: int;
  var {:extern} $printf.arg.3$6$: int;
  var {:extern} result.fixgramp$2: int;
  var {:extern} result.printf$5: int;
  var {:extern} result.sgramp2n$4: int;
  var {:extern} result.sgrampun$3: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(group_ptr.__1, alloc);
    error := 0;
    group_ptr := 0;
    $printf.arg.2$7$ := 0;
    $printf.arg.3$6$ := 0;
    result.fixgramp$2 := 0;
    result.printf$5 := 0;
    result.sgramp2n$4 := 0;
    result.sgrampun$3 := 0;
    result.simamp$1 := 0;
    group_ptr := group_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8260} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8260} true;
    error := 0;
    assume value_is(__ctobpl_const_8142, error);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8267} true;
    assert group_ptr != 0;
    assert group_ptr != 0;
    call result.fixgramp$2 := fixgramp(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8143, group_ptr);
    assume value_is(__ctobpl_const_8144, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8145, group_ptr);
    assume value_is(__ctobpl_const_8146, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8270} true;
    assert group_ptr != 0;
    assert Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)] != 0;
    goto label_8_case_0, label_8_case_1, label_8_case_2;

  label_8_case_2:
    assume INT_EQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_8147, group_ptr);
    assume value_is(__ctobpl_const_8148, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8149, Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)])]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8277} true;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    assert group_ptr != 0;
    call result.sgramp2n$4 := sgramp2n(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)], Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)], Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])], Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8166, group_ptr);
    assume value_is(__ctobpl_const_8167, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8168, group_ptr);
    assume value_is(__ctobpl_const_8169, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8170, group_ptr);
    assume value_is(__ctobpl_const_8171, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8172, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8173, group_ptr);
    assume value_is(__ctobpl_const_8174, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8175, group_ptr);
    assume value_is(__ctobpl_const_8176, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8177, group_ptr);
    assume value_is(__ctobpl_const_8178, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8179, group_ptr);
    assume value_is(__ctobpl_const_8180, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8181, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8182, group_ptr);
    assume value_is(__ctobpl_const_8183, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8277} true;
    error := result.sgramp2n$4;
    assume value_is(__ctobpl_const_8184, error);
    assume value_is(__ctobpl_const_8185, result.sgramp2n$4);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8278} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8284} true;
    goto label_9_true, label_9_false;

  label_9_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8186, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8288} true;
    result.simamp$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8289} true;
    return;

  label_9_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8186, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8285} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_8187, group_ptr);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8285} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8285} true;
    call result.printf$5 := det_choice();
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8286} true;
    result.simamp$1 := 6;
    goto label_1;

  label_8_case_1:
    assume INT_EQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)])], 0);
    assume value_is(__ctobpl_const_8147, group_ptr);
    assume value_is(__ctobpl_const_8148, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8149, Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)])]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8273} true;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    call result.sgrampun$3 := sgrampun(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)], Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)], Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8150, group_ptr);
    assume value_is(__ctobpl_const_8151, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8152, group_ptr);
    assume value_is(__ctobpl_const_8153, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8154, group_ptr);
    assume value_is(__ctobpl_const_8155, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8156, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8157, group_ptr);
    assume value_is(__ctobpl_const_8158, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8159, group_ptr);
    assume value_is(__ctobpl_const_8160, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8161, group_ptr);
    assume value_is(__ctobpl_const_8162, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8163, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8273} true;
    error := result.sgrampun$3;
    assume value_is(__ctobpl_const_8164, error);
    assume value_is(__ctobpl_const_8165, result.sgrampun$3);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8274} true;
    goto label_9;

  label_8_case_0:
    assume INT_NEQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)])], 0);
    assume INT_NEQ(Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_8147, group_ptr);
    assume value_is(__ctobpl_const_8148, Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8149, Mem_T.TYPE_GrAmpExc[TYPE_GrAmpExc(Mem_T.GRAMPEXC_PTR_Group[GRAMPEXC_PTR_Group(group_ptr)])]);
    goto label_9;
}



procedure {:extern} simgroup(group_ptr.__1: int) returns (result.simgroup$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} simgroup(group_ptr.__1: int) returns (result.simgroup$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} error: int;
  var {:extern} group_ptr: int;
  var {:extern} $printf.arg.2$6$: int;
  var {:extern} $printf.arg.3$5$: int;
  var {:extern} result.addscan$3: int;
  var {:extern} result.fixsgrel$2: int;
  var {:extern} result.printf$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(group_ptr.__1, alloc);
    error := 0;
    group_ptr := 0;
    $printf.arg.2$6$ := 0;
    $printf.arg.3$5$ := 0;
    result.addscan$3 := 0;
    result.fixsgrel$2 := 0;
    result.printf$4 := 0;
    result.simgroup$1 := 0;
    group_ptr := group_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8300} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8300} true;
    error := 0;
    assume value_is(__ctobpl_const_8188, error);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8307} true;
    call result.fixsgrel$2 := fixsgrel(group_ptr);
    assume value_is(__ctobpl_const_8189, group_ptr);
    assume value_is(__ctobpl_const_8190, group_ptr);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8310} true;
    call result.addscan$3 := addscan(group_ptr);
    assume value_is(__ctobpl_const_8191, group_ptr);
    assume value_is(__ctobpl_const_8192, group_ptr);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8310} true;
    error := result.addscan$3;
    assume value_is(__ctobpl_const_8193, error);
    assume value_is(__ctobpl_const_8194, result.addscan$3);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8312} true;
    goto label_12_true, label_12_false;

  label_12_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8195, error);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8316} true;
    result.simgroup$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8317} true;
    return;

  label_12_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8195, error);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8313} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_8196, group_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8313} true;
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8313} true;
    call result.printf$4 := det_choice();
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8314} true;
    result.simgroup$1 := 8;
    goto label_1;
}



procedure {:extern} simpha(group_ptr.__1: int) returns (result.simpha$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} simpha(group_ptr.__1: int) returns (result.simpha$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} error: int;
  var {:extern} group_ptr: int;
  var {:extern} $printf.arg.2$8$: int;
  var {:extern} $printf.arg.3$7$: int;
  var {:extern} result.fixgrpha$2: int;
  var {:extern} result.printf$6: int;
  var {:extern} result.sgrpha2n$4: int;
  var {:extern} result.sgrphasr$5: int;
  var {:extern} result.sgrphaun$3: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(group_ptr.__1, alloc);
    error := 0;
    group_ptr := 0;
    $printf.arg.2$8$ := 0;
    $printf.arg.3$7$ := 0;
    result.fixgrpha$2 := 0;
    result.printf$6 := 0;
    result.sgrpha2n$4 := 0;
    result.sgrphasr$5 := 0;
    result.sgrphaun$3 := 0;
    result.simpha$1 := 0;
    group_ptr := group_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8327} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8327} true;
    error := 0;
    assume value_is(__ctobpl_const_8197, error);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8330} true;
    assert group_ptr != 0;
    assert group_ptr != 0;
    call result.fixgrpha$2 := fixgrpha(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8198, group_ptr);
    assume value_is(__ctobpl_const_8199, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8200, group_ptr);
    assume value_is(__ctobpl_const_8201, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8333} true;
    assert group_ptr != 0;
    assert Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)] != 0;
    goto label_8_case_0, label_8_case_1, label_8_case_2, label_8_case_3;

  label_8_case_3:
    assume INT_EQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 3);
    assume value_is(__ctobpl_const_8202, group_ptr);
    assume value_is(__ctobpl_const_8203, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8204, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8344} true;
    call result.sgrphasr$5 := sgrphasr(group_ptr);
    assume value_is(__ctobpl_const_8241, group_ptr);
    assume value_is(__ctobpl_const_8242, group_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8344} true;
    error := result.sgrphasr$5;
    assume value_is(__ctobpl_const_8243, error);
    assume value_is(__ctobpl_const_8244, result.sgrphasr$5);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8345} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8352} true;
    goto label_9_true, label_9_false;

  label_9_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8245, error);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8356} true;
    result.simpha$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8357} true;
    return;

  label_9_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8245, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8353} true;
    assert group_ptr != 0;
    assume value_is(__ctobpl_const_8246, group_ptr);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8353} true;
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8353} true;
    call result.printf$6 := det_choice();
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8354} true;
    result.simpha$1 := 9;
    goto label_1;

  label_8_case_2:
    assume INT_EQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume value_is(__ctobpl_const_8202, group_ptr);
    assume value_is(__ctobpl_const_8203, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8204, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8340} true;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    assert group_ptr != 0;
    call result.sgrpha2n$4 := sgrpha2n(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)], Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)], Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])], Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8221, group_ptr);
    assume value_is(__ctobpl_const_8222, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8223, group_ptr);
    assume value_is(__ctobpl_const_8224, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8225, group_ptr);
    assume value_is(__ctobpl_const_8226, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8227, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8228, group_ptr);
    assume value_is(__ctobpl_const_8229, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8230, group_ptr);
    assume value_is(__ctobpl_const_8231, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8232, group_ptr);
    assume value_is(__ctobpl_const_8233, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8234, group_ptr);
    assume value_is(__ctobpl_const_8235, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8236, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8237, group_ptr);
    assume value_is(__ctobpl_const_8238, Mem_T.SHAPE_Group[SHAPE_Group(group_ptr)]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8340} true;
    error := result.sgrpha2n$4;
    assume value_is(__ctobpl_const_8239, error);
    assume value_is(__ctobpl_const_8240, result.sgrpha2n$4);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8341} true;
    goto label_9;

  label_8_case_1:
    assume INT_EQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 0);
    assume value_is(__ctobpl_const_8202, group_ptr);
    assume value_is(__ctobpl_const_8203, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8204, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8336} true;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    call result.sgrphaun$3 := sgrphaun(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)], Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)], Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8205, group_ptr);
    assume value_is(__ctobpl_const_8206, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8207, group_ptr);
    assume value_is(__ctobpl_const_8208, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8209, group_ptr);
    assume value_is(__ctobpl_const_8210, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8211, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    assume value_is(__ctobpl_const_8212, group_ptr);
    assume value_is(__ctobpl_const_8213, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8214, group_ptr);
    assume value_is(__ctobpl_const_8215, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8216, group_ptr);
    assume value_is(__ctobpl_const_8217, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8218, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8336} true;
    error := result.sgrphaun$3;
    assume value_is(__ctobpl_const_8219, error);
    assume value_is(__ctobpl_const_8220, result.sgrphaun$3);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8337} true;
    goto label_9;

  label_8_case_0:
    assume INT_NEQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 0);
    assume INT_NEQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 1);
    assume INT_NEQ(Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])], 3);
    assume value_is(__ctobpl_const_8202, group_ptr);
    assume value_is(__ctobpl_const_8203, Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8204, Mem_T.TYPE_GrPhaExc[TYPE_GrPhaExc(Mem_T.GRPHAEXC_PTR_Group[GRPHAEXC_PTR_Group(group_ptr)])]);
    goto label_9;
}



procedure {:extern} simpol(group_ptr.__1: int) returns (result.simpol$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} simpol(group_ptr.__1: int) returns (result.simpol$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} geomnode_app_ptr: int;
  var {:extern} geomport_app_ptr: int;
  var {:extern} group_ptr: int;
  var {:extern} port_app_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(group_ptr.__1, alloc);
    geomnode_app_ptr := 0;
    geomport_app_ptr := 0;
    group_ptr := 0;
    port_app_ptr := 0;
    result.simpol$1 := 0;
    group_ptr := group_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8368} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8369} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8370} true;
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8384} true;
    assert group_ptr != 0;
    geomnode_app_ptr := Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)];
    assume value_is(__ctobpl_const_8247, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8248, group_ptr);
    assume value_is(__ctobpl_const_8249, Mem_T.GEOMNODE_PTR_Group[GEOMNODE_PTR_Group(group_ptr)]);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8387} true;
    goto label_7_head;

  label_7_head:
    call geomnode_app_ptr, geomport_app_ptr, port_app_ptr := simpol_loop_label_7_head(geomnode_app_ptr, geomport_app_ptr, group_ptr, port_app_ptr);
    goto label_7_head_last;

  label_7_false:
    assume geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_8250, geomnode_app_ptr);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8409} true;
    result.simpol$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8410} true;
    return;

  label_7_true:
    assume geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_8250, geomnode_app_ptr);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8390} true;
    assert geomnode_app_ptr != 0;
    geomport_app_ptr := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8251, geomport_app_ptr);
    assume value_is(__ctobpl_const_8252, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8253, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(geomnode_app_ptr)]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8392} true;
    assert group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)] != 0;
    port_app_ptr := Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])];
    assume value_is(__ctobpl_const_8254, port_app_ptr);
    assume value_is(__ctobpl_const_8255, group_ptr);
    assume value_is(__ctobpl_const_8256, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)]);
    assume value_is(__ctobpl_const_8257, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(group_ptr)])]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8395} true;
    goto label_11_head;

  label_11_head:
    call geomport_app_ptr, port_app_ptr := simpol_loop_label_11_head(geomport_app_ptr, port_app_ptr);
    goto label_11_head_last;

  label_11_false:
    assume port_app_ptr == 0;
    assume value_is(__ctobpl_const_8258, port_app_ptr);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8406} true;
    assert geomnode_app_ptr != 0;
    geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8259, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8260, geomnode_app_ptr);
    assume value_is(__ctobpl_const_8261, Mem_T.NEXT_Geomnode[NEXT_Geomnode(geomnode_app_ptr)]);
    goto label_12_dummy;

  label_11_true:
    assume port_app_ptr != 0;
    assume value_is(__ctobpl_const_8258, port_app_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8398} true;
    assert geomport_app_ptr != 0;
    assert port_app_ptr != 0;
    Mem_T.PHEPOL_Geomport := Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(geomport_app_ptr) := Mem_T.PHEPOL_Port[PHEPOL_Port(port_app_ptr)]];
    assume value_is(__ctobpl_const_8262, geomport_app_ptr);
    assume value_is(__ctobpl_const_8263, Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8264, port_app_ptr);
    assume value_is(__ctobpl_const_8265, Mem_T.PHEPOL_Port[PHEPOL_Port(port_app_ptr)]);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8401} true;
    assert port_app_ptr != 0;
    port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)];
    assume value_is(__ctobpl_const_8266, port_app_ptr);
    assume value_is(__ctobpl_const_8267, port_app_ptr);
    assume value_is(__ctobpl_const_8268, Mem_T.NEXT_Port[NEXT_Port(port_app_ptr)]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8402} true;
    assert geomport_app_ptr != 0;
    geomport_app_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(geomport_app_ptr)];
    assume value_is(__ctobpl_const_8269, geomport_app_ptr);
    assume value_is(__ctobpl_const_8270, geomport_app_ptr);
    assume value_is(__ctobpl_const_8271, Mem_T.NEXT_Geomport[NEXT_Geomport(geomport_app_ptr)]);
    goto label_15_dummy;

  label_15_dummy:
    assume false;
    return;

  label_11_head_last:
    goto label_11_true, label_11_false;

  label_12_dummy:
    assume false;
    return;

  label_7_head_last:
    goto label_7_true, label_7_false;
}



procedure {:extern} sinelem(p1.__1: int, pp2.__1: int, elem_ptr.__1: int) returns (result.sinelem$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} sinelem(p1.__1: int, pp2.__1: int, elem_ptr.__1: int) returns (result.sinelem$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} angle_unit: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} anglee: int;
  var {:extern} anglee_ptr: int;
  var {:extern} angleh: int;
  var {:extern} angleh_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} direction: int;
  var {:extern} direction_ptr: int;
  var {:extern} elem_ptr: int;
  var {:extern} error: int;
  var {:extern} exp: int;
  var {:extern} exp_ptr: int;
  var {:extern} gain: int;
  var {:extern} gain_ptr: int;
  var {:extern} gain_unit: int;
  var {:extern} gain_unit_ptr: int;
  var {:extern} geometry: int;
  var {:extern} geometry_ptr: int;
  var {:extern} model: int;
  var {:extern} model_ptr: int;
  var {:extern} nports: int;
  var {:extern} nports_ptr: int;
  var {:extern} p1: int;
  var {:extern} p_ptr: int;
  var {:extern} pdim: int;
  var {:extern} pdim_ptr: int;
  var {:extern} phepol: int;
  var {:extern} phepol_ptr: int;
  var {:extern} phepol_unit: int;
  var {:extern} phepol_unit_ptr: int;
  var {:extern} polarization: int;
  var {:extern} polarization_ptr: int;
  var {:extern} port_ptr: int;
  var {:extern} pp2: int;
  var {:extern} pqdim_unit: int;
  var {:extern} pqdim_unit_ptr: int;
  var {:extern} $printf.arg.2$10$: int;
  var {:extern} $printf.arg.2$4$: int;
  var {:extern} $printf.arg.2$7$: int;
  var {:extern} qdim: int;
  var {:extern} qdim_ptr: int;
  var {:extern} radius: int;
  var {:extern} radius_ptr: int;
  var {:extern} radius_unit: int;
  var {:extern} radius_unit_ptr: int;
  var {:extern} result.geomspec$2: int;
  var {:extern} result.polspec$5: int;
  var {:extern} result.portspec$8: int;
  var {:extern} result.printf$3: int;
  var {:extern} result.printf$6: int;
  var {:extern} result.printf$9: int;
  var {:extern} result.strcpy$11: int;
  var {:extern} taper_unit: int;
  var {:extern} taper_unit_ptr: int;
  var {:extern} tapere: int;
  var {:extern} tapere_ptr: int;
  var {:extern} taperh: int;
  var {:extern} taperh_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(elem_ptr.__1, alloc);
    call angle_unit := __HAVOC_det_malloc(4);
    angle_unit_ptr := 0;
    call anglee := __HAVOC_det_malloc(8);
    anglee_ptr := 0;
    call angleh := __HAVOC_det_malloc(8);
    angleh_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    call direction := __HAVOC_det_malloc(4);
    direction_ptr := 0;
    elem_ptr := 0;
    error := 0;
    call exp := __HAVOC_det_malloc(8);
    exp_ptr := 0;
    call gain := __HAVOC_det_malloc(8);
    gain_ptr := 0;
    call gain_unit := __HAVOC_det_malloc(4);
    gain_unit_ptr := 0;
    call geometry := __HAVOC_det_malloc(4);
    geometry_ptr := 0;
    call model := __HAVOC_det_malloc(4);
    model_ptr := 0;
    call nports := __HAVOC_det_malloc(4);
    nports_ptr := 0;
    p1 := 0;
    call p_ptr := __HAVOC_det_malloc(4);
    call pdim := __HAVOC_det_malloc(8);
    pdim_ptr := 0;
    call phepol := __HAVOC_det_malloc(8);
    phepol_ptr := 0;
    call phepol_unit := __HAVOC_det_malloc(4);
    phepol_unit_ptr := 0;
    call polarization := __HAVOC_det_malloc(4);
    polarization_ptr := 0;
    port_ptr := 0;
    pp2 := 0;
    call pqdim_unit := __HAVOC_det_malloc(4);
    pqdim_unit_ptr := 0;
    $printf.arg.2$10$ := 0;
    $printf.arg.2$4$ := 0;
    $printf.arg.2$7$ := 0;
    call qdim := __HAVOC_det_malloc(8);
    qdim_ptr := 0;
    call radius := __HAVOC_det_malloc(8);
    radius_ptr := 0;
    call radius_unit := __HAVOC_det_malloc(4);
    radius_unit_ptr := 0;
    result.geomspec$2 := 0;
    result.polspec$5 := 0;
    result.portspec$8 := 0;
    result.printf$3 := 0;
    result.printf$6 := 0;
    result.printf$9 := 0;
    result.sinelem$1 := 0;
    result.strcpy$11 := 0;
    call taper_unit := __HAVOC_det_malloc(4);
    taper_unit_ptr := 0;
    call tapere := __HAVOC_det_malloc(8);
    tapere_ptr := 0;
    call taperh := __HAVOC_det_malloc(8);
    taperh_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    elem_ptr := elem_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8423} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8423} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8423} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_8272, curr_ptr);
    assume value_is(__ctobpl_const_8273, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8424} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8429} true;
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8429} true;
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8429} true;
    geometry_ptr := geometry;
    assume value_is(__ctobpl_const_8274, geometry_ptr);
    assume value_is(__ctobpl_const_8275, Mem_T.INT4[geometry]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8430} true;
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8430} true;
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8430} true;
    radius_ptr := radius;
    assume value_is(__ctobpl_const_8276, radius_ptr);
    assume value_is(__ctobpl_const_8277, Mem_T.FLOAT[radius]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8431} true;
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8431} true;
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8431} true;
    radius_unit_ptr := radius_unit;
    assume value_is(__ctobpl_const_8278, radius_unit_ptr);
    assume value_is(__ctobpl_const_8279, Mem_T.INT4[radius_unit]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8432} true;
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8432} true;
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8432} true;
    pdim_ptr := pdim;
    assume value_is(__ctobpl_const_8280, pdim_ptr);
    assume value_is(__ctobpl_const_8281, Mem_T.FLOAT[pdim]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8433} true;
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8433} true;
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8433} true;
    qdim_ptr := qdim;
    assume value_is(__ctobpl_const_8282, qdim_ptr);
    assume value_is(__ctobpl_const_8283, Mem_T.FLOAT[qdim]);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8434} true;
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8434} true;
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8434} true;
    pqdim_unit_ptr := pqdim_unit;
    assume value_is(__ctobpl_const_8284, pqdim_unit_ptr);
    assume value_is(__ctobpl_const_8285, Mem_T.INT4[pqdim_unit]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8435} true;
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8435} true;
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8435} true;
    model_ptr := model;
    assume value_is(__ctobpl_const_8286, model_ptr);
    assume value_is(__ctobpl_const_8287, Mem_T.INT4[model]);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8436} true;
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8436} true;
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8436} true;
    exp_ptr := exp;
    assume value_is(__ctobpl_const_8288, exp_ptr);
    assume value_is(__ctobpl_const_8289, Mem_T.FLOAT[exp]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8437} true;
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8437} true;
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8437} true;
    anglee_ptr := anglee;
    assume value_is(__ctobpl_const_8290, anglee_ptr);
    assume value_is(__ctobpl_const_8291, Mem_T.FLOAT[anglee]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8438} true;
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8438} true;
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8438} true;
    angleh_ptr := angleh;
    assume value_is(__ctobpl_const_8292, angleh_ptr);
    assume value_is(__ctobpl_const_8293, Mem_T.FLOAT[angleh]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8439} true;
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8439} true;
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8439} true;
    angle_unit_ptr := angle_unit;
    assume value_is(__ctobpl_const_8294, angle_unit_ptr);
    assume value_is(__ctobpl_const_8295, Mem_T.INT4[angle_unit]);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8440} true;
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8440} true;
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8440} true;
    tapere_ptr := tapere;
    assume value_is(__ctobpl_const_8296, tapere_ptr);
    assume value_is(__ctobpl_const_8297, Mem_T.FLOAT[tapere]);
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8441} true;
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8441} true;
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8441} true;
    taperh_ptr := taperh;
    assume value_is(__ctobpl_const_8298, taperh_ptr);
    assume value_is(__ctobpl_const_8299, Mem_T.FLOAT[taperh]);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8442} true;
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8442} true;
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8442} true;
    taper_unit_ptr := taper_unit;
    assume value_is(__ctobpl_const_8300, taper_unit_ptr);
    assume value_is(__ctobpl_const_8301, Mem_T.INT4[taper_unit]);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8443} true;
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8443} true;
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8443} true;
    polarization_ptr := polarization;
    assume value_is(__ctobpl_const_8302, polarization_ptr);
    assume value_is(__ctobpl_const_8303, Mem_T.INT4[polarization]);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8444} true;
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8444} true;
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8444} true;
    phepol_ptr := phepol;
    assume value_is(__ctobpl_const_8304, phepol_ptr);
    assume value_is(__ctobpl_const_8305, Mem_T.FLOAT[phepol]);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8445} true;
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8445} true;
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8445} true;
    phepol_unit_ptr := phepol_unit;
    assume value_is(__ctobpl_const_8306, phepol_unit_ptr);
    assume value_is(__ctobpl_const_8307, Mem_T.INT4[phepol_unit]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8446} true;
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8446} true;
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8446} true;
    direction_ptr := direction;
    assume value_is(__ctobpl_const_8308, direction_ptr);
    assume value_is(__ctobpl_const_8309, Mem_T.INT4[direction]);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8447} true;
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8447} true;
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8447} true;
    gain_ptr := gain;
    assume value_is(__ctobpl_const_8310, gain_ptr);
    assume value_is(__ctobpl_const_8311, Mem_T.FLOAT[gain]);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8448} true;
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8448} true;
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8448} true;
    gain_unit_ptr := gain_unit;
    assume value_is(__ctobpl_const_8312, gain_unit_ptr);
    assume value_is(__ctobpl_const_8313, Mem_T.INT4[gain_unit]);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8449} true;
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8449} true;
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8449} true;
    nports_ptr := nports;
    assume value_is(__ctobpl_const_8314, nports_ptr);
    assume value_is(__ctobpl_const_8315, Mem_T.INT4[nports]);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8450} true;
    goto label_71;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8450} true;
    goto label_72;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8450} true;
    port_ptr := p_ptr;
    assume value_is(__ctobpl_const_8316, port_ptr);
    assume value_is(__ctobpl_const_8317, Mem_T.PPort[p_ptr]);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8457} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_8318, curr_ptr);
    assume value_is(__ctobpl_const_8319, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8320, p1);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8458} true;
    error := 0;
    assume value_is(__ctobpl_const_8321, error);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8462} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.geomspec$2 := geomspec(Mem_T.Pcharac[curr_ptr], curr_ptr, geometry_ptr, radius_ptr, radius_unit_ptr, pdim_ptr, qdim_ptr, pqdim_unit_ptr);
    assume value_is(__ctobpl_const_8322, curr_ptr);
    assume value_is(__ctobpl_const_8323, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8324, curr_ptr);
    assume value_is(__ctobpl_const_8325, geometry_ptr);
    assume value_is(__ctobpl_const_8326, radius_ptr);
    assume value_is(__ctobpl_const_8327, radius_unit_ptr);
    assume value_is(__ctobpl_const_8328, pdim_ptr);
    assume value_is(__ctobpl_const_8329, qdim_ptr);
    assume value_is(__ctobpl_const_8330, pqdim_unit_ptr);
    assume value_is(__ctobpl_const_8331, curr_ptr);
    assume value_is(__ctobpl_const_8332, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8333, curr_ptr);
    assume value_is(__ctobpl_const_8334, geometry_ptr);
    assume value_is(__ctobpl_const_8335, radius_ptr);
    assume value_is(__ctobpl_const_8336, radius_unit_ptr);
    assume value_is(__ctobpl_const_8337, pdim_ptr);
    assume value_is(__ctobpl_const_8338, qdim_ptr);
    assume value_is(__ctobpl_const_8339, pqdim_unit_ptr);
    goto label_78;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8462} true;
    error := result.geomspec$2;
    assume value_is(__ctobpl_const_8340, error);
    assume value_is(__ctobpl_const_8341, result.geomspec$2);
    goto label_79;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8465} true;
    goto label_79_true, label_79_false;

  label_79_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8342, error);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8469} true;
    goto label_80_true, label_80_false;

  label_80_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_8343, error);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8477} true;
    assert model_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[model_ptr := 0];
    assume value_is(__ctobpl_const_8344, model_ptr);
    assume value_is(__ctobpl_const_8345, Mem_T.INT4[model_ptr]);
    goto label_88;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8484} true;
    goto label_88_true, label_88_false;

  label_88_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8346, error);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8485} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.polspec$5 := polspec(Mem_T.Pcharac[curr_ptr], curr_ptr, polarization_ptr, phepol_ptr, phepol_unit_ptr, direction_ptr);
    assume value_is(__ctobpl_const_8347, curr_ptr);
    assume value_is(__ctobpl_const_8348, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8349, curr_ptr);
    assume value_is(__ctobpl_const_8350, polarization_ptr);
    assume value_is(__ctobpl_const_8351, phepol_ptr);
    assume value_is(__ctobpl_const_8352, phepol_unit_ptr);
    assume value_is(__ctobpl_const_8353, direction_ptr);
    assume value_is(__ctobpl_const_8354, curr_ptr);
    assume value_is(__ctobpl_const_8355, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8356, curr_ptr);
    assume value_is(__ctobpl_const_8357, polarization_ptr);
    assume value_is(__ctobpl_const_8358, phepol_ptr);
    assume value_is(__ctobpl_const_8359, phepol_unit_ptr);
    assume value_is(__ctobpl_const_8360, direction_ptr);
    goto label_149;

  label_149:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8485} true;
    error := result.polspec$5;
    assume value_is(__ctobpl_const_8361, error);
    assume value_is(__ctobpl_const_8362, result.polspec$5);
    goto label_92;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8489} true;
    goto label_92_true, label_92_false;

  label_92_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_8363, error);
    goto label_93;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8495} true;
    goto label_93_true, label_93_false;

  label_93_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8364, error);
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8505} true;
    assert gain_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[gain_ptr := 0];
    assume value_is(__ctobpl_const_8374, gain_ptr);
    assume value_is(__ctobpl_const_8375, Mem_T.FLOAT[gain_ptr]);
    goto label_105;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8506} true;
    assert gain_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[gain_unit_ptr := 0];
    assume value_is(__ctobpl_const_8376, gain_unit_ptr);
    assume value_is(__ctobpl_const_8377, Mem_T.INT4[gain_unit_ptr]);
    goto label_106;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8511} true;
    goto label_106_true, label_106_false;

  label_106_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8378, error);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8512} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.portspec$8 := portspec(Mem_T.Pcharac[curr_ptr], curr_ptr, nports_ptr, port_ptr);
    assume value_is(__ctobpl_const_8379, curr_ptr);
    assume value_is(__ctobpl_const_8380, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8381, curr_ptr);
    assume value_is(__ctobpl_const_8382, nports_ptr);
    assume value_is(__ctobpl_const_8383, port_ptr);
    assume value_is(__ctobpl_const_8384, curr_ptr);
    assume value_is(__ctobpl_const_8385, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8386, curr_ptr);
    assume value_is(__ctobpl_const_8387, nports_ptr);
    assume value_is(__ctobpl_const_8388, port_ptr);
    goto label_148;

  label_148:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8512} true;
    error := result.portspec$8;
    assume value_is(__ctobpl_const_8389, error);
    assume value_is(__ctobpl_const_8390, result.portspec$8);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8515} true;
    goto label_110_true, label_110_false;

  label_110_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_8391, error);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8520} true;
    goto label_111_true, label_111_false;

  label_111_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8392, error);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8529} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.TYPE_Elem := Mem_T.TYPE_Elem[TYPE_Elem(Mem_T.PElem[elem_ptr]) := 0];
    assume value_is(__ctobpl_const_8398, elem_ptr);
    assume value_is(__ctobpl_const_8399, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8400, Mem_T.TYPE_Elem[TYPE_Elem(Mem_T.PElem[elem_ptr])]);
    goto label_121;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8530} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    assume Mem_T.NAME_Elem[NAME_Elem(Mem_T.PElem[elem_ptr])] == Mem_T.A31CHAR[NAME_Elem(Mem_T.PElem[elem_ptr])];
    call result.strcpy$11 := strcpy(NAME_Elem(Mem_T.PElem[elem_ptr]), havoc_stringTemp);
    Mem_T.NAME_Elem := Mem_T.NAME_Elem[NAME_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.A31CHAR[NAME_Elem(Mem_T.PElem[elem_ptr])]];
    assume value_is(__ctobpl_const_8401, elem_ptr);
    assume value_is(__ctobpl_const_8402, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8403, elem_ptr);
    assume value_is(__ctobpl_const_8404, Mem_T.PElem[elem_ptr]);
    goto label_124;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8532} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.GEOMETRY_Elem := Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[geometry]];
    assume value_is(__ctobpl_const_8405, elem_ptr);
    assume value_is(__ctobpl_const_8406, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8407, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8408, Mem_T.INT4[geometry]);
    goto label_125;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8533} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.RADIUS_Elem := Mem_T.RADIUS_Elem[RADIUS_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[radius]];
    assume value_is(__ctobpl_const_8409, elem_ptr);
    assume value_is(__ctobpl_const_8410, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8411, Mem_T.RADIUS_Elem[RADIUS_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8412, Mem_T.FLOAT[radius]);
    goto label_126;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8534} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.RADIUS_UNIT_Elem := Mem_T.RADIUS_UNIT_Elem[RADIUS_UNIT_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[radius_unit]];
    assume value_is(__ctobpl_const_8413, elem_ptr);
    assume value_is(__ctobpl_const_8414, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8415, Mem_T.RADIUS_UNIT_Elem[RADIUS_UNIT_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8416, Mem_T.INT4[radius_unit]);
    goto label_127;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8535} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.PDIM_Elem := Mem_T.PDIM_Elem[PDIM_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[pdim]];
    assume value_is(__ctobpl_const_8417, elem_ptr);
    assume value_is(__ctobpl_const_8418, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8419, Mem_T.PDIM_Elem[PDIM_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8420, Mem_T.FLOAT[pdim]);
    goto label_128;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8536} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.QDIM_Elem := Mem_T.QDIM_Elem[QDIM_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[qdim]];
    assume value_is(__ctobpl_const_8421, elem_ptr);
    assume value_is(__ctobpl_const_8422, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8423, Mem_T.QDIM_Elem[QDIM_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8424, Mem_T.FLOAT[qdim]);
    goto label_129;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8537} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.PQDIM_UNIT_Elem := Mem_T.PQDIM_UNIT_Elem[PQDIM_UNIT_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[pqdim_unit]];
    assume value_is(__ctobpl_const_8425, elem_ptr);
    assume value_is(__ctobpl_const_8426, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8427, Mem_T.PQDIM_UNIT_Elem[PQDIM_UNIT_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8428, Mem_T.INT4[pqdim_unit]);
    goto label_130;

  label_130:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8538} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.MODEL_Elem := Mem_T.MODEL_Elem[MODEL_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[model]];
    assume value_is(__ctobpl_const_8429, elem_ptr);
    assume value_is(__ctobpl_const_8430, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8431, Mem_T.MODEL_Elem[MODEL_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8432, Mem_T.INT4[model]);
    goto label_131;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8539} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.EXP_Elem := Mem_T.EXP_Elem[EXP_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[exp]];
    assume value_is(__ctobpl_const_8433, elem_ptr);
    assume value_is(__ctobpl_const_8434, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8435, Mem_T.EXP_Elem[EXP_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8436, Mem_T.FLOAT[exp]);
    goto label_132;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8540} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.ANGLEE_Elem := Mem_T.ANGLEE_Elem[ANGLEE_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[anglee]];
    assume value_is(__ctobpl_const_8437, elem_ptr);
    assume value_is(__ctobpl_const_8438, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8439, Mem_T.ANGLEE_Elem[ANGLEE_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8440, Mem_T.FLOAT[anglee]);
    goto label_133;

  label_133:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8541} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.ANGLEH_Elem := Mem_T.ANGLEH_Elem[ANGLEH_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[angleh]];
    assume value_is(__ctobpl_const_8441, elem_ptr);
    assume value_is(__ctobpl_const_8442, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8443, Mem_T.ANGLEH_Elem[ANGLEH_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8444, Mem_T.FLOAT[angleh]);
    goto label_134;

  label_134:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8542} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.ANGLE_UNIT_Elem := Mem_T.ANGLE_UNIT_Elem[ANGLE_UNIT_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[angle_unit]];
    assume value_is(__ctobpl_const_8445, elem_ptr);
    assume value_is(__ctobpl_const_8446, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8447, Mem_T.ANGLE_UNIT_Elem[ANGLE_UNIT_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8448, Mem_T.INT4[angle_unit]);
    goto label_135;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8543} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.TAPERE_Elem := Mem_T.TAPERE_Elem[TAPERE_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[tapere]];
    assume value_is(__ctobpl_const_8449, elem_ptr);
    assume value_is(__ctobpl_const_8450, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8451, Mem_T.TAPERE_Elem[TAPERE_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8452, Mem_T.FLOAT[tapere]);
    goto label_136;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8544} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.TAPERH_Elem := Mem_T.TAPERH_Elem[TAPERH_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[taperh]];
    assume value_is(__ctobpl_const_8453, elem_ptr);
    assume value_is(__ctobpl_const_8454, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8455, Mem_T.TAPERH_Elem[TAPERH_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8456, Mem_T.FLOAT[taperh]);
    goto label_137;

  label_137:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8545} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.TAPER_UNIT_Elem := Mem_T.TAPER_UNIT_Elem[TAPER_UNIT_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[taper_unit]];
    assume value_is(__ctobpl_const_8457, elem_ptr);
    assume value_is(__ctobpl_const_8458, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8459, Mem_T.TAPER_UNIT_Elem[TAPER_UNIT_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8460, Mem_T.INT4[taper_unit]);
    goto label_138;

  label_138:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8546} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.POLARIZATION_Elem := Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[polarization]];
    assume value_is(__ctobpl_const_8461, elem_ptr);
    assume value_is(__ctobpl_const_8462, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8463, Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8464, Mem_T.INT4[polarization]);
    goto label_139;

  label_139:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8547} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.PHEPOL_Elem := Mem_T.PHEPOL_Elem[PHEPOL_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[phepol]];
    assume value_is(__ctobpl_const_8465, elem_ptr);
    assume value_is(__ctobpl_const_8466, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8467, Mem_T.PHEPOL_Elem[PHEPOL_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8468, Mem_T.FLOAT[phepol]);
    goto label_140;

  label_140:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8548} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.PHEPOL_UNIT_Elem := Mem_T.PHEPOL_UNIT_Elem[PHEPOL_UNIT_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[phepol_unit]];
    assume value_is(__ctobpl_const_8469, elem_ptr);
    assume value_is(__ctobpl_const_8470, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8471, Mem_T.PHEPOL_UNIT_Elem[PHEPOL_UNIT_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8472, Mem_T.INT4[phepol_unit]);
    goto label_141;

  label_141:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8549} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.DIRECTION_Elem := Mem_T.DIRECTION_Elem[DIRECTION_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[direction]];
    assume value_is(__ctobpl_const_8473, elem_ptr);
    assume value_is(__ctobpl_const_8474, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8475, Mem_T.DIRECTION_Elem[DIRECTION_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8476, Mem_T.INT4[direction]);
    goto label_142;

  label_142:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8550} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.GAIN_Elem := Mem_T.GAIN_Elem[GAIN_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.FLOAT[gain]];
    assume value_is(__ctobpl_const_8477, elem_ptr);
    assume value_is(__ctobpl_const_8478, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8479, Mem_T.GAIN_Elem[GAIN_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8480, Mem_T.FLOAT[gain]);
    goto label_143;

  label_143:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8551} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.GAIN_UNIT_Elem := Mem_T.GAIN_UNIT_Elem[GAIN_UNIT_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[gain_unit]];
    assume value_is(__ctobpl_const_8481, elem_ptr);
    assume value_is(__ctobpl_const_8482, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8483, Mem_T.GAIN_UNIT_Elem[GAIN_UNIT_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8484, Mem_T.INT4[gain_unit]);
    goto label_144;

  label_144:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8552} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    Mem_T.NPORTS_Elem := Mem_T.NPORTS_Elem[NPORTS_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.INT4[nports]];
    assume value_is(__ctobpl_const_8485, elem_ptr);
    assume value_is(__ctobpl_const_8486, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8487, Mem_T.NPORTS_Elem[NPORTS_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8488, Mem_T.INT4[nports]);
    goto label_145;

  label_145:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8553} true;
    assert elem_ptr != 0;
    assert Mem_T.PElem[elem_ptr] != 0;
    assert port_ptr != 0;
    Mem_T.PORT_PTR_Elem := Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.PElem[elem_ptr]) := Mem_T.PPort[port_ptr]];
    assume value_is(__ctobpl_const_8489, elem_ptr);
    assume value_is(__ctobpl_const_8490, Mem_T.PElem[elem_ptr]);
    assume value_is(__ctobpl_const_8491, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.PElem[elem_ptr])]);
    assume value_is(__ctobpl_const_8492, port_ptr);
    assume value_is(__ctobpl_const_8493, Mem_T.PPort[port_ptr]);
    goto label_146;

  label_146:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8557} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8494, pp2);
    assume value_is(__ctobpl_const_8495, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8496, curr_ptr);
    assume value_is(__ctobpl_const_8497, Mem_T.Pcharac[curr_ptr]);
    goto label_147;

  label_147:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8558} true;
    result.sinelem$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8559} true;
    call __HAVOC_free(angle_unit);
    call __HAVOC_free(anglee);
    call __HAVOC_free(angleh);
    call __HAVOC_free(curr);
    call __HAVOC_free(direction);
    call __HAVOC_free(exp);
    call __HAVOC_free(gain);
    call __HAVOC_free(gain_unit);
    call __HAVOC_free(geometry);
    call __HAVOC_free(model);
    call __HAVOC_free(nports);
    call __HAVOC_free(p_ptr);
    call __HAVOC_free(pdim);
    call __HAVOC_free(phepol);
    call __HAVOC_free(phepol_unit);
    call __HAVOC_free(polarization);
    call __HAVOC_free(pqdim_unit);
    call __HAVOC_free(qdim);
    call __HAVOC_free(radius);
    call __HAVOC_free(radius_unit);
    call __HAVOC_free(taper_unit);
    call __HAVOC_free(tapere);
    call __HAVOC_free(taperh);
    return;

  label_111_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8392, error);
    goto label_118;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8521} true;
    assert nports_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[nports_ptr := 0];
    assume value_is(__ctobpl_const_8393, nports_ptr);
    assume value_is(__ctobpl_const_8394, Mem_T.INT4[nports_ptr]);
    goto label_119;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8522} true;
    assert port_ptr != 0;
    Mem_T.PPort := Mem_T.PPort[port_ptr := 0];
    assume value_is(__ctobpl_const_8395, port_ptr);
    assume value_is(__ctobpl_const_8396, Mem_T.PPort[port_ptr]);
    goto label_120;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8523} true;
    error := 0;
    assume value_is(__ctobpl_const_8397, error);
    goto label_117;

  label_110_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_8391, error);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8516} true;
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8516} true;
    call result.printf$9 := det_choice();
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8517} true;
    result.sinelem$1 := 17;
    goto label_1;

  label_106_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8378, error);
    goto label_110;

  label_93_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8364, error);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8496} true;
    assert polarization_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[polarization_ptr := 0];
    assume value_is(__ctobpl_const_8365, polarization_ptr);
    assume value_is(__ctobpl_const_8366, Mem_T.INT4[polarization_ptr]);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8497} true;
    assert phepol_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[phepol_ptr := 90];
    assume value_is(__ctobpl_const_8367, phepol_ptr);
    assume value_is(__ctobpl_const_8368, Mem_T.FLOAT[phepol_ptr]);
    goto label_102;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8498} true;
    assert phepol_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[phepol_unit_ptr := 0];
    assume value_is(__ctobpl_const_8369, phepol_unit_ptr);
    assume value_is(__ctobpl_const_8370, Mem_T.INT4[phepol_unit_ptr]);
    goto label_103;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8499} true;
    assert direction_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[direction_ptr := 0];
    assume value_is(__ctobpl_const_8371, direction_ptr);
    assume value_is(__ctobpl_const_8372, Mem_T.INT4[direction_ptr]);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8500} true;
    error := 0;
    assume value_is(__ctobpl_const_8373, error);
    goto label_99;

  label_92_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_8363, error);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8490} true;
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8490} true;
    call result.printf$6 := det_choice();
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8491} true;
    result.sinelem$1 := 17;
    goto label_1;

  label_88_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8346, error);
    goto label_92;

  label_80_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_8343, error);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8470} true;
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8470} true;
    call result.printf$3 := det_choice();
    goto label_87;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8471} true;
    result.sinelem$1 := 17;
    goto label_1;

  label_79_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8342, error);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8466} true;
    result.sinelem$1 := 1;
    goto label_1;
}



procedure {:extern} sinstep(p1.__1: int, pp2.__1: int, step_ptr.__1: int, step_unit_ptr.__1: int) returns (result.sinstep$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} sinstep(p1.__1: int, pp2.__1: int, step_ptr.__1: int, step_unit_ptr.__1: int) returns (result.sinstep$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetUReal$4: int;
  var {:extern} result.lenunit$5: int;
  var {:extern} step_ptr: int;
  var {:extern} step_unit_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(step_ptr.__1, alloc);
    assume INT_LT(step_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.GetUReal$4 := 0;
    result.lenunit$5 := 0;
    result.sinstep$1 := 0;
    step_ptr := 0;
    step_unit_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    step_ptr := step_ptr.__1;
    step_unit_ptr := step_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8572} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8572} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8572} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_8498, curr_ptr);
    assume value_is(__ctobpl_const_8499, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8573} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8576} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_8500, curr_ptr);
    assume value_is(__ctobpl_const_8501, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8502, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8579} true;
    error := 0;
    assume value_is(__ctobpl_const_8503, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8580} true;
    assert step_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[step_ptr := 0];
    assume value_is(__ctobpl_const_8504, step_ptr);
    assume value_is(__ctobpl_const_8505, Mem_T.FLOAT[step_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8581} true;
    assert step_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[step_unit_ptr := 0];
    assume value_is(__ctobpl_const_8506, step_unit_ptr);
    assume value_is(__ctobpl_const_8507, Mem_T.INT4[step_unit_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8584} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 16);
    assume value_is(__ctobpl_const_8508, $GetKeyword.arg.1$3$);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8584} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_8509, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8510, curr_ptr);
    assume value_is(__ctobpl_const_8511, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8512, curr_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8584} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_8513, error);
    assume value_is(__ctobpl_const_8514, result.GetKeyword$2);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8585} true;
    goto label_16_true, label_16_false;

  label_16_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8515, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8590} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.GetUReal$4 := GetUReal(Mem_T.Pcharac[curr_ptr], curr_ptr, step_ptr);
    assume value_is(__ctobpl_const_8516, curr_ptr);
    assume value_is(__ctobpl_const_8517, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8518, curr_ptr);
    assume value_is(__ctobpl_const_8519, step_ptr);
    assume value_is(__ctobpl_const_8520, curr_ptr);
    assume value_is(__ctobpl_const_8521, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8522, curr_ptr);
    assume value_is(__ctobpl_const_8523, step_ptr);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8590} true;
    error := result.GetUReal$4;
    assume value_is(__ctobpl_const_8524, error);
    assume value_is(__ctobpl_const_8525, result.GetUReal$4);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8591} true;
    goto label_22_true, label_22_false;

  label_22_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8526, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8598} true;
    call result.lenunit$5 := lenunit(curr_ptr, step_unit_ptr);
    assume value_is(__ctobpl_const_8527, curr_ptr);
    assume value_is(__ctobpl_const_8528, step_unit_ptr);
    assume value_is(__ctobpl_const_8529, curr_ptr);
    assume value_is(__ctobpl_const_8530, step_unit_ptr);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8598} true;
    error := result.lenunit$5;
    assume value_is(__ctobpl_const_8531, error);
    assume value_is(__ctobpl_const_8532, result.lenunit$5);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8599} true;
    goto label_29_true, label_29_false;

  label_29_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8533, error);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8603} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8536, pp2);
    assume value_is(__ctobpl_const_8537, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8538, curr_ptr);
    assume value_is(__ctobpl_const_8539, Mem_T.Pcharac[curr_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8604} true;
    result.sinstep$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8605} true;
    call __HAVOC_free(curr);
    return;

  label_29_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8533, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8600} true;
    assert step_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[step_unit_ptr := 0];
    assume value_is(__ctobpl_const_8534, step_unit_ptr);
    assume value_is(__ctobpl_const_8535, Mem_T.INT4[step_unit_ptr]);
    goto label_30;

  label_22_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8526, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8592} true;
    assert step_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[step_ptr := 0];
    assume value_is(__ctobpl_const_8540, step_ptr);
    assume value_is(__ctobpl_const_8541, Mem_T.FLOAT[step_ptr]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8593} true;
    result.sinstep$1 := error;
    assume value_is(__ctobpl_const_8542, error);
    goto label_1;

  label_16_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8515, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8586} true;
    result.sinstep$1 := 1;
    goto label_1;
}



procedure {:extern} squgrdef(p1.__1: int, pp2.__1: int, pstep_ptr.__1: int, pstep_unit_ptr.__1: int) returns (result.squgrdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} squgrdef(p1.__1: int, pp2.__1: int, pstep_ptr.__1: int, pstep_unit_ptr.__1: int) returns (result.squgrdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} pstep_ptr: int;
  var {:extern} pstep_unit_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.sinstep$4: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(pstep_ptr.__1, alloc);
    assume INT_LT(pstep_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    pstep_ptr := 0;
    pstep_unit_ptr := 0;
    result.GetKeyword$2 := 0;
    result.sinstep$4 := 0;
    result.squgrdef$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    pstep_ptr := pstep_ptr.__1;
    pstep_unit_ptr := pstep_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8614} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8614} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8614} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_8543, curr_ptr);
    assume value_is(__ctobpl_const_8544, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8615} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8618} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_8545, curr_ptr);
    assume value_is(__ctobpl_const_8546, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8547, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8621} true;
    error := 0;
    assume value_is(__ctobpl_const_8548, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8622} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_8549, pstep_ptr);
    assume value_is(__ctobpl_const_8550, Mem_T.FLOAT[pstep_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8623} true;
    assert pstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_8551, pstep_unit_ptr);
    assume value_is(__ctobpl_const_8552, Mem_T.INT4[pstep_unit_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8626} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 17);
    assume value_is(__ctobpl_const_8553, $GetKeyword.arg.1$3$);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8626} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_8554, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8555, curr_ptr);
    assume value_is(__ctobpl_const_8556, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8557, curr_ptr);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8626} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_8558, error);
    assume value_is(__ctobpl_const_8559, result.GetKeyword$2);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8627} true;
    goto label_16_true, label_16_false;

  label_16_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8560, error);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8632} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.sinstep$4 := sinstep(Mem_T.Pcharac[curr_ptr], curr_ptr, pstep_ptr, pstep_unit_ptr);
    assume value_is(__ctobpl_const_8561, curr_ptr);
    assume value_is(__ctobpl_const_8562, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8563, curr_ptr);
    assume value_is(__ctobpl_const_8564, pstep_ptr);
    assume value_is(__ctobpl_const_8565, pstep_unit_ptr);
    assume value_is(__ctobpl_const_8566, curr_ptr);
    assume value_is(__ctobpl_const_8567, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8568, curr_ptr);
    assume value_is(__ctobpl_const_8569, pstep_ptr);
    assume value_is(__ctobpl_const_8570, pstep_unit_ptr);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8632} true;
    error := result.sinstep$4;
    assume value_is(__ctobpl_const_8571, error);
    assume value_is(__ctobpl_const_8572, result.sinstep$4);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8633} true;
    goto label_22_true, label_22_false;

  label_22_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8573, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8642} true;
    goto label_23_true, label_23_false;

  label_23_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8574, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8653} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8575, pp2);
    assume value_is(__ctobpl_const_8576, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8577, curr_ptr);
    assume value_is(__ctobpl_const_8578, Mem_T.Pcharac[curr_ptr]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8654} true;
    result.squgrdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8655} true;
    call __HAVOC_free(curr);
    return;

  label_23_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8574, error);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8643} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_8579, curr_ptr);
    assume value_is(__ctobpl_const_8580, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8581, error);
    assume value_is(__ctobpl_const_8582, curr_ptr);
    assume value_is(__ctobpl_const_8583, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8584, error);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8645} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_8585, pstep_ptr);
    assume value_is(__ctobpl_const_8586, Mem_T.FLOAT[pstep_ptr]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8646} true;
    assert pstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_8587, pstep_unit_ptr);
    assume value_is(__ctobpl_const_8588, Mem_T.INT4[pstep_unit_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8647} true;
    result.squgrdef$1 := 17;
    goto label_1;

  label_22_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8573, error);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8634} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_8589, pstep_ptr);
    assume value_is(__ctobpl_const_8590, Mem_T.FLOAT[pstep_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8635} true;
    assert pstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_8591, pstep_unit_ptr);
    assume value_is(__ctobpl_const_8592, Mem_T.INT4[pstep_unit_ptr]);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8637} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8593, pp2);
    assume value_is(__ctobpl_const_8594, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8595, curr_ptr);
    assume value_is(__ctobpl_const_8596, Mem_T.Pcharac[curr_ptr]);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8638} true;
    result.squgrdef$1 := 0;
    goto label_1;

  label_16_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8560, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8628} true;
    result.squgrdef$1 := 1;
    goto label_1;
}



procedure {:extern} trigrdef(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int, pstep_ptr.__1: int, qstep_ptr.__1: int, pqstep_unit_ptr.__1: int, px_ptr.__1: int, py_ptr.__1: int, qx_ptr.__1: int, qy_ptr.__1: int, pqxy_unit_ptr.__1: int) returns (result.trigrdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} trigrdef(p1.__1: int, pp2.__1: int, angle_ptr.__1: int, angle_unit_ptr.__1: int, pstep_ptr.__1: int, qstep_ptr.__1: int, pqstep_unit_ptr.__1: int, px_ptr.__1: int, py_ptr.__1: int, qx_ptr.__1: int, qy_ptr.__1: int, pqxy_unit_ptr.__1: int) returns (result.trigrdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} angle_ptr: int;
  var {:extern} angle_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} pqstep_unit_ptr: int;
  var {:extern} pqxy_unit_ptr: int;
  var {:extern} pstep_ptr: int;
  var {:extern} px_ptr: int;
  var {:extern} py_ptr: int;
  var {:extern} qstep_ptr: int;
  var {:extern} qx_ptr: int;
  var {:extern} qy_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.angstep$4: int;
  var {:extern} result.versdef$5: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(angle_ptr.__1, alloc);
    assume INT_LT(angle_unit_ptr.__1, alloc);
    assume INT_LT(pstep_ptr.__1, alloc);
    assume INT_LT(qstep_ptr.__1, alloc);
    assume INT_LT(pqstep_unit_ptr.__1, alloc);
    assume INT_LT(px_ptr.__1, alloc);
    assume INT_LT(py_ptr.__1, alloc);
    assume INT_LT(qx_ptr.__1, alloc);
    assume INT_LT(qy_ptr.__1, alloc);
    assume INT_LT(pqxy_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    angle_ptr := 0;
    angle_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    pqstep_unit_ptr := 0;
    pqxy_unit_ptr := 0;
    pstep_ptr := 0;
    px_ptr := 0;
    py_ptr := 0;
    qstep_ptr := 0;
    qx_ptr := 0;
    qy_ptr := 0;
    result.GetKeyword$2 := 0;
    result.angstep$4 := 0;
    result.trigrdef$1 := 0;
    result.versdef$5 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    angle_ptr := angle_ptr.__1;
    angle_unit_ptr := angle_unit_ptr.__1;
    pstep_ptr := pstep_ptr.__1;
    qstep_ptr := qstep_ptr.__1;
    pqstep_unit_ptr := pqstep_unit_ptr.__1;
    px_ptr := px_ptr.__1;
    py_ptr := py_ptr.__1;
    qx_ptr := qx_ptr.__1;
    qy_ptr := qy_ptr.__1;
    pqxy_unit_ptr := pqxy_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8685} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8685} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8685} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_8597, curr_ptr);
    assume value_is(__ctobpl_const_8598, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8686} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8689} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_8599, curr_ptr);
    assume value_is(__ctobpl_const_8600, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8601, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8692} true;
    error := 0;
    assume value_is(__ctobpl_const_8602, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8693} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_8603, angle_ptr);
    assume value_is(__ctobpl_const_8604, Mem_T.FLOAT[angle_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8694} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_8605, angle_unit_ptr);
    assume value_is(__ctobpl_const_8606, Mem_T.INT4[angle_unit_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8695} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_8607, pstep_ptr);
    assume value_is(__ctobpl_const_8608, Mem_T.FLOAT[pstep_ptr]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8696} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_8609, qstep_ptr);
    assume value_is(__ctobpl_const_8610, Mem_T.FLOAT[qstep_ptr]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8697} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_8611, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_8612, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8698} true;
    assert px_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[px_ptr := 0];
    assume value_is(__ctobpl_const_8613, px_ptr);
    assume value_is(__ctobpl_const_8614, Mem_T.FLOAT[px_ptr]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8699} true;
    assert py_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[py_ptr := 0];
    assume value_is(__ctobpl_const_8615, py_ptr);
    assume value_is(__ctobpl_const_8616, Mem_T.FLOAT[py_ptr]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8700} true;
    assert qx_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qx_ptr := 0];
    assume value_is(__ctobpl_const_8617, qx_ptr);
    assume value_is(__ctobpl_const_8618, Mem_T.FLOAT[qx_ptr]);
    goto label_17;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8701} true;
    assert qy_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qy_ptr := 0];
    assume value_is(__ctobpl_const_8619, qy_ptr);
    assume value_is(__ctobpl_const_8620, Mem_T.FLOAT[qy_ptr]);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8702} true;
    assert pqxy_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqxy_unit_ptr := 0];
    assume value_is(__ctobpl_const_8621, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8622, Mem_T.INT4[pqxy_unit_ptr]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8705} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 21);
    assume value_is(__ctobpl_const_8623, $GetKeyword.arg.1$3$);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8705} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_8624, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8625, curr_ptr);
    assume value_is(__ctobpl_const_8626, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8627, curr_ptr);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8705} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_8628, error);
    assume value_is(__ctobpl_const_8629, result.GetKeyword$2);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8706} true;
    goto label_24_true, label_24_false;

  label_24_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8630, error);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8711} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angstep$4 := angstep(Mem_T.Pcharac[curr_ptr], curr_ptr, angle_ptr, angle_unit_ptr, pstep_ptr, qstep_ptr, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_8631, curr_ptr);
    assume value_is(__ctobpl_const_8632, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8633, curr_ptr);
    assume value_is(__ctobpl_const_8634, angle_ptr);
    assume value_is(__ctobpl_const_8635, angle_unit_ptr);
    assume value_is(__ctobpl_const_8636, pstep_ptr);
    assume value_is(__ctobpl_const_8637, qstep_ptr);
    assume value_is(__ctobpl_const_8638, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_8639, curr_ptr);
    assume value_is(__ctobpl_const_8640, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8641, curr_ptr);
    assume value_is(__ctobpl_const_8642, angle_ptr);
    assume value_is(__ctobpl_const_8643, angle_unit_ptr);
    assume value_is(__ctobpl_const_8644, pstep_ptr);
    assume value_is(__ctobpl_const_8645, qstep_ptr);
    assume value_is(__ctobpl_const_8646, pqstep_unit_ptr);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8711} true;
    error := result.angstep$4;
    assume value_is(__ctobpl_const_8647, error);
    assume value_is(__ctobpl_const_8648, result.angstep$4);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8717} true;
    goto label_30_true, label_30_false;

  label_30_false:
    assume !INT_EQ(error, 17);
    assume value_is(__ctobpl_const_8649, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8729} true;
    goto label_31_true, label_31_false;

  label_31_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8650, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8761} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8692, pp2);
    assume value_is(__ctobpl_const_8693, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8694, curr_ptr);
    assume value_is(__ctobpl_const_8695, Mem_T.Pcharac[curr_ptr]);
    goto label_68;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8762} true;
    result.trigrdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8764} true;
    call __HAVOC_free(curr);
    return;

  label_31_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8650, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8730} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.versdef$5 := versdef(Mem_T.Pcharac[curr_ptr], curr_ptr, px_ptr, py_ptr, qx_ptr, qy_ptr, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8651, curr_ptr);
    assume value_is(__ctobpl_const_8652, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8653, curr_ptr);
    assume value_is(__ctobpl_const_8654, px_ptr);
    assume value_is(__ctobpl_const_8655, py_ptr);
    assume value_is(__ctobpl_const_8656, qx_ptr);
    assume value_is(__ctobpl_const_8657, qy_ptr);
    assume value_is(__ctobpl_const_8658, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8659, curr_ptr);
    assume value_is(__ctobpl_const_8660, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8661, curr_ptr);
    assume value_is(__ctobpl_const_8662, px_ptr);
    assume value_is(__ctobpl_const_8663, py_ptr);
    assume value_is(__ctobpl_const_8664, qx_ptr);
    assume value_is(__ctobpl_const_8665, qy_ptr);
    assume value_is(__ctobpl_const_8666, pqxy_unit_ptr);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8730} true;
    error := result.versdef$5;
    assume value_is(__ctobpl_const_8667, error);
    assume value_is(__ctobpl_const_8668, result.versdef$5);
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8732} true;
    goto label_46_true, label_46_false;

  label_46_false:
    assume !INT_NEQ(error, 1);
    assume value_is(__ctobpl_const_8669, error);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8744} true;
    goto label_47_true, label_47_false;

  label_47_false:
    assume !INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8671, error);
    goto label_41;

  label_47_true:
    assume INT_EQ(error, 1);
    assume value_is(__ctobpl_const_8671, error);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8745} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_8672, angle_ptr);
    assume value_is(__ctobpl_const_8673, Mem_T.FLOAT[angle_ptr]);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8746} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_8674, angle_unit_ptr);
    assume value_is(__ctobpl_const_8675, Mem_T.INT4[angle_unit_ptr]);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8747} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_8676, pstep_ptr);
    assume value_is(__ctobpl_const_8677, Mem_T.FLOAT[pstep_ptr]);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8748} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_8678, qstep_ptr);
    assume value_is(__ctobpl_const_8679, Mem_T.FLOAT[qstep_ptr]);
    goto label_62;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8749} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_8680, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_8681, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_63;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8750} true;
    assert px_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[px_ptr := 0];
    assume value_is(__ctobpl_const_8682, px_ptr);
    assume value_is(__ctobpl_const_8683, Mem_T.FLOAT[px_ptr]);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8751} true;
    assert py_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[py_ptr := 0];
    assume value_is(__ctobpl_const_8684, py_ptr);
    assume value_is(__ctobpl_const_8685, Mem_T.FLOAT[py_ptr]);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8752} true;
    assert qx_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qx_ptr := 0];
    assume value_is(__ctobpl_const_8686, qx_ptr);
    assume value_is(__ctobpl_const_8687, Mem_T.FLOAT[qx_ptr]);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8753} true;
    assert qy_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qy_ptr := 0];
    assume value_is(__ctobpl_const_8688, qy_ptr);
    assume value_is(__ctobpl_const_8689, Mem_T.FLOAT[qy_ptr]);
    goto label_67;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8754} true;
    assert pqxy_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqxy_unit_ptr := 0];
    assume value_is(__ctobpl_const_8690, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8691, Mem_T.INT4[pqxy_unit_ptr]);
    goto label_41;

  label_46_true:
    assume INT_NEQ(error, 1);
    assume value_is(__ctobpl_const_8669, error);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8732} true;
    goto label_48_true, label_48_false;

  label_48_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8670, error);
    goto label_47;

  label_48_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8670, error);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8733} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_8696, curr_ptr);
    assume value_is(__ctobpl_const_8697, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8698, error);
    assume value_is(__ctobpl_const_8699, curr_ptr);
    assume value_is(__ctobpl_const_8700, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8701, error);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8735} true;
    assert px_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[px_ptr := 0];
    assume value_is(__ctobpl_const_8702, px_ptr);
    assume value_is(__ctobpl_const_8703, Mem_T.FLOAT[px_ptr]);
    goto label_53;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8736} true;
    assert py_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[py_ptr := 0];
    assume value_is(__ctobpl_const_8704, py_ptr);
    assume value_is(__ctobpl_const_8705, Mem_T.FLOAT[py_ptr]);
    goto label_54;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8737} true;
    assert qx_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qx_ptr := 0];
    assume value_is(__ctobpl_const_8706, qx_ptr);
    assume value_is(__ctobpl_const_8707, Mem_T.FLOAT[qx_ptr]);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8738} true;
    assert qy_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qy_ptr := 0];
    assume value_is(__ctobpl_const_8708, qy_ptr);
    assume value_is(__ctobpl_const_8709, Mem_T.FLOAT[qy_ptr]);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8739} true;
    assert pqxy_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqxy_unit_ptr := 0];
    assume value_is(__ctobpl_const_8710, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8711, Mem_T.INT4[pqxy_unit_ptr]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8740} true;
    result.trigrdef$1 := 17;
    goto label_1;

  label_30_true:
    assume INT_EQ(error, 17);
    assume value_is(__ctobpl_const_8649, error);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8719} true;
    assert angle_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[angle_ptr := 0];
    assume value_is(__ctobpl_const_8712, angle_ptr);
    assume value_is(__ctobpl_const_8713, Mem_T.FLOAT[angle_ptr]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8720} true;
    assert angle_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[angle_unit_ptr := 0];
    assume value_is(__ctobpl_const_8714, angle_unit_ptr);
    assume value_is(__ctobpl_const_8715, Mem_T.INT4[angle_unit_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8721} true;
    assert pstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[pstep_ptr := 0];
    assume value_is(__ctobpl_const_8716, pstep_ptr);
    assume value_is(__ctobpl_const_8717, Mem_T.FLOAT[pstep_ptr]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8722} true;
    assert qstep_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qstep_ptr := 0];
    assume value_is(__ctobpl_const_8718, qstep_ptr);
    assume value_is(__ctobpl_const_8719, Mem_T.FLOAT[qstep_ptr]);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8723} true;
    assert pqstep_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqstep_unit_ptr := 0];
    assume value_is(__ctobpl_const_8720, pqstep_unit_ptr);
    assume value_is(__ctobpl_const_8721, Mem_T.INT4[pqstep_unit_ptr]);
    goto label_37;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8724} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 94, havoc_stringTemp);
    assume value_is(__ctobpl_const_8722, curr_ptr);
    assume value_is(__ctobpl_const_8723, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8724, curr_ptr);
    assume value_is(__ctobpl_const_8725, Mem_T.Pcharac[curr_ptr]);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8725} true;
    result.trigrdef$1 := 17;
    goto label_1;

  label_24_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8630, error);
    goto label_28;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8707} true;
    result.trigrdef$1 := 1;
    goto label_1;
}



procedure {:extern} unaminit();
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} unaminit()
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} i: int;
  var {:extern} result.strcpy$1: int;
  var {:extern} $strcpy.arg.1$2$: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    i := 0;
    result.strcpy$1 := 0;
    $strcpy.arg.1$2$ := 0;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8774} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8778} true;
    i := 0;
    assume value_is(__ctobpl_const_8726, i);
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8778} true;
    goto label_5_head;

  label_5_head:
    call i, result.strcpy$1, $strcpy.arg.1$2$ := unaminit_loop_label_5_head(havoc_stringTemp, i, result.strcpy$1, $strcpy.arg.1$2$);
    goto label_5_head_last;

  label_5_false:
    assume !INT_LEQ(i, 20);
    assume value_is(__ctobpl_const_8727, i);
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8781} true;
    return;

  label_5_true:
    assume INT_LEQ(i, 20);
    assume value_is(__ctobpl_const_8727, i);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8779} true;
    $strcpy.arg.1$2$ := PLUS(UserNames, 31, i);
    assume value_is(__ctobpl_const_8728, $strcpy.arg.1$2$);
    assume value_is(__ctobpl_const_8729, i);
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8779} true;
    call result.strcpy$1 := strcpy($strcpy.arg.1$2$, havoc_stringTemp);
    assume value_is(__ctobpl_const_8730, $strcpy.arg.1$2$);
    assume value_is(__ctobpl_const_8731, $strcpy.arg.1$2$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8778} true;
    assume value_is(__ctobpl_const_8732, i);
    i := PLUS(i, 1, 1);
    goto label_10_dummy;

  label_10_dummy:
    assume false;
    return;

  label_5_head_last:
    goto label_5_true, label_5_false;
}



procedure {:extern} unifamp(p1.__1: int, pp2.__1: int, unif_val_ptr.__1: int, amp_unit_ptr.__1: int) returns (result.unifamp$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} unifamp(p1.__1: int, pp2.__1: int, unif_val_ptr.__1: int, amp_unit_ptr.__1: int) returns (result.unifamp$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} amp_unit_ptr: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.ampval$4: int;
  var {:extern} unif_val_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(unif_val_ptr.__1, alloc);
    assume INT_LT(amp_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    amp_unit_ptr := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.ampval$4 := 0;
    result.unifamp$1 := 0;
    unif_val_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    unif_val_ptr := unif_val_ptr.__1;
    amp_unit_ptr := amp_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8792} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8792} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8792} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_8733, curr_ptr);
    assume value_is(__ctobpl_const_8734, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8793} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8800} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_8735, curr_ptr);
    assume value_is(__ctobpl_const_8736, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8737, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8803} true;
    error := 0;
    assume value_is(__ctobpl_const_8738, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8807} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 88);
    assume value_is(__ctobpl_const_8739, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8807} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_8740, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8741, curr_ptr);
    assume value_is(__ctobpl_const_8742, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8743, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8807} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_8744, error);
    assume value_is(__ctobpl_const_8745, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8809} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8746, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8814} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.ampval$4 := ampval(Mem_T.Pcharac[curr_ptr], curr_ptr, unif_val_ptr, amp_unit_ptr);
    assume value_is(__ctobpl_const_8747, curr_ptr);
    assume value_is(__ctobpl_const_8748, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8749, curr_ptr);
    assume value_is(__ctobpl_const_8750, unif_val_ptr);
    assume value_is(__ctobpl_const_8751, amp_unit_ptr);
    assume value_is(__ctobpl_const_8752, curr_ptr);
    assume value_is(__ctobpl_const_8753, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8754, curr_ptr);
    assume value_is(__ctobpl_const_8755, unif_val_ptr);
    assume value_is(__ctobpl_const_8756, amp_unit_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8814} true;
    error := result.ampval$4;
    assume value_is(__ctobpl_const_8757, error);
    assume value_is(__ctobpl_const_8758, result.ampval$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8815} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8759, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8821} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8764, pp2);
    assume value_is(__ctobpl_const_8765, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8766, curr_ptr);
    assume value_is(__ctobpl_const_8767, Mem_T.Pcharac[curr_ptr]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8822} true;
    result.unifamp$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8823} true;
    call __HAVOC_free(curr);
    return;

  label_20_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8759, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8816} true;
    assert unif_val_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[unif_val_ptr := 0];
    assume value_is(__ctobpl_const_8760, unif_val_ptr);
    assume value_is(__ctobpl_const_8761, Mem_T.FLOAT[unif_val_ptr]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8817} true;
    assert amp_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[amp_unit_ptr := 0];
    assume value_is(__ctobpl_const_8762, amp_unit_ptr);
    assume value_is(__ctobpl_const_8763, Mem_T.INT4[amp_unit_ptr]);
    goto label_21;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8746, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8810} true;
    result.unifamp$1 := 1;
    goto label_1;
}



procedure {:extern} unifpha(p1.__1: int, pp2.__1: int, unif_val_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.unifpha$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} unifpha(p1.__1: int, pp2.__1: int, unif_val_ptr.__1: int, phase_unit_ptr.__1: int) returns (result.unifpha$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} phase_unit_ptr: int;
  var {:extern} pp2: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.angval$4: int;
  var {:extern} unif_val_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(unif_val_ptr.__1, alloc);
    assume INT_LT(phase_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    phase_unit_ptr := 0;
    pp2 := 0;
    result.GetKeyword$2 := 0;
    result.angval$4 := 0;
    result.unifpha$1 := 0;
    unif_val_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    unif_val_ptr := unif_val_ptr.__1;
    phase_unit_ptr := phase_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8836} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8836} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8836} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_8768, curr_ptr);
    assume value_is(__ctobpl_const_8769, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8837} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8844} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_8770, curr_ptr);
    assume value_is(__ctobpl_const_8771, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8772, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8847} true;
    error := 0;
    assume value_is(__ctobpl_const_8773, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8851} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 88);
    assume value_is(__ctobpl_const_8774, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8851} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_8775, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8776, curr_ptr);
    assume value_is(__ctobpl_const_8777, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8778, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8851} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_8779, error);
    assume value_is(__ctobpl_const_8780, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8853} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8781, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8858} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.angval$4 := angval(Mem_T.Pcharac[curr_ptr], curr_ptr, unif_val_ptr, phase_unit_ptr);
    assume value_is(__ctobpl_const_8782, curr_ptr);
    assume value_is(__ctobpl_const_8783, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8784, curr_ptr);
    assume value_is(__ctobpl_const_8785, unif_val_ptr);
    assume value_is(__ctobpl_const_8786, phase_unit_ptr);
    assume value_is(__ctobpl_const_8787, curr_ptr);
    assume value_is(__ctobpl_const_8788, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8789, curr_ptr);
    assume value_is(__ctobpl_const_8790, unif_val_ptr);
    assume value_is(__ctobpl_const_8791, phase_unit_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8858} true;
    error := result.angval$4;
    assume value_is(__ctobpl_const_8792, error);
    assume value_is(__ctobpl_const_8793, result.angval$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8859} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8794, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8865} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8799, pp2);
    assume value_is(__ctobpl_const_8800, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8801, curr_ptr);
    assume value_is(__ctobpl_const_8802, Mem_T.Pcharac[curr_ptr]);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8866} true;
    result.unifpha$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8867} true;
    call __HAVOC_free(curr);
    return;

  label_20_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8794, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8860} true;
    assert unif_val_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[unif_val_ptr := 0];
    assume value_is(__ctobpl_const_8795, unif_val_ptr);
    assume value_is(__ctobpl_const_8796, Mem_T.FLOAT[unif_val_ptr]);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8861} true;
    assert phase_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[phase_unit_ptr := 0];
    assume value_is(__ctobpl_const_8797, phase_unit_ptr);
    assume value_is(__ctobpl_const_8798, Mem_T.INT4[phase_unit_ptr]);
    goto label_21;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8781, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8854} true;
    result.unifpha$1 := 1;
    goto label_1;
}



procedure {:extern} uvdir(p1.__1: int, pp2.__1: int, u_ptr.__1: int, v_ptr.__1: int) returns (result.uvdir$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} uvdir(p1.__1: int, pp2.__1: int, u_ptr.__1: int, v_ptr.__1: int) returns (result.uvdir$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$6$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} $parserro.arg.3$7$: int;
  var {:extern} pp2: int;
  var {:extern} $printf.arg.2$10$: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$5: int;
  var {:extern} result.printf$9: int;
  var {:extern} result.uvval$4: int;
  var {:extern} result.uvval$8: int;
  var {:extern} u_ptr: int;
  var {:extern} v_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(u_ptr.__1, alloc);
    assume INT_LT(v_ptr.__1, alloc);
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$6$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    $parserro.arg.3$7$ := 0;
    pp2 := 0;
    $printf.arg.2$10$ := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$5 := 0;
    result.printf$9 := 0;
    result.uvdir$1 := 0;
    result.uvval$4 := 0;
    result.uvval$8 := 0;
    u_ptr := 0;
    v_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    u_ptr := u_ptr.__1;
    v_ptr := v_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8880} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8880} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8880} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_8803, curr_ptr);
    assume value_is(__ctobpl_const_8804, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8881} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8888} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_8805, curr_ptr);
    assume value_is(__ctobpl_const_8806, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8807, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8891} true;
    error := 0;
    assume value_is(__ctobpl_const_8808, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8894} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 97);
    assume value_is(__ctobpl_const_8809, $GetKeyword.arg.1$3$);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8894} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_8810, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8811, curr_ptr);
    assume value_is(__ctobpl_const_8812, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8813, curr_ptr);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8894} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_8814, error);
    assume value_is(__ctobpl_const_8815, result.GetKeyword$2);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8895} true;
    goto label_14_true, label_14_false;

  label_14_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8816, error);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8900} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.uvval$4 := uvval(Mem_T.Pcharac[curr_ptr], curr_ptr, u_ptr);
    assume value_is(__ctobpl_const_8817, curr_ptr);
    assume value_is(__ctobpl_const_8818, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8819, curr_ptr);
    assume value_is(__ctobpl_const_8820, u_ptr);
    assume value_is(__ctobpl_const_8821, curr_ptr);
    assume value_is(__ctobpl_const_8822, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8823, curr_ptr);
    assume value_is(__ctobpl_const_8824, u_ptr);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8900} true;
    error := result.uvval$4;
    assume value_is(__ctobpl_const_8825, error);
    assume value_is(__ctobpl_const_8826, result.uvval$4);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8901} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8827, error);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8907} true;
    $GetKeyword.arg.1$6$ := PLUS(Keywords, 21, 98);
    assume value_is(__ctobpl_const_8828, $GetKeyword.arg.1$6$);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8907} true;
    call result.GetKeyword$5 := GetKeyword($GetKeyword.arg.1$6$, curr_ptr);
    assume value_is(__ctobpl_const_8829, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_8830, curr_ptr);
    assume value_is(__ctobpl_const_8831, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_8832, curr_ptr);
    goto label_29;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8907} true;
    error := result.GetKeyword$5;
    assume value_is(__ctobpl_const_8833, error);
    assume value_is(__ctobpl_const_8834, result.GetKeyword$5);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8908} true;
    goto label_30_true, label_30_false;

  label_30_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8835, error);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8914} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call result.uvval$8 := uvval(Mem_T.Pcharac[curr_ptr], curr_ptr, v_ptr);
    assume value_is(__ctobpl_const_8836, curr_ptr);
    assume value_is(__ctobpl_const_8837, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8838, curr_ptr);
    assume value_is(__ctobpl_const_8839, v_ptr);
    assume value_is(__ctobpl_const_8840, curr_ptr);
    assume value_is(__ctobpl_const_8841, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8842, curr_ptr);
    assume value_is(__ctobpl_const_8843, v_ptr);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8914} true;
    error := result.uvval$8;
    assume value_is(__ctobpl_const_8844, error);
    assume value_is(__ctobpl_const_8845, result.uvval$8);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8915} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8846, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8921} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8847, pp2);
    assume value_is(__ctobpl_const_8848, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8849, curr_ptr);
    assume value_is(__ctobpl_const_8850, Mem_T.Pcharac[curr_ptr]);
    goto label_47;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8922} true;
    result.uvdir$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8923} true;
    call __HAVOC_free(curr);
    return;

  label_40_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8846, error);
    goto label_42;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8916} true;
    goto label_43;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8916} true;
    call result.printf$9 := det_choice();
    goto label_46;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8917} true;
    result.uvdir$1 := 17;
    goto label_1;

  label_30_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8835, error);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8909} true;
    $parserro.arg.3$7$ := PLUS(Keywords, 21, 98);
    assume value_is(__ctobpl_const_8851, $parserro.arg.3$7$);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8909} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 1, $parserro.arg.3$7$);
    assume value_is(__ctobpl_const_8852, curr_ptr);
    assume value_is(__ctobpl_const_8853, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8854, $parserro.arg.3$7$);
    assume value_is(__ctobpl_const_8855, curr_ptr);
    assume value_is(__ctobpl_const_8856, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8857, $parserro.arg.3$7$);
    goto label_38;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8910} true;
    result.uvdir$1 := 17;
    goto label_1;

  label_20_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8827, error);
    goto label_22;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8902} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 71, havoc_stringTemp);
    assume value_is(__ctobpl_const_8858, curr_ptr);
    assume value_is(__ctobpl_const_8859, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8860, curr_ptr);
    assume value_is(__ctobpl_const_8861, Mem_T.Pcharac[curr_ptr]);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8903} true;
    result.uvdir$1 := 17;
    goto label_1;

  label_14_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8816, error);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8896} true;
    result.uvdir$1 := 1;
    goto label_1;
}



procedure {:extern} uvval(p1.__1: int, pp2.__1: int, val_ptr.__1: int) returns (result.uvval$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} uvval(p1.__1: int, pp2.__1: int, val_ptr.__1: int) returns (result.uvval$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} pp2: int;
  var {:extern} result.GetReal$2: int;
  var {:extern} val_ptr: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(val_ptr.__1, alloc);
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    pp2 := 0;
    result.GetReal$2 := 0;
    result.uvval$1 := 0;
    val_ptr := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    val_ptr := val_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8936} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8936} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8936} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_8862, curr_ptr);
    assume value_is(__ctobpl_const_8863, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8937} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8940} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_8864, curr_ptr);
    assume value_is(__ctobpl_const_8865, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8866, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8943} true;
    call result.GetReal$2 := GetReal(val_ptr, curr_ptr);
    assume value_is(__ctobpl_const_8867, val_ptr);
    assume value_is(__ctobpl_const_8868, curr_ptr);
    assume value_is(__ctobpl_const_8869, val_ptr);
    assume value_is(__ctobpl_const_8870, curr_ptr);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8943} true;
    error := result.GetReal$2;
    assume value_is(__ctobpl_const_8871, error);
    assume value_is(__ctobpl_const_8872, result.GetReal$2);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8944} true;
    goto label_12_true, label_12_false;

  label_12_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8873, error);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8949} true;
    assert val_ptr != 0;
    goto label_13_true, label_13_false;

  label_13_false:
    assume !INT_LT(Mem_T.FLOAT[val_ptr], -1);
    assume value_is(__ctobpl_const_8874, val_ptr);
    assume value_is(__ctobpl_const_8875, Mem_T.FLOAT[val_ptr]);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8949} true;
    assert val_ptr != 0;
    goto label_15_true, label_15_false;

  label_15_false:
    assume !INT_LT(1, Mem_T.FLOAT[val_ptr]);
    assume value_is(__ctobpl_const_8876, val_ptr);
    assume value_is(__ctobpl_const_8877, Mem_T.FLOAT[val_ptr]);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8956} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8878, pp2);
    assume value_is(__ctobpl_const_8879, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8880, curr_ptr);
    assume value_is(__ctobpl_const_8881, Mem_T.Pcharac[curr_ptr]);
    goto label_21;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8957} true;
    result.uvval$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8958} true;
    call __HAVOC_free(curr);
    return;

  label_15_true:
    assume INT_LT(1, Mem_T.FLOAT[val_ptr]);
    assume value_is(__ctobpl_const_8876, val_ptr);
    assume value_is(__ctobpl_const_8877, Mem_T.FLOAT[val_ptr]);
    goto label_16;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8950} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], 72, havoc_stringTemp);
    assume value_is(__ctobpl_const_8882, curr_ptr);
    assume value_is(__ctobpl_const_8883, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8884, curr_ptr);
    assume value_is(__ctobpl_const_8885, Mem_T.Pcharac[curr_ptr]);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8952} true;
    result.uvval$1 := 17;
    goto label_1;

  label_13_true:
    assume INT_LT(Mem_T.FLOAT[val_ptr], -1);
    assume value_is(__ctobpl_const_8874, val_ptr);
    assume value_is(__ctobpl_const_8875, Mem_T.FLOAT[val_ptr]);
    goto label_16;

  label_12_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8873, error);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8945} true;
    result.uvval$1 := 1;
    goto label_1;
}



procedure {:extern} versdef(p1.__1: int, pp2.__1: int, px_ptr.__1: int, py_ptr.__1: int, qx_ptr.__1: int, qy_ptr.__1: int, pqxy_unit_ptr.__1: int) returns (result.versdef$1: int);
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} versdef(p1.__1: int, pp2.__1: int, px_ptr.__1: int, py_ptr.__1: int, qx_ptr.__1: int, qy_ptr.__1: int, pqxy_unit_ptr.__1: int) returns (result.versdef$1: int)
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} $GetKeyword.arg.1$10$: int;
  var {:extern} $GetKeyword.arg.1$14$: int;
  var {:extern} $GetKeyword.arg.1$3$: int;
  var {:extern} $GetKeyword.arg.1$6$: int;
  var {:extern} curr: int;
  var {:extern} curr_ptr: int;
  var {:extern} error: int;
  var {:extern} p1: int;
  var {:extern} $parserro.arg.3$11$: int;
  var {:extern} $parserro.arg.3$15$: int;
  var {:extern} $parserro.arg.3$7$: int;
  var {:extern} pp2: int;
  var {:extern} pqxy_unit_ptr: int;
  var {:extern} px_ptr: int;
  var {:extern} py_ptr: int;
  var {:extern} qx_ptr: int;
  var {:extern} qy_ptr: int;
  var {:extern} result.GetKeyword$2: int;
  var {:extern} result.GetKeyword$5: int;
  var {:extern} result.GetKeyword$9: int;
  var {:extern} result.GetKeyword$13: int;
  var {:extern} result.GetReal$4: int;
  var {:extern} result.GetReal$8: int;
  var {:extern} result.GetReal$12: int;
  var {:extern} result.GetReal$16: int;
  var {:extern} result.lenunit$17: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    assume INT_LT(p1.__1, alloc);
    assume INT_LT(pp2.__1, alloc);
    assume INT_LT(px_ptr.__1, alloc);
    assume INT_LT(py_ptr.__1, alloc);
    assume INT_LT(qx_ptr.__1, alloc);
    assume INT_LT(qy_ptr.__1, alloc);
    assume INT_LT(pqxy_unit_ptr.__1, alloc);
    $GetKeyword.arg.1$10$ := 0;
    $GetKeyword.arg.1$14$ := 0;
    $GetKeyword.arg.1$3$ := 0;
    $GetKeyword.arg.1$6$ := 0;
    call curr := __HAVOC_det_malloc(4);
    curr_ptr := 0;
    error := 0;
    p1 := 0;
    $parserro.arg.3$11$ := 0;
    $parserro.arg.3$15$ := 0;
    $parserro.arg.3$7$ := 0;
    pp2 := 0;
    pqxy_unit_ptr := 0;
    px_ptr := 0;
    py_ptr := 0;
    qx_ptr := 0;
    qy_ptr := 0;
    result.GetKeyword$2 := 0;
    result.GetKeyword$5 := 0;
    result.GetKeyword$9 := 0;
    result.GetKeyword$13 := 0;
    result.GetReal$4 := 0;
    result.GetReal$8 := 0;
    result.GetReal$12 := 0;
    result.GetReal$16 := 0;
    result.lenunit$17 := 0;
    result.versdef$1 := 0;
    p1 := p1.__1;
    pp2 := pp2.__1;
    px_ptr := px_ptr.__1;
    py_ptr := py_ptr.__1;
    qx_ptr := qx_ptr.__1;
    qy_ptr := qy_ptr.__1;
    pqxy_unit_ptr := pqxy_unit_ptr.__1;
    goto label_3;

  label_3:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8968} true;
    goto label_4;

  label_4:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8968} true;
    goto label_5;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8968} true;
    curr_ptr := curr;
    assume value_is(__ctobpl_const_8886, curr_ptr);
    assume value_is(__ctobpl_const_8887, Mem_T.Pcharac[curr]);
    goto label_6;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8969} true;
    goto label_7;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8972} true;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[curr_ptr := p1];
    assume value_is(__ctobpl_const_8888, curr_ptr);
    assume value_is(__ctobpl_const_8889, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8890, p1);
    goto label_8;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8975} true;
    error := 0;
    assume value_is(__ctobpl_const_8891, error);
    goto label_9;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8976} true;
    assert px_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[px_ptr := 0];
    assume value_is(__ctobpl_const_8892, px_ptr);
    assume value_is(__ctobpl_const_8893, Mem_T.FLOAT[px_ptr]);
    goto label_10;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8977} true;
    assert py_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[py_ptr := 0];
    assume value_is(__ctobpl_const_8894, py_ptr);
    assume value_is(__ctobpl_const_8895, Mem_T.FLOAT[py_ptr]);
    goto label_11;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8978} true;
    assert qx_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qx_ptr := 0];
    assume value_is(__ctobpl_const_8896, qx_ptr);
    assume value_is(__ctobpl_const_8897, Mem_T.FLOAT[qx_ptr]);
    goto label_12;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8979} true;
    assert qy_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qy_ptr := 0];
    assume value_is(__ctobpl_const_8898, qy_ptr);
    assume value_is(__ctobpl_const_8899, Mem_T.FLOAT[qy_ptr]);
    goto label_13;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8980} true;
    assert pqxy_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqxy_unit_ptr := 0];
    assume value_is(__ctobpl_const_8900, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8901, Mem_T.INT4[pqxy_unit_ptr]);
    goto label_14;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8983} true;
    $GetKeyword.arg.1$3$ := PLUS(Keywords, 21, 53);
    assume value_is(__ctobpl_const_8902, $GetKeyword.arg.1$3$);
    goto label_15;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8983} true;
    call result.GetKeyword$2 := GetKeyword($GetKeyword.arg.1$3$, curr_ptr);
    assume value_is(__ctobpl_const_8903, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8904, curr_ptr);
    assume value_is(__ctobpl_const_8905, $GetKeyword.arg.1$3$);
    assume value_is(__ctobpl_const_8906, curr_ptr);
    goto label_18;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8983} true;
    error := result.GetKeyword$2;
    assume value_is(__ctobpl_const_8907, error);
    assume value_is(__ctobpl_const_8908, result.GetKeyword$2);
    goto label_19;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8984} true;
    goto label_19_true, label_19_false;

  label_19_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8909, error);
    goto label_20;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8989} true;
    call result.GetReal$4 := GetReal(px_ptr, curr_ptr);
    assume value_is(__ctobpl_const_8910, px_ptr);
    assume value_is(__ctobpl_const_8911, curr_ptr);
    assume value_is(__ctobpl_const_8912, px_ptr);
    assume value_is(__ctobpl_const_8913, curr_ptr);
    goto label_24;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8989} true;
    error := result.GetReal$4;
    assume value_is(__ctobpl_const_8914, error);
    assume value_is(__ctobpl_const_8915, result.GetReal$4);
    goto label_25;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8990} true;
    goto label_25_true, label_25_false;

  label_25_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8916, error);
    goto label_26;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9002} true;
    $GetKeyword.arg.1$6$ := PLUS(Keywords, 21, 54);
    assume value_is(__ctobpl_const_8917, $GetKeyword.arg.1$6$);
    goto label_36;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9002} true;
    call result.GetKeyword$5 := GetKeyword($GetKeyword.arg.1$6$, curr_ptr);
    assume value_is(__ctobpl_const_8918, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_8919, curr_ptr);
    assume value_is(__ctobpl_const_8920, $GetKeyword.arg.1$6$);
    assume value_is(__ctobpl_const_8921, curr_ptr);
    goto label_39;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9002} true;
    error := result.GetKeyword$5;
    assume value_is(__ctobpl_const_8922, error);
    assume value_is(__ctobpl_const_8923, result.GetKeyword$5);
    goto label_40;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9003} true;
    goto label_40_true, label_40_false;

  label_40_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8924, error);
    goto label_41;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9010} true;
    call result.GetReal$8 := GetReal(py_ptr, curr_ptr);
    assume value_is(__ctobpl_const_8925, py_ptr);
    assume value_is(__ctobpl_const_8926, curr_ptr);
    assume value_is(__ctobpl_const_8927, py_ptr);
    assume value_is(__ctobpl_const_8928, curr_ptr);
    goto label_49;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9010} true;
    error := result.GetReal$8;
    assume value_is(__ctobpl_const_8929, error);
    assume value_is(__ctobpl_const_8930, result.GetReal$8);
    goto label_50;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9011} true;
    goto label_50_true, label_50_false;

  label_50_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8931, error);
    goto label_51;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9023} true;
    $GetKeyword.arg.1$10$ := PLUS(Keywords, 21, 55);
    assume value_is(__ctobpl_const_8932, $GetKeyword.arg.1$10$);
    goto label_61;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9023} true;
    call result.GetKeyword$9 := GetKeyword($GetKeyword.arg.1$10$, curr_ptr);
    assume value_is(__ctobpl_const_8933, $GetKeyword.arg.1$10$);
    assume value_is(__ctobpl_const_8934, curr_ptr);
    assume value_is(__ctobpl_const_8935, $GetKeyword.arg.1$10$);
    assume value_is(__ctobpl_const_8936, curr_ptr);
    goto label_64;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9023} true;
    error := result.GetKeyword$9;
    assume value_is(__ctobpl_const_8937, error);
    assume value_is(__ctobpl_const_8938, result.GetKeyword$9);
    goto label_65;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9024} true;
    goto label_65_true, label_65_false;

  label_65_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8939, error);
    goto label_66;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9031} true;
    call result.GetReal$12 := GetReal(qx_ptr, curr_ptr);
    assume value_is(__ctobpl_const_8940, qx_ptr);
    assume value_is(__ctobpl_const_8941, curr_ptr);
    assume value_is(__ctobpl_const_8942, qx_ptr);
    assume value_is(__ctobpl_const_8943, curr_ptr);
    goto label_74;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9031} true;
    error := result.GetReal$12;
    assume value_is(__ctobpl_const_8944, error);
    assume value_is(__ctobpl_const_8945, result.GetReal$12);
    goto label_75;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9032} true;
    goto label_75_true, label_75_false;

  label_75_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8946, error);
    goto label_76;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9044} true;
    $GetKeyword.arg.1$14$ := PLUS(Keywords, 21, 56);
    assume value_is(__ctobpl_const_8947, $GetKeyword.arg.1$14$);
    goto label_86;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9044} true;
    call result.GetKeyword$13 := GetKeyword($GetKeyword.arg.1$14$, curr_ptr);
    assume value_is(__ctobpl_const_8948, $GetKeyword.arg.1$14$);
    assume value_is(__ctobpl_const_8949, curr_ptr);
    assume value_is(__ctobpl_const_8950, $GetKeyword.arg.1$14$);
    assume value_is(__ctobpl_const_8951, curr_ptr);
    goto label_89;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9044} true;
    error := result.GetKeyword$13;
    assume value_is(__ctobpl_const_8952, error);
    assume value_is(__ctobpl_const_8953, result.GetKeyword$13);
    goto label_90;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9045} true;
    goto label_90_true, label_90_false;

  label_90_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8954, error);
    goto label_91;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9052} true;
    call result.GetReal$16 := GetReal(qy_ptr, curr_ptr);
    assume value_is(__ctobpl_const_8955, qy_ptr);
    assume value_is(__ctobpl_const_8956, curr_ptr);
    assume value_is(__ctobpl_const_8957, qy_ptr);
    assume value_is(__ctobpl_const_8958, curr_ptr);
    goto label_99;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9052} true;
    error := result.GetReal$16;
    assume value_is(__ctobpl_const_8959, error);
    assume value_is(__ctobpl_const_8960, result.GetReal$16);
    goto label_100;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9053} true;
    goto label_100_true, label_100_false;

  label_100_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8961, error);
    goto label_101;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9066} true;
    call result.lenunit$17 := lenunit(curr_ptr, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8962, curr_ptr);
    assume value_is(__ctobpl_const_8963, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8964, curr_ptr);
    assume value_is(__ctobpl_const_8965, pqxy_unit_ptr);
    goto label_113;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9066} true;
    error := result.lenunit$17;
    assume value_is(__ctobpl_const_8966, error);
    assume value_is(__ctobpl_const_8967, result.lenunit$17);
    goto label_114;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9067} true;
    goto label_114_true, label_114_false;

  label_114_false:
    assume error == 0;
    assume value_is(__ctobpl_const_8968, error);
    goto label_115;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9071} true;
    assert pp2 != 0;
    assert curr_ptr != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[pp2 := Mem_T.Pcharac[curr_ptr]];
    assume value_is(__ctobpl_const_8971, pp2);
    assume value_is(__ctobpl_const_8972, Mem_T.Pcharac[pp2]);
    assume value_is(__ctobpl_const_8973, curr_ptr);
    assume value_is(__ctobpl_const_8974, Mem_T.Pcharac[curr_ptr]);
    goto label_117;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9072} true;
    result.versdef$1 := 0;
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9073} true;
    call __HAVOC_free(curr);
    return;

  label_114_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8968, error);
    goto label_116;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9068} true;
    assert pqxy_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqxy_unit_ptr := 0];
    assume value_is(__ctobpl_const_8969, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8970, Mem_T.INT4[pqxy_unit_ptr]);
    goto label_115;

  label_100_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8961, error);
    goto label_104;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9054} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_8975, curr_ptr);
    assume value_is(__ctobpl_const_8976, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8977, error);
    assume value_is(__ctobpl_const_8978, curr_ptr);
    assume value_is(__ctobpl_const_8979, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8980, error);
    goto label_107;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9056} true;
    assert px_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[px_ptr := 0];
    assume value_is(__ctobpl_const_8981, px_ptr);
    assume value_is(__ctobpl_const_8982, Mem_T.FLOAT[px_ptr]);
    goto label_108;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9057} true;
    assert py_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[py_ptr := 0];
    assume value_is(__ctobpl_const_8983, py_ptr);
    assume value_is(__ctobpl_const_8984, Mem_T.FLOAT[py_ptr]);
    goto label_109;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9058} true;
    assert qx_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qx_ptr := 0];
    assume value_is(__ctobpl_const_8985, qx_ptr);
    assume value_is(__ctobpl_const_8986, Mem_T.FLOAT[qx_ptr]);
    goto label_110;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9059} true;
    assert qy_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qy_ptr := 0];
    assume value_is(__ctobpl_const_8987, qy_ptr);
    assume value_is(__ctobpl_const_8988, Mem_T.FLOAT[qy_ptr]);
    goto label_111;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9060} true;
    assert pqxy_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqxy_unit_ptr := 0];
    assume value_is(__ctobpl_const_8989, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_8990, Mem_T.INT4[pqxy_unit_ptr]);
    goto label_112;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9061} true;
    result.versdef$1 := 17;
    goto label_1;

  label_90_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8954, error);
    goto label_94;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9046} true;
    $parserro.arg.3$15$ := PLUS(Keywords, 21, 56);
    assume value_is(__ctobpl_const_8991, $parserro.arg.3$15$);
    goto label_95;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9046} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, $parserro.arg.3$15$);
    assume value_is(__ctobpl_const_8992, curr_ptr);
    assume value_is(__ctobpl_const_8993, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8994, error);
    assume value_is(__ctobpl_const_8995, $parserro.arg.3$15$);
    assume value_is(__ctobpl_const_8996, curr_ptr);
    assume value_is(__ctobpl_const_8997, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_8998, error);
    assume value_is(__ctobpl_const_8999, $parserro.arg.3$15$);
    goto label_98;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9048} true;
    result.versdef$1 := 17;
    goto label_1;

  label_75_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8946, error);
    goto label_77;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9033} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_9000, curr_ptr);
    assume value_is(__ctobpl_const_9001, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9002, error);
    assume value_is(__ctobpl_const_9003, curr_ptr);
    assume value_is(__ctobpl_const_9004, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9005, error);
    goto label_80;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9035} true;
    assert px_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[px_ptr := 0];
    assume value_is(__ctobpl_const_9006, px_ptr);
    assume value_is(__ctobpl_const_9007, Mem_T.FLOAT[px_ptr]);
    goto label_81;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9036} true;
    assert py_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[py_ptr := 0];
    assume value_is(__ctobpl_const_9008, py_ptr);
    assume value_is(__ctobpl_const_9009, Mem_T.FLOAT[py_ptr]);
    goto label_82;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9037} true;
    assert qx_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qx_ptr := 0];
    assume value_is(__ctobpl_const_9010, qx_ptr);
    assume value_is(__ctobpl_const_9011, Mem_T.FLOAT[qx_ptr]);
    goto label_83;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9038} true;
    assert qy_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qy_ptr := 0];
    assume value_is(__ctobpl_const_9012, qy_ptr);
    assume value_is(__ctobpl_const_9013, Mem_T.FLOAT[qy_ptr]);
    goto label_84;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9039} true;
    assert pqxy_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqxy_unit_ptr := 0];
    assume value_is(__ctobpl_const_9014, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_9015, Mem_T.INT4[pqxy_unit_ptr]);
    goto label_85;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9040} true;
    result.versdef$1 := 17;
    goto label_1;

  label_65_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8939, error);
    goto label_69;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9025} true;
    $parserro.arg.3$11$ := PLUS(Keywords, 21, 55);
    assume value_is(__ctobpl_const_9016, $parserro.arg.3$11$);
    goto label_70;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9025} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, $parserro.arg.3$11$);
    assume value_is(__ctobpl_const_9017, curr_ptr);
    assume value_is(__ctobpl_const_9018, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9019, error);
    assume value_is(__ctobpl_const_9020, $parserro.arg.3$11$);
    assume value_is(__ctobpl_const_9021, curr_ptr);
    assume value_is(__ctobpl_const_9022, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9023, error);
    assume value_is(__ctobpl_const_9024, $parserro.arg.3$11$);
    goto label_73;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9027} true;
    result.versdef$1 := 17;
    goto label_1;

  label_50_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8931, error);
    goto label_52;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9012} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_9025, curr_ptr);
    assume value_is(__ctobpl_const_9026, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9027, error);
    assume value_is(__ctobpl_const_9028, curr_ptr);
    assume value_is(__ctobpl_const_9029, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9030, error);
    goto label_55;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9014} true;
    assert px_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[px_ptr := 0];
    assume value_is(__ctobpl_const_9031, px_ptr);
    assume value_is(__ctobpl_const_9032, Mem_T.FLOAT[px_ptr]);
    goto label_56;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9015} true;
    assert py_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[py_ptr := 0];
    assume value_is(__ctobpl_const_9033, py_ptr);
    assume value_is(__ctobpl_const_9034, Mem_T.FLOAT[py_ptr]);
    goto label_57;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9016} true;
    assert qx_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qx_ptr := 0];
    assume value_is(__ctobpl_const_9035, qx_ptr);
    assume value_is(__ctobpl_const_9036, Mem_T.FLOAT[qx_ptr]);
    goto label_58;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9017} true;
    assert qy_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qy_ptr := 0];
    assume value_is(__ctobpl_const_9037, qy_ptr);
    assume value_is(__ctobpl_const_9038, Mem_T.FLOAT[qy_ptr]);
    goto label_59;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9018} true;
    assert pqxy_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqxy_unit_ptr := 0];
    assume value_is(__ctobpl_const_9039, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_9040, Mem_T.INT4[pqxy_unit_ptr]);
    goto label_60;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9019} true;
    result.versdef$1 := 17;
    goto label_1;

  label_40_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8924, error);
    goto label_44;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9004} true;
    $parserro.arg.3$7$ := PLUS(Keywords, 21, 54);
    assume value_is(__ctobpl_const_9041, $parserro.arg.3$7$);
    goto label_45;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9004} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, $parserro.arg.3$7$);
    assume value_is(__ctobpl_const_9042, curr_ptr);
    assume value_is(__ctobpl_const_9043, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9044, error);
    assume value_is(__ctobpl_const_9045, $parserro.arg.3$7$);
    assume value_is(__ctobpl_const_9046, curr_ptr);
    assume value_is(__ctobpl_const_9047, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9048, error);
    assume value_is(__ctobpl_const_9049, $parserro.arg.3$7$);
    goto label_48;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9006} true;
    result.versdef$1 := 17;
    goto label_1;

  label_25_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8916, error);
    goto label_27;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8991} true;
    assert curr_ptr != 0;
    assert curr_ptr != 0;
    call parserro(Mem_T.Pcharac[curr_ptr], error, havoc_stringTemp);
    assume value_is(__ctobpl_const_9050, curr_ptr);
    assume value_is(__ctobpl_const_9051, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9052, error);
    assume value_is(__ctobpl_const_9053, curr_ptr);
    assume value_is(__ctobpl_const_9054, Mem_T.Pcharac[curr_ptr]);
    assume value_is(__ctobpl_const_9055, error);
    goto label_30;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8993} true;
    assert px_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[px_ptr := 0];
    assume value_is(__ctobpl_const_9056, px_ptr);
    assume value_is(__ctobpl_const_9057, Mem_T.FLOAT[px_ptr]);
    goto label_31;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8994} true;
    assert py_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[py_ptr := 0];
    assume value_is(__ctobpl_const_9058, py_ptr);
    assume value_is(__ctobpl_const_9059, Mem_T.FLOAT[py_ptr]);
    goto label_32;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8995} true;
    assert qx_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qx_ptr := 0];
    assume value_is(__ctobpl_const_9060, qx_ptr);
    assume value_is(__ctobpl_const_9061, Mem_T.FLOAT[qx_ptr]);
    goto label_33;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8996} true;
    assert qy_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[qy_ptr := 0];
    assume value_is(__ctobpl_const_9062, qy_ptr);
    assume value_is(__ctobpl_const_9063, Mem_T.FLOAT[qy_ptr]);
    goto label_34;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8997} true;
    assert pqxy_unit_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[pqxy_unit_ptr := 0];
    assume value_is(__ctobpl_const_9064, pqxy_unit_ptr);
    assume value_is(__ctobpl_const_9065, Mem_T.INT4[pqxy_unit_ptr]);
    goto label_35;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8998} true;
    result.versdef$1 := 17;
    goto label_1;

  label_19_true:
    assume error != 0;
    assume value_is(__ctobpl_const_8909, error);
    goto label_23;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8985} true;
    result.versdef$1 := 1;
    goto label_1;
}



procedure {:extern} waitcont();
  free requires INT_LT(0, alloc);
  modifies errline_printed;
  free ensures INT_LEQ(old(alloc), alloc);



implementation {:extern} waitcont()
{
  var {:extern} havoc_stringTemp: int;
  var {:extern} condVal: int;
  var {:extern} tempBoogie0: int;
  var {:extern} tempBoogie1: int;
  var {:extern} tempBoogie2: int;
  var {:extern} tempBoogie3: int;
  var {:extern} tempBoogie4: int;
  var {:extern} tempBoogie5: int;
  var {:extern} tempBoogie6: int;
  var {:extern} tempBoogie7: int;
  var {:extern} tempBoogie8: int;
  var {:extern} tempBoogie9: int;
  var {:extern} tempBoogie10: int;
  var {:extern} tempBoogie11: int;
  var {:extern} tempBoogie12: int;
  var {:extern} tempBoogie13: int;
  var {:extern} tempBoogie14: int;
  var {:extern} tempBoogie15: int;
  var {:extern} tempBoogie16: int;
  var {:extern} tempBoogie17: int;
  var {:extern} tempBoogie18: int;
  var {:extern} tempBoogie19: int;

  anon0:
    havoc_stringTemp := 0;
    goto start;

  start:
    goto label_1;

  label_1:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 9082} true;
    return;
}



implementation GetInt_loop_label_27_head(in_ch: int, in_curr_ptr: int, in_i: int, in_$isdigit.arg.1$7$: int, in_num: int, in_result.TapeGet$8: int, in_result.isdigit$6: int) returns (out_ch: int, out_i: int, out_$isdigit.arg.1$7$: int, out_result.TapeGet$8: int, out_result.isdigit$6: int)
{

  entry:
    out_ch, out_i, out_$isdigit.arg.1$7$, out_result.TapeGet$8, out_result.isdigit$6 := in_ch, in_i, in_$isdigit.arg.1$7$, in_result.TapeGet$8, in_result.isdigit$6;
    goto label_27_head;

  label_27_head:
    out_$isdigit.arg.1$7$ := out_ch;
    assume value_is(__ctobpl_const_45, out_$isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_46, out_ch);
    goto label_28;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3259} true;
    out_ch := out_result.TapeGet$8;
    assume value_is(__ctobpl_const_73, out_ch);
    assume value_is(__ctobpl_const_74, out_result.TapeGet$8);
    goto label_40_dummy;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3259} true;
    call out_result.TapeGet$8 := TapeGet(in_curr_ptr);
    assume value_is(__ctobpl_const_71, in_curr_ptr);
    assume value_is(__ctobpl_const_72, in_curr_ptr);
    goto label_40;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3258} true;
    out_i := PLUS(out_i, 1, 1);
    assume value_is(__ctobpl_const_69, out_i);
    assume value_is(__ctobpl_const_70, out_i);
    goto label_37;

  label_34_false:
    assume !INT_LT(out_i, 5);
    assume value_is(__ctobpl_const_65, out_i);
    goto label_35;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3253} true;
    assert in_num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(in_num, 1, out_i) := out_ch];
    assume value_is(__ctobpl_const_66, out_i);
    assume value_is(__ctobpl_const_67, Mem_T.CHAR[PLUS(in_num, 1, out_i)]);
    assume value_is(__ctobpl_const_68, out_ch);
    goto label_35;

  label_34_true:
    assume INT_LT(out_i, 5);
    assume value_is(__ctobpl_const_65, out_i);
    goto label_36;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3252} true;
    goto label_34_true, label_34_false;

  label_33_true:
    assume Mem_T.Pcharac[in_curr_ptr] != 0;
    assume value_is(__ctobpl_const_50, in_curr_ptr);
    assume value_is(__ctobpl_const_51, Mem_T.Pcharac[in_curr_ptr]);
    goto label_34;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3251} true;
    assert in_curr_ptr != 0;
    goto label_33_true, label_33_false;

  label_33_false:
    assume Mem_T.Pcharac[in_curr_ptr] == 0;
    assume value_is(__ctobpl_const_50, in_curr_ptr);
    assume value_is(__ctobpl_const_51, Mem_T.Pcharac[in_curr_ptr]);
    out_ch, out_i, out_$isdigit.arg.1$7$, out_result.TapeGet$8, out_result.isdigit$6 := in_ch, in_i, in_$isdigit.arg.1$7$, in_result.TapeGet$8, in_result.isdigit$6;
    errline_printed, Mem_T.CHAR := old(errline_printed), old(Mem_T.CHAR);
    return;

  label_31_true:
    assume out_result.isdigit$6 != 0;
    assume value_is(__ctobpl_const_49, out_result.isdigit$6);
    goto label_33;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3251} true;
    goto label_31_true, label_31_false;

  label_31_false:
    assume out_result.isdigit$6 == 0;
    assume value_is(__ctobpl_const_49, out_result.isdigit$6);
    out_ch, out_i, out_$isdigit.arg.1$7$, out_result.TapeGet$8, out_result.isdigit$6 := in_ch, in_i, in_$isdigit.arg.1$7$, in_result.TapeGet$8, in_result.isdigit$6;
    errline_printed, Mem_T.CHAR := old(errline_printed), old(Mem_T.CHAR);
    return;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3251} true;
    call out_result.isdigit$6 := isdigit(out_$isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_47, out_$isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_48, out_$isdigit.arg.1$7$);
    goto label_31;

  label_40_dummy:
    call {:si_unique_call 1} out_ch, out_i, out_$isdigit.arg.1$7$, out_result.TapeGet$8, out_result.isdigit$6 := GetInt_loop_label_27_head(out_ch, in_curr_ptr, out_i, out_$isdigit.arg.1$7$, in_num, out_result.TapeGet$8, out_result.isdigit$6);
    return;

  exit:
    return;
}



procedure GetInt_loop_label_27_head(in_ch: int, in_curr_ptr: int, in_i: int, in_$isdigit.arg.1$7$: int, in_num: int, in_result.TapeGet$8: int, in_result.isdigit$6: int) returns (out_ch: int, out_i: int, out_$isdigit.arg.1$7$: int, out_result.TapeGet$8: int, out_result.isdigit$6: int);
  modifies errline_printed, Mem_T.CHAR;



implementation GetKeyword_loop_label_15_head(in_ch: int, in_curr_ptr: int, in_i: int, in_$isalnum.arg.1$4$: int, in_result.TapeGet$5: int, in_result.isalnum$3: int, in_word: int) returns (out_ch: int, out_i: int, out_$isalnum.arg.1$4$: int, out_result.TapeGet$5: int, out_result.isalnum$3: int)
{

  entry:
    out_ch, out_i, out_$isalnum.arg.1$4$, out_result.TapeGet$5, out_result.isalnum$3 := in_ch, in_i, in_$isalnum.arg.1$4$, in_result.TapeGet$5, in_result.isalnum$3;
    goto label_15_head;

  label_15_head:
    out_$isalnum.arg.1$4$ := out_ch;
    assume value_is(__ctobpl_const_86, out_$isalnum.arg.1$4$);
    assume value_is(__ctobpl_const_87, out_ch);
    goto label_16;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3327} true;
    out_ch := out_result.TapeGet$5;
    assume value_is(__ctobpl_const_111, out_ch);
    assume value_is(__ctobpl_const_112, out_result.TapeGet$5);
    goto label_29_dummy;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3327} true;
    call out_result.TapeGet$5 := TapeGet(in_curr_ptr);
    assume value_is(__ctobpl_const_109, in_curr_ptr);
    assume value_is(__ctobpl_const_110, in_curr_ptr);
    goto label_29;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3326} true;
    out_i := PLUS(out_i, 1, 1);
    assume value_is(__ctobpl_const_107, out_i);
    assume value_is(__ctobpl_const_108, out_i);
    goto label_26;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3322} true;
    assert in_word != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(in_word, 1, out_i) := out_ch];
    assume value_is(__ctobpl_const_104, out_i);
    assume value_is(__ctobpl_const_105, Mem_T.CHAR[PLUS(in_word, 1, out_i)]);
    assume value_is(__ctobpl_const_106, out_ch);
    goto label_25;

  label_23_true:
    assume Mem_T.Pcharac[in_curr_ptr] != 0;
    assume value_is(__ctobpl_const_93, in_curr_ptr);
    assume value_is(__ctobpl_const_94, Mem_T.Pcharac[in_curr_ptr]);
    goto label_24;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    assert in_curr_ptr != 0;
    goto label_23_true, label_23_false;

  label_23_false:
    assume Mem_T.Pcharac[in_curr_ptr] == 0;
    assume value_is(__ctobpl_const_93, in_curr_ptr);
    assume value_is(__ctobpl_const_94, Mem_T.Pcharac[in_curr_ptr]);
    out_ch, out_i, out_$isalnum.arg.1$4$, out_result.TapeGet$5, out_result.isalnum$3 := in_ch, in_i, in_$isalnum.arg.1$4$, in_result.TapeGet$5, in_result.isalnum$3;
    errline_printed, Mem_T.CHAR := old(errline_printed), old(Mem_T.CHAR);
    return;

  label_21_true:
    assume INT_LT(out_i, 20);
    assume value_is(__ctobpl_const_92, out_i);
    goto label_23;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    goto label_21_true, label_21_false;

  label_21_false:
    assume !INT_LT(out_i, 20);
    assume value_is(__ctobpl_const_92, out_i);
    out_ch, out_i, out_$isalnum.arg.1$4$, out_result.TapeGet$5, out_result.isalnum$3 := in_ch, in_i, in_$isalnum.arg.1$4$, in_result.TapeGet$5, in_result.isalnum$3;
    errline_printed, Mem_T.CHAR := old(errline_printed), old(Mem_T.CHAR);
    return;

  label_20_true:
    assume INT_EQ(out_ch, 95);
    assume value_is(__ctobpl_const_91, out_ch);
    goto label_21;

  label_19_true:
    assume out_result.isalnum$3 != 0;
    assume value_is(__ctobpl_const_90, out_result.isalnum$3);
    goto label_21;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    goto label_19_true, label_19_false;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    call out_result.isalnum$3 := isalnum(out_$isalnum.arg.1$4$);
    assume value_is(__ctobpl_const_88, out_$isalnum.arg.1$4$);
    assume value_is(__ctobpl_const_89, out_$isalnum.arg.1$4$);
    goto label_19;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3321} true;
    goto label_20_true, label_20_false;

  label_20_false:
    assume !INT_EQ(out_ch, 95);
    assume value_is(__ctobpl_const_91, out_ch);
    out_ch, out_i, out_$isalnum.arg.1$4$, out_result.TapeGet$5, out_result.isalnum$3 := in_ch, in_i, in_$isalnum.arg.1$4$, in_result.TapeGet$5, in_result.isalnum$3;
    errline_printed, Mem_T.CHAR := old(errline_printed), old(Mem_T.CHAR);
    return;

  label_19_false:
    assume out_result.isalnum$3 == 0;
    assume value_is(__ctobpl_const_90, out_result.isalnum$3);
    goto label_20;

  label_29_dummy:
    call {:si_unique_call 1} out_ch, out_i, out_$isalnum.arg.1$4$, out_result.TapeGet$5, out_result.isalnum$3 := GetKeyword_loop_label_15_head(out_ch, in_curr_ptr, out_i, out_$isalnum.arg.1$4$, out_result.TapeGet$5, out_result.isalnum$3, in_word);
    return;

  exit:
    return;
}



procedure GetKeyword_loop_label_15_head(in_ch: int, in_curr_ptr: int, in_i: int, in_$isalnum.arg.1$4$: int, in_result.TapeGet$5: int, in_result.isalnum$3: int, in_word: int) returns (out_ch: int, out_i: int, out_$isalnum.arg.1$4$: int, out_result.TapeGet$5: int, out_result.isalnum$3: int);
  modifies errline_printed, Mem_T.CHAR;



implementation GetReal_loop_label_27_head(in_ch: int, in_curr_ptr: int, in_i: int, in_$isdigit.arg.1$7$: int, in_num: int, in_result.TapeGet$8: int, in_result.isdigit$6: int) returns (out_ch: int, out_i: int, out_$isdigit.arg.1$7$: int, out_result.TapeGet$8: int, out_result.isdigit$6: int)
{

  entry:
    out_ch, out_i, out_$isdigit.arg.1$7$, out_result.TapeGet$8, out_result.isdigit$6 := in_ch, in_i, in_$isdigit.arg.1$7$, in_result.TapeGet$8, in_result.isdigit$6;
    goto label_27_head;

  label_27_head:
    out_$isdigit.arg.1$7$ := out_ch;
    assume value_is(__ctobpl_const_171, out_$isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_172, out_ch);
    goto label_28;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3441} true;
    out_ch := out_result.TapeGet$8;
    assume value_is(__ctobpl_const_201, out_ch);
    assume value_is(__ctobpl_const_202, out_result.TapeGet$8);
    goto label_41_dummy;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3441} true;
    call out_result.TapeGet$8 := TapeGet(in_curr_ptr);
    assume value_is(__ctobpl_const_199, in_curr_ptr);
    assume value_is(__ctobpl_const_200, in_curr_ptr);
    goto label_41;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3440} true;
    out_i := PLUS(out_i, 1, 1);
    assume value_is(__ctobpl_const_197, out_i);
    assume value_is(__ctobpl_const_198, out_i);
    goto label_38;

  label_35_false:
    assume !INT_LT(out_i, 100);
    assume value_is(__ctobpl_const_193, out_i);
    goto label_36;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3436} true;
    assert in_num != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(in_num, 1, out_i) := out_ch];
    assume value_is(__ctobpl_const_194, out_i);
    assume value_is(__ctobpl_const_195, Mem_T.CHAR[PLUS(in_num, 1, out_i)]);
    assume value_is(__ctobpl_const_196, out_ch);
    goto label_36;

  label_35_true:
    assume INT_LT(out_i, 100);
    assume value_is(__ctobpl_const_193, out_i);
    goto label_37;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3435} true;
    goto label_35_true, label_35_false;

  label_33_true:
    assume Mem_T.Pcharac[in_curr_ptr] != 0;
    assume value_is(__ctobpl_const_180, in_curr_ptr);
    assume value_is(__ctobpl_const_181, Mem_T.Pcharac[in_curr_ptr]);
    goto label_35;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    assert in_curr_ptr != 0;
    goto label_33_true, label_33_false;

  label_33_false:
    assume Mem_T.Pcharac[in_curr_ptr] == 0;
    assume value_is(__ctobpl_const_180, in_curr_ptr);
    assume value_is(__ctobpl_const_181, Mem_T.Pcharac[in_curr_ptr]);
    out_ch, out_i, out_$isdigit.arg.1$7$, out_result.TapeGet$8, out_result.isdigit$6 := in_ch, in_i, in_$isdigit.arg.1$7$, in_result.TapeGet$8, in_result.isdigit$6;
    errline_printed, Mem_T.CHAR := old(errline_printed), old(Mem_T.CHAR);
    return;

  label_52_true:
    assume INT_EQ(out_ch, 45);
    assume value_is(__ctobpl_const_179, out_ch);
    goto label_33;

  label_51_true:
    assume INT_EQ(out_ch, 69);
    assume value_is(__ctobpl_const_178, out_ch);
    goto label_33;

  label_50_true:
    assume INT_EQ(out_ch, 101);
    assume value_is(__ctobpl_const_177, out_ch);
    goto label_33;

  label_32_true:
    assume INT_EQ(out_ch, 46);
    assume value_is(__ctobpl_const_176, out_ch);
    goto label_33;

  label_31_true:
    assume out_result.isdigit$6 != 0;
    assume value_is(__ctobpl_const_175, out_result.isdigit$6);
    goto label_33;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_31_true, label_31_false;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    call out_result.isdigit$6 := isdigit(out_$isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_173, out_$isdigit.arg.1$7$);
    assume value_is(__ctobpl_const_174, out_$isdigit.arg.1$7$);
    goto label_31;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_32_true, label_32_false;

  label_31_false:
    assume out_result.isdigit$6 == 0;
    assume value_is(__ctobpl_const_175, out_result.isdigit$6);
    goto label_32;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_50_true, label_50_false;

  label_32_false:
    assume !INT_EQ(out_ch, 46);
    assume value_is(__ctobpl_const_176, out_ch);
    goto label_50;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_51_true, label_51_false;

  label_50_false:
    assume !INT_EQ(out_ch, 101);
    assume value_is(__ctobpl_const_177, out_ch);
    goto label_51;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3434} true;
    goto label_52_true, label_52_false;

  label_52_false:
    assume !INT_EQ(out_ch, 45);
    assume value_is(__ctobpl_const_179, out_ch);
    out_ch, out_i, out_$isdigit.arg.1$7$, out_result.TapeGet$8, out_result.isdigit$6 := in_ch, in_i, in_$isdigit.arg.1$7$, in_result.TapeGet$8, in_result.isdigit$6;
    errline_printed, Mem_T.CHAR := old(errline_printed), old(Mem_T.CHAR);
    return;

  label_51_false:
    assume !INT_EQ(out_ch, 69);
    assume value_is(__ctobpl_const_178, out_ch);
    goto label_52;

  label_41_dummy:
    call {:si_unique_call 1} out_ch, out_i, out_$isdigit.arg.1$7$, out_result.TapeGet$8, out_result.isdigit$6 := GetReal_loop_label_27_head(out_ch, in_curr_ptr, out_i, out_$isdigit.arg.1$7$, in_num, out_result.TapeGet$8, out_result.isdigit$6);
    return;

  exit:
    return;
}



procedure GetReal_loop_label_27_head(in_ch: int, in_curr_ptr: int, in_i: int, in_$isdigit.arg.1$7$: int, in_num: int, in_result.TapeGet$8: int, in_result.isdigit$6: int) returns (out_ch: int, out_i: int, out_$isdigit.arg.1$7$: int, out_result.TapeGet$8: int, out_result.isdigit$6: int);
  modifies errline_printed, Mem_T.CHAR;



implementation GetUName_loop_label_14_head(in_ch: int, in_curr_ptr: int, in_i: int, in_$isdigit.arg.1$5$: int, in_result.TapeGet$6: int, in_result.isdigit$4: int, in_result.isletter$3: int, in_word: int) returns (out_ch: int, out_i: int, out_$isdigit.arg.1$5$: int, out_result.TapeGet$6: int, out_result.isdigit$4: int, out_result.isletter$3: int)
{

  entry:
    out_ch, out_i, out_$isdigit.arg.1$5$, out_result.TapeGet$6, out_result.isdigit$4, out_result.isletter$3 := in_ch, in_i, in_$isdigit.arg.1$5$, in_result.TapeGet$6, in_result.isdigit$4, in_result.isletter$3;
    goto label_14_head;

  label_14_head:
    call out_result.isletter$3 := isletter(out_ch);
    assume value_is(__ctobpl_const_214, out_ch);
    assume value_is(__ctobpl_const_215, out_ch);
    goto label_17;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3498} true;
    out_ch := out_result.TapeGet$6;
    assume value_is(__ctobpl_const_262, out_ch);
    assume value_is(__ctobpl_const_263, out_result.TapeGet$6);
    goto label_27_dummy;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3498} true;
    call out_result.TapeGet$6 := TapeGet(in_curr_ptr);
    assume value_is(__ctobpl_const_260, in_curr_ptr);
    assume value_is(__ctobpl_const_261, in_curr_ptr);
    goto label_27;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3497} true;
    out_i := PLUS(out_i, 1, 1);
    assume value_is(__ctobpl_const_258, out_i);
    assume value_is(__ctobpl_const_259, out_i);
    goto label_24;

  label_21_false:
    assume !INT_LT(out_i, 30);
    assume value_is(__ctobpl_const_253, out_i);
    goto label_22;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3493} true;
    assert in_word != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(in_word, 1, out_i) := out_ch];
    assume value_is(__ctobpl_const_254, in_word);
    assume value_is(__ctobpl_const_255, out_i);
    assume value_is(__ctobpl_const_256, Mem_T.CHAR[PLUS(in_word, 1, out_i)]);
    assume value_is(__ctobpl_const_257, out_ch);
    goto label_22;

  label_21_true:
    assume INT_LT(out_i, 30);
    assume value_is(__ctobpl_const_253, out_i);
    goto label_23;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3492} true;
    goto label_21_true, label_21_false;

  label_19_true:
    assume Mem_T.Pcharac[in_curr_ptr] != 0;
    assume value_is(__ctobpl_const_222, in_curr_ptr);
    assume value_is(__ctobpl_const_223, Mem_T.Pcharac[in_curr_ptr]);
    goto label_21;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    assert in_curr_ptr != 0;
    goto label_19_true, label_19_false;

  label_19_false:
    assume Mem_T.Pcharac[in_curr_ptr] == 0;
    assume value_is(__ctobpl_const_222, in_curr_ptr);
    assume value_is(__ctobpl_const_223, Mem_T.Pcharac[in_curr_ptr]);
    out_ch, out_i, out_$isdigit.arg.1$5$, out_result.TapeGet$6, out_result.isdigit$4, out_result.isletter$3 := in_ch, in_i, in_$isdigit.arg.1$5$, in_result.TapeGet$6, in_result.isdigit$4, in_result.isletter$3;
    errline_printed, Mem_T.CHAR := old(errline_printed), old(Mem_T.CHAR);
    return;

  label_55_true:
    assume out_result.isdigit$4 != 0;
    assume value_is(__ctobpl_const_221, out_result.isdigit$4);
    goto label_19;

  label_17_true:
    assume out_result.isletter$3 != 0;
    assume value_is(__ctobpl_const_216, out_result.isletter$3);
    goto label_19;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    goto label_17_true, label_17_false;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    goto label_55_true, label_55_false;

  label_55_false:
    assume out_result.isdigit$4 == 0;
    assume value_is(__ctobpl_const_221, out_result.isdigit$4);
    out_ch, out_i, out_$isdigit.arg.1$5$, out_result.TapeGet$6, out_result.isdigit$4, out_result.isletter$3 := in_ch, in_i, in_$isdigit.arg.1$5$, in_result.TapeGet$6, in_result.isdigit$4, in_result.isletter$3;
    errline_printed, Mem_T.CHAR := old(errline_printed), old(Mem_T.CHAR);
    return;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    call out_result.isdigit$4 := isdigit(out_$isdigit.arg.1$5$);
    assume value_is(__ctobpl_const_219, out_$isdigit.arg.1$5$);
    assume value_is(__ctobpl_const_220, out_$isdigit.arg.1$5$);
    goto label_55;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3491} true;
    out_$isdigit.arg.1$5$ := out_ch;
    assume value_is(__ctobpl_const_217, out_$isdigit.arg.1$5$);
    assume value_is(__ctobpl_const_218, out_ch);
    goto label_52;

  label_17_false:
    assume out_result.isletter$3 == 0;
    assume value_is(__ctobpl_const_216, out_result.isletter$3);
    goto label_18;

  label_27_dummy:
    call {:si_unique_call 1} out_ch, out_i, out_$isdigit.arg.1$5$, out_result.TapeGet$6, out_result.isdigit$4, out_result.isletter$3 := GetUName_loop_label_14_head(out_ch, in_curr_ptr, out_i, out_$isdigit.arg.1$5$, out_result.TapeGet$6, out_result.isdigit$4, out_result.isletter$3, in_word);
    return;

  exit:
    return;
}



procedure GetUName_loop_label_14_head(in_ch: int, in_curr_ptr: int, in_i: int, in_$isdigit.arg.1$5$: int, in_result.TapeGet$6: int, in_result.isdigit$4: int, in_result.isletter$3: int, in_word: int) returns (out_ch: int, out_i: int, out_$isdigit.arg.1$5$: int, out_result.TapeGet$6: int, out_result.isdigit$4: int, out_result.isletter$3: int);
  modifies errline_printed, Mem_T.CHAR;



implementation InKWords_loop_label_12_head(in_WORD: int, in_i: int, in_result.strcmp$4: int, in_$strcmp.arg.2$5$: int) returns (out_i: int, out_result.strcmp$4: int, out_$strcmp.arg.2$5$: int)
{

  entry:
    out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$ := in_i, in_result.strcmp$4, in_$strcmp.arg.2$5$;
    goto label_12_head;

  label_12_head:
    goto label_12_true, label_12_false;

  label_12_false:
    assume !INT_LEQ(out_i, 125);
    assume value_is(__ctobpl_const_292, out_i);
    out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$ := in_i, in_result.strcmp$4, in_$strcmp.arg.2$5$;
    errline_printed := old(errline_printed);
    return;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4666} true;
    assume value_is(__ctobpl_const_300, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_20_dummy;

  label_18_true:
    assume out_result.strcmp$4 != 0;
    assume value_is(__ctobpl_const_299, out_result.strcmp$4);
    goto label_20;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4670} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume out_result.strcmp$4 == 0;
    assume value_is(__ctobpl_const_299, out_result.strcmp$4);
    out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$ := in_i, in_result.strcmp$4, in_$strcmp.arg.2$5$;
    errline_printed := old(errline_printed);
    return;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4670} true;
    call out_result.strcmp$4 := strcmp(in_WORD, out_$strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_295, in_WORD);
    assume value_is(__ctobpl_const_296, out_$strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_297, in_WORD);
    assume value_is(__ctobpl_const_298, out_$strcmp.arg.2$5$);
    goto label_18;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4670} true;
    out_$strcmp.arg.2$5$ := PLUS(Keywords, 21, out_i);
    assume value_is(__ctobpl_const_293, out_$strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_294, out_i);
    goto label_15;

  label_12_true:
    assume INT_LEQ(out_i, 125);
    assume value_is(__ctobpl_const_292, out_i);
    goto label_14;

  label_20_dummy:
    call {:si_unique_call 1} out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$ := InKWords_loop_label_12_head(in_WORD, out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$);
    return;

  exit:
    return;
}



procedure InKWords_loop_label_12_head(in_WORD: int, in_i: int, in_result.strcmp$4: int, in_$strcmp.arg.2$5$: int) returns (out_i: int, out_result.strcmp$4: int, out_$strcmp.arg.2$5$: int);
  modifies errline_printed;



implementation InUNames_loop_label_12_head(in_WORD: int, in_i: int, in_result.strcmp$4: int, in_$strcmp.arg.2$5$: int) returns (out_i: int, out_result.strcmp$4: int, out_$strcmp.arg.2$5$: int)
{

  entry:
    out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$ := in_i, in_result.strcmp$4, in_$strcmp.arg.2$5$;
    goto label_12_head;

  label_12_head:
    goto label_12_true, label_12_false;

  label_12_false:
    assume !INT_LEQ(out_i, 20);
    assume value_is(__ctobpl_const_305, out_i);
    out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$ := in_i, in_result.strcmp$4, in_$strcmp.arg.2$5$;
    errline_printed := old(errline_printed);
    return;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4760} true;
    assume value_is(__ctobpl_const_313, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_20_dummy;

  label_18_true:
    assume out_result.strcmp$4 != 0;
    assume value_is(__ctobpl_const_312, out_result.strcmp$4);
    goto label_20;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4764} true;
    goto label_18_true, label_18_false;

  label_18_false:
    assume out_result.strcmp$4 == 0;
    assume value_is(__ctobpl_const_312, out_result.strcmp$4);
    out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$ := in_i, in_result.strcmp$4, in_$strcmp.arg.2$5$;
    errline_printed := old(errline_printed);
    return;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4764} true;
    call out_result.strcmp$4 := strcmp(in_WORD, out_$strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_308, in_WORD);
    assume value_is(__ctobpl_const_309, out_$strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_310, in_WORD);
    assume value_is(__ctobpl_const_311, out_$strcmp.arg.2$5$);
    goto label_18;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4764} true;
    out_$strcmp.arg.2$5$ := PLUS(UserNames, 31, out_i);
    assume value_is(__ctobpl_const_306, out_$strcmp.arg.2$5$);
    assume value_is(__ctobpl_const_307, out_i);
    goto label_15;

  label_12_true:
    assume INT_LEQ(out_i, 20);
    assume value_is(__ctobpl_const_305, out_i);
    goto label_14;

  label_20_dummy:
    call {:si_unique_call 1} out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$ := InUNames_loop_label_12_head(in_WORD, out_i, out_result.strcmp$4, out_$strcmp.arg.2$5$);
    return;

  exit:
    return;
}



procedure InUNames_loop_label_12_head(in_WORD: int, in_i: int, in_result.strcmp$4: int, in_$strcmp.arg.2$5$: int) returns (out_i: int, out_result.strcmp$4: int, out_$strcmp.arg.2$5$: int);
  modifies errline_printed;



implementation addscan_loop_label_56_head(in_havoc_stringTemp: int, in_add_ptr: int, in_angle: int, in_app1_ptr: int, in_app2_ptr: int, in_elem_pdim: int, in_elem_qdim: int, in_elem_shape: int, in_group_ptr: int, in_group_shape: int, in_new_nodes_ptr: int, in_nodes_num: int, in_primo_ptr: int, in_pstep: int, in_qstep: int, in_result.mksblock$3: int, in_result.mkshex$7: int, in_result.mksnode$2: int, in_ultimo_ptr: int) returns (out_add_ptr: int, out_group_shape: int, out_nodes_num: int, out_primo_ptr: int, out_result.mksblock$3: int, out_result.mkshex$7: int, out_result.mksnode$2: int, out_ultimo_ptr: int)
{

  entry:
    out_add_ptr, out_group_shape, out_nodes_num, out_primo_ptr, out_result.mksblock$3, out_result.mkshex$7, out_result.mksnode$2, out_ultimo_ptr := in_add_ptr, in_group_shape, in_nodes_num, in_primo_ptr, in_result.mksblock$3, in_result.mkshex$7, in_result.mksnode$2, in_ultimo_ptr;
    goto label_56_head;

  label_56_head:
    goto label_56_true, label_56_false;

  label_56_false:
    assume out_add_ptr == 0;
    assume value_is(__ctobpl_const_604, out_add_ptr);
    out_add_ptr, out_group_shape, out_nodes_num, out_primo_ptr, out_result.mksblock$3, out_result.mkshex$7, out_result.mksnode$2, out_ultimo_ptr := in_add_ptr, in_group_shape, in_nodes_num, in_primo_ptr, in_result.mksblock$3, in_result.mkshex$7, in_result.mksnode$2, in_ultimo_ptr;
    Mem_T.NEXT_Geomnode, errline_printed := old(Mem_T.NEXT_Geomnode), old(errline_printed);
    return;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 873} true;
    assert out_add_ptr != 0;
    out_add_ptr := Mem_T.NEXT_AddRem[NEXT_AddRem(out_add_ptr)];
    assume value_is(__ctobpl_const_755, out_add_ptr);
    assume value_is(__ctobpl_const_756, out_add_ptr);
    assume value_is(__ctobpl_const_757, Mem_T.NEXT_AddRem[NEXT_AddRem(out_add_ptr)]);
    goto label_94_dummy;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 870} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_753, out_ultimo_ptr);
    assume value_is(__ctobpl_const_754, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr)]);
    goto label_94;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 868} true;
    assert in_app2_ptr != 0;
    out_ultimo_ptr := Mem_T.PGeomnode[in_app2_ptr];
    assume value_is(__ctobpl_const_750, out_ultimo_ptr);
    assume value_is(__ctobpl_const_751, in_app2_ptr);
    assume value_is(__ctobpl_const_752, Mem_T.PGeomnode[in_app2_ptr]);
    goto label_93;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 863} true;
    assert in_app1_ptr != 0;
    out_primo_ptr := Mem_T.PGeomnode[in_app1_ptr];
    assume value_is(__ctobpl_const_743, out_primo_ptr);
    assume value_is(__ctobpl_const_744, in_app1_ptr);
    assume value_is(__ctobpl_const_745, Mem_T.PGeomnode[in_app1_ptr]);
    goto label_92;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 865} true;
    assert out_ultimo_ptr != 0;
    assert in_app1_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr) := Mem_T.PGeomnode[in_app1_ptr]];
    assume value_is(__ctobpl_const_746, out_ultimo_ptr);
    assume value_is(__ctobpl_const_747, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_748, in_app1_ptr);
    assume value_is(__ctobpl_const_749, Mem_T.PGeomnode[in_app1_ptr]);
    goto label_92;

  label_89_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_742, out_primo_ptr);
    goto label_91;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 862} true;
    goto label_89_true, label_89_false;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 853} true;
    assert in_new_nodes_ptr != 0;
    out_nodes_num := PLUS(out_nodes_num, 1, Mem_T.INT4[in_new_nodes_ptr]);
    assume value_is(__ctobpl_const_738, out_nodes_num);
    assume value_is(__ctobpl_const_739, out_nodes_num);
    assume value_is(__ctobpl_const_740, in_new_nodes_ptr);
    assume value_is(__ctobpl_const_741, Mem_T.INT4[in_new_nodes_ptr]);
    goto label_89;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 846} true;
    goto label_88;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 828} true;
    goto label_88;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 819} true;
    goto label_88;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 849} true;
    call interror(in_havoc_stringTemp);
    goto label_88;

  label_59_case_0:
    assume INT_NEQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)], 0);
    assume INT_NEQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)], 1);
    assume INT_NEQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)], 2);
    assume INT_NEQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)], 3);
    assume value_is(__ctobpl_const_661, out_add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)]);
    goto label_63;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 807} true;
    assert out_add_ptr != 0;
    goto label_59_case_0, label_59_case_1, label_59_case_2, label_59_case_3, label_59_case_4;

  label_59_case_3:
    assume INT_EQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)], 2);
    assume value_is(__ctobpl_const_661, out_add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)]);
    out_add_ptr, out_group_shape, out_nodes_num, out_primo_ptr, out_result.mksblock$3, out_result.mkshex$7, out_result.mksnode$2, out_ultimo_ptr := in_add_ptr, in_group_shape, in_nodes_num, in_primo_ptr, in_result.mksblock$3, in_result.mkshex$7, in_result.mksnode$2, in_ultimo_ptr;
    Mem_T.NEXT_Geomnode, errline_printed := old(Mem_T.NEXT_Geomnode), old(errline_printed);
    return;

  label_58_false:
    assume !INT_EQ(Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(out_add_ptr)], 1);
    assume value_is(__ctobpl_const_659, out_add_ptr);
    assume value_is(__ctobpl_const_660, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(out_add_ptr)]);
    goto label_59;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 793} true;
    assert out_add_ptr != 0;
    goto label_58_true, label_58_false;

  label_58_true:
    assume INT_EQ(Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(out_add_ptr)], 1);
    assume value_is(__ctobpl_const_659, out_add_ptr);
    assume value_is(__ctobpl_const_660, Mem_T.ADDREM_TYPE_AddRem[ADDREM_TYPE_AddRem(out_add_ptr)]);
    out_add_ptr, out_group_shape, out_nodes_num, out_primo_ptr, out_result.mksblock$3, out_result.mkshex$7, out_result.mksnode$2, out_ultimo_ptr := in_add_ptr, in_group_shape, in_nodes_num, in_primo_ptr, in_result.mksblock$3, in_result.mkshex$7, in_result.mksnode$2, in_ultimo_ptr;
    Mem_T.NEXT_Geomnode, errline_printed := old(Mem_T.NEXT_Geomnode), old(errline_printed);
    goto label_60;

  label_56_true:
    assume out_add_ptr != 0;
    assume value_is(__ctobpl_const_604, out_add_ptr);
    goto label_58;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 814} true;
    out_group_shape := 3;
    assume value_is(__ctobpl_const_687, out_group_shape);
    goto label_106;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 816} true;
    out_group_shape := 2;
    assume value_is(__ctobpl_const_688, out_group_shape);
    goto label_106;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 818} true;
    out_group_shape := 5;
    assume value_is(__ctobpl_const_689, out_group_shape);
    goto label_106;

  label_103_true:
    assume out_group_shape != 0;
    assume value_is(__ctobpl_const_683, out_group_shape);
    goto label_105;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 812} true;
    goto label_103_true, label_103_false;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 810} true;
    call out_result.mksnode$2 := mksnode(out_add_ptr, in_app1_ptr, in_app2_ptr, in_pstep, in_qstep, in_angle, in_new_nodes_ptr, in_elem_shape, in_elem_pdim, in_elem_qdim);
    assume value_is(__ctobpl_const_663, out_add_ptr);
    assume value_is(__ctobpl_const_664, in_app1_ptr);
    assume value_is(__ctobpl_const_665, in_app2_ptr);
    assume value_is(__ctobpl_const_666, in_pstep);
    assume value_is(__ctobpl_const_667, in_qstep);
    assume value_is(__ctobpl_const_668, in_angle);
    assume value_is(__ctobpl_const_669, in_new_nodes_ptr);
    assume value_is(__ctobpl_const_670, in_elem_shape);
    assume value_is(__ctobpl_const_671, in_elem_pdim);
    assume value_is(__ctobpl_const_672, in_elem_qdim);
    assume value_is(__ctobpl_const_673, out_add_ptr);
    assume value_is(__ctobpl_const_674, in_app1_ptr);
    assume value_is(__ctobpl_const_675, in_app2_ptr);
    assume value_is(__ctobpl_const_676, in_pstep);
    assume value_is(__ctobpl_const_677, in_qstep);
    assume value_is(__ctobpl_const_678, in_angle);
    assume value_is(__ctobpl_const_679, in_new_nodes_ptr);
    assume value_is(__ctobpl_const_680, in_elem_shape);
    assume value_is(__ctobpl_const_681, in_elem_pdim);
    assume value_is(__ctobpl_const_682, in_elem_qdim);
    goto label_103;

  label_59_case_1:
    assume INT_EQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)], 0);
    assume value_is(__ctobpl_const_661, out_add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)]);
    goto label_66;

  label_104_true:
    assume Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])] != 0;
    assume value_is(__ctobpl_const_684, in_group_ptr);
    assume value_is(__ctobpl_const_685, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)]);
    assume value_is(__ctobpl_const_686, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])]);
    goto label_108;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 813} true;
    assert in_group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)] != 0;
    goto label_104_true, label_104_false;

  label_103_false:
    assume out_group_shape == 0;
    assume value_is(__ctobpl_const_683, out_group_shape);
    goto label_104;

  label_104_false:
    assume Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])] == 0;
    assume value_is(__ctobpl_const_684, in_group_ptr);
    assume value_is(__ctobpl_const_685, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)]);
    assume value_is(__ctobpl_const_686, Mem_T.GEOMETRY_Elem[GEOMETRY_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])]);
    goto label_107;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 827} true;
    out_group_shape := 5;
    assume value_is(__ctobpl_const_713, out_group_shape);
    goto label_101;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 825} true;
    out_group_shape := 3;
    assume value_is(__ctobpl_const_712, out_group_shape);
    goto label_101;

  label_99_true:
    assume INT_EQ(in_angle, 90);
    assume value_is(__ctobpl_const_711, in_angle);
    goto label_102;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 824} true;
    goto label_99_true, label_99_false;

  label_98_false:
    assume out_group_shape == 0;
    assume value_is(__ctobpl_const_710, out_group_shape);
    goto label_99;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 824} true;
    goto label_98_true, label_98_false;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 822} true;
    call out_result.mksblock$3 := mksblock(out_add_ptr, in_app1_ptr, in_app2_ptr, in_pstep, in_qstep, in_angle, in_new_nodes_ptr, in_elem_shape, in_elem_pdim, in_elem_qdim);
    assume value_is(__ctobpl_const_690, out_add_ptr);
    assume value_is(__ctobpl_const_691, in_app1_ptr);
    assume value_is(__ctobpl_const_692, in_app2_ptr);
    assume value_is(__ctobpl_const_693, in_pstep);
    assume value_is(__ctobpl_const_694, in_qstep);
    assume value_is(__ctobpl_const_695, in_angle);
    assume value_is(__ctobpl_const_696, in_new_nodes_ptr);
    assume value_is(__ctobpl_const_697, in_elem_shape);
    assume value_is(__ctobpl_const_698, in_elem_pdim);
    assume value_is(__ctobpl_const_699, in_elem_qdim);
    assume value_is(__ctobpl_const_700, out_add_ptr);
    assume value_is(__ctobpl_const_701, in_app1_ptr);
    assume value_is(__ctobpl_const_702, in_app2_ptr);
    assume value_is(__ctobpl_const_703, in_pstep);
    assume value_is(__ctobpl_const_704, in_qstep);
    assume value_is(__ctobpl_const_705, in_angle);
    assume value_is(__ctobpl_const_706, in_new_nodes_ptr);
    assume value_is(__ctobpl_const_707, in_elem_shape);
    assume value_is(__ctobpl_const_708, in_elem_pdim);
    assume value_is(__ctobpl_const_709, in_elem_qdim);
    goto label_98;

  label_59_case_2:
    assume INT_EQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)], 1);
    assume value_is(__ctobpl_const_661, out_add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)]);
    goto label_69;

  label_99_false:
    assume !INT_EQ(in_angle, 90);
    assume value_is(__ctobpl_const_711, in_angle);
    goto label_100;

  label_98_true:
    assume out_group_shape != 0;
    assume value_is(__ctobpl_const_710, out_group_shape);
    goto label_100;

  label_85:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 843} true;
    out_group_shape := 2;
    assume value_is(__ctobpl_const_736, out_group_shape);
    goto label_87;

  label_86:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 845} true;
    out_group_shape := 5;
    assume value_is(__ctobpl_const_737, out_group_shape);
    goto label_87;

  label_84_true:
    assume out_group_shape != 0;
    assume value_is(__ctobpl_const_735, out_group_shape);
    goto label_86;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 842} true;
    goto label_84_true, label_84_false;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 841} true;
    call out_result.mkshex$7 := mkshex(out_add_ptr, in_app1_ptr, in_app2_ptr, in_pstep, in_qstep, in_angle, in_new_nodes_ptr, in_elem_shape, in_elem_pdim, in_elem_qdim);
    assume value_is(__ctobpl_const_715, out_add_ptr);
    assume value_is(__ctobpl_const_716, in_app1_ptr);
    assume value_is(__ctobpl_const_717, in_app2_ptr);
    assume value_is(__ctobpl_const_718, in_pstep);
    assume value_is(__ctobpl_const_719, in_qstep);
    assume value_is(__ctobpl_const_720, in_angle);
    assume value_is(__ctobpl_const_721, in_new_nodes_ptr);
    assume value_is(__ctobpl_const_722, in_elem_shape);
    assume value_is(__ctobpl_const_723, in_elem_pdim);
    assume value_is(__ctobpl_const_724, in_elem_qdim);
    assume value_is(__ctobpl_const_725, out_add_ptr);
    assume value_is(__ctobpl_const_726, in_app1_ptr);
    assume value_is(__ctobpl_const_727, in_app2_ptr);
    assume value_is(__ctobpl_const_728, in_pstep);
    assume value_is(__ctobpl_const_729, in_qstep);
    assume value_is(__ctobpl_const_730, in_angle);
    assume value_is(__ctobpl_const_731, in_new_nodes_ptr);
    assume value_is(__ctobpl_const_732, in_elem_shape);
    assume value_is(__ctobpl_const_733, in_elem_pdim);
    assume value_is(__ctobpl_const_734, in_elem_qdim);
    goto label_84;

  label_75_false:
    assume !INT_NEQ(in_elem_shape, 2);
    assume value_is(__ctobpl_const_714, in_elem_shape);
    goto label_76;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 837} true;
    goto label_75_true, label_75_false;

  label_75_true:
    assume INT_NEQ(in_elem_shape, 2);
    assume value_is(__ctobpl_const_714, in_elem_shape);
    out_add_ptr, out_group_shape, out_nodes_num, out_primo_ptr, out_result.mksblock$3, out_result.mkshex$7, out_result.mksnode$2, out_ultimo_ptr := in_add_ptr, in_group_shape, in_nodes_num, in_primo_ptr, in_result.mksblock$3, in_result.mkshex$7, in_result.mksnode$2, in_ultimo_ptr;
    Mem_T.NEXT_Geomnode, errline_printed := old(Mem_T.NEXT_Geomnode), old(errline_printed);
    return;

  label_59_case_4:
    assume INT_EQ(Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)], 3);
    assume value_is(__ctobpl_const_661, out_add_ptr);
    assume value_is(__ctobpl_const_662, Mem_T.BLOCK_TYPE_AddRem[BLOCK_TYPE_AddRem(out_add_ptr)]);
    goto label_75;

  label_84_false:
    assume out_group_shape == 0;
    assume value_is(__ctobpl_const_735, out_group_shape);
    goto label_85;

  label_89_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_742, out_primo_ptr);
    goto label_90;

  label_94_dummy:
    call {:si_unique_call 1} out_add_ptr, out_group_shape, out_nodes_num, out_primo_ptr, out_result.mksblock$3, out_result.mkshex$7, out_result.mksnode$2, out_ultimo_ptr := addscan_loop_label_56_head(in_havoc_stringTemp, out_add_ptr, in_angle, in_app1_ptr, in_app2_ptr, in_elem_pdim, in_elem_qdim, in_elem_shape, in_group_ptr, out_group_shape, in_new_nodes_ptr, out_nodes_num, out_primo_ptr, in_pstep, in_qstep, out_result.mksblock$3, out_result.mkshex$7, out_result.mksnode$2, out_ultimo_ptr);
    return;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 799} true;
    goto label_62_dummy;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 797} true;
    assert out_add_ptr != 0;
    out_add_ptr := Mem_T.NEXT_AddRem[NEXT_AddRem(out_add_ptr)];
    assume value_is(__ctobpl_const_759, out_add_ptr);
    assume value_is(__ctobpl_const_760, out_add_ptr);
    assume value_is(__ctobpl_const_761, Mem_T.NEXT_AddRem[NEXT_AddRem(out_add_ptr)]);
    goto label_62;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 795} true;
    out_group_shape := 5;
    assume value_is(__ctobpl_const_758, out_group_shape);
    goto label_61;

  label_62_dummy:
    call {:si_unique_call 2} out_add_ptr, out_group_shape, out_nodes_num, out_primo_ptr, out_result.mksblock$3, out_result.mkshex$7, out_result.mksnode$2, out_ultimo_ptr := addscan_loop_label_56_head(in_havoc_stringTemp, out_add_ptr, in_angle, in_app1_ptr, in_app2_ptr, in_elem_pdim, in_elem_qdim, in_elem_shape, in_group_ptr, out_group_shape, in_new_nodes_ptr, out_nodes_num, out_primo_ptr, in_pstep, in_qstep, out_result.mksblock$3, out_result.mkshex$7, out_result.mksnode$2, out_ultimo_ptr);
    return;

  exit:
    return;
}



procedure addscan_loop_label_56_head(in_havoc_stringTemp: int, in_add_ptr: int, in_angle: int, in_app1_ptr: int, in_app2_ptr: int, in_elem_pdim: int, in_elem_qdim: int, in_elem_shape: int, in_group_ptr: int, in_group_shape: int, in_new_nodes_ptr: int, in_nodes_num: int, in_primo_ptr: int, in_pstep: int, in_qstep: int, in_result.mksblock$3: int, in_result.mkshex$7: int, in_result.mksnode$2: int, in_ultimo_ptr: int) returns (out_add_ptr: int, out_group_shape: int, out_nodes_num: int, out_primo_ptr: int, out_result.mksblock$3: int, out_result.mkshex$7: int, out_result.mksnode$2: int, out_ultimo_ptr: int);
  modifies Mem_T.NEXT_Geomnode, errline_printed;



implementation emsginit_loop_label_5_head(in_i: int) returns (out_i: int)
{

  entry:
    out_i := in_i;
    goto label_5_head;

  label_5_head:
    goto label_5_true, label_5_false;

  label_5_false:
    assume !INT_LEQ(out_i, 100);
    assume value_is(__ctobpl_const_1619, out_i);
    out_i := in_i;
    Mem_T.CHAR := old(Mem_T.CHAR);
    return;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1931} true;
    assume value_is(__ctobpl_const_1922, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_8_dummy;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 1932} true;
    assert PLUS(ErrorMessages, 101, out_i) != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(PLUS(ErrorMessages, 101, out_i), 1, 0) := 0];
    assume value_is(__ctobpl_const_1920, out_i);
    assume value_is(__ctobpl_const_1921, Mem_T.CHAR[PLUS(PLUS(ErrorMessages, 101, out_i), 1, 0)]);
    goto label_8;

  label_5_true:
    assume INT_LEQ(out_i, 100);
    assume value_is(__ctobpl_const_1619, out_i);
    goto label_7;

  label_8_dummy:
    call {:si_unique_call 1} out_i := emsginit_loop_label_5_head(out_i);
    return;

  exit:
    return;
}



procedure emsginit_loop_label_5_head(in_i: int) returns (out_i: int);
  modifies Mem_T.CHAR;



implementation extremes_loop_label_13_head(in_app_ptr: int, in_pmax: int, in_pmin: int, in_qmax: int, in_qmin: int) returns (out_app_ptr: int, out_pmax: int, out_pmin: int, out_qmax: int, out_qmin: int)
{

  entry:
    out_app_ptr, out_pmax, out_pmin, out_qmax, out_qmin := in_app_ptr, in_pmax, in_pmin, in_qmax, in_qmin;
    goto label_13_head;

  label_13_head:
    goto label_13_true, label_13_false;

  label_13_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_1929, out_app_ptr);
    out_app_ptr, out_pmax, out_pmin, out_qmax, out_qmin := in_app_ptr, in_pmax, in_pmin, in_qmax, in_qmin;
    return;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2108} true;
    assert out_app_ptr != 0;
    out_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_1962, out_app_ptr);
    assume value_is(__ctobpl_const_1963, out_app_ptr);
    assume value_is(__ctobpl_const_1964, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_app_ptr)]);
    goto label_22_dummy;

  label_20_false:
    assume !INT_LT(out_qmax, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1956, out_qmax);
    assume value_is(__ctobpl_const_1957, out_app_ptr);
    assume value_is(__ctobpl_const_1958, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    goto label_22;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2106} true;
    assert out_app_ptr != 0;
    out_qmax := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_1959, out_qmax);
    assume value_is(__ctobpl_const_1960, out_app_ptr);
    assume value_is(__ctobpl_const_1961, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    goto label_22;

  label_20_true:
    assume INT_LT(out_qmax, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1956, out_qmax);
    assume value_is(__ctobpl_const_1957, out_app_ptr);
    assume value_is(__ctobpl_const_1958, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    goto label_23;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2105} true;
    assert out_app_ptr != 0;
    goto label_20_true, label_20_false;

  label_18_false:
    assume !INT_LT(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)], out_qmin);
    assume value_is(__ctobpl_const_1950, out_app_ptr);
    assume value_is(__ctobpl_const_1951, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1952, out_qmin);
    goto label_20;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2104} true;
    assert out_app_ptr != 0;
    out_qmin := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_1953, out_qmin);
    assume value_is(__ctobpl_const_1954, out_app_ptr);
    assume value_is(__ctobpl_const_1955, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    goto label_20;

  label_18_true:
    assume INT_LT(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)], out_qmin);
    assume value_is(__ctobpl_const_1950, out_app_ptr);
    assume value_is(__ctobpl_const_1951, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1952, out_qmin);
    goto label_21;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2103} true;
    assert out_app_ptr != 0;
    goto label_18_true, label_18_false;

  label_16_false:
    assume !INT_LT(out_pmax, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1944, out_pmax);
    assume value_is(__ctobpl_const_1945, out_app_ptr);
    assume value_is(__ctobpl_const_1946, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    goto label_18;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2102} true;
    assert out_app_ptr != 0;
    out_pmax := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_1947, out_pmax);
    assume value_is(__ctobpl_const_1948, out_app_ptr);
    assume value_is(__ctobpl_const_1949, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    goto label_18;

  label_16_true:
    assume INT_LT(out_pmax, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1944, out_pmax);
    assume value_is(__ctobpl_const_1945, out_app_ptr);
    assume value_is(__ctobpl_const_1946, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    goto label_19;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2101} true;
    assert out_app_ptr != 0;
    goto label_16_true, label_16_false;

  label_15_false:
    assume !INT_LT(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)], out_pmin);
    assume value_is(__ctobpl_const_1938, out_app_ptr);
    assume value_is(__ctobpl_const_1939, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1940, out_pmin);
    goto label_16;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2100} true;
    assert out_app_ptr != 0;
    out_pmin := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_1941, out_pmin);
    assume value_is(__ctobpl_const_1942, out_app_ptr);
    assume value_is(__ctobpl_const_1943, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    goto label_16;

  label_15_true:
    assume INT_LT(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)], out_pmin);
    assume value_is(__ctobpl_const_1938, out_app_ptr);
    assume value_is(__ctobpl_const_1939, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1940, out_pmin);
    goto label_17;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2099} true;
    assert out_app_ptr != 0;
    goto label_15_true, label_15_false;

  label_13_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_1929, out_app_ptr);
    goto label_15;

  label_22_dummy:
    call {:si_unique_call 1} out_app_ptr, out_pmax, out_pmin, out_qmax, out_qmin := extremes_loop_label_13_head(out_app_ptr, out_pmax, out_pmin, out_qmax, out_qmin);
    return;

  exit:
    return;
}



procedure extremes_loop_label_13_head(in_app_ptr: int, in_pmax: int, in_pmin: int, in_qmax: int, in_qmin: int) returns (out_app_ptr: int, out_pmax: int, out_pmin: int, out_qmax: int, out_qmin: int);



implementation extsize_loop_label_13_head(in_app_ptr: int, in_xmax: int, in_xmin: int, in_ymax: int, in_ymin: int) returns (out_app_ptr: int, out_xmax: int, out_xmin: int, out_ymax: int, out_ymin: int)
{

  entry:
    out_app_ptr, out_xmax, out_xmin, out_ymax, out_ymin := in_app_ptr, in_xmax, in_xmin, in_ymax, in_ymin;
    goto label_13_head;

  label_13_head:
    goto label_13_true, label_13_false;

  label_13_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_1971, out_app_ptr);
    out_app_ptr, out_xmax, out_xmin, out_ymax, out_ymin := in_app_ptr, in_xmax, in_xmin, in_ymax, in_ymin;
    return;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2148} true;
    assert out_app_ptr != 0;
    out_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_2006, out_app_ptr);
    assume value_is(__ctobpl_const_2007, out_app_ptr);
    assume value_is(__ctobpl_const_2008, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_app_ptr)]);
    goto label_22_dummy;

  label_20_false:
    assume !INT_LT(out_ymax, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_2000, out_ymax);
    assume value_is(__ctobpl_const_2001, out_app_ptr);
    assume value_is(__ctobpl_const_2002, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    goto label_22;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2146} true;
    assert out_app_ptr != 0;
    out_ymax := Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_2003, out_ymax);
    assume value_is(__ctobpl_const_2004, out_app_ptr);
    assume value_is(__ctobpl_const_2005, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    goto label_22;

  label_20_true:
    assume INT_LT(out_ymax, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_2000, out_ymax);
    assume value_is(__ctobpl_const_2001, out_app_ptr);
    assume value_is(__ctobpl_const_2002, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    goto label_23;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2145} true;
    assert out_app_ptr != 0;
    goto label_20_true, label_20_false;

  label_18_false:
    assume !INT_LT(Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)], out_ymin);
    assume value_is(__ctobpl_const_1994, out_app_ptr);
    assume value_is(__ctobpl_const_1995, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1996, out_ymin);
    goto label_20;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2144} true;
    assert out_app_ptr != 0;
    out_ymin := Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_1997, out_ymin);
    assume value_is(__ctobpl_const_1998, out_app_ptr);
    assume value_is(__ctobpl_const_1999, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    goto label_20;

  label_18_true:
    assume INT_LT(Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)], out_ymin);
    assume value_is(__ctobpl_const_1994, out_app_ptr);
    assume value_is(__ctobpl_const_1995, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1996, out_ymin);
    goto label_21;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2143} true;
    assert out_app_ptr != 0;
    goto label_18_true, label_18_false;

  label_16_false:
    assume !INT_LT(out_xmax, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1988, out_xmax);
    assume value_is(__ctobpl_const_1989, out_app_ptr);
    assume value_is(__ctobpl_const_1990, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    goto label_18;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2142} true;
    assert out_app_ptr != 0;
    out_xmax := Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_1991, out_xmax);
    assume value_is(__ctobpl_const_1992, out_app_ptr);
    assume value_is(__ctobpl_const_1993, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    goto label_18;

  label_16_true:
    assume INT_LT(out_xmax, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1988, out_xmax);
    assume value_is(__ctobpl_const_1989, out_app_ptr);
    assume value_is(__ctobpl_const_1990, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    goto label_19;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2141} true;
    assert out_app_ptr != 0;
    goto label_16_true, label_16_false;

  label_15_false:
    assume !INT_LT(Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)], out_xmin);
    assume value_is(__ctobpl_const_1982, out_app_ptr);
    assume value_is(__ctobpl_const_1983, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1984, out_xmin);
    goto label_16;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2140} true;
    assert out_app_ptr != 0;
    out_xmin := Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_1985, out_xmin);
    assume value_is(__ctobpl_const_1986, out_app_ptr);
    assume value_is(__ctobpl_const_1987, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    goto label_16;

  label_15_true:
    assume INT_LT(Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)], out_xmin);
    assume value_is(__ctobpl_const_1982, out_app_ptr);
    assume value_is(__ctobpl_const_1983, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_1984, out_xmin);
    goto label_17;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2139} true;
    assert out_app_ptr != 0;
    goto label_15_true, label_15_false;

  label_13_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_1971, out_app_ptr);
    goto label_15;

  label_22_dummy:
    call {:si_unique_call 1} out_app_ptr, out_xmax, out_xmin, out_ymax, out_ymin := extsize_loop_label_13_head(out_app_ptr, out_xmax, out_xmin, out_ymax, out_ymin);
    return;

  exit:
    return;
}



procedure extsize_loop_label_13_head(in_app_ptr: int, in_xmax: int, in_xmin: int, in_ymax: int, in_ymin: int) returns (out_app_ptr: int, out_xmax: int, out_xmin: int, out_ymax: int, out_ymin: int);



implementation fixport_loop_label_11_head(in_amp: int, in_amp_ptr: int, in_ang: int, in_ang_ptr: int, in_app_ptr: int, in_elem_ptr: int, in_result.degconv$3: int, in_result.degconv$4: int, in_result.degconv$5: int, in_result.degconv$6: int, in_result.linconv$2: int) returns (out_app_ptr: int, out_result.degconv$3: int, out_result.degconv$4: int, out_result.degconv$5: int, out_result.degconv$6: int, out_result.linconv$2: int)
{

  entry:
    out_app_ptr, out_result.degconv$3, out_result.degconv$4, out_result.degconv$5, out_result.degconv$6, out_result.linconv$2 := in_app_ptr, in_result.degconv$3, in_result.degconv$4, in_result.degconv$5, in_result.degconv$6, in_result.linconv$2;
    goto label_11_head;

  label_11_head:
    goto label_11_true, label_11_false;

  label_11_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_2225, out_app_ptr);
    out_app_ptr, out_result.degconv$3, out_result.degconv$4, out_result.degconv$5, out_result.degconv$6, out_result.linconv$2 := in_app_ptr, in_result.degconv$3, in_result.degconv$4, in_result.degconv$5, in_result.degconv$6, in_result.linconv$2;
    Mem_T.PHEPOL_UNIT_Port, Mem_T.PPA_UNIT_Port, Mem_T.PSH_UNIT_Port, Mem_T.PSC_UNIT_Port, Mem_T.AMP_UNIT_Port, Mem_T.PHEPOL_Port, Mem_T.PPA_Port, errline_printed, Mem_T.FLOAT, Mem_T.PSH_Port, Mem_T.PSC_Port, Mem_T.AMP_Port := old(Mem_T.PHEPOL_UNIT_Port), old(Mem_T.PPA_UNIT_Port), old(Mem_T.PSH_UNIT_Port), old(Mem_T.PSC_UNIT_Port), old(Mem_T.AMP_UNIT_Port), old(Mem_T.PHEPOL_Port), old(Mem_T.PPA_Port), old(errline_printed), old(Mem_T.FLOAT), old(Mem_T.PSH_Port), old(Mem_T.PSC_Port), old(Mem_T.AMP_Port);
    return;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2368} true;
    assert out_app_ptr != 0;
    out_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_app_ptr)];
    assume value_is(__ctobpl_const_2308, out_app_ptr);
    assume value_is(__ctobpl_const_2309, out_app_ptr);
    assume value_is(__ctobpl_const_2310, Mem_T.NEXT_Port[NEXT_Port(out_app_ptr)]);
    goto label_40_dummy;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2366} true;
    assert out_app_ptr != 0;
    Mem_T.PHEPOL_UNIT_Port := Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_2306, out_app_ptr);
    assume value_is(__ctobpl_const_2307, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(out_app_ptr)]);
    goto label_40;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2365} true;
    assert out_app_ptr != 0;
    Mem_T.PPA_UNIT_Port := Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_2304, out_app_ptr);
    assume value_is(__ctobpl_const_2305, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(out_app_ptr)]);
    goto label_39;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2364} true;
    assert out_app_ptr != 0;
    Mem_T.PSH_UNIT_Port := Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_2302, out_app_ptr);
    assume value_is(__ctobpl_const_2303, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(out_app_ptr)]);
    goto label_38;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2363} true;
    assert out_app_ptr != 0;
    Mem_T.PSC_UNIT_Port := Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_2300, out_app_ptr);
    assume value_is(__ctobpl_const_2301, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(out_app_ptr)]);
    goto label_37;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2362} true;
    assert out_app_ptr != 0;
    Mem_T.AMP_UNIT_Port := Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_2298, out_app_ptr);
    assume value_is(__ctobpl_const_2299, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(out_app_ptr)]);
    goto label_36;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2358} true;
    assert out_app_ptr != 0;
    Mem_T.PHEPOL_Port := Mem_T.PHEPOL_Port[PHEPOL_Port(out_app_ptr) := Mem_T.FLOAT[in_ang]];
    assume value_is(__ctobpl_const_2295, out_app_ptr);
    assume value_is(__ctobpl_const_2296, Mem_T.PHEPOL_Port[PHEPOL_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2297, Mem_T.FLOAT[in_ang]);
    goto label_35;

  label_33_true:
    assume Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(in_elem_ptr)] != 0;
    assume value_is(__ctobpl_const_2274, in_elem_ptr);
    assume value_is(__ctobpl_const_2275, Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(in_elem_ptr)]);
    goto label_35;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2350} true;
    assert in_elem_ptr != 0;
    goto label_33_true, label_33_false;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2347} true;
    assert out_app_ptr != 0;
    Mem_T.PPA_Port := Mem_T.PPA_Port[PPA_Port(out_app_ptr) := Mem_T.FLOAT[in_ang]];
    assume value_is(__ctobpl_const_2271, out_app_ptr);
    assume value_is(__ctobpl_const_2272, Mem_T.PPA_Port[PPA_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2273, Mem_T.FLOAT[in_ang]);
    goto label_33;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2346} true;
    assert out_app_ptr != 0;
    assert out_app_ptr != 0;
    call out_result.degconv$5 := degconv(in_ang_ptr, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2265, in_ang_ptr);
    assume value_is(__ctobpl_const_2266, out_app_ptr);
    assume value_is(__ctobpl_const_2267, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2268, in_ang_ptr);
    assume value_is(__ctobpl_const_2269, out_app_ptr);
    assume value_is(__ctobpl_const_2270, Mem_T.PPA_UNIT_Port[PPA_UNIT_Port(out_app_ptr)]);
    goto label_32;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2345} true;
    assert out_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[in_ang := Mem_T.PPA_Port[PPA_Port(out_app_ptr)]];
    assume value_is(__ctobpl_const_2262, Mem_T.FLOAT[in_ang]);
    assume value_is(__ctobpl_const_2263, out_app_ptr);
    assume value_is(__ctobpl_const_2264, Mem_T.PPA_Port[PPA_Port(out_app_ptr)]);
    goto label_29;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2343} true;
    assert out_app_ptr != 0;
    Mem_T.PSH_Port := Mem_T.PSH_Port[PSH_Port(out_app_ptr) := Mem_T.FLOAT[in_ang]];
    assume value_is(__ctobpl_const_2259, out_app_ptr);
    assume value_is(__ctobpl_const_2260, Mem_T.PSH_Port[PSH_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2261, Mem_T.FLOAT[in_ang]);
    goto label_28;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2342} true;
    assert out_app_ptr != 0;
    assert out_app_ptr != 0;
    call out_result.degconv$4 := degconv(in_ang_ptr, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2253, in_ang_ptr);
    assume value_is(__ctobpl_const_2254, out_app_ptr);
    assume value_is(__ctobpl_const_2255, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2256, in_ang_ptr);
    assume value_is(__ctobpl_const_2257, out_app_ptr);
    assume value_is(__ctobpl_const_2258, Mem_T.PSH_UNIT_Port[PSH_UNIT_Port(out_app_ptr)]);
    goto label_27;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2341} true;
    assert out_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[in_ang := Mem_T.PSH_Port[PSH_Port(out_app_ptr)]];
    assume value_is(__ctobpl_const_2250, Mem_T.FLOAT[in_ang]);
    assume value_is(__ctobpl_const_2251, out_app_ptr);
    assume value_is(__ctobpl_const_2252, Mem_T.PSH_Port[PSH_Port(out_app_ptr)]);
    goto label_24;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2339} true;
    assert out_app_ptr != 0;
    Mem_T.PSC_Port := Mem_T.PSC_Port[PSC_Port(out_app_ptr) := Mem_T.FLOAT[in_ang]];
    assume value_is(__ctobpl_const_2247, out_app_ptr);
    assume value_is(__ctobpl_const_2248, Mem_T.PSC_Port[PSC_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2249, Mem_T.FLOAT[in_ang]);
    goto label_23;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2338} true;
    assert out_app_ptr != 0;
    assert out_app_ptr != 0;
    call out_result.degconv$3 := degconv(in_ang_ptr, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2241, in_ang_ptr);
    assume value_is(__ctobpl_const_2242, out_app_ptr);
    assume value_is(__ctobpl_const_2243, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2244, in_ang_ptr);
    assume value_is(__ctobpl_const_2245, out_app_ptr);
    assume value_is(__ctobpl_const_2246, Mem_T.PSC_UNIT_Port[PSC_UNIT_Port(out_app_ptr)]);
    goto label_22;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2337} true;
    assert out_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[in_ang := Mem_T.PSC_Port[PSC_Port(out_app_ptr)]];
    assume value_is(__ctobpl_const_2238, Mem_T.FLOAT[in_ang]);
    assume value_is(__ctobpl_const_2239, out_app_ptr);
    assume value_is(__ctobpl_const_2240, Mem_T.PSC_Port[PSC_Port(out_app_ptr)]);
    goto label_19;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2335} true;
    assert out_app_ptr != 0;
    Mem_T.AMP_Port := Mem_T.AMP_Port[AMP_Port(out_app_ptr) := Mem_T.FLOAT[in_amp]];
    assume value_is(__ctobpl_const_2235, out_app_ptr);
    assume value_is(__ctobpl_const_2236, Mem_T.AMP_Port[AMP_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2237, Mem_T.FLOAT[in_amp]);
    goto label_18;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2334} true;
    assert out_app_ptr != 0;
    assert out_app_ptr != 0;
    call out_result.linconv$2 := linconv(in_amp_ptr, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2229, in_amp_ptr);
    assume value_is(__ctobpl_const_2230, out_app_ptr);
    assume value_is(__ctobpl_const_2231, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2232, in_amp_ptr);
    assume value_is(__ctobpl_const_2233, out_app_ptr);
    assume value_is(__ctobpl_const_2234, Mem_T.AMP_UNIT_Port[AMP_UNIT_Port(out_app_ptr)]);
    goto label_17;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2333} true;
    assert out_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[in_amp := Mem_T.AMP_Port[AMP_Port(out_app_ptr)]];
    assume value_is(__ctobpl_const_2226, Mem_T.FLOAT[in_amp]);
    assume value_is(__ctobpl_const_2227, out_app_ptr);
    assume value_is(__ctobpl_const_2228, Mem_T.AMP_Port[AMP_Port(out_app_ptr)]);
    goto label_14;

  label_11_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_2225, out_app_ptr);
    goto label_13;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2357} true;
    assert out_app_ptr != 0;
    assert out_app_ptr != 0;
    call out_result.degconv$6 := degconv(in_ang_ptr, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2289, in_ang_ptr);
    assume value_is(__ctobpl_const_2290, out_app_ptr);
    assume value_is(__ctobpl_const_2291, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2292, in_ang_ptr);
    assume value_is(__ctobpl_const_2293, out_app_ptr);
    assume value_is(__ctobpl_const_2294, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(out_app_ptr)]);
    goto label_47;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2356} true;
    assert out_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[in_ang := Mem_T.PHEPOL_Port[PHEPOL_Port(out_app_ptr)]];
    assume value_is(__ctobpl_const_2286, Mem_T.FLOAT[in_ang]);
    assume value_is(__ctobpl_const_2287, out_app_ptr);
    assume value_is(__ctobpl_const_2288, Mem_T.PHEPOL_Port[PHEPOL_Port(out_app_ptr)]);
    goto label_44;

  label_34_false:
    assume !INT_EQ(Mem_T.OMIT_POL_Port[OMIT_POL_Port(out_app_ptr)], 1);
    assume value_is(__ctobpl_const_2276, out_app_ptr);
    assume value_is(__ctobpl_const_2277, Mem_T.OMIT_POL_Port[OMIT_POL_Port(out_app_ptr)]);
    goto label_41;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2353} true;
    assert out_app_ptr != 0;
    assert in_elem_ptr != 0;
    Mem_T.PHEPOL_UNIT_Port := Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(out_app_ptr) := Mem_T.PHEPOL_UNIT_Elem[PHEPOL_UNIT_Elem(in_elem_ptr)]];
    assume value_is(__ctobpl_const_2282, out_app_ptr);
    assume value_is(__ctobpl_const_2283, Mem_T.PHEPOL_UNIT_Port[PHEPOL_UNIT_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2284, in_elem_ptr);
    assume value_is(__ctobpl_const_2285, Mem_T.PHEPOL_UNIT_Elem[PHEPOL_UNIT_Elem(in_elem_ptr)]);
    goto label_41;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2352} true;
    assert out_app_ptr != 0;
    assert in_elem_ptr != 0;
    Mem_T.PHEPOL_Port := Mem_T.PHEPOL_Port[PHEPOL_Port(out_app_ptr) := Mem_T.PHEPOL_Elem[PHEPOL_Elem(in_elem_ptr)]];
    assume value_is(__ctobpl_const_2278, out_app_ptr);
    assume value_is(__ctobpl_const_2279, Mem_T.PHEPOL_Port[PHEPOL_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_2280, in_elem_ptr);
    assume value_is(__ctobpl_const_2281, Mem_T.PHEPOL_Elem[PHEPOL_Elem(in_elem_ptr)]);
    goto label_43;

  label_34_true:
    assume INT_EQ(Mem_T.OMIT_POL_Port[OMIT_POL_Port(out_app_ptr)], 1);
    assume value_is(__ctobpl_const_2276, out_app_ptr);
    assume value_is(__ctobpl_const_2277, Mem_T.OMIT_POL_Port[OMIT_POL_Port(out_app_ptr)]);
    goto label_42;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 2351} true;
    assert out_app_ptr != 0;
    goto label_34_true, label_34_false;

  label_33_false:
    assume Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(in_elem_ptr)] == 0;
    assume value_is(__ctobpl_const_2274, in_elem_ptr);
    assume value_is(__ctobpl_const_2275, Mem_T.POLARIZATION_Elem[POLARIZATION_Elem(in_elem_ptr)]);
    goto label_34;

  label_40_dummy:
    call {:si_unique_call 1} out_app_ptr, out_result.degconv$3, out_result.degconv$4, out_result.degconv$5, out_result.degconv$6, out_result.linconv$2 := fixport_loop_label_11_head(in_amp, in_amp_ptr, in_ang, in_ang_ptr, out_app_ptr, in_elem_ptr, out_result.degconv$3, out_result.degconv$4, out_result.degconv$5, out_result.degconv$6, out_result.linconv$2);
    return;

  exit:
    return;
}



procedure fixport_loop_label_11_head(in_amp: int, in_amp_ptr: int, in_ang: int, in_ang_ptr: int, in_app_ptr: int, in_elem_ptr: int, in_result.degconv$3: int, in_result.degconv$4: int, in_result.degconv$5: int, in_result.degconv$6: int, in_result.linconv$2: int) returns (out_app_ptr: int, out_result.degconv$3: int, out_result.degconv$4: int, out_result.degconv$5: int, out_result.degconv$6: int, out_result.linconv$2: int);
  modifies Mem_T.PHEPOL_UNIT_Port, Mem_T.PPA_UNIT_Port, Mem_T.PSH_UNIT_Port, Mem_T.PSC_UNIT_Port, Mem_T.AMP_UNIT_Port, Mem_T.PHEPOL_Port, Mem_T.PPA_Port, errline_printed, Mem_T.FLOAT, Mem_T.PSH_Port, Mem_T.PSC_Port, Mem_T.AMP_Port;



implementation gnodfind_loop_label_4_head(in_gnode_ptr: int, in_p: int, in_q: int)
{

  entry:
    goto label_4_head;

  label_4_head:
    assert in_gnode_ptr != 0;
    assert Mem_T.PGeomnode[in_gnode_ptr] != 0;
    goto label_4_true, label_4_false;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3651} true;
    assert in_gnode_ptr != 0;
    assert in_gnode_ptr != 0;
    assert Mem_T.PGeomnode[in_gnode_ptr] != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[in_gnode_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])]];
    assume value_is(__ctobpl_const_3030, in_gnode_ptr);
    assume value_is(__ctobpl_const_3031, Mem_T.PGeomnode[in_gnode_ptr]);
    assume value_is(__ctobpl_const_3032, in_gnode_ptr);
    assume value_is(__ctobpl_const_3033, Mem_T.PGeomnode[in_gnode_ptr]);
    assume value_is(__ctobpl_const_3034, Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])]);
    goto label_11_dummy;

  label_5_true:
    assume Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])] != 0;
    assume value_is(__ctobpl_const_3027, in_gnode_ptr);
    assume value_is(__ctobpl_const_3028, Mem_T.PGeomnode[in_gnode_ptr]);
    assume value_is(__ctobpl_const_3029, Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])]);
    goto label_11;

  label_5:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3650} true;
    assert in_gnode_ptr != 0;
    assert Mem_T.PGeomnode[in_gnode_ptr] != 0;
    goto label_5_true, label_5_false;

  label_5_false:
    assume Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])] == 0;
    assume value_is(__ctobpl_const_3027, in_gnode_ptr);
    assume value_is(__ctobpl_const_3028, Mem_T.PGeomnode[in_gnode_ptr]);
    assume value_is(__ctobpl_const_3029, Mem_T.NEXT_Geomnode[NEXT_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])]);
    Mem_T.PGeomnode := old(Mem_T.PGeomnode);
    return;

  label_4_false:
    assume !INT_EQ(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])], in_p);
    assume value_is(__ctobpl_const_3019, in_gnode_ptr);
    assume value_is(__ctobpl_const_3020, Mem_T.PGeomnode[in_gnode_ptr]);
    assume value_is(__ctobpl_const_3021, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])]);
    assume value_is(__ctobpl_const_3022, in_p);
    goto label_5;

  label_6_false:
    assume !INT_EQ(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])], in_q);
    assume value_is(__ctobpl_const_3023, in_gnode_ptr);
    assume value_is(__ctobpl_const_3024, Mem_T.PGeomnode[in_gnode_ptr]);
    assume value_is(__ctobpl_const_3025, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])]);
    assume value_is(__ctobpl_const_3026, in_q);
    goto label_5;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3650} true;
    assert in_gnode_ptr != 0;
    assert Mem_T.PGeomnode[in_gnode_ptr] != 0;
    goto label_6_true, label_6_false;

  label_6_true:
    assume INT_EQ(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])], in_q);
    assume value_is(__ctobpl_const_3023, in_gnode_ptr);
    assume value_is(__ctobpl_const_3024, Mem_T.PGeomnode[in_gnode_ptr]);
    assume value_is(__ctobpl_const_3025, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])]);
    assume value_is(__ctobpl_const_3026, in_q);
    Mem_T.PGeomnode := old(Mem_T.PGeomnode);
    return;

  label_4_true:
    assume INT_EQ(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])], in_p);
    assume value_is(__ctobpl_const_3019, in_gnode_ptr);
    assume value_is(__ctobpl_const_3020, Mem_T.PGeomnode[in_gnode_ptr]);
    assume value_is(__ctobpl_const_3021, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(Mem_T.PGeomnode[in_gnode_ptr])]);
    assume value_is(__ctobpl_const_3022, in_p);
    goto label_6;

  label_11_dummy:
    call {:si_unique_call 1} gnodfind_loop_label_4_head(in_gnode_ptr, in_p, in_q);
    return;

  exit:
    return;
}



procedure gnodfind_loop_label_4_head(in_gnode_ptr: int, in_p: int, in_q: int);
  modifies Mem_T.PGeomnode;



implementation grgeodef_loop_label_33_head(in_app_ptr: int, in_curr_ptr: int, in_error: int, in_result.adremdef$5: int, in_ultimo_ptr: int) returns (out_error: int, out_result.adremdef$5: int, out_ultimo_ptr: int)
{

  entry:
    out_error, out_result.adremdef$5, out_ultimo_ptr := in_error, in_result.adremdef$5, in_ultimo_ptr;
    goto label_33_head;

  label_33_head:
    goto label_33_true, label_33_false;

  label_33_false:
    assume 1 == 0;
    out_error, out_result.adremdef$5, out_ultimo_ptr := in_error, in_result.adremdef$5, in_ultimo_ptr;
    Mem_T.NEXT_AddRem, errline_printed := old(Mem_T.NEXT_AddRem), old(errline_printed);
    return;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3957} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_3318, out_ultimo_ptr);
    assume value_is(__ctobpl_const_3319, Mem_T.NEXT_AddRem[NEXT_AddRem(out_ultimo_ptr)]);
    goto label_51_dummy;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3955} true;
    assert in_app_ptr != 0;
    out_ultimo_ptr := Mem_T.PAddRem[in_app_ptr];
    assume value_is(__ctobpl_const_3315, out_ultimo_ptr);
    assume value_is(__ctobpl_const_3316, in_app_ptr);
    assume value_is(__ctobpl_const_3317, Mem_T.PAddRem[in_app_ptr]);
    goto label_51;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3953} true;
    assert out_ultimo_ptr != 0;
    assert in_app_ptr != 0;
    Mem_T.NEXT_AddRem := Mem_T.NEXT_AddRem[NEXT_AddRem(out_ultimo_ptr) := Mem_T.PAddRem[in_app_ptr]];
    assume value_is(__ctobpl_const_3311, out_ultimo_ptr);
    assume value_is(__ctobpl_const_3312, Mem_T.NEXT_AddRem[NEXT_AddRem(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_3313, in_app_ptr);
    assume value_is(__ctobpl_const_3314, Mem_T.PAddRem[in_app_ptr]);
    goto label_50;

  label_39_false:
    assume !INT_EQ(out_error, 17);
    assume value_is(__ctobpl_const_3310, out_error);
    goto label_43;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3946} true;
    goto label_39_true, label_39_false;

  label_39_true:
    assume INT_EQ(out_error, 17);
    assume value_is(__ctobpl_const_3310, out_error);
    out_error, out_result.adremdef$5, out_ultimo_ptr := in_error, in_result.adremdef$5, in_ultimo_ptr;
    Mem_T.NEXT_AddRem, errline_printed := old(Mem_T.NEXT_AddRem), old(errline_printed);
    return;

  label_38_false:
    assume !INT_EQ(out_error, 1);
    assume value_is(__ctobpl_const_3309, out_error);
    goto label_39;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3941} true;
    goto label_38_true, label_38_false;

  label_38_true:
    assume INT_EQ(out_error, 1);
    assume value_is(__ctobpl_const_3309, out_error);
    out_error, out_result.adremdef$5, out_ultimo_ptr := in_error, in_result.adremdef$5, in_ultimo_ptr;
    Mem_T.NEXT_AddRem, errline_printed := old(Mem_T.NEXT_AddRem), old(errline_printed);
    return;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3940} true;
    out_error := out_result.adremdef$5;
    assume value_is(__ctobpl_const_3307, out_error);
    assume value_is(__ctobpl_const_3308, out_result.adremdef$5);
    goto label_38;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 3940} true;
    assert in_curr_ptr != 0;
    assert in_curr_ptr != 0;
    call out_result.adremdef$5 := adremdef(Mem_T.Pcharac[in_curr_ptr], in_curr_ptr, in_app_ptr);
    assume value_is(__ctobpl_const_3299, in_curr_ptr);
    assume value_is(__ctobpl_const_3300, Mem_T.Pcharac[in_curr_ptr]);
    assume value_is(__ctobpl_const_3301, in_curr_ptr);
    assume value_is(__ctobpl_const_3302, in_app_ptr);
    assume value_is(__ctobpl_const_3303, in_curr_ptr);
    assume value_is(__ctobpl_const_3304, Mem_T.Pcharac[in_curr_ptr]);
    assume value_is(__ctobpl_const_3305, in_curr_ptr);
    assume value_is(__ctobpl_const_3306, in_app_ptr);
    goto label_37;

  label_33_true:
    assume 1 != 0;
    goto label_34;

  label_51_dummy:
    call {:si_unique_call 1} out_error, out_result.adremdef$5, out_ultimo_ptr := grgeodef_loop_label_33_head(in_app_ptr, in_curr_ptr, out_error, out_result.adremdef$5, out_ultimo_ptr);
    return;

  exit:
    return;
}



procedure grgeodef_loop_label_33_head(in_app_ptr: int, in_curr_ptr: int, in_error: int, in_result.adremdef$5: int, in_ultimo_ptr: int) returns (out_error: int, out_result.adremdef$5: int, out_ultimo_ptr: int);
  modifies Mem_T.NEXT_AddRem, errline_printed;



implementation grwrite_loop_label_125_head(in_geomport_ptr: int, in_$printf.arg.2$46$: int, in_$printf.arg.2$48$: int, in_$printf.arg.2$50$: int, in_$printf.arg.2$52$: int, in_$printf.arg.2$55$: int, in_$printf.arg.2$57$: int, in_$printf.arg.2$59$: int, in_$printf.arg.2$61$: int, in_result.printf$45: int, in_result.printf$47: int, in_result.printf$49: int, in_result.printf$51: int, in_result.printf$53: int, in_result.printf$54: int, in_result.printf$56: int, in_result.printf$58: int, in_result.printf$60: int, in_result.printf$62: int) returns (out_geomport_ptr: int, out_$printf.arg.2$46$: int, out_$printf.arg.2$48$: int, out_$printf.arg.2$50$: int, out_$printf.arg.2$52$: int, out_$printf.arg.2$55$: int, out_$printf.arg.2$57$: int, out_$printf.arg.2$59$: int, out_$printf.arg.2$61$: int, out_result.printf$45: int, out_result.printf$47: int, out_result.printf$49: int, out_result.printf$51: int, out_result.printf$53: int, out_result.printf$54: int, out_result.printf$56: int, out_result.printf$58: int, out_result.printf$60: int, out_result.printf$62: int)
{

  entry:
    out_geomport_ptr, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62 := in_geomport_ptr, in_$printf.arg.2$46$, in_$printf.arg.2$48$, in_$printf.arg.2$50$, in_$printf.arg.2$52$, in_$printf.arg.2$55$, in_$printf.arg.2$57$, in_$printf.arg.2$59$, in_$printf.arg.2$61$, in_result.printf$45, in_result.printf$47, in_result.printf$49, in_result.printf$51, in_result.printf$53, in_result.printf$54, in_result.printf$56, in_result.printf$58, in_result.printf$60, in_result.printf$62;
    goto label_125_head;

  label_125_head:
    goto label_125_true, label_125_false;

  label_125_false:
    assume out_geomport_ptr == 0;
    assume value_is(__ctobpl_const_4069, out_geomport_ptr);
    out_geomport_ptr, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62 := in_geomport_ptr, in_$printf.arg.2$46$, in_$printf.arg.2$48$, in_$printf.arg.2$50$, in_$printf.arg.2$52$, in_$printf.arg.2$55$, in_$printf.arg.2$57$, in_$printf.arg.2$59$, in_$printf.arg.2$61$, in_result.printf$45, in_result.printf$47, in_result.printf$49, in_result.printf$51, in_result.printf$53, in_result.printf$54, in_result.printf$56, in_result.printf$58, in_result.printf$60, in_result.printf$62;
    detChoiceCnt := old(detChoiceCnt);
    return;

  label_165:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4514} true;
    assert out_geomport_ptr != 0;
    out_geomport_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4101, out_geomport_ptr);
    assume value_is(__ctobpl_const_4102, out_geomport_ptr);
    assume value_is(__ctobpl_const_4103, Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_ptr)]);
    goto label_165_dummy;

  label_162:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4512} true;
    call out_result.printf$62 := det_choice();
    goto label_165;

  label_159:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4511} true;
    call out_result.printf$60 := det_choice();
    goto label_162;

  label_158:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4511} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$61$ := Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4098, out_$printf.arg.2$61$);
    assume value_is(__ctobpl_const_4099, out_geomport_ptr);
    assume value_is(__ctobpl_const_4100, Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_ptr)]);
    goto label_159;

  label_155:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4510} true;
    call out_result.printf$58 := det_choice();
    goto label_158;

  label_154:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4510} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$59$ := Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4095, out_$printf.arg.2$59$);
    assume value_is(__ctobpl_const_4096, out_geomport_ptr);
    assume value_is(__ctobpl_const_4097, Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_ptr)]);
    goto label_155;

  label_151:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4509} true;
    call out_result.printf$56 := det_choice();
    goto label_154;

  label_150:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4509} true;
    assert out_geomport_ptr != 0;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$57$ := PLUS(Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_ptr)], 1, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_ptr)]);
    assume value_is(__ctobpl_const_4090, out_$printf.arg.2$57$);
    assume value_is(__ctobpl_const_4091, out_geomport_ptr);
    assume value_is(__ctobpl_const_4092, Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_ptr)]);
    assume value_is(__ctobpl_const_4093, out_geomport_ptr);
    assume value_is(__ctobpl_const_4094, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_ptr)]);
    goto label_151;

  label_147:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4508} true;
    call out_result.printf$54 := det_choice();
    goto label_150;

  label_146:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4508} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$55$ := Mem_T.AMP_Geomport[AMP_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4087, out_$printf.arg.2$55$);
    assume value_is(__ctobpl_const_4088, out_geomport_ptr);
    assume value_is(__ctobpl_const_4089, Mem_T.AMP_Geomport[AMP_Geomport(out_geomport_ptr)]);
    goto label_147;

  label_143:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4506} true;
    call out_result.printf$53 := det_choice();
    goto label_146;

  label_140:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4505} true;
    call out_result.printf$51 := det_choice();
    goto label_143;

  label_139:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4505} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$52$ := Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4084, out_$printf.arg.2$52$);
    assume value_is(__ctobpl_const_4085, out_geomport_ptr);
    assume value_is(__ctobpl_const_4086, Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_ptr)]);
    goto label_140;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4504} true;
    call out_result.printf$49 := det_choice();
    goto label_139;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4504} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$50$ := Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4081, out_$printf.arg.2$50$);
    assume value_is(__ctobpl_const_4082, out_geomport_ptr);
    assume value_is(__ctobpl_const_4083, Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_ptr)]);
    goto label_136;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4503} true;
    call out_result.printf$47 := det_choice();
    goto label_135;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4503} true;
    assert out_geomport_ptr != 0;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$48$ := PLUS(Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_ptr)], 1, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_ptr)]);
    assume value_is(__ctobpl_const_4076, out_$printf.arg.2$48$);
    assume value_is(__ctobpl_const_4077, out_geomport_ptr);
    assume value_is(__ctobpl_const_4078, Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_ptr)]);
    assume value_is(__ctobpl_const_4079, out_geomport_ptr);
    assume value_is(__ctobpl_const_4080, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_ptr)]);
    goto label_132;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4501} true;
    call out_result.printf$45 := det_choice();
    goto label_131;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4501} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$46$ := Mem_T.AMP_Geomport[AMP_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4073, out_$printf.arg.2$46$);
    assume value_is(__ctobpl_const_4074, out_geomport_ptr);
    assume value_is(__ctobpl_const_4075, Mem_T.AMP_Geomport[AMP_Geomport(out_geomport_ptr)]);
    goto label_128;

  label_125_true:
    assume out_geomport_ptr != 0;
    assume value_is(__ctobpl_const_4069, out_geomport_ptr);
    goto label_127;

  label_165_dummy:
    call {:si_unique_call 1} out_geomport_ptr, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62 := grwrite_loop_label_125_head(out_geomport_ptr, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62);
    return;

  exit:
    return;
}



procedure grwrite_loop_label_125_head(in_geomport_ptr: int, in_$printf.arg.2$46$: int, in_$printf.arg.2$48$: int, in_$printf.arg.2$50$: int, in_$printf.arg.2$52$: int, in_$printf.arg.2$55$: int, in_$printf.arg.2$57$: int, in_$printf.arg.2$59$: int, in_$printf.arg.2$61$: int, in_result.printf$45: int, in_result.printf$47: int, in_result.printf$49: int, in_result.printf$51: int, in_result.printf$53: int, in_result.printf$54: int, in_result.printf$56: int, in_result.printf$58: int, in_result.printf$60: int, in_result.printf$62: int) returns (out_geomport_ptr: int, out_$printf.arg.2$46$: int, out_$printf.arg.2$48$: int, out_$printf.arg.2$50$: int, out_$printf.arg.2$52$: int, out_$printf.arg.2$55$: int, out_$printf.arg.2$57$: int, out_$printf.arg.2$59$: int, out_$printf.arg.2$61$: int, out_result.printf$45: int, out_result.printf$47: int, out_result.printf$49: int, out_result.printf$51: int, out_result.printf$53: int, out_result.printf$54: int, out_result.printf$56: int, out_result.printf$58: int, out_result.printf$60: int, out_result.printf$62: int);
  modifies detChoiceCnt;



implementation grwrite_loop_label_61_head(in_IDUM: int, in_geomnode_ptr: int, in_geomport_ptr: int, in_$printf.arg.2$19$: int, in_$printf.arg.2$21$: int, in_$printf.arg.2$23$: int, in_$printf.arg.2$25$: int, in_$printf.arg.2$27$: int, in_$printf.arg.2$29$: int, in_$printf.arg.2$33$: int, in_$printf.arg.2$35$: int, in_$printf.arg.2$37$: int, in_$printf.arg.2$39$: int, in_$printf.arg.2$41$: int, in_$printf.arg.2$43$: int, in_$printf.arg.2$46$: int, in_$printf.arg.2$48$: int, in_$printf.arg.2$50$: int, in_$printf.arg.2$52$: int, in_$printf.arg.2$55$: int, in_$printf.arg.2$57$: int, in_$printf.arg.2$59$: int, in_$printf.arg.2$61$: int, in_result.printf$17: int, in_result.printf$18: int, in_result.printf$20: int, in_result.printf$22: int, in_result.printf$24: int, in_result.printf$26: int, in_result.printf$28: int, in_result.printf$30: int, in_result.printf$31: int, in_result.printf$32: int, in_result.printf$34: int, in_result.printf$36: int, in_result.printf$38: int, in_result.printf$40: int, in_result.printf$42: int, in_result.printf$44: int, in_result.printf$45: int, in_result.printf$47: int, in_result.printf$49: int, in_result.printf$51: int, in_result.printf$53: int, in_result.printf$54: int, in_result.printf$56: int, in_result.printf$58: int, in_result.printf$60: int, in_result.printf$62: int) returns (out_IDUM: int, out_geomnode_ptr: int, out_geomport_ptr: int, out_$printf.arg.2$19$: int, out_$printf.arg.2$21$: int, out_$printf.arg.2$23$: int, out_$printf.arg.2$25$: int, out_$printf.arg.2$27$: int, out_$printf.arg.2$29$: int, out_$printf.arg.2$33$: int, out_$printf.arg.2$35$: int, out_$printf.arg.2$37$: int, out_$printf.arg.2$39$: int, out_$printf.arg.2$41$: int, out_$printf.arg.2$43$: int, out_$printf.arg.2$46$: int, out_$printf.arg.2$48$: int, out_$printf.arg.2$50$: int, out_$printf.arg.2$52$: int, out_$printf.arg.2$55$: int, out_$printf.arg.2$57$: int, out_$printf.arg.2$59$: int, out_$printf.arg.2$61$: int, out_result.printf$17: int, out_result.printf$18: int, out_result.printf$20: int, out_result.printf$22: int, out_result.printf$24: int, out_result.printf$26: int, out_result.printf$28: int, out_result.printf$30: int, out_result.printf$31: int, out_result.printf$32: int, out_result.printf$34: int, out_result.printf$36: int, out_result.printf$38: int, out_result.printf$40: int, out_result.printf$42: int, out_result.printf$44: int, out_result.printf$45: int, out_result.printf$47: int, out_result.printf$49: int, out_result.printf$51: int, out_result.printf$53: int, out_result.printf$54: int, out_result.printf$56: int, out_result.printf$58: int, out_result.printf$60: int, out_result.printf$62: int)
{

  entry:
    out_IDUM, out_geomnode_ptr, out_geomport_ptr, out_$printf.arg.2$19$, out_$printf.arg.2$21$, out_$printf.arg.2$23$, out_$printf.arg.2$25$, out_$printf.arg.2$27$, out_$printf.arg.2$29$, out_$printf.arg.2$33$, out_$printf.arg.2$35$, out_$printf.arg.2$37$, out_$printf.arg.2$39$, out_$printf.arg.2$41$, out_$printf.arg.2$43$, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$17, out_result.printf$18, out_result.printf$20, out_result.printf$22, out_result.printf$24, out_result.printf$26, out_result.printf$28, out_result.printf$30, out_result.printf$31, out_result.printf$32, out_result.printf$34, out_result.printf$36, out_result.printf$38, out_result.printf$40, out_result.printf$42, out_result.printf$44, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62 := in_IDUM, in_geomnode_ptr, in_geomport_ptr, in_$printf.arg.2$19$, in_$printf.arg.2$21$, in_$printf.arg.2$23$, in_$printf.arg.2$25$, in_$printf.arg.2$27$, in_$printf.arg.2$29$, in_$printf.arg.2$33$, in_$printf.arg.2$35$, in_$printf.arg.2$37$, in_$printf.arg.2$39$, in_$printf.arg.2$41$, in_$printf.arg.2$43$, in_$printf.arg.2$46$, in_$printf.arg.2$48$, in_$printf.arg.2$50$, in_$printf.arg.2$52$, in_$printf.arg.2$55$, in_$printf.arg.2$57$, in_$printf.arg.2$59$, in_$printf.arg.2$61$, in_result.printf$17, in_result.printf$18, in_result.printf$20, in_result.printf$22, in_result.printf$24, in_result.printf$26, in_result.printf$28, in_result.printf$30, in_result.printf$31, in_result.printf$32, in_result.printf$34, in_result.printf$36, in_result.printf$38, in_result.printf$40, in_result.printf$42, in_result.printf$44, in_result.printf$45, in_result.printf$47, in_result.printf$49, in_result.printf$51, in_result.printf$53, in_result.printf$54, in_result.printf$56, in_result.printf$58, in_result.printf$60, in_result.printf$62;
    goto label_61_head;

  label_61_head:
    goto label_61_true, label_61_false;

  label_61_false:
    assume out_geomnode_ptr == 0;
    assume value_is(__ctobpl_const_4027, out_geomnode_ptr);
    out_IDUM, out_geomnode_ptr, out_geomport_ptr, out_$printf.arg.2$19$, out_$printf.arg.2$21$, out_$printf.arg.2$23$, out_$printf.arg.2$25$, out_$printf.arg.2$27$, out_$printf.arg.2$29$, out_$printf.arg.2$33$, out_$printf.arg.2$35$, out_$printf.arg.2$37$, out_$printf.arg.2$39$, out_$printf.arg.2$41$, out_$printf.arg.2$43$, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$17, out_result.printf$18, out_result.printf$20, out_result.printf$22, out_result.printf$24, out_result.printf$26, out_result.printf$28, out_result.printf$30, out_result.printf$31, out_result.printf$32, out_result.printf$34, out_result.printf$36, out_result.printf$38, out_result.printf$40, out_result.printf$42, out_result.printf$44, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62 := in_IDUM, in_geomnode_ptr, in_geomport_ptr, in_$printf.arg.2$19$, in_$printf.arg.2$21$, in_$printf.arg.2$23$, in_$printf.arg.2$25$, in_$printf.arg.2$27$, in_$printf.arg.2$29$, in_$printf.arg.2$33$, in_$printf.arg.2$35$, in_$printf.arg.2$37$, in_$printf.arg.2$39$, in_$printf.arg.2$41$, in_$printf.arg.2$43$, in_$printf.arg.2$46$, in_$printf.arg.2$48$, in_$printf.arg.2$50$, in_$printf.arg.2$52$, in_$printf.arg.2$55$, in_$printf.arg.2$57$, in_$printf.arg.2$59$, in_$printf.arg.2$61$, in_result.printf$17, in_result.printf$18, in_result.printf$20, in_result.printf$22, in_result.printf$24, in_result.printf$26, in_result.printf$28, in_result.printf$30, in_result.printf$31, in_result.printf$32, in_result.printf$34, in_result.printf$36, in_result.printf$38, in_result.printf$40, in_result.printf$42, in_result.printf$44, in_result.printf$45, in_result.printf$47, in_result.printf$49, in_result.printf$51, in_result.printf$53, in_result.printf$54, in_result.printf$56, in_result.printf$58, in_result.printf$60, in_result.printf$62;
    detChoiceCnt := old(detChoiceCnt);
    return;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4517} true;
    assert out_geomnode_ptr != 0;
    out_geomnode_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4070, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4071, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4072, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_ptr)]);
    goto label_126_dummy;

  label_125_false:
    assume out_geomport_ptr == 0;
    assume value_is(__ctobpl_const_4069, out_geomport_ptr);
    goto label_126;

  label_125_head:
    call out_geomport_ptr, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62 := grwrite_loop_label_125_head(out_geomport_ptr, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62);
    goto label_125_head_last;

  label_125_head_last:
    out_IDUM, out_geomnode_ptr, out_geomport_ptr, out_$printf.arg.2$19$, out_$printf.arg.2$21$, out_$printf.arg.2$23$, out_$printf.arg.2$25$, out_$printf.arg.2$27$, out_$printf.arg.2$29$, out_$printf.arg.2$33$, out_$printf.arg.2$35$, out_$printf.arg.2$37$, out_$printf.arg.2$39$, out_$printf.arg.2$41$, out_$printf.arg.2$43$, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$17, out_result.printf$18, out_result.printf$20, out_result.printf$22, out_result.printf$24, out_result.printf$26, out_result.printf$28, out_result.printf$30, out_result.printf$31, out_result.printf$32, out_result.printf$34, out_result.printf$36, out_result.printf$38, out_result.printf$40, out_result.printf$42, out_result.printf$44, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62 := in_IDUM, in_geomnode_ptr, in_geomport_ptr, in_$printf.arg.2$19$, in_$printf.arg.2$21$, in_$printf.arg.2$23$, in_$printf.arg.2$25$, in_$printf.arg.2$27$, in_$printf.arg.2$29$, in_$printf.arg.2$33$, in_$printf.arg.2$35$, in_$printf.arg.2$37$, in_$printf.arg.2$39$, in_$printf.arg.2$41$, in_$printf.arg.2$43$, in_$printf.arg.2$46$, in_$printf.arg.2$48$, in_$printf.arg.2$50$, in_$printf.arg.2$52$, in_$printf.arg.2$55$, in_$printf.arg.2$57$, in_$printf.arg.2$59$, in_$printf.arg.2$61$, in_result.printf$17, in_result.printf$18, in_result.printf$20, in_result.printf$22, in_result.printf$24, in_result.printf$26, in_result.printf$28, in_result.printf$30, in_result.printf$31, in_result.printf$32, in_result.printf$34, in_result.printf$36, in_result.printf$38, in_result.printf$40, in_result.printf$42, in_result.printf$44, in_result.printf$45, in_result.printf$47, in_result.printf$49, in_result.printf$51, in_result.printf$53, in_result.printf$54, in_result.printf$56, in_result.printf$58, in_result.printf$60, in_result.printf$62;
    detChoiceCnt := old(detChoiceCnt);
    goto label_125_true, label_125_false;

  label_125:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4500} true;
    goto label_125_head;

  label_165:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4514} true;
    assert out_geomport_ptr != 0;
    out_geomport_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4101, out_geomport_ptr);
    assume value_is(__ctobpl_const_4102, out_geomport_ptr);
    assume value_is(__ctobpl_const_4103, Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_ptr)]);
    goto label_165_dummy;

  label_165_dummy:
    assume false;
    out_IDUM, out_geomnode_ptr, out_geomport_ptr, out_$printf.arg.2$19$, out_$printf.arg.2$21$, out_$printf.arg.2$23$, out_$printf.arg.2$25$, out_$printf.arg.2$27$, out_$printf.arg.2$29$, out_$printf.arg.2$33$, out_$printf.arg.2$35$, out_$printf.arg.2$37$, out_$printf.arg.2$39$, out_$printf.arg.2$41$, out_$printf.arg.2$43$, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$17, out_result.printf$18, out_result.printf$20, out_result.printf$22, out_result.printf$24, out_result.printf$26, out_result.printf$28, out_result.printf$30, out_result.printf$31, out_result.printf$32, out_result.printf$34, out_result.printf$36, out_result.printf$38, out_result.printf$40, out_result.printf$42, out_result.printf$44, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62 := in_IDUM, in_geomnode_ptr, in_geomport_ptr, in_$printf.arg.2$19$, in_$printf.arg.2$21$, in_$printf.arg.2$23$, in_$printf.arg.2$25$, in_$printf.arg.2$27$, in_$printf.arg.2$29$, in_$printf.arg.2$33$, in_$printf.arg.2$35$, in_$printf.arg.2$37$, in_$printf.arg.2$39$, in_$printf.arg.2$41$, in_$printf.arg.2$43$, in_$printf.arg.2$46$, in_$printf.arg.2$48$, in_$printf.arg.2$50$, in_$printf.arg.2$52$, in_$printf.arg.2$55$, in_$printf.arg.2$57$, in_$printf.arg.2$59$, in_$printf.arg.2$61$, in_result.printf$17, in_result.printf$18, in_result.printf$20, in_result.printf$22, in_result.printf$24, in_result.printf$26, in_result.printf$28, in_result.printf$30, in_result.printf$31, in_result.printf$32, in_result.printf$34, in_result.printf$36, in_result.printf$38, in_result.printf$40, in_result.printf$42, in_result.printf$44, in_result.printf$45, in_result.printf$47, in_result.printf$49, in_result.printf$51, in_result.printf$53, in_result.printf$54, in_result.printf$56, in_result.printf$58, in_result.printf$60, in_result.printf$62;
    detChoiceCnt := old(detChoiceCnt);
    return;

  label_162:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4512} true;
    call out_result.printf$62 := det_choice();
    goto label_165;

  label_159:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4511} true;
    call out_result.printf$60 := det_choice();
    goto label_162;

  label_158:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4511} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$61$ := Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4098, out_$printf.arg.2$61$);
    assume value_is(__ctobpl_const_4099, out_geomport_ptr);
    assume value_is(__ctobpl_const_4100, Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_ptr)]);
    goto label_159;

  label_155:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4510} true;
    call out_result.printf$58 := det_choice();
    goto label_158;

  label_154:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4510} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$59$ := Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4095, out_$printf.arg.2$59$);
    assume value_is(__ctobpl_const_4096, out_geomport_ptr);
    assume value_is(__ctobpl_const_4097, Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_ptr)]);
    goto label_155;

  label_151:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4509} true;
    call out_result.printf$56 := det_choice();
    goto label_154;

  label_150:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4509} true;
    assert out_geomport_ptr != 0;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$57$ := PLUS(Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_ptr)], 1, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_ptr)]);
    assume value_is(__ctobpl_const_4090, out_$printf.arg.2$57$);
    assume value_is(__ctobpl_const_4091, out_geomport_ptr);
    assume value_is(__ctobpl_const_4092, Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_ptr)]);
    assume value_is(__ctobpl_const_4093, out_geomport_ptr);
    assume value_is(__ctobpl_const_4094, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_ptr)]);
    goto label_151;

  label_147:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4508} true;
    call out_result.printf$54 := det_choice();
    goto label_150;

  label_146:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4508} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$55$ := Mem_T.AMP_Geomport[AMP_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4087, out_$printf.arg.2$55$);
    assume value_is(__ctobpl_const_4088, out_geomport_ptr);
    assume value_is(__ctobpl_const_4089, Mem_T.AMP_Geomport[AMP_Geomport(out_geomport_ptr)]);
    goto label_147;

  label_143:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4506} true;
    call out_result.printf$53 := det_choice();
    goto label_146;

  label_140:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4505} true;
    call out_result.printf$51 := det_choice();
    goto label_143;

  label_139:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4505} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$52$ := Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4084, out_$printf.arg.2$52$);
    assume value_is(__ctobpl_const_4085, out_geomport_ptr);
    assume value_is(__ctobpl_const_4086, Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_ptr)]);
    goto label_140;

  label_136:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4504} true;
    call out_result.printf$49 := det_choice();
    goto label_139;

  label_135:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4504} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$50$ := Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4081, out_$printf.arg.2$50$);
    assume value_is(__ctobpl_const_4082, out_geomport_ptr);
    assume value_is(__ctobpl_const_4083, Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_ptr)]);
    goto label_136;

  label_132:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4503} true;
    call out_result.printf$47 := det_choice();
    goto label_135;

  label_131:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4503} true;
    assert out_geomport_ptr != 0;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$48$ := PLUS(Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_ptr)], 1, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_ptr)]);
    assume value_is(__ctobpl_const_4076, out_$printf.arg.2$48$);
    assume value_is(__ctobpl_const_4077, out_geomport_ptr);
    assume value_is(__ctobpl_const_4078, Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_ptr)]);
    assume value_is(__ctobpl_const_4079, out_geomport_ptr);
    assume value_is(__ctobpl_const_4080, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_ptr)]);
    goto label_132;

  label_128:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4501} true;
    call out_result.printf$45 := det_choice();
    goto label_131;

  label_127:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4501} true;
    assert out_geomport_ptr != 0;
    out_$printf.arg.2$46$ := Mem_T.AMP_Geomport[AMP_Geomport(out_geomport_ptr)];
    assume value_is(__ctobpl_const_4073, out_$printf.arg.2$46$);
    assume value_is(__ctobpl_const_4074, out_geomport_ptr);
    assume value_is(__ctobpl_const_4075, Mem_T.AMP_Geomport[AMP_Geomport(out_geomport_ptr)]);
    goto label_128;

  label_125_true:
    assume out_geomport_ptr != 0;
    assume value_is(__ctobpl_const_4069, out_geomport_ptr);
    goto label_127;

  label_124:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4497} true;
    assert out_geomnode_ptr != 0;
    out_geomport_ptr := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4066, out_geomport_ptr);
    assume value_is(__ctobpl_const_4067, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4068, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_ptr)]);
    goto label_125;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4495} true;
    call out_result.printf$44 := det_choice();
    goto label_124;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4494} true;
    call out_result.printf$42 := det_choice();
    goto label_121;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4494} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$43$ := Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4063, out_$printf.arg.2$43$);
    assume value_is(__ctobpl_const_4064, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4065, Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_geomnode_ptr)]);
    goto label_118;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4493} true;
    call out_result.printf$40 := det_choice();
    goto label_117;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4493} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$41$ := Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4060, out_$printf.arg.2$41$);
    assume value_is(__ctobpl_const_4061, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4062, Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_geomnode_ptr)]);
    goto label_114;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4492} true;
    call out_result.printf$38 := det_choice();
    goto label_113;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4492} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$39$ := Mem_T.THEA_Geomnode[THEA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4057, out_$printf.arg.2$39$);
    assume value_is(__ctobpl_const_4058, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4059, Mem_T.THEA_Geomnode[THEA_Geomnode(out_geomnode_ptr)]);
    goto label_110;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4491} true;
    call out_result.printf$36 := det_choice();
    goto label_109;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4491} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$37$ := Mem_T.ZA_Geomnode[ZA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4054, out_$printf.arg.2$37$);
    assume value_is(__ctobpl_const_4055, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4056, Mem_T.ZA_Geomnode[ZA_Geomnode(out_geomnode_ptr)]);
    goto label_106;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4490} true;
    call out_result.printf$34 := det_choice();
    goto label_105;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4490} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$35$ := Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4051, out_$printf.arg.2$35$);
    assume value_is(__ctobpl_const_4052, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4053, Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_ptr)]);
    goto label_102;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4489} true;
    call out_result.printf$32 := det_choice();
    goto label_101;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4489} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$33$ := Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4048, out_$printf.arg.2$33$);
    assume value_is(__ctobpl_const_4049, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4050, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_ptr)]);
    goto label_98;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4488} true;
    call out_result.printf$31 := det_choice();
    goto label_97;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4486} true;
    call out_result.printf$30 := det_choice();
    goto label_94;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4485} true;
    call out_result.printf$28 := det_choice();
    goto label_91;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4485} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$29$ := Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4045, out_$printf.arg.2$29$);
    assume value_is(__ctobpl_const_4046, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4047, Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_geomnode_ptr)]);
    goto label_88;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4484} true;
    call out_result.printf$26 := det_choice();
    goto label_87;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4484} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$27$ := Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4042, out_$printf.arg.2$27$);
    assume value_is(__ctobpl_const_4043, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4044, Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_geomnode_ptr)]);
    goto label_84;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4483} true;
    call out_result.printf$24 := det_choice();
    goto label_83;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4483} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$25$ := Mem_T.THEA_Geomnode[THEA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4039, out_$printf.arg.2$25$);
    assume value_is(__ctobpl_const_4040, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4041, Mem_T.THEA_Geomnode[THEA_Geomnode(out_geomnode_ptr)]);
    goto label_80;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4482} true;
    call out_result.printf$22 := det_choice();
    goto label_79;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4482} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$23$ := Mem_T.ZA_Geomnode[ZA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4036, out_$printf.arg.2$23$);
    assume value_is(__ctobpl_const_4037, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4038, Mem_T.ZA_Geomnode[ZA_Geomnode(out_geomnode_ptr)]);
    goto label_76;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4481} true;
    call out_result.printf$20 := det_choice();
    goto label_75;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4481} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$21$ := Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4033, out_$printf.arg.2$21$);
    assume value_is(__ctobpl_const_4034, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4035, Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_ptr)]);
    goto label_72;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4480} true;
    call out_result.printf$18 := det_choice();
    goto label_71;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4480} true;
    assert out_geomnode_ptr != 0;
    out_$printf.arg.2$19$ := Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_ptr)];
    assume value_is(__ctobpl_const_4030, out_$printf.arg.2$19$);
    assume value_is(__ctobpl_const_4031, out_geomnode_ptr);
    assume value_is(__ctobpl_const_4032, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_ptr)]);
    goto label_68;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4479} true;
    call out_result.printf$17 := det_choice();
    goto label_67;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4478} true;
    out_IDUM := PLUS(out_IDUM, 1, 1);
    assume value_is(__ctobpl_const_4028, out_IDUM);
    assume value_is(__ctobpl_const_4029, out_IDUM);
    goto label_64;

  label_61_true:
    assume out_geomnode_ptr != 0;
    assume value_is(__ctobpl_const_4027, out_geomnode_ptr);
    goto label_63;

  label_126_dummy:
    call {:si_unique_call 1} out_IDUM, out_geomnode_ptr, out_geomport_ptr, out_$printf.arg.2$19$, out_$printf.arg.2$21$, out_$printf.arg.2$23$, out_$printf.arg.2$25$, out_$printf.arg.2$27$, out_$printf.arg.2$29$, out_$printf.arg.2$33$, out_$printf.arg.2$35$, out_$printf.arg.2$37$, out_$printf.arg.2$39$, out_$printf.arg.2$41$, out_$printf.arg.2$43$, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$17, out_result.printf$18, out_result.printf$20, out_result.printf$22, out_result.printf$24, out_result.printf$26, out_result.printf$28, out_result.printf$30, out_result.printf$31, out_result.printf$32, out_result.printf$34, out_result.printf$36, out_result.printf$38, out_result.printf$40, out_result.printf$42, out_result.printf$44, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62 := grwrite_loop_label_61_head(out_IDUM, out_geomnode_ptr, out_geomport_ptr, out_$printf.arg.2$19$, out_$printf.arg.2$21$, out_$printf.arg.2$23$, out_$printf.arg.2$25$, out_$printf.arg.2$27$, out_$printf.arg.2$29$, out_$printf.arg.2$33$, out_$printf.arg.2$35$, out_$printf.arg.2$37$, out_$printf.arg.2$39$, out_$printf.arg.2$41$, out_$printf.arg.2$43$, out_$printf.arg.2$46$, out_$printf.arg.2$48$, out_$printf.arg.2$50$, out_$printf.arg.2$52$, out_$printf.arg.2$55$, out_$printf.arg.2$57$, out_$printf.arg.2$59$, out_$printf.arg.2$61$, out_result.printf$17, out_result.printf$18, out_result.printf$20, out_result.printf$22, out_result.printf$24, out_result.printf$26, out_result.printf$28, out_result.printf$30, out_result.printf$31, out_result.printf$32, out_result.printf$34, out_result.printf$36, out_result.printf$38, out_result.printf$40, out_result.printf$42, out_result.printf$44, out_result.printf$45, out_result.printf$47, out_result.printf$49, out_result.printf$51, out_result.printf$53, out_result.printf$54, out_result.printf$56, out_result.printf$58, out_result.printf$60, out_result.printf$62);
    return;

  exit:
    return;
}



procedure grwrite_loop_label_61_head(in_IDUM: int, in_geomnode_ptr: int, in_geomport_ptr: int, in_$printf.arg.2$19$: int, in_$printf.arg.2$21$: int, in_$printf.arg.2$23$: int, in_$printf.arg.2$25$: int, in_$printf.arg.2$27$: int, in_$printf.arg.2$29$: int, in_$printf.arg.2$33$: int, in_$printf.arg.2$35$: int, in_$printf.arg.2$37$: int, in_$printf.arg.2$39$: int, in_$printf.arg.2$41$: int, in_$printf.arg.2$43$: int, in_$printf.arg.2$46$: int, in_$printf.arg.2$48$: int, in_$printf.arg.2$50$: int, in_$printf.arg.2$52$: int, in_$printf.arg.2$55$: int, in_$printf.arg.2$57$: int, in_$printf.arg.2$59$: int, in_$printf.arg.2$61$: int, in_result.printf$17: int, in_result.printf$18: int, in_result.printf$20: int, in_result.printf$22: int, in_result.printf$24: int, in_result.printf$26: int, in_result.printf$28: int, in_result.printf$30: int, in_result.printf$31: int, in_result.printf$32: int, in_result.printf$34: int, in_result.printf$36: int, in_result.printf$38: int, in_result.printf$40: int, in_result.printf$42: int, in_result.printf$44: int, in_result.printf$45: int, in_result.printf$47: int, in_result.printf$49: int, in_result.printf$51: int, in_result.printf$53: int, in_result.printf$54: int, in_result.printf$56: int, in_result.printf$58: int, in_result.printf$60: int, in_result.printf$62: int) returns (out_IDUM: int, out_geomnode_ptr: int, out_geomport_ptr: int, out_$printf.arg.2$19$: int, out_$printf.arg.2$21$: int, out_$printf.arg.2$23$: int, out_$printf.arg.2$25$: int, out_$printf.arg.2$27$: int, out_$printf.arg.2$29$: int, out_$printf.arg.2$33$: int, out_$printf.arg.2$35$: int, out_$printf.arg.2$37$: int, out_$printf.arg.2$39$: int, out_$printf.arg.2$41$: int, out_$printf.arg.2$43$: int, out_$printf.arg.2$46$: int, out_$printf.arg.2$48$: int, out_$printf.arg.2$50$: int, out_$printf.arg.2$52$: int, out_$printf.arg.2$55$: int, out_$printf.arg.2$57$: int, out_$printf.arg.2$59$: int, out_$printf.arg.2$61$: int, out_result.printf$17: int, out_result.printf$18: int, out_result.printf$20: int, out_result.printf$22: int, out_result.printf$24: int, out_result.printf$26: int, out_result.printf$28: int, out_result.printf$30: int, out_result.printf$31: int, out_result.printf$32: int, out_result.printf$34: int, out_result.printf$36: int, out_result.printf$38: int, out_result.printf$40: int, out_result.printf$42: int, out_result.printf$44: int, out_result.printf$45: int, out_result.printf$47: int, out_result.printf$49: int, out_result.printf$51: int, out_result.printf$53: int, out_result.printf$54: int, out_result.printf$56: int, out_result.printf$58: int, out_result.printf$60: int, out_result.printf$62: int);
  modifies detChoiceCnt;



implementation kwdsinit_loop_label_513_head(in_havoc_stringTemp: int, in_i: int, in_result.printf$255: int, in_result.strlen$253: int, in_$strlen.arg.1$254$: int) returns (out_i: int, out_result.printf$255: int, out_result.strlen$253: int, out_$strlen.arg.1$254$: int)
{

  entry:
    out_i, out_result.printf$255, out_result.strlen$253, out_$strlen.arg.1$254$ := in_i, in_result.printf$255, in_result.strlen$253, in_$strlen.arg.1$254$;
    goto label_513_head;

  label_513_head:
    goto label_513_true, label_513_false;

  label_513_false:
    assume !INT_LEQ(out_i, 125);
    assume value_is(__ctobpl_const_4632, out_i);
    out_i, out_result.printf$255, out_result.strlen$253, out_$strlen.arg.1$254$ := in_i, in_result.printf$255, in_result.strlen$253, in_$strlen.arg.1$254$;
    errline_printed, detChoiceCnt := old(errline_printed), old(detChoiceCnt);
    return;

  label_519:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4930} true;
    assume value_is(__ctobpl_const_4638, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_519_dummy;

  label_518_false:
    assume !INT_ULT(20, out_result.strlen$253);
    assume value_is(__ctobpl_const_4637, out_result.strlen$253);
    goto label_519;

  label_523:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4933} true;
    call interror(in_havoc_stringTemp);
    goto label_519;

  label_520:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4932} true;
    call out_result.printf$255 := det_choice();
    goto label_523;

  label_518_true:
    assume INT_ULT(20, out_result.strlen$253);
    assume value_is(__ctobpl_const_4637, out_result.strlen$253);
    goto label_520;

  label_518:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4931} true;
    goto label_518_true, label_518_false;

  label_515:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4931} true;
    call out_result.strlen$253 := strlen(out_$strlen.arg.1$254$);
    assume value_is(__ctobpl_const_4635, out_$strlen.arg.1$254$);
    assume value_is(__ctobpl_const_4636, out_$strlen.arg.1$254$);
    goto label_518;

  label_514:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4931} true;
    out_$strlen.arg.1$254$ := PLUS(Keywords, 21, out_i);
    assume value_is(__ctobpl_const_4633, out_$strlen.arg.1$254$);
    assume value_is(__ctobpl_const_4634, out_i);
    goto label_515;

  label_513_true:
    assume INT_LEQ(out_i, 125);
    assume value_is(__ctobpl_const_4632, out_i);
    goto label_514;

  label_519_dummy:
    call {:si_unique_call 1} out_i, out_result.printf$255, out_result.strlen$253, out_$strlen.arg.1$254$ := kwdsinit_loop_label_513_head(in_havoc_stringTemp, out_i, out_result.printf$255, out_result.strlen$253, out_$strlen.arg.1$254$);
    return;

  exit:
    return;
}



procedure kwdsinit_loop_label_513_head(in_havoc_stringTemp: int, in_i: int, in_result.printf$255: int, in_result.strlen$253: int, in_$strlen.arg.1$254$: int) returns (out_i: int, out_result.printf$255: int, out_result.strlen$253: int, out_$strlen.arg.1$254$: int);
  modifies errline_printed, detChoiceCnt;



implementation kwdsinit_loop_label_5_head(in_i: int) returns (out_i: int)
{

  entry:
    out_i := in_i;
    goto label_5_head;

  label_5_head:
    goto label_5_true, label_5_false;

  label_5_false:
    assume !INT_LEQ(out_i, 125);
    assume value_is(__ctobpl_const_4252, out_i);
    out_i := in_i;
    Mem_T.CHAR := old(Mem_T.CHAR);
    return;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4793} true;
    assume value_is(__ctobpl_const_4641, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_8_dummy;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 4794} true;
    assert PLUS(Keywords, 21, out_i) != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(PLUS(Keywords, 21, out_i), 1, 0) := 0];
    assume value_is(__ctobpl_const_4639, out_i);
    assume value_is(__ctobpl_const_4640, Mem_T.CHAR[PLUS(PLUS(Keywords, 21, out_i), 1, 0)]);
    goto label_8;

  label_5_true:
    assume INT_LEQ(out_i, 125);
    assume value_is(__ctobpl_const_4252, out_i);
    goto label_7;

  label_8_dummy:
    call {:si_unique_call 1} out_i := kwdsinit_loop_label_5_head(out_i);
    return;

  exit:
    return;
}



procedure kwdsinit_loop_label_5_head(in_i: int) returns (out_i: int);
  modifies Mem_T.CHAR;



implementation mksblock_loop_label_43_head(in_havoc_stringTemp: int, in_angle: int, in_app_ptr: int, in_elem_pdim: int, in_elem_qdim: int, in_elem_shape: int, in_nodes_num_ptr: int, in_p: int, in_p1: int, in_p2: int, in_primo_ptr: int, in_pstep: int, in_q: int, in_qstep: int, in_result.dcos$10: int, in_result.dsin$9: int, in_result.intmax$5: int, in_result.malloc$6: int, in_result.printf$7: int, in_ultimo_ptr: int, in_x: int, in_y: int) returns (out_app_ptr: int, out_p: int, out_primo_ptr: int, out_result.dcos$10: int, out_result.dsin$9: int, out_result.intmax$5: int, out_result.malloc$6: int, out_result.printf$7: int, out_ultimo_ptr: int, out_x: int, out_y: int)
{

  entry:
    out_app_ptr, out_p, out_primo_ptr, out_result.dcos$10, out_result.dsin$9, out_result.intmax$5, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y := in_app_ptr, in_p, in_primo_ptr, in_result.dcos$10, in_result.dsin$9, in_result.intmax$5, in_result.malloc$6, in_result.printf$7, in_ultimo_ptr, in_x, in_y;
    goto label_43_head;

  label_43_head:
    call out_result.intmax$5 := intmax(Mem_T.INT4[in_p1], Mem_T.INT4[in_p2]);
    assume value_is(__ctobpl_const_4843, Mem_T.INT4[in_p1]);
    assume value_is(__ctobpl_const_4844, Mem_T.INT4[in_p2]);
    assume value_is(__ctobpl_const_4845, Mem_T.INT4[in_p1]);
    assume value_is(__ctobpl_const_4846, Mem_T.INT4[in_p2]);
    goto label_46;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    assume value_is(__ctobpl_const_4912, out_p);
    out_p := PLUS(out_p, 1, 1);
    goto label_80_dummy;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5146} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_4910, out_ultimo_ptr);
    assume value_is(__ctobpl_const_4911, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr)]);
    goto label_80;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5144} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_4908, out_ultimo_ptr);
    assume value_is(__ctobpl_const_4909, out_app_ptr);
    goto label_79;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5139} true;
    out_primo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_4903, out_primo_ptr);
    assume value_is(__ctobpl_const_4904, out_app_ptr);
    goto label_78;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5141} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr) := out_app_ptr];
    assume value_is(__ctobpl_const_4905, out_ultimo_ptr);
    assume value_is(__ctobpl_const_4906, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_4907, out_app_ptr);
    goto label_78;

  label_75_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_4902, out_primo_ptr);
    goto label_77;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5138} true;
    goto label_75_true, label_75_false;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5133} true;
    assert out_app_ptr != 0;
    Mem_T.PSEA_Geomnode := Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4900, out_app_ptr);
    assume value_is(__ctobpl_const_4901, Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_app_ptr)]);
    goto label_75;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5132} true;
    assert out_app_ptr != 0;
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4898, out_app_ptr);
    assume value_is(__ctobpl_const_4899, Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_app_ptr)]);
    goto label_74;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5131} true;
    assert out_app_ptr != 0;
    Mem_T.THEA_Geomnode := Mem_T.THEA_Geomnode[THEA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4896, out_app_ptr);
    assume value_is(__ctobpl_const_4897, Mem_T.THEA_Geomnode[THEA_Geomnode(out_app_ptr)]);
    goto label_73;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5129} true;
    assert out_app_ptr != 0;
    Mem_T.QSIZE_Geomnode := Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(out_app_ptr) := in_elem_qdim];
    assume value_is(__ctobpl_const_4893, out_app_ptr);
    assume value_is(__ctobpl_const_4894, Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4895, in_elem_qdim);
    goto label_72;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5128} true;
    assert out_app_ptr != 0;
    Mem_T.PSIZE_Geomnode := Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(out_app_ptr) := in_elem_pdim];
    assume value_is(__ctobpl_const_4890, out_app_ptr);
    assume value_is(__ctobpl_const_4891, Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4892, in_elem_pdim);
    goto label_71;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5127} true;
    assert out_app_ptr != 0;
    Mem_T.SHAPE_Geomnode := Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(out_app_ptr) := in_elem_shape];
    assume value_is(__ctobpl_const_4887, out_app_ptr);
    assume value_is(__ctobpl_const_4888, Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4889, in_elem_shape);
    goto label_70;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5126} true;
    assert out_app_ptr != 0;
    Mem_T.SUBGROUP_PTR_Geomnode := Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4885, out_app_ptr);
    assume value_is(__ctobpl_const_4886, Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(out_app_ptr)]);
    goto label_69;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5125} true;
    assert out_app_ptr != 0;
    Mem_T.ZA_Geomnode := Mem_T.ZA_Geomnode[ZA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4883, out_app_ptr);
    assume value_is(__ctobpl_const_4884, Mem_T.ZA_Geomnode[ZA_Geomnode(out_app_ptr)]);
    goto label_68;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5124} true;
    assert out_app_ptr != 0;
    Mem_T.YA_Geomnode := Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr) := out_y];
    assume value_is(__ctobpl_const_4880, out_app_ptr);
    assume value_is(__ctobpl_const_4881, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4882, out_y);
    goto label_67;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5123} true;
    assert out_app_ptr != 0;
    Mem_T.XA_Geomnode := Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr) := out_x];
    assume value_is(__ctobpl_const_4877, out_app_ptr);
    assume value_is(__ctobpl_const_4878, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4879, out_x);
    goto label_66;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5122} true;
    assert out_app_ptr != 0;
    Mem_T.LOC_Q_Geomnode := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr) := in_q];
    assume value_is(__ctobpl_const_4874, out_app_ptr);
    assume value_is(__ctobpl_const_4875, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4876, in_q);
    goto label_65;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5121} true;
    assert out_app_ptr != 0;
    Mem_T.LOC_P_Geomnode := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr) := out_p];
    assume value_is(__ctobpl_const_4871, out_app_ptr);
    assume value_is(__ctobpl_const_4872, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4873, out_p);
    goto label_64;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5119} true;
    assert in_nodes_num_ptr != 0;
    assert in_nodes_num_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[in_nodes_num_ptr := PLUS(Mem_T.INT4[in_nodes_num_ptr], 1, 1)];
    assume value_is(__ctobpl_const_4867, in_nodes_num_ptr);
    assume value_is(__ctobpl_const_4868, Mem_T.INT4[in_nodes_num_ptr]);
    assume value_is(__ctobpl_const_4869, in_nodes_num_ptr);
    assume value_is(__ctobpl_const_4870, Mem_T.INT4[in_nodes_num_ptr]);
    goto label_63;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5116} true;
    out_x := PLUS(MULT(out_p, in_pstep), 1, MULT(MULT(in_q, in_qstep), out_result.dcos$10));
    assume value_is(__ctobpl_const_4861, out_x);
    assume value_is(__ctobpl_const_4862, out_p);
    assume value_is(__ctobpl_const_4863, in_pstep);
    assume value_is(__ctobpl_const_4864, in_q);
    assume value_is(__ctobpl_const_4865, in_qstep);
    assume value_is(__ctobpl_const_4866, out_result.dcos$10);
    goto label_62;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5116} true;
    call out_result.dcos$10 := dcos(in_angle);
    assume value_is(__ctobpl_const_4859, in_angle);
    assume value_is(__ctobpl_const_4860, in_angle);
    goto label_61;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5115} true;
    out_y := MULT(MULT(in_q, in_qstep), out_result.dsin$9);
    assume value_is(__ctobpl_const_4855, out_y);
    assume value_is(__ctobpl_const_4856, in_q);
    assume value_is(__ctobpl_const_4857, in_qstep);
    assume value_is(__ctobpl_const_4858, out_result.dsin$9);
    goto label_58;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5115} true;
    call out_result.dsin$9 := dsin(in_angle);
    assume value_is(__ctobpl_const_4853, in_angle);
    assume value_is(__ctobpl_const_4854, in_angle);
    goto label_57;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5110} true;
    call interror(in_havoc_stringTemp);
    goto label_54;

  label_52_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_4852, out_app_ptr);
    goto label_54;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5108} true;
    goto label_52_true, label_52_false;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5106} true;
    out_app_ptr := out_result.malloc$6;
    assume value_is(__ctobpl_const_4850, out_app_ptr);
    assume value_is(__ctobpl_const_4851, out_result.malloc$6);
    goto label_52;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5106} true;
    call out_result.malloc$6 := __HAVOC_det_malloc(88);
    goto label_51;

  label_46_true:
    assume INT_LEQ(out_p, out_result.intmax$5);
    assume value_is(__ctobpl_const_4847, out_p);
    assume value_is(__ctobpl_const_4848, out_result.intmax$5);
    goto label_48;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    goto label_46_true, label_46_false;

  label_46_false:
    assume !INT_LEQ(out_p, out_result.intmax$5);
    assume value_is(__ctobpl_const_4847, out_p);
    assume value_is(__ctobpl_const_4848, out_result.intmax$5);
    out_app_ptr, out_p, out_primo_ptr, out_result.dcos$10, out_result.dsin$9, out_result.intmax$5, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y := in_app_ptr, in_p, in_primo_ptr, in_result.dcos$10, in_result.dsin$9, in_result.intmax$5, in_result.malloc$6, in_result.printf$7, in_ultimo_ptr, in_x, in_y;
    errline_printed, Mem_T.NEXT_Geomnode, Mem_T.PSEA_Geomnode, Mem_T.PHEA_Geomnode, Mem_T.THEA_Geomnode, Mem_T.QSIZE_Geomnode, Mem_T.PSIZE_Geomnode, Mem_T.SHAPE_Geomnode, Mem_T.SUBGROUP_PTR_Geomnode, Mem_T.ZA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, Mem_T.LOC_Q_Geomnode, Mem_T.LOC_P_Geomnode, Mem_T.INT4, alloc, detChoiceCnt := old(errline_printed), old(Mem_T.NEXT_Geomnode), old(Mem_T.PSEA_Geomnode), old(Mem_T.PHEA_Geomnode), old(Mem_T.THEA_Geomnode), old(Mem_T.QSIZE_Geomnode), old(Mem_T.PSIZE_Geomnode), old(Mem_T.SHAPE_Geomnode), old(Mem_T.SUBGROUP_PTR_Geomnode), old(Mem_T.ZA_Geomnode), old(Mem_T.YA_Geomnode), old(Mem_T.XA_Geomnode), old(Mem_T.LOC_Q_Geomnode), old(Mem_T.LOC_P_Geomnode), old(Mem_T.INT4), old(alloc), old(detChoiceCnt);
    return;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5109} true;
    call out_result.printf$7 := det_choice();
    goto label_84;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5109} true;
    goto label_81;

  label_52_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_4852, out_app_ptr);
    goto label_53;

  label_75_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_4902, out_primo_ptr);
    goto label_76;

  label_80_dummy:
    call {:si_unique_call 1} out_app_ptr, out_p, out_primo_ptr, out_result.dcos$10, out_result.dsin$9, out_result.intmax$5, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y := mksblock_loop_label_43_head(in_havoc_stringTemp, in_angle, out_app_ptr, in_elem_pdim, in_elem_qdim, in_elem_shape, in_nodes_num_ptr, out_p, in_p1, in_p2, out_primo_ptr, in_pstep, in_q, in_qstep, out_result.dcos$10, out_result.dsin$9, out_result.intmax$5, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y);
    return;

  exit:
    return;
}



procedure mksblock_loop_label_43_head(in_havoc_stringTemp: int, in_angle: int, in_app_ptr: int, in_elem_pdim: int, in_elem_qdim: int, in_elem_shape: int, in_nodes_num_ptr: int, in_p: int, in_p1: int, in_p2: int, in_primo_ptr: int, in_pstep: int, in_q: int, in_qstep: int, in_result.dcos$10: int, in_result.dsin$9: int, in_result.intmax$5: int, in_result.malloc$6: int, in_result.printf$7: int, in_ultimo_ptr: int, in_x: int, in_y: int) returns (out_app_ptr: int, out_p: int, out_primo_ptr: int, out_result.dcos$10: int, out_result.dsin$9: int, out_result.intmax$5: int, out_result.malloc$6: int, out_result.printf$7: int, out_ultimo_ptr: int, out_x: int, out_y: int);
  modifies errline_printed, Mem_T.NEXT_Geomnode, Mem_T.PSEA_Geomnode, Mem_T.PHEA_Geomnode, Mem_T.THEA_Geomnode, Mem_T.QSIZE_Geomnode, Mem_T.PSIZE_Geomnode, Mem_T.SHAPE_Geomnode, Mem_T.SUBGROUP_PTR_Geomnode, Mem_T.ZA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, Mem_T.LOC_Q_Geomnode, Mem_T.LOC_P_Geomnode, Mem_T.INT4, alloc, detChoiceCnt;



implementation mksblock_loop_label_34_head(in_havoc_stringTemp: int, in_angle: int, in_app_ptr: int, in_elem_pdim: int, in_elem_qdim: int, in_elem_shape: int, in_nodes_num_ptr: int, in_p: int, in_p1: int, in_p2: int, in_primo_ptr: int, in_pstep: int, in_q: int, in_q1: int, in_q2: int, in_qstep: int, in_result.dcos$10: int, in_result.dsin$9: int, in_result.intmax$3: int, in_result.intmax$5: int, in_result.intmin$4: int, in_result.malloc$6: int, in_result.printf$7: int, in_ultimo_ptr: int, in_x: int, in_y: int) returns (out_app_ptr: int, out_p: int, out_primo_ptr: int, out_q: int, out_result.dcos$10: int, out_result.dsin$9: int, out_result.intmax$3: int, out_result.intmax$5: int, out_result.intmin$4: int, out_result.malloc$6: int, out_result.printf$7: int, out_ultimo_ptr: int, out_x: int, out_y: int)
{

  entry:
    out_app_ptr, out_p, out_primo_ptr, out_q, out_result.dcos$10, out_result.dsin$9, out_result.intmax$3, out_result.intmax$5, out_result.intmin$4, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y := in_app_ptr, in_p, in_primo_ptr, in_q, in_result.dcos$10, in_result.dsin$9, in_result.intmax$3, in_result.intmax$5, in_result.intmin$4, in_result.malloc$6, in_result.printf$7, in_ultimo_ptr, in_x, in_y;
    goto label_34_head;

  label_34_head:
    call out_result.intmax$3 := intmax(Mem_T.INT4[in_q1], Mem_T.INT4[in_q2]);
    assume value_is(__ctobpl_const_4825, Mem_T.INT4[in_q1]);
    assume value_is(__ctobpl_const_4826, Mem_T.INT4[in_q2]);
    assume value_is(__ctobpl_const_4827, Mem_T.INT4[in_q1]);
    assume value_is(__ctobpl_const_4828, Mem_T.INT4[in_q2]);
    goto label_37;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5099} true;
    assume value_is(__ctobpl_const_4849, out_q);
    out_q := PLUS(out_q, 1, 1);
    goto label_47_dummy;

  label_46_false:
    assume !INT_LEQ(out_p, out_result.intmax$5);
    assume value_is(__ctobpl_const_4847, out_p);
    assume value_is(__ctobpl_const_4848, out_result.intmax$5);
    goto label_47;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    goto label_46_true, label_46_false;

  label_43_head:
    call out_app_ptr, out_p, out_primo_ptr, out_result.dcos$10, out_result.dsin$9, out_result.intmax$5, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y := mksblock_loop_label_43_head(in_havoc_stringTemp, in_angle, out_app_ptr, in_elem_pdim, in_elem_qdim, in_elem_shape, in_nodes_num_ptr, out_p, in_p1, in_p2, out_primo_ptr, in_pstep, out_q, in_qstep, out_result.dcos$10, out_result.dsin$9, out_result.intmax$5, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y);
    goto label_43_head_last;

  label_43_head_last:
    call out_result.intmax$5 := intmax(Mem_T.INT4[in_p1], Mem_T.INT4[in_p2]);
    assume value_is(__ctobpl_const_4843, Mem_T.INT4[in_p1]);
    assume value_is(__ctobpl_const_4844, Mem_T.INT4[in_p2]);
    assume value_is(__ctobpl_const_4845, Mem_T.INT4[in_p1]);
    assume value_is(__ctobpl_const_4846, Mem_T.INT4[in_p2]);
    out_app_ptr, out_p, out_primo_ptr, out_q, out_result.dcos$10, out_result.dsin$9, out_result.intmax$3, out_result.intmax$5, out_result.intmin$4, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y := in_app_ptr, in_p, in_primo_ptr, in_q, in_result.dcos$10, in_result.dsin$9, in_result.intmax$3, in_result.intmax$5, in_result.intmin$4, in_result.malloc$6, in_result.printf$7, in_ultimo_ptr, in_x, in_y;
    errline_printed, Mem_T.NEXT_Geomnode, Mem_T.PSEA_Geomnode, Mem_T.PHEA_Geomnode, Mem_T.THEA_Geomnode, Mem_T.QSIZE_Geomnode, Mem_T.PSIZE_Geomnode, Mem_T.SHAPE_Geomnode, Mem_T.SUBGROUP_PTR_Geomnode, Mem_T.ZA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, Mem_T.LOC_Q_Geomnode, Mem_T.LOC_P_Geomnode, Mem_T.INT4, alloc, detChoiceCnt := old(errline_printed), old(Mem_T.NEXT_Geomnode), old(Mem_T.PSEA_Geomnode), old(Mem_T.PHEA_Geomnode), old(Mem_T.THEA_Geomnode), old(Mem_T.QSIZE_Geomnode), old(Mem_T.PSIZE_Geomnode), old(Mem_T.SHAPE_Geomnode), old(Mem_T.SUBGROUP_PTR_Geomnode), old(Mem_T.ZA_Geomnode), old(Mem_T.YA_Geomnode), old(Mem_T.XA_Geomnode), old(Mem_T.LOC_Q_Geomnode), old(Mem_T.LOC_P_Geomnode), old(Mem_T.INT4), old(alloc), old(detChoiceCnt);
    goto label_46;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    goto label_43_head;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    assume value_is(__ctobpl_const_4912, out_p);
    out_p := PLUS(out_p, 1, 1);
    goto label_80_dummy;

  label_80_dummy:
    assume false;
    out_app_ptr, out_p, out_primo_ptr, out_q, out_result.dcos$10, out_result.dsin$9, out_result.intmax$3, out_result.intmax$5, out_result.intmin$4, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y := in_app_ptr, in_p, in_primo_ptr, in_q, in_result.dcos$10, in_result.dsin$9, in_result.intmax$3, in_result.intmax$5, in_result.intmin$4, in_result.malloc$6, in_result.printf$7, in_ultimo_ptr, in_x, in_y;
    errline_printed, Mem_T.NEXT_Geomnode, Mem_T.PSEA_Geomnode, Mem_T.PHEA_Geomnode, Mem_T.THEA_Geomnode, Mem_T.QSIZE_Geomnode, Mem_T.PSIZE_Geomnode, Mem_T.SHAPE_Geomnode, Mem_T.SUBGROUP_PTR_Geomnode, Mem_T.ZA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, Mem_T.LOC_Q_Geomnode, Mem_T.LOC_P_Geomnode, Mem_T.INT4, alloc, detChoiceCnt := old(errline_printed), old(Mem_T.NEXT_Geomnode), old(Mem_T.PSEA_Geomnode), old(Mem_T.PHEA_Geomnode), old(Mem_T.THEA_Geomnode), old(Mem_T.QSIZE_Geomnode), old(Mem_T.PSIZE_Geomnode), old(Mem_T.SHAPE_Geomnode), old(Mem_T.SUBGROUP_PTR_Geomnode), old(Mem_T.ZA_Geomnode), old(Mem_T.YA_Geomnode), old(Mem_T.XA_Geomnode), old(Mem_T.LOC_Q_Geomnode), old(Mem_T.LOC_P_Geomnode), old(Mem_T.INT4), old(alloc), old(detChoiceCnt);
    return;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5146} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_4910, out_ultimo_ptr);
    assume value_is(__ctobpl_const_4911, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr)]);
    goto label_80;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5144} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_4908, out_ultimo_ptr);
    assume value_is(__ctobpl_const_4909, out_app_ptr);
    goto label_79;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5139} true;
    out_primo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_4903, out_primo_ptr);
    assume value_is(__ctobpl_const_4904, out_app_ptr);
    goto label_78;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5141} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr) := out_app_ptr];
    assume value_is(__ctobpl_const_4905, out_ultimo_ptr);
    assume value_is(__ctobpl_const_4906, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_4907, out_app_ptr);
    goto label_78;

  label_75_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_4902, out_primo_ptr);
    goto label_77;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5138} true;
    goto label_75_true, label_75_false;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5133} true;
    assert out_app_ptr != 0;
    Mem_T.PSEA_Geomnode := Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4900, out_app_ptr);
    assume value_is(__ctobpl_const_4901, Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_app_ptr)]);
    goto label_75;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5132} true;
    assert out_app_ptr != 0;
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4898, out_app_ptr);
    assume value_is(__ctobpl_const_4899, Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_app_ptr)]);
    goto label_74;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5131} true;
    assert out_app_ptr != 0;
    Mem_T.THEA_Geomnode := Mem_T.THEA_Geomnode[THEA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4896, out_app_ptr);
    assume value_is(__ctobpl_const_4897, Mem_T.THEA_Geomnode[THEA_Geomnode(out_app_ptr)]);
    goto label_73;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5129} true;
    assert out_app_ptr != 0;
    Mem_T.QSIZE_Geomnode := Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(out_app_ptr) := in_elem_qdim];
    assume value_is(__ctobpl_const_4893, out_app_ptr);
    assume value_is(__ctobpl_const_4894, Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4895, in_elem_qdim);
    goto label_72;

  label_70:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5128} true;
    assert out_app_ptr != 0;
    Mem_T.PSIZE_Geomnode := Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(out_app_ptr) := in_elem_pdim];
    assume value_is(__ctobpl_const_4890, out_app_ptr);
    assume value_is(__ctobpl_const_4891, Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4892, in_elem_pdim);
    goto label_71;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5127} true;
    assert out_app_ptr != 0;
    Mem_T.SHAPE_Geomnode := Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(out_app_ptr) := in_elem_shape];
    assume value_is(__ctobpl_const_4887, out_app_ptr);
    assume value_is(__ctobpl_const_4888, Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4889, in_elem_shape);
    goto label_70;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5126} true;
    assert out_app_ptr != 0;
    Mem_T.SUBGROUP_PTR_Geomnode := Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4885, out_app_ptr);
    assume value_is(__ctobpl_const_4886, Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(out_app_ptr)]);
    goto label_69;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5125} true;
    assert out_app_ptr != 0;
    Mem_T.ZA_Geomnode := Mem_T.ZA_Geomnode[ZA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_4883, out_app_ptr);
    assume value_is(__ctobpl_const_4884, Mem_T.ZA_Geomnode[ZA_Geomnode(out_app_ptr)]);
    goto label_68;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5124} true;
    assert out_app_ptr != 0;
    Mem_T.YA_Geomnode := Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr) := out_y];
    assume value_is(__ctobpl_const_4880, out_app_ptr);
    assume value_is(__ctobpl_const_4881, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4882, out_y);
    goto label_67;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5123} true;
    assert out_app_ptr != 0;
    Mem_T.XA_Geomnode := Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr) := out_x];
    assume value_is(__ctobpl_const_4877, out_app_ptr);
    assume value_is(__ctobpl_const_4878, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4879, out_x);
    goto label_66;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5122} true;
    assert out_app_ptr != 0;
    Mem_T.LOC_Q_Geomnode := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr) := out_q];
    assume value_is(__ctobpl_const_4874, out_app_ptr);
    assume value_is(__ctobpl_const_4875, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4876, out_q);
    goto label_65;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5121} true;
    assert out_app_ptr != 0;
    Mem_T.LOC_P_Geomnode := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr) := out_p];
    assume value_is(__ctobpl_const_4871, out_app_ptr);
    assume value_is(__ctobpl_const_4872, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4873, out_p);
    goto label_64;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5119} true;
    assert in_nodes_num_ptr != 0;
    assert in_nodes_num_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[in_nodes_num_ptr := PLUS(Mem_T.INT4[in_nodes_num_ptr], 1, 1)];
    assume value_is(__ctobpl_const_4867, in_nodes_num_ptr);
    assume value_is(__ctobpl_const_4868, Mem_T.INT4[in_nodes_num_ptr]);
    assume value_is(__ctobpl_const_4869, in_nodes_num_ptr);
    assume value_is(__ctobpl_const_4870, Mem_T.INT4[in_nodes_num_ptr]);
    goto label_63;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5116} true;
    out_x := PLUS(MULT(out_p, in_pstep), 1, MULT(MULT(out_q, in_qstep), out_result.dcos$10));
    assume value_is(__ctobpl_const_4861, out_x);
    assume value_is(__ctobpl_const_4862, out_p);
    assume value_is(__ctobpl_const_4863, in_pstep);
    assume value_is(__ctobpl_const_4864, out_q);
    assume value_is(__ctobpl_const_4865, in_qstep);
    assume value_is(__ctobpl_const_4866, out_result.dcos$10);
    goto label_62;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5116} true;
    call out_result.dcos$10 := dcos(in_angle);
    assume value_is(__ctobpl_const_4859, in_angle);
    assume value_is(__ctobpl_const_4860, in_angle);
    goto label_61;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5115} true;
    out_y := MULT(MULT(out_q, in_qstep), out_result.dsin$9);
    assume value_is(__ctobpl_const_4855, out_y);
    assume value_is(__ctobpl_const_4856, out_q);
    assume value_is(__ctobpl_const_4857, in_qstep);
    assume value_is(__ctobpl_const_4858, out_result.dsin$9);
    goto label_58;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5115} true;
    call out_result.dsin$9 := dsin(in_angle);
    assume value_is(__ctobpl_const_4853, in_angle);
    assume value_is(__ctobpl_const_4854, in_angle);
    goto label_57;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5110} true;
    call interror(in_havoc_stringTemp);
    goto label_54;

  label_52_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_4852, out_app_ptr);
    goto label_54;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5108} true;
    goto label_52_true, label_52_false;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5106} true;
    out_app_ptr := out_result.malloc$6;
    assume value_is(__ctobpl_const_4850, out_app_ptr);
    assume value_is(__ctobpl_const_4851, out_result.malloc$6);
    goto label_52;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5106} true;
    call out_result.malloc$6 := __HAVOC_det_malloc(88);
    goto label_51;

  label_46_true:
    assume INT_LEQ(out_p, out_result.intmax$5);
    assume value_is(__ctobpl_const_4847, out_p);
    assume value_is(__ctobpl_const_4848, out_result.intmax$5);
    goto label_48;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5109} true;
    call out_result.printf$7 := det_choice();
    goto label_84;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5109} true;
    goto label_81;

  label_52_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_4852, out_app_ptr);
    goto label_53;

  label_75_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_4902, out_primo_ptr);
    goto label_76;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    out_p := out_result.intmin$4;
    assume value_is(__ctobpl_const_4841, out_p);
    assume value_is(__ctobpl_const_4842, out_result.intmin$4);
    goto label_43;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5100} true;
    call out_result.intmin$4 := intmin(Mem_T.INT4[in_p1], Mem_T.INT4[in_p2]);
    assume value_is(__ctobpl_const_4837, Mem_T.INT4[in_p1]);
    assume value_is(__ctobpl_const_4838, Mem_T.INT4[in_p2]);
    assume value_is(__ctobpl_const_4839, Mem_T.INT4[in_p1]);
    assume value_is(__ctobpl_const_4840, Mem_T.INT4[in_p2]);
    goto label_42;

  label_37_true:
    assume INT_LEQ(out_q, out_result.intmax$3);
    assume value_is(__ctobpl_const_4829, out_q);
    assume value_is(__ctobpl_const_4830, out_result.intmax$3);
    goto label_39;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5099} true;
    goto label_37_true, label_37_false;

  label_37_false:
    assume !INT_LEQ(out_q, out_result.intmax$3);
    assume value_is(__ctobpl_const_4829, out_q);
    assume value_is(__ctobpl_const_4830, out_result.intmax$3);
    out_app_ptr, out_p, out_primo_ptr, out_q, out_result.dcos$10, out_result.dsin$9, out_result.intmax$3, out_result.intmax$5, out_result.intmin$4, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y := in_app_ptr, in_p, in_primo_ptr, in_q, in_result.dcos$10, in_result.dsin$9, in_result.intmax$3, in_result.intmax$5, in_result.intmin$4, in_result.malloc$6, in_result.printf$7, in_ultimo_ptr, in_x, in_y;
    errline_printed, Mem_T.NEXT_Geomnode, Mem_T.PSEA_Geomnode, Mem_T.PHEA_Geomnode, Mem_T.THEA_Geomnode, Mem_T.QSIZE_Geomnode, Mem_T.PSIZE_Geomnode, Mem_T.SHAPE_Geomnode, Mem_T.SUBGROUP_PTR_Geomnode, Mem_T.ZA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, Mem_T.LOC_Q_Geomnode, Mem_T.LOC_P_Geomnode, Mem_T.INT4, alloc, detChoiceCnt := old(errline_printed), old(Mem_T.NEXT_Geomnode), old(Mem_T.PSEA_Geomnode), old(Mem_T.PHEA_Geomnode), old(Mem_T.THEA_Geomnode), old(Mem_T.QSIZE_Geomnode), old(Mem_T.PSIZE_Geomnode), old(Mem_T.SHAPE_Geomnode), old(Mem_T.SUBGROUP_PTR_Geomnode), old(Mem_T.ZA_Geomnode), old(Mem_T.YA_Geomnode), old(Mem_T.XA_Geomnode), old(Mem_T.LOC_Q_Geomnode), old(Mem_T.LOC_P_Geomnode), old(Mem_T.INT4), old(alloc), old(detChoiceCnt);
    return;

  label_47_dummy:
    call {:si_unique_call 1} out_app_ptr, out_p, out_primo_ptr, out_q, out_result.dcos$10, out_result.dsin$9, out_result.intmax$3, out_result.intmax$5, out_result.intmin$4, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y := mksblock_loop_label_34_head(in_havoc_stringTemp, in_angle, out_app_ptr, in_elem_pdim, in_elem_qdim, in_elem_shape, in_nodes_num_ptr, out_p, in_p1, in_p2, out_primo_ptr, in_pstep, out_q, in_q1, in_q2, in_qstep, out_result.dcos$10, out_result.dsin$9, out_result.intmax$3, out_result.intmax$5, out_result.intmin$4, out_result.malloc$6, out_result.printf$7, out_ultimo_ptr, out_x, out_y);
    return;

  exit:
    return;
}



procedure mksblock_loop_label_34_head(in_havoc_stringTemp: int, in_angle: int, in_app_ptr: int, in_elem_pdim: int, in_elem_qdim: int, in_elem_shape: int, in_nodes_num_ptr: int, in_p: int, in_p1: int, in_p2: int, in_primo_ptr: int, in_pstep: int, in_q: int, in_q1: int, in_q2: int, in_qstep: int, in_result.dcos$10: int, in_result.dsin$9: int, in_result.intmax$3: int, in_result.intmax$5: int, in_result.intmin$4: int, in_result.malloc$6: int, in_result.printf$7: int, in_ultimo_ptr: int, in_x: int, in_y: int) returns (out_app_ptr: int, out_p: int, out_primo_ptr: int, out_q: int, out_result.dcos$10: int, out_result.dsin$9: int, out_result.intmax$3: int, out_result.intmax$5: int, out_result.intmin$4: int, out_result.malloc$6: int, out_result.printf$7: int, out_ultimo_ptr: int, out_x: int, out_y: int);
  modifies errline_printed, Mem_T.NEXT_Geomnode, Mem_T.PSEA_Geomnode, Mem_T.PHEA_Geomnode, Mem_T.THEA_Geomnode, Mem_T.QSIZE_Geomnode, Mem_T.PSIZE_Geomnode, Mem_T.SHAPE_Geomnode, Mem_T.SUBGROUP_PTR_Geomnode, Mem_T.ZA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, Mem_T.LOC_Q_Geomnode, Mem_T.LOC_P_Geomnode, Mem_T.INT4, alloc, detChoiceCnt;



implementation mkshex_loop_label_34_head(in_havoc_stringTemp: int, in_P: int, in_Q: int, in_angle: int, in_app_ptr: int, in_elem_pdim: int, in_elem_qdim: int, in_elem_shape: int, in_i: int, in_nodes_num_ptr: int, in_primo_ptr: int, in_pstep: int, in_qstep: int, in_result.dcos$5: int, in_result.dsin$6: int, in_result.malloc$2: int, in_result.printf$3: int, in_ultimo_ptr: int, in_x: int, in_y: int) returns (out_app_ptr: int, out_i: int, out_primo_ptr: int, out_result.dcos$5: int, out_result.dsin$6: int, out_result.malloc$2: int, out_result.printf$3: int, out_ultimo_ptr: int, out_x: int, out_y: int)
{

  entry:
    out_app_ptr, out_i, out_primo_ptr, out_result.dcos$5, out_result.dsin$6, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr, out_x, out_y := in_app_ptr, in_i, in_primo_ptr, in_result.dcos$5, in_result.dsin$6, in_result.malloc$2, in_result.printf$3, in_ultimo_ptr, in_x, in_y;
    goto label_34_head;

  label_34_head:
    goto label_34_true, label_34_false;

  label_34_false:
    assume !INT_LEQ(out_i, 7);
    assume value_is(__ctobpl_const_4955, out_i);
    out_app_ptr, out_i, out_primo_ptr, out_result.dcos$5, out_result.dsin$6, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr, out_x, out_y := in_app_ptr, in_i, in_primo_ptr, in_result.dcos$5, in_result.dsin$6, in_result.malloc$2, in_result.printf$3, in_ultimo_ptr, in_x, in_y;
    Mem_T.NEXT_Geomnode, Mem_T.PSEA_Geomnode, Mem_T.PHEA_Geomnode, Mem_T.THEA_Geomnode, Mem_T.QSIZE_Geomnode, Mem_T.PSIZE_Geomnode, Mem_T.SHAPE_Geomnode, Mem_T.SUBGROUP_PTR_Geomnode, Mem_T.ZA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, Mem_T.LOC_Q_Geomnode, Mem_T.LOC_P_Geomnode, Mem_T.INT4, errline_printed, alloc, detChoiceCnt := old(Mem_T.NEXT_Geomnode), old(Mem_T.PSEA_Geomnode), old(Mem_T.PHEA_Geomnode), old(Mem_T.THEA_Geomnode), old(Mem_T.QSIZE_Geomnode), old(Mem_T.PSIZE_Geomnode), old(Mem_T.SHAPE_Geomnode), old(Mem_T.SUBGROUP_PTR_Geomnode), old(Mem_T.ZA_Geomnode), old(Mem_T.YA_Geomnode), old(Mem_T.XA_Geomnode), old(Mem_T.LOC_Q_Geomnode), old(Mem_T.LOC_P_Geomnode), old(Mem_T.INT4), old(errline_printed), old(alloc), old(detChoiceCnt);
    return;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5210} true;
    assume value_is(__ctobpl_const_5029, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_68_dummy;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5257} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_5027, out_ultimo_ptr);
    assume value_is(__ctobpl_const_5028, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr)]);
    goto label_68;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5255} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_5025, out_ultimo_ptr);
    assume value_is(__ctobpl_const_5026, out_app_ptr);
    goto label_67;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5250} true;
    out_primo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_5020, out_primo_ptr);
    assume value_is(__ctobpl_const_5021, out_app_ptr);
    goto label_66;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5252} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomnode := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr) := out_app_ptr];
    assume value_is(__ctobpl_const_5022, out_ultimo_ptr);
    assume value_is(__ctobpl_const_5023, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_5024, out_app_ptr);
    goto label_66;

  label_63_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_5019, out_primo_ptr);
    goto label_65;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5249} true;
    goto label_63_true, label_63_false;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5244} true;
    assert out_app_ptr != 0;
    Mem_T.PSEA_Geomnode := Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5017, out_app_ptr);
    assume value_is(__ctobpl_const_5018, Mem_T.PSEA_Geomnode[PSEA_Geomnode(out_app_ptr)]);
    goto label_63;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5243} true;
    assert out_app_ptr != 0;
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5015, out_app_ptr);
    assume value_is(__ctobpl_const_5016, Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_app_ptr)]);
    goto label_62;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5242} true;
    assert out_app_ptr != 0;
    Mem_T.THEA_Geomnode := Mem_T.THEA_Geomnode[THEA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5013, out_app_ptr);
    assume value_is(__ctobpl_const_5014, Mem_T.THEA_Geomnode[THEA_Geomnode(out_app_ptr)]);
    goto label_61;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5240} true;
    assert out_app_ptr != 0;
    Mem_T.QSIZE_Geomnode := Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(out_app_ptr) := in_elem_qdim];
    assume value_is(__ctobpl_const_5010, out_app_ptr);
    assume value_is(__ctobpl_const_5011, Mem_T.QSIZE_Geomnode[QSIZE_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_5012, in_elem_qdim);
    goto label_60;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5239} true;
    assert out_app_ptr != 0;
    Mem_T.PSIZE_Geomnode := Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(out_app_ptr) := in_elem_pdim];
    assume value_is(__ctobpl_const_5007, out_app_ptr);
    assume value_is(__ctobpl_const_5008, Mem_T.PSIZE_Geomnode[PSIZE_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_5009, in_elem_pdim);
    goto label_59;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5238} true;
    assert out_app_ptr != 0;
    Mem_T.SHAPE_Geomnode := Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(out_app_ptr) := in_elem_shape];
    assume value_is(__ctobpl_const_5004, out_app_ptr);
    assume value_is(__ctobpl_const_5005, Mem_T.SHAPE_Geomnode[SHAPE_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_5006, in_elem_shape);
    goto label_58;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5237} true;
    assert out_app_ptr != 0;
    Mem_T.SUBGROUP_PTR_Geomnode := Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5002, out_app_ptr);
    assume value_is(__ctobpl_const_5003, Mem_T.SUBGROUP_PTR_Geomnode[SUBGROUP_PTR_Geomnode(out_app_ptr)]);
    goto label_57;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5236} true;
    assert out_app_ptr != 0;
    Mem_T.ZA_Geomnode := Mem_T.ZA_Geomnode[ZA_Geomnode(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5000, out_app_ptr);
    assume value_is(__ctobpl_const_5001, Mem_T.ZA_Geomnode[ZA_Geomnode(out_app_ptr)]);
    goto label_56;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5235} true;
    assert out_app_ptr != 0;
    Mem_T.YA_Geomnode := Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr) := out_y];
    assume value_is(__ctobpl_const_4997, out_app_ptr);
    assume value_is(__ctobpl_const_4998, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4999, out_y);
    goto label_55;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5234} true;
    assert out_app_ptr != 0;
    Mem_T.XA_Geomnode := Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr) := out_x];
    assume value_is(__ctobpl_const_4994, out_app_ptr);
    assume value_is(__ctobpl_const_4995, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4996, out_x);
    goto label_54;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5233} true;
    assert out_app_ptr != 0;
    assert in_Q != 0;
    Mem_T.LOC_Q_Geomnode := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr) := Mem_T.INT4[PLUS(in_Q, 4, out_i)]];
    assume value_is(__ctobpl_const_4990, out_app_ptr);
    assume value_is(__ctobpl_const_4991, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4992, out_i);
    assume value_is(__ctobpl_const_4993, Mem_T.INT4[PLUS(in_Q, 4, out_i)]);
    goto label_53;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5232} true;
    assert out_app_ptr != 0;
    assert in_P != 0;
    Mem_T.LOC_P_Geomnode := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr) := Mem_T.INT4[PLUS(in_P, 4, out_i)]];
    assume value_is(__ctobpl_const_4986, out_app_ptr);
    assume value_is(__ctobpl_const_4987, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_4988, out_i);
    assume value_is(__ctobpl_const_4989, Mem_T.INT4[PLUS(in_P, 4, out_i)]);
    goto label_52;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5230} true;
    assert in_nodes_num_ptr != 0;
    assert in_nodes_num_ptr != 0;
    Mem_T.INT4 := Mem_T.INT4[in_nodes_num_ptr := PLUS(Mem_T.INT4[in_nodes_num_ptr], 1, 1)];
    assume value_is(__ctobpl_const_4982, in_nodes_num_ptr);
    assume value_is(__ctobpl_const_4983, Mem_T.INT4[in_nodes_num_ptr]);
    assume value_is(__ctobpl_const_4984, in_nodes_num_ptr);
    assume value_is(__ctobpl_const_4985, Mem_T.INT4[in_nodes_num_ptr]);
    goto label_51;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5226} true;
    assert in_Q != 0;
    out_y := MULT(MULT(Mem_T.INT4[PLUS(in_Q, 4, out_i)], in_qstep), out_result.dsin$6);
    assume value_is(__ctobpl_const_4977, out_y);
    assume value_is(__ctobpl_const_4978, out_i);
    assume value_is(__ctobpl_const_4979, Mem_T.INT4[PLUS(in_Q, 4, out_i)]);
    assume value_is(__ctobpl_const_4980, in_qstep);
    assume value_is(__ctobpl_const_4981, out_result.dsin$6);
    goto label_50;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5226} true;
    call out_result.dsin$6 := dsin(in_angle);
    assume value_is(__ctobpl_const_4975, in_angle);
    assume value_is(__ctobpl_const_4976, in_angle);
    goto label_49;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5225} true;
    assert in_P != 0;
    assert in_Q != 0;
    out_x := PLUS(MULT(Mem_T.INT4[PLUS(in_P, 4, out_i)], in_pstep), 1, MULT(MULT(Mem_T.INT4[PLUS(in_Q, 4, out_i)], in_qstep), out_result.dcos$5));
    assume value_is(__ctobpl_const_4967, out_x);
    assume value_is(__ctobpl_const_4968, out_i);
    assume value_is(__ctobpl_const_4969, Mem_T.INT4[PLUS(in_P, 4, out_i)]);
    assume value_is(__ctobpl_const_4970, in_pstep);
    assume value_is(__ctobpl_const_4971, out_i);
    assume value_is(__ctobpl_const_4972, Mem_T.INT4[PLUS(in_Q, 4, out_i)]);
    assume value_is(__ctobpl_const_4973, in_qstep);
    assume value_is(__ctobpl_const_4974, out_result.dcos$5);
    goto label_46;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5225} true;
    call out_result.dcos$5 := dcos(in_angle);
    assume value_is(__ctobpl_const_4965, in_angle);
    assume value_is(__ctobpl_const_4966, in_angle);
    goto label_45;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5220} true;
    call interror(in_havoc_stringTemp);
    goto label_42;

  label_40_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_4964, out_app_ptr);
    goto label_42;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5218} true;
    goto label_40_true, label_40_false;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5216} true;
    out_app_ptr := out_result.malloc$2;
    assume value_is(__ctobpl_const_4962, out_app_ptr);
    assume value_is(__ctobpl_const_4963, out_result.malloc$2);
    goto label_40;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5216} true;
    call out_result.malloc$2 := __HAVOC_det_malloc(88);
    goto label_39;

  label_34_true:
    assume INT_LEQ(out_i, 7);
    assume value_is(__ctobpl_const_4955, out_i);
    goto label_36;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5219} true;
    call out_result.printf$3 := det_choice();
    goto label_72;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5219} true;
    goto label_69;

  label_40_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_4964, out_app_ptr);
    goto label_41;

  label_63_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_5019, out_primo_ptr);
    goto label_64;

  label_68_dummy:
    call {:si_unique_call 1} out_app_ptr, out_i, out_primo_ptr, out_result.dcos$5, out_result.dsin$6, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr, out_x, out_y := mkshex_loop_label_34_head(in_havoc_stringTemp, in_P, in_Q, in_angle, out_app_ptr, in_elem_pdim, in_elem_qdim, in_elem_shape, out_i, in_nodes_num_ptr, out_primo_ptr, in_pstep, in_qstep, out_result.dcos$5, out_result.dsin$6, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr, out_x, out_y);
    return;

  exit:
    return;
}



procedure mkshex_loop_label_34_head(in_havoc_stringTemp: int, in_P: int, in_Q: int, in_angle: int, in_app_ptr: int, in_elem_pdim: int, in_elem_qdim: int, in_elem_shape: int, in_i: int, in_nodes_num_ptr: int, in_primo_ptr: int, in_pstep: int, in_qstep: int, in_result.dcos$5: int, in_result.dsin$6: int, in_result.malloc$2: int, in_result.printf$3: int, in_ultimo_ptr: int, in_x: int, in_y: int) returns (out_app_ptr: int, out_i: int, out_primo_ptr: int, out_result.dcos$5: int, out_result.dsin$6: int, out_result.malloc$2: int, out_result.printf$3: int, out_ultimo_ptr: int, out_x: int, out_y: int);
  modifies Mem_T.NEXT_Geomnode, Mem_T.PSEA_Geomnode, Mem_T.PHEA_Geomnode, Mem_T.THEA_Geomnode, Mem_T.QSIZE_Geomnode, Mem_T.PSIZE_Geomnode, Mem_T.SHAPE_Geomnode, Mem_T.SUBGROUP_PTR_Geomnode, Mem_T.ZA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, Mem_T.LOC_Q_Geomnode, Mem_T.LOC_P_Geomnode, Mem_T.INT4, errline_printed, alloc, detChoiceCnt;



implementation moseinit_loop_label_5_head(in_i: int) returns (out_i: int)
{

  entry:
    out_i := in_i;
    goto label_5_head;

  label_5_head:
    goto label_5_true, label_5_false;

  label_5_false:
    assume !INT_LEQ(out_i, 20);
    assume value_is(__ctobpl_const_5126, out_i);
    out_i := in_i;
    Mem_T.CHAR := old(Mem_T.CHAR);
    return;

  label_8:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5483} true;
    assume value_is(__ctobpl_const_5189, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_8_dummy;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5484} true;
    assert PLUS(MOSErrors, 101, out_i) != 0;
    Mem_T.CHAR := Mem_T.CHAR[PLUS(PLUS(MOSErrors, 101, out_i), 1, 0) := 0];
    assume value_is(__ctobpl_const_5187, out_i);
    assume value_is(__ctobpl_const_5188, Mem_T.CHAR[PLUS(PLUS(MOSErrors, 101, out_i), 1, 0)]);
    goto label_8;

  label_5_true:
    assume INT_LEQ(out_i, 20);
    assume value_is(__ctobpl_const_5126, out_i);
    goto label_7;

  label_8_dummy:
    call {:si_unique_call 1} out_i := moseinit_loop_label_5_head(out_i);
    return;

  exit:
    return;
}



procedure moseinit_loop_label_5_head(in_i: int) returns (out_i: int);
  modifies Mem_T.CHAR;



implementation parserro_loop_label_40_head(in_i: int, in_n: int, in_result.printf$5: int) returns (out_i: int, out_result.printf$5: int)
{

  entry:
    out_i, out_result.printf$5 := in_i, in_result.printf$5;
    goto label_40_head;

  label_40_head:
    goto label_40_true, label_40_false;

  label_40_false:
    assume !INT_LEQ(out_i, in_n);
    assume value_is(__ctobpl_const_5461, out_i);
    assume value_is(__ctobpl_const_5462, in_n);
    out_i, out_result.printf$5 := in_i, in_result.printf$5;
    detChoiceCnt := old(detChoiceCnt);
    return;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5788} true;
    assume value_is(__ctobpl_const_5463, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_47_dummy;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5789} true;
    call out_result.printf$5 := det_choice();
    goto label_47;

  label_40_true:
    assume INT_LEQ(out_i, in_n);
    assume value_is(__ctobpl_const_5461, out_i);
    assume value_is(__ctobpl_const_5462, in_n);
    goto label_44;

  label_47_dummy:
    call {:si_unique_call 1} out_i, out_result.printf$5 := parserro_loop_label_40_head(out_i, in_n, out_result.printf$5);
    return;

  exit:
    return;
}



procedure parserro_loop_label_40_head(in_i: int, in_n: int, in_result.printf$5: int) returns (out_i: int, out_result.printf$5: int);
  modifies detChoiceCnt;



implementation parserro_loop_label_30_head(in_err_ptr: int, in_p: int, in_result.printf$3: int) returns (out_p: int, out_result.printf$3: int)
{

  entry:
    out_p, out_result.printf$3 := in_p, in_result.printf$3;
    goto label_30_head;

  label_30_head:
    goto label_30_true, label_30_false;

  label_30_false:
    assume out_p == 0;
    assume value_is(__ctobpl_const_5455, out_p);
    out_p, out_result.printf$3 := in_p, in_result.printf$3;
    detChoiceCnt := old(detChoiceCnt);
    return;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5783} true;
    assert out_p != 0;
    out_p := Mem_T.NEXT_charac[NEXT_charac(out_p)];
    assume value_is(__ctobpl_const_5464, out_p);
    assume value_is(__ctobpl_const_5465, out_p);
    assume value_is(__ctobpl_const_5466, Mem_T.NEXT_charac[NEXT_charac(out_p)]);
    goto label_38_dummy;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5782} true;
    call out_result.printf$3 := det_choice();
    goto label_38;

  label_34_true:
    assume INT_EQ(Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)], Mem_T.LINE_NUM_charac[LINE_NUM_charac(in_err_ptr)]);
    assume value_is(__ctobpl_const_5456, out_p);
    assume value_is(__ctobpl_const_5457, Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)]);
    assume value_is(__ctobpl_const_5458, in_err_ptr);
    assume value_is(__ctobpl_const_5459, Mem_T.LINE_NUM_charac[LINE_NUM_charac(in_err_ptr)]);
    goto label_35;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5781} true;
    assert out_p != 0;
    assert in_err_ptr != 0;
    goto label_34_true, label_34_false;

  label_34_false:
    assume !INT_EQ(Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)], Mem_T.LINE_NUM_charac[LINE_NUM_charac(in_err_ptr)]);
    assume value_is(__ctobpl_const_5456, out_p);
    assume value_is(__ctobpl_const_5457, Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)]);
    assume value_is(__ctobpl_const_5458, in_err_ptr);
    assume value_is(__ctobpl_const_5459, Mem_T.LINE_NUM_charac[LINE_NUM_charac(in_err_ptr)]);
    out_p, out_result.printf$3 := in_p, in_result.printf$3;
    detChoiceCnt := old(detChoiceCnt);
    return;

  label_30_true:
    assume out_p != 0;
    assume value_is(__ctobpl_const_5455, out_p);
    goto label_34;

  label_38_dummy:
    call {:si_unique_call 1} out_p, out_result.printf$3 := parserro_loop_label_30_head(in_err_ptr, out_p, out_result.printf$3);
    return;

  exit:
    return;
}



procedure parserro_loop_label_30_head(in_err_ptr: int, in_p: int, in_result.printf$3: int) returns (out_p: int, out_result.printf$3: int);
  modifies detChoiceCnt;



implementation parserro_loop_label_23_head(in_err_ptr: int, in_n: int, in_p: int) returns (out_n: int, out_p: int)
{

  entry:
    out_n, out_p := in_n, in_p;
    goto label_23_head;

  label_23_head:
    assert out_p != 0;
    goto label_23_true, label_23_false;

  label_23_false:
    assume Mem_T.PREV_charac[PREV_charac(out_p)] == 0;
    assume value_is(__ctobpl_const_5448, out_p);
    assume value_is(__ctobpl_const_5449, Mem_T.PREV_charac[PREV_charac(out_p)]);
    out_n, out_p := in_n, in_p;
    return;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5776} true;
    assert out_p != 0;
    out_p := Mem_T.PREV_charac[PREV_charac(out_p)];
    assume value_is(__ctobpl_const_5468, out_p);
    assume value_is(__ctobpl_const_5469, out_p);
    assume value_is(__ctobpl_const_5470, Mem_T.PREV_charac[PREV_charac(out_p)]);
    goto label_29_dummy;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5775} true;
    assume value_is(__ctobpl_const_5467, out_n);
    out_n := PLUS(out_n, 1, 1);
    goto label_29;

  label_27_true:
    assume INT_EQ(Mem_T.LINE_NUM_charac[LINE_NUM_charac(Mem_T.PREV_charac[PREV_charac(out_p)])], Mem_T.LINE_NUM_charac[LINE_NUM_charac(in_err_ptr)]);
    assume value_is(__ctobpl_const_5450, out_p);
    assume value_is(__ctobpl_const_5451, Mem_T.PREV_charac[PREV_charac(out_p)]);
    assume value_is(__ctobpl_const_5452, Mem_T.LINE_NUM_charac[LINE_NUM_charac(Mem_T.PREV_charac[PREV_charac(out_p)])]);
    assume value_is(__ctobpl_const_5453, in_err_ptr);
    assume value_is(__ctobpl_const_5454, Mem_T.LINE_NUM_charac[LINE_NUM_charac(in_err_ptr)]);
    goto label_28;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 5774} true;
    assert out_p != 0;
    assert Mem_T.PREV_charac[PREV_charac(out_p)] != 0;
    assert in_err_ptr != 0;
    goto label_27_true, label_27_false;

  label_27_false:
    assume !INT_EQ(Mem_T.LINE_NUM_charac[LINE_NUM_charac(Mem_T.PREV_charac[PREV_charac(out_p)])], Mem_T.LINE_NUM_charac[LINE_NUM_charac(in_err_ptr)]);
    assume value_is(__ctobpl_const_5450, out_p);
    assume value_is(__ctobpl_const_5451, Mem_T.PREV_charac[PREV_charac(out_p)]);
    assume value_is(__ctobpl_const_5452, Mem_T.LINE_NUM_charac[LINE_NUM_charac(Mem_T.PREV_charac[PREV_charac(out_p)])]);
    assume value_is(__ctobpl_const_5453, in_err_ptr);
    assume value_is(__ctobpl_const_5454, Mem_T.LINE_NUM_charac[LINE_NUM_charac(in_err_ptr)]);
    out_n, out_p := in_n, in_p;
    return;

  label_23_true:
    assume Mem_T.PREV_charac[PREV_charac(out_p)] != 0;
    assume value_is(__ctobpl_const_5448, out_p);
    assume value_is(__ctobpl_const_5449, Mem_T.PREV_charac[PREV_charac(out_p)]);
    goto label_27;

  label_29_dummy:
    call {:si_unique_call 1} out_n, out_p := parserro_loop_label_23_head(in_err_ptr, out_n, out_p);
    return;

  exit:
    return;
}



procedure parserro_loop_label_23_head(in_err_ptr: int, in_n: int, in_p: int) returns (out_n: int, out_p: int);



implementation polydef_loop_label_30_head(in_havoc_stringTemp: int, in_app_ptr: int, in_cont: int, in_curr_ptr: int, in_error: int, in_pcoord: int, in_pcoord_ptr: int, in_primo_ptr: int, in_qcoord: int, in_qcoord_ptr: int, in_result.malloc$5: int, in_result.nodecoor$4: int, in_ultimo_ptr: int) returns (out_app_ptr: int, out_cont: int, out_error: int, out_primo_ptr: int, out_result.malloc$5: int, out_result.nodecoor$4: int, out_ultimo_ptr: int)
{

  entry:
    out_app_ptr, out_cont, out_error, out_primo_ptr, out_result.malloc$5, out_result.nodecoor$4, out_ultimo_ptr := in_app_ptr, in_cont, in_error, in_primo_ptr, in_result.malloc$5, in_result.nodecoor$4, in_ultimo_ptr;
    goto label_30_head;

  label_30_head:
    goto label_30_true, label_30_false;

  label_30_false:
    assume 1 == 0;
    out_app_ptr, out_cont, out_error, out_primo_ptr, out_result.malloc$5, out_result.nodecoor$4, out_ultimo_ptr := in_app_ptr, in_cont, in_error, in_primo_ptr, in_result.malloc$5, in_result.nodecoor$4, in_ultimo_ptr;
    Mem_T.NEXT_Node, errline_printed, Mem_T.ANGLE_UNIT_Node, Mem_T.PSEA_Node, Mem_T.PHEA_Node, Mem_T.THEA_Node, Mem_T.QCOORD_Node, Mem_T.PCOORD_Node, alloc := old(Mem_T.NEXT_Node), old(errline_printed), old(Mem_T.ANGLE_UNIT_Node), old(Mem_T.PSEA_Node), old(Mem_T.PHEA_Node), old(Mem_T.THEA_Node), old(Mem_T.QCOORD_Node), old(Mem_T.PCOORD_Node), old(alloc);
    return;

  label_39_false:
    assume out_error == 0;
    assume value_is(__ctobpl_const_5814, out_error);
    goto label_39_false_dummy;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6154} true;
    goto label_39_true, label_39_false;

  label_39_true:
    assume out_error != 0;
    assume value_is(__ctobpl_const_5814, out_error);
    out_app_ptr, out_cont, out_error, out_primo_ptr, out_result.malloc$5, out_result.nodecoor$4, out_ultimo_ptr := in_app_ptr, in_cont, in_error, in_primo_ptr, in_result.malloc$5, in_result.nodecoor$4, in_ultimo_ptr;
    Mem_T.NEXT_Node, errline_printed, Mem_T.ANGLE_UNIT_Node, Mem_T.PSEA_Node, Mem_T.PHEA_Node, Mem_T.THEA_Node, Mem_T.QCOORD_Node, Mem_T.PCOORD_Node, alloc := old(Mem_T.NEXT_Node), old(errline_printed), old(Mem_T.ANGLE_UNIT_Node), old(Mem_T.PSEA_Node), old(Mem_T.PHEA_Node), old(Mem_T.THEA_Node), old(Mem_T.QCOORD_Node), old(Mem_T.PCOORD_Node), old(alloc);
    return;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6146} true;
    assert out_app_ptr != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5805, out_app_ptr);
    assume value_is(__ctobpl_const_5806, Mem_T.NEXT_Node[NEXT_Node(out_app_ptr)]);
    goto label_39;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6150} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_5812, out_ultimo_ptr);
    assume value_is(__ctobpl_const_5813, Mem_T.NEXT_Node[NEXT_Node(out_ultimo_ptr)]);
    goto label_39;

  label_37_true:
    assume out_error != 0;
    assume value_is(__ctobpl_const_5776, out_error);
    goto label_39;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6124} true;
    goto label_37_true, label_37_false;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6122} true;
    out_error := out_result.nodecoor$4;
    assume value_is(__ctobpl_const_5774, out_error);
    assume value_is(__ctobpl_const_5775, out_result.nodecoor$4);
    goto label_37;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6122} true;
    assert in_curr_ptr != 0;
    assert in_curr_ptr != 0;
    call out_result.nodecoor$4 := nodecoor(Mem_T.Pcharac[in_curr_ptr], in_curr_ptr, in_pcoord_ptr, in_qcoord_ptr);
    assume value_is(__ctobpl_const_5764, in_curr_ptr);
    assume value_is(__ctobpl_const_5765, Mem_T.Pcharac[in_curr_ptr]);
    assume value_is(__ctobpl_const_5766, in_curr_ptr);
    assume value_is(__ctobpl_const_5767, in_pcoord_ptr);
    assume value_is(__ctobpl_const_5768, in_qcoord_ptr);
    assume value_is(__ctobpl_const_5769, in_curr_ptr);
    assume value_is(__ctobpl_const_5770, Mem_T.Pcharac[in_curr_ptr]);
    assume value_is(__ctobpl_const_5771, in_curr_ptr);
    assume value_is(__ctobpl_const_5772, in_pcoord_ptr);
    assume value_is(__ctobpl_const_5773, in_qcoord_ptr);
    goto label_36;

  label_30_true:
    assume 1 != 0;
    goto label_33;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6149} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_5810, out_ultimo_ptr);
    assume value_is(__ctobpl_const_5811, out_app_ptr);
    goto label_59;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6148} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Node := Mem_T.NEXT_Node[NEXT_Node(out_ultimo_ptr) := out_app_ptr];
    assume value_is(__ctobpl_const_5807, out_ultimo_ptr);
    assume value_is(__ctobpl_const_5808, Mem_T.NEXT_Node[NEXT_Node(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_5809, out_app_ptr);
    goto label_58;

  label_55_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_5800, out_primo_ptr);
    goto label_57;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6143} true;
    goto label_55_true, label_55_false;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6140} true;
    assert out_app_ptr != 0;
    Mem_T.ANGLE_UNIT_Node := Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5798, out_app_ptr);
    assume value_is(__ctobpl_const_5799, Mem_T.ANGLE_UNIT_Node[ANGLE_UNIT_Node(out_app_ptr)]);
    goto label_55;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6139} true;
    assert out_app_ptr != 0;
    Mem_T.PSEA_Node := Mem_T.PSEA_Node[PSEA_Node(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5796, out_app_ptr);
    assume value_is(__ctobpl_const_5797, Mem_T.PSEA_Node[PSEA_Node(out_app_ptr)]);
    goto label_54;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6138} true;
    assert out_app_ptr != 0;
    Mem_T.PHEA_Node := Mem_T.PHEA_Node[PHEA_Node(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5794, out_app_ptr);
    assume value_is(__ctobpl_const_5795, Mem_T.PHEA_Node[PHEA_Node(out_app_ptr)]);
    goto label_53;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6137} true;
    assert out_app_ptr != 0;
    Mem_T.THEA_Node := Mem_T.THEA_Node[THEA_Node(out_app_ptr) := 0];
    assume value_is(__ctobpl_const_5792, out_app_ptr);
    assume value_is(__ctobpl_const_5793, Mem_T.THEA_Node[THEA_Node(out_app_ptr)]);
    goto label_52;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6136} true;
    assert out_app_ptr != 0;
    Mem_T.QCOORD_Node := Mem_T.QCOORD_Node[QCOORD_Node(out_app_ptr) := Mem_T.INT4[in_qcoord]];
    assume value_is(__ctobpl_const_5789, out_app_ptr);
    assume value_is(__ctobpl_const_5790, Mem_T.QCOORD_Node[QCOORD_Node(out_app_ptr)]);
    assume value_is(__ctobpl_const_5791, Mem_T.INT4[in_qcoord]);
    goto label_51;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6135} true;
    assert out_app_ptr != 0;
    Mem_T.PCOORD_Node := Mem_T.PCOORD_Node[PCOORD_Node(out_app_ptr) := Mem_T.INT4[in_pcoord]];
    assume value_is(__ctobpl_const_5786, out_app_ptr);
    assume value_is(__ctobpl_const_5787, Mem_T.PCOORD_Node[PCOORD_Node(out_app_ptr)]);
    assume value_is(__ctobpl_const_5788, Mem_T.INT4[in_pcoord]);
    goto label_50;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6132} true;
    call interror(in_havoc_stringTemp);
    goto label_49;

  label_45_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_5781, out_app_ptr);
    goto label_49;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6129} true;
    goto label_45_true, label_45_false;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6127} true;
    out_app_ptr := out_result.malloc$5;
    assume value_is(__ctobpl_const_5779, out_app_ptr);
    assume value_is(__ctobpl_const_5780, out_result.malloc$5);
    goto label_45;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6127} true;
    call out_result.malloc$5 := __HAVOC_det_malloc(48);
    goto label_44;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6125} true;
    out_cont := PLUS(out_cont, 1, 1);
    assume value_is(__ctobpl_const_5777, out_cont);
    assume value_is(__ctobpl_const_5778, out_cont);
    goto label_41;

  label_37_false:
    assume out_error == 0;
    assume value_is(__ctobpl_const_5776, out_error);
    goto label_38;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6130} true;
    assert in_curr_ptr != 0;
    assert in_curr_ptr != 0;
    call parserro(Mem_T.Pcharac[in_curr_ptr], 55, in_havoc_stringTemp);
    assume value_is(__ctobpl_const_5782, in_curr_ptr);
    assume value_is(__ctobpl_const_5783, Mem_T.Pcharac[in_curr_ptr]);
    assume value_is(__ctobpl_const_5784, in_curr_ptr);
    assume value_is(__ctobpl_const_5785, Mem_T.Pcharac[in_curr_ptr]);
    goto label_62;

  label_45_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_5781, out_app_ptr);
    goto label_46;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6145} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_5803, out_ultimo_ptr);
    assume value_is(__ctobpl_const_5804, out_app_ptr);
    goto label_61;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6144} true;
    out_primo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_5801, out_primo_ptr);
    assume value_is(__ctobpl_const_5802, out_app_ptr);
    goto label_60;

  label_55_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_5800, out_primo_ptr);
    goto label_56;

  label_39_false_dummy:
    call {:si_unique_call 1} out_app_ptr, out_cont, out_error, out_primo_ptr, out_result.malloc$5, out_result.nodecoor$4, out_ultimo_ptr := polydef_loop_label_30_head(in_havoc_stringTemp, out_app_ptr, out_cont, in_curr_ptr, out_error, in_pcoord, in_pcoord_ptr, out_primo_ptr, in_qcoord, in_qcoord_ptr, out_result.malloc$5, out_result.nodecoor$4, out_ultimo_ptr);
    return;

  exit:
    return;
}



procedure polydef_loop_label_30_head(in_havoc_stringTemp: int, in_app_ptr: int, in_cont: int, in_curr_ptr: int, in_error: int, in_pcoord: int, in_pcoord_ptr: int, in_primo_ptr: int, in_qcoord: int, in_qcoord_ptr: int, in_result.malloc$5: int, in_result.nodecoor$4: int, in_ultimo_ptr: int) returns (out_app_ptr: int, out_cont: int, out_error: int, out_primo_ptr: int, out_result.malloc$5: int, out_result.nodecoor$4: int, out_ultimo_ptr: int);
  modifies Mem_T.NEXT_Node, errline_printed, Mem_T.ANGLE_UNIT_Node, Mem_T.PSEA_Node, Mem_T.PHEA_Node, Mem_T.THEA_Node, Mem_T.QCOORD_Node, Mem_T.PCOORD_Node, alloc;



implementation portspec_loop_label_37_head(in_havoc_stringTemp: int, in_app_ptr: int, in_curr_ptr: int, in_error: int, in_n: int, in_nports_ptr: int, in_portnum_ptr: int, in_primo_ptr: int, in_result.malloc$5: int, in_result.portdef$6: int, in_ultimo_ptr: int) returns (out_app_ptr: int, out_error: int, out_n: int, out_primo_ptr: int, out_result.malloc$5: int, out_result.portdef$6: int, out_ultimo_ptr: int)
{

  entry:
    out_app_ptr, out_error, out_n, out_primo_ptr, out_result.malloc$5, out_result.portdef$6, out_ultimo_ptr := in_app_ptr, in_error, in_n, in_primo_ptr, in_result.malloc$5, in_result.portdef$6, in_ultimo_ptr;
    goto label_37_head;

  label_37_head:
    assert in_nports_ptr != 0;
    goto label_37_true, label_37_false;

  label_37_false:
    assume !INT_LEQ(out_n, Mem_T.INT4[in_nports_ptr]);
    assume value_is(__ctobpl_const_6081, out_n);
    assume value_is(__ctobpl_const_6082, in_nports_ptr);
    assume value_is(__ctobpl_const_6083, Mem_T.INT4[in_nports_ptr]);
    out_app_ptr, out_error, out_n, out_primo_ptr, out_result.malloc$5, out_result.portdef$6, out_ultimo_ptr := in_app_ptr, in_error, in_n, in_primo_ptr, in_result.malloc$5, in_result.portdef$6, in_ultimo_ptr;
    Mem_T.NEXT_Port, Mem_T.PORTNUM_Port, errline_printed, alloc := old(Mem_T.NEXT_Port), old(Mem_T.PORTNUM_Port), old(errline_printed), old(alloc);
    return;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6395} true;
    assume value_is(__ctobpl_const_6126, out_n);
    out_n := PLUS(out_n, 1, 1);
    goto label_68_dummy;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6434} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Port := Mem_T.NEXT_Port[NEXT_Port(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_6124, out_ultimo_ptr);
    assume value_is(__ctobpl_const_6125, Mem_T.NEXT_Port[NEXT_Port(out_ultimo_ptr)]);
    goto label_68;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6431} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_6122, out_ultimo_ptr);
    assume value_is(__ctobpl_const_6123, out_app_ptr);
    goto label_67;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6426} true;
    out_primo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_6117, out_primo_ptr);
    assume value_is(__ctobpl_const_6118, out_app_ptr);
    goto label_66;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6428} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Port := Mem_T.NEXT_Port[NEXT_Port(out_ultimo_ptr) := out_app_ptr];
    assume value_is(__ctobpl_const_6119, out_ultimo_ptr);
    assume value_is(__ctobpl_const_6120, Mem_T.NEXT_Port[NEXT_Port(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_6121, out_app_ptr);
    goto label_66;

  label_63_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_6116, out_primo_ptr);
    goto label_65;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6425} true;
    goto label_63_true, label_63_false;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6420} true;
    assert out_app_ptr != 0;
    assert in_portnum_ptr != 0;
    Mem_T.PORTNUM_Port := Mem_T.PORTNUM_Port[PORTNUM_Port(out_app_ptr) := Mem_T.INT4[in_portnum_ptr]];
    assume value_is(__ctobpl_const_6112, out_app_ptr);
    assume value_is(__ctobpl_const_6113, Mem_T.PORTNUM_Port[PORTNUM_Port(out_app_ptr)]);
    assume value_is(__ctobpl_const_6114, in_portnum_ptr);
    assume value_is(__ctobpl_const_6115, Mem_T.INT4[in_portnum_ptr]);
    goto label_63;

  label_52_false:
    assume !INT_EQ(out_error, 17);
    assume value_is(__ctobpl_const_6111, out_error);
    goto label_57;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6413} true;
    goto label_52_true, label_52_false;

  label_52_true:
    assume INT_EQ(out_error, 17);
    assume value_is(__ctobpl_const_6111, out_error);
    out_app_ptr, out_error, out_n, out_primo_ptr, out_result.malloc$5, out_result.portdef$6, out_ultimo_ptr := in_app_ptr, in_error, in_n, in_primo_ptr, in_result.malloc$5, in_result.portdef$6, in_ultimo_ptr;
    Mem_T.NEXT_Port, Mem_T.PORTNUM_Port, errline_printed, alloc := old(Mem_T.NEXT_Port), old(Mem_T.PORTNUM_Port), old(errline_printed), old(alloc);
    return;

  label_51_false:
    assume !INT_EQ(out_error, 1);
    assume value_is(__ctobpl_const_6110, out_error);
    goto label_52;

  label_51:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6407} true;
    goto label_51_true, label_51_false;

  label_51_true:
    assume INT_EQ(out_error, 1);
    assume value_is(__ctobpl_const_6110, out_error);
    out_app_ptr, out_error, out_n, out_primo_ptr, out_result.malloc$5, out_result.portdef$6, out_ultimo_ptr := in_app_ptr, in_error, in_n, in_primo_ptr, in_result.malloc$5, in_result.portdef$6, in_ultimo_ptr;
    Mem_T.NEXT_Port, Mem_T.PORTNUM_Port, errline_printed, alloc := old(Mem_T.NEXT_Port), old(Mem_T.PORTNUM_Port), old(errline_printed), old(alloc);
    return;

  label_50:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6404} true;
    out_error := out_result.portdef$6;
    assume value_is(__ctobpl_const_6108, out_error);
    assume value_is(__ctobpl_const_6109, out_result.portdef$6);
    goto label_51;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6404} true;
    assert in_curr_ptr != 0;
    assert in_curr_ptr != 0;
    call out_result.portdef$6 := portdef(Mem_T.Pcharac[in_curr_ptr], in_curr_ptr, out_app_ptr, in_portnum_ptr);
    assume value_is(__ctobpl_const_6098, in_curr_ptr);
    assume value_is(__ctobpl_const_6099, Mem_T.Pcharac[in_curr_ptr]);
    assume value_is(__ctobpl_const_6100, in_curr_ptr);
    assume value_is(__ctobpl_const_6101, out_app_ptr);
    assume value_is(__ctobpl_const_6102, in_portnum_ptr);
    assume value_is(__ctobpl_const_6103, in_curr_ptr);
    assume value_is(__ctobpl_const_6104, Mem_T.Pcharac[in_curr_ptr]);
    assume value_is(__ctobpl_const_6105, in_curr_ptr);
    assume value_is(__ctobpl_const_6106, out_app_ptr);
    assume value_is(__ctobpl_const_6107, in_portnum_ptr);
    goto label_50;

  label_69:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6402} true;
    call interror(in_havoc_stringTemp);
    goto label_47;

  label_43_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_6093, out_app_ptr);
    goto label_47;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6399} true;
    goto label_43_true, label_43_false;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6397} true;
    out_app_ptr := out_result.malloc$5;
    assume value_is(__ctobpl_const_6091, out_app_ptr);
    assume value_is(__ctobpl_const_6092, out_result.malloc$5);
    goto label_43;

  label_39:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6397} true;
    call out_result.malloc$5 := __HAVOC_det_malloc(96);
    goto label_42;

  label_37_true:
    assume INT_LEQ(out_n, Mem_T.INT4[in_nports_ptr]);
    assume value_is(__ctobpl_const_6081, out_n);
    assume value_is(__ctobpl_const_6082, in_nports_ptr);
    assume value_is(__ctobpl_const_6083, Mem_T.INT4[in_nports_ptr]);
    goto label_39;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6400} true;
    assert in_curr_ptr != 0;
    assert in_curr_ptr != 0;
    call parserro(Mem_T.Pcharac[in_curr_ptr], 55, in_havoc_stringTemp);
    assume value_is(__ctobpl_const_6094, in_curr_ptr);
    assume value_is(__ctobpl_const_6095, Mem_T.Pcharac[in_curr_ptr]);
    assume value_is(__ctobpl_const_6096, in_curr_ptr);
    assume value_is(__ctobpl_const_6097, Mem_T.Pcharac[in_curr_ptr]);
    goto label_69;

  label_43_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_6093, out_app_ptr);
    goto label_44;

  label_63_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_6116, out_primo_ptr);
    goto label_64;

  label_68_dummy:
    call {:si_unique_call 1} out_app_ptr, out_error, out_n, out_primo_ptr, out_result.malloc$5, out_result.portdef$6, out_ultimo_ptr := portspec_loop_label_37_head(in_havoc_stringTemp, out_app_ptr, in_curr_ptr, out_error, out_n, in_nports_ptr, in_portnum_ptr, out_primo_ptr, out_result.malloc$5, out_result.portdef$6, out_ultimo_ptr);
    return;

  exit:
    return;
}



procedure portspec_loop_label_37_head(in_havoc_stringTemp: int, in_app_ptr: int, in_curr_ptr: int, in_error: int, in_n: int, in_nports_ptr: int, in_portnum_ptr: int, in_primo_ptr: int, in_result.malloc$5: int, in_result.portdef$6: int, in_ultimo_ptr: int) returns (out_app_ptr: int, out_error: int, out_n: int, out_primo_ptr: int, out_result.malloc$5: int, out_result.portdef$6: int, out_ultimo_ptr: int);
  modifies Mem_T.NEXT_Port, Mem_T.PORTNUM_Port, errline_printed, alloc;



implementation pqlimits_loop_label_17_head(in_app_ptr: int, in_pmax: int, in_pmax_ptr: int, in_pmin: int, in_pmin_ptr: int, in_qmax: int, in_qmax_ptr: int, in_qmin: int, in_qmin_ptr: int) returns (out_app_ptr: int, out_pmax: int, out_pmin: int, out_qmax: int, out_qmin: int)
{

  entry:
    out_app_ptr, out_pmax, out_pmin, out_qmax, out_qmin := in_app_ptr, in_pmax, in_pmin, in_qmax, in_qmin;
    goto label_17_head;

  label_17_head:
    goto label_17_true, label_17_false;

  label_17_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_6193, out_app_ptr);
    out_app_ptr, out_pmax, out_pmin, out_qmax, out_qmin := in_app_ptr, in_pmax, in_pmin, in_qmax, in_qmin;
    Mem_T.PGeomnode := old(Mem_T.PGeomnode);
    return;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6531} true;
    assert out_app_ptr != 0;
    out_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_6230, out_app_ptr);
    assume value_is(__ctobpl_const_6231, out_app_ptr);
    assume value_is(__ctobpl_const_6232, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_app_ptr)]);
    goto label_29_dummy;

  label_26_false:
    assume !INT_LT(out_qmax, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_6221, out_qmax);
    assume value_is(__ctobpl_const_6222, out_app_ptr);
    assume value_is(__ctobpl_const_6223, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    goto label_29;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6528} true;
    assert in_qmax_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[in_qmax_ptr := out_app_ptr];
    assume value_is(__ctobpl_const_6227, in_qmax_ptr);
    assume value_is(__ctobpl_const_6228, Mem_T.PGeomnode[in_qmax_ptr]);
    assume value_is(__ctobpl_const_6229, out_app_ptr);
    goto label_29;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6527} true;
    assert out_app_ptr != 0;
    out_qmax := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_6224, out_qmax);
    assume value_is(__ctobpl_const_6225, out_app_ptr);
    assume value_is(__ctobpl_const_6226, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    goto label_31;

  label_26_true:
    assume INT_LT(out_qmax, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_6221, out_qmax);
    assume value_is(__ctobpl_const_6222, out_app_ptr);
    assume value_is(__ctobpl_const_6223, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    goto label_30;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6526} true;
    assert out_app_ptr != 0;
    goto label_26_true, label_26_false;

  label_23_false:
    assume !INT_LT(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)], out_qmin);
    assume value_is(__ctobpl_const_6212, out_app_ptr);
    assume value_is(__ctobpl_const_6213, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_6214, out_qmin);
    goto label_26;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6524} true;
    assert in_qmin_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[in_qmin_ptr := out_app_ptr];
    assume value_is(__ctobpl_const_6218, in_qmin_ptr);
    assume value_is(__ctobpl_const_6219, Mem_T.PGeomnode[in_qmin_ptr]);
    assume value_is(__ctobpl_const_6220, out_app_ptr);
    goto label_26;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6523} true;
    assert out_app_ptr != 0;
    out_qmin := Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_6215, out_qmin);
    assume value_is(__ctobpl_const_6216, out_app_ptr);
    assume value_is(__ctobpl_const_6217, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    goto label_28;

  label_23_true:
    assume INT_LT(Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)], out_qmin);
    assume value_is(__ctobpl_const_6212, out_app_ptr);
    assume value_is(__ctobpl_const_6213, Mem_T.LOC_Q_Geomnode[LOC_Q_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_6214, out_qmin);
    goto label_27;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6522} true;
    assert out_app_ptr != 0;
    goto label_23_true, label_23_false;

  label_20_false:
    assume !INT_LT(out_pmax, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_6203, out_pmax);
    assume value_is(__ctobpl_const_6204, out_app_ptr);
    assume value_is(__ctobpl_const_6205, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    goto label_23;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6520} true;
    assert in_pmax_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[in_pmax_ptr := out_app_ptr];
    assume value_is(__ctobpl_const_6209, in_pmax_ptr);
    assume value_is(__ctobpl_const_6210, Mem_T.PGeomnode[in_pmax_ptr]);
    assume value_is(__ctobpl_const_6211, out_app_ptr);
    goto label_23;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6519} true;
    assert out_app_ptr != 0;
    out_pmax := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_6206, out_pmax);
    assume value_is(__ctobpl_const_6207, out_app_ptr);
    assume value_is(__ctobpl_const_6208, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    goto label_25;

  label_20_true:
    assume INT_LT(out_pmax, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_6203, out_pmax);
    assume value_is(__ctobpl_const_6204, out_app_ptr);
    assume value_is(__ctobpl_const_6205, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    goto label_24;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6518} true;
    assert out_app_ptr != 0;
    goto label_20_true, label_20_false;

  label_19_false:
    assume !INT_LT(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)], out_pmin);
    assume value_is(__ctobpl_const_6194, out_app_ptr);
    assume value_is(__ctobpl_const_6195, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_6196, out_pmin);
    goto label_20;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6516} true;
    assert in_pmin_ptr != 0;
    Mem_T.PGeomnode := Mem_T.PGeomnode[in_pmin_ptr := out_app_ptr];
    assume value_is(__ctobpl_const_6200, in_pmin_ptr);
    assume value_is(__ctobpl_const_6201, Mem_T.PGeomnode[in_pmin_ptr]);
    assume value_is(__ctobpl_const_6202, out_app_ptr);
    goto label_20;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6515} true;
    assert out_app_ptr != 0;
    out_pmin := Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_6197, out_pmin);
    assume value_is(__ctobpl_const_6198, out_app_ptr);
    assume value_is(__ctobpl_const_6199, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    goto label_22;

  label_19_true:
    assume INT_LT(Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)], out_pmin);
    assume value_is(__ctobpl_const_6194, out_app_ptr);
    assume value_is(__ctobpl_const_6195, Mem_T.LOC_P_Geomnode[LOC_P_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_6196, out_pmin);
    goto label_21;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6514} true;
    assert out_app_ptr != 0;
    goto label_19_true, label_19_false;

  label_17_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_6193, out_app_ptr);
    goto label_19;

  label_29_dummy:
    call {:si_unique_call 1} out_app_ptr, out_pmax, out_pmin, out_qmax, out_qmin := pqlimits_loop_label_17_head(out_app_ptr, out_pmax, in_pmax_ptr, out_pmin, in_pmin_ptr, out_qmax, in_qmax_ptr, out_qmin, in_qmin_ptr);
    return;

  exit:
    return;
}



procedure pqlimits_loop_label_17_head(in_app_ptr: int, in_pmax: int, in_pmax_ptr: int, in_pmin: int, in_pmin_ptr: int, in_qmax: int, in_qmax_ptr: int, in_qmin: int, in_qmin_ptr: int) returns (out_app_ptr: int, out_pmax: int, out_pmin: int, out_qmax: int, out_qmin: int);
  modifies Mem_T.PGeomnode;



implementation prnfile_loop_label_12_head(in_ch: int, in_line_num: int, in_p: int, in_$putchar.arg.1$4$: int, in_result.printf$2: int, in_result.putchar$3: int) returns (out_ch: int, out_line_num: int, out_p: int, out_$putchar.arg.1$4$: int, out_result.printf$2: int, out_result.putchar$3: int)
{

  entry:
    out_ch, out_line_num, out_p, out_$putchar.arg.1$4$, out_result.printf$2, out_result.putchar$3 := in_ch, in_line_num, in_p, in_$putchar.arg.1$4$, in_result.printf$2, in_result.putchar$3;
    goto label_12_head;

  label_12_head:
    assert out_p != 0;
    goto label_12_true, label_12_false;

  label_12_false:
    assume Mem_T.NEXT_charac[NEXT_charac(out_p)] == 0;
    assume value_is(__ctobpl_const_6237, out_p);
    assume value_is(__ctobpl_const_6238, Mem_T.NEXT_charac[NEXT_charac(out_p)]);
    out_ch, out_line_num, out_p, out_$putchar.arg.1$4$, out_result.printf$2, out_result.putchar$3 := in_ch, in_line_num, in_p, in_$putchar.arg.1$4$, in_result.printf$2, in_result.putchar$3;
    errline_printed, detChoiceCnt := old(errline_printed), old(detChoiceCnt);
    return;

  label_26:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6562} true;
    assert out_p != 0;
    out_p := Mem_T.NEXT_charac[NEXT_charac(out_p)];
    assume value_is(__ctobpl_const_6252, out_p);
    assume value_is(__ctobpl_const_6253, out_p);
    assume value_is(__ctobpl_const_6254, Mem_T.NEXT_charac[NEXT_charac(out_p)]);
    goto label_26_dummy;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6561} true;
    call out_result.putchar$3 := putchar(out_$putchar.arg.1$4$);
    assume value_is(__ctobpl_const_6250, out_$putchar.arg.1$4$);
    assume value_is(__ctobpl_const_6251, out_$putchar.arg.1$4$);
    goto label_26;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6561} true;
    out_$putchar.arg.1$4$ := out_ch;
    assume value_is(__ctobpl_const_6248, out_$putchar.arg.1$4$);
    assume value_is(__ctobpl_const_6249, out_ch);
    goto label_23;

  label_17_false:
    assume !INT_LT(out_line_num, Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)]);
    assume value_is(__ctobpl_const_6242, out_line_num);
    assume value_is(__ctobpl_const_6243, out_p);
    assume value_is(__ctobpl_const_6244, Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)]);
    goto label_18;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6559} true;
    call out_result.printf$2 := det_choice();
    goto label_18;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6558} true;
    assert out_p != 0;
    out_line_num := Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)];
    assume value_is(__ctobpl_const_6245, out_line_num);
    assume value_is(__ctobpl_const_6246, out_p);
    assume value_is(__ctobpl_const_6247, Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)]);
    goto label_20;

  label_17_true:
    assume INT_LT(out_line_num, Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)]);
    assume value_is(__ctobpl_const_6242, out_line_num);
    assume value_is(__ctobpl_const_6243, out_p);
    assume value_is(__ctobpl_const_6244, Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)]);
    goto label_19;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6557} true;
    assert out_p != 0;
    goto label_17_true, label_17_false;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6555} true;
    assert out_p != 0;
    out_ch := Mem_T.info_charac[info_charac(out_p)];
    assume value_is(__ctobpl_const_6239, out_ch);
    assume value_is(__ctobpl_const_6240, out_p);
    assume value_is(__ctobpl_const_6241, Mem_T.info_charac[info_charac(out_p)]);
    goto label_17;

  label_12_true:
    assume Mem_T.NEXT_charac[NEXT_charac(out_p)] != 0;
    assume value_is(__ctobpl_const_6237, out_p);
    assume value_is(__ctobpl_const_6238, Mem_T.NEXT_charac[NEXT_charac(out_p)]);
    goto label_16;

  label_26_dummy:
    call {:si_unique_call 1} out_ch, out_line_num, out_p, out_$putchar.arg.1$4$, out_result.printf$2, out_result.putchar$3 := prnfile_loop_label_12_head(out_ch, out_line_num, out_p, out_$putchar.arg.1$4$, out_result.printf$2, out_result.putchar$3);
    return;

  exit:
    return;
}



procedure prnfile_loop_label_12_head(in_ch: int, in_line_num: int, in_p: int, in_$putchar.arg.1$4$: int, in_result.printf$2: int, in_result.putchar$3: int) returns (out_ch: int, out_line_num: int, out_p: int, out_$putchar.arg.1$4$: int, out_result.printf$2: int, out_result.putchar$3: int);
  modifies errline_printed, detChoiceCnt;



implementation readfil3_loop_label_77_head(in_CR: int, in_c: int, in_f: int, in_$isspace.arg.1$24$: int, in_line_num: int, in_result.getc$22: int, in_result.isspace$23: int) returns (out_c: int, out_$isspace.arg.1$24$: int, out_line_num: int, out_result.getc$22: int, out_result.isspace$23: int)
{

  entry:
    out_c, out_$isspace.arg.1$24$, out_line_num, out_result.getc$22, out_result.isspace$23 := in_c, in_$isspace.arg.1$24$, in_line_num, in_result.getc$22, in_result.isspace$23;
    goto label_77_head;

  label_77_head:
    goto label_77_true, label_77_false;

  label_88_true:
    assume INT_EQ(out_c, 44);
    assume value_is(__ctobpl_const_6417, out_c);
    goto label_88_true_dummy;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    goto label_88_true, label_88_false;

  label_88_false:
    assume !INT_EQ(out_c, 44);
    assume value_is(__ctobpl_const_6417, out_c);
    out_c, out_$isspace.arg.1$24$, out_line_num, out_result.getc$22, out_result.isspace$23 := in_c, in_$isspace.arg.1$24$, in_line_num, in_result.getc$22, in_result.isspace$23;
    errline_printed := old(errline_printed);
    return;

  label_87_false:
    assume out_result.isspace$23 == 0;
    assume value_is(__ctobpl_const_6416, out_result.isspace$23);
    goto label_88;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    goto label_87_true, label_87_false;

  label_87_true:
    assume out_result.isspace$23 != 0;
    assume value_is(__ctobpl_const_6416, out_result.isspace$23);
    out_c, out_$isspace.arg.1$24$, out_line_num, out_result.getc$22, out_result.isspace$23 := in_c, in_$isspace.arg.1$24$, in_line_num, in_result.getc$22, in_result.isspace$23;
    errline_printed := old(errline_printed);
    goto label_87_true_dummy;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    call out_result.isspace$23 := isspace(out_$isspace.arg.1$24$);
    assume value_is(__ctobpl_const_6414, out_$isspace.arg.1$24$);
    assume value_is(__ctobpl_const_6415, out_$isspace.arg.1$24$);
    goto label_87;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    out_$isspace.arg.1$24$ := out_c;
    assume value_is(__ctobpl_const_6412, out_$isspace.arg.1$24$);
    assume value_is(__ctobpl_const_6413, out_c);
    goto label_84;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6716} true;
    out_c := out_result.getc$22;
    assume value_is(__ctobpl_const_6410, out_c);
    assume value_is(__ctobpl_const_6411, out_result.getc$22);
    goto label_83;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6716} true;
    call out_result.getc$22 := getc(in_f);
    assume value_is(__ctobpl_const_6408, in_f);
    assume value_is(__ctobpl_const_6409, in_f);
    goto label_82;

  label_77_false:
    assume !INT_EQ(out_c, in_CR);
    assume value_is(__ctobpl_const_6405, out_c);
    assume value_is(__ctobpl_const_6406, in_CR);
    goto label_78;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6715} true;
    assume value_is(__ctobpl_const_6407, out_line_num);
    out_line_num := PLUS(out_line_num, 1, 1);
    goto label_78;

  label_77_true:
    assume INT_EQ(out_c, in_CR);
    assume value_is(__ctobpl_const_6405, out_c);
    assume value_is(__ctobpl_const_6406, in_CR);
    goto label_81;

  label_88_true_dummy:
    call {:si_unique_call 1} out_c, out_$isspace.arg.1$24$, out_line_num, out_result.getc$22, out_result.isspace$23 := readfil3_loop_label_77_head(in_CR, out_c, in_f, out_$isspace.arg.1$24$, out_line_num, out_result.getc$22, out_result.isspace$23);
    return;

  label_87_true_dummy:
    call {:si_unique_call 2} out_c, out_$isspace.arg.1$24$, out_line_num, out_result.getc$22, out_result.isspace$23 := readfil3_loop_label_77_head(in_CR, out_c, in_f, out_$isspace.arg.1$24$, out_line_num, out_result.getc$22, out_result.isspace$23);
    return;

  exit:
    return;
}



procedure readfil3_loop_label_77_head(in_CR: int, in_c: int, in_f: int, in_$isspace.arg.1$24$: int, in_line_num: int, in_result.getc$22: int, in_result.isspace$23: int) returns (out_c: int, out_$isspace.arg.1$24$: int, out_line_num: int, out_result.getc$22: int, out_result.isspace$23: int);
  modifies errline_printed;



implementation readfil3_loop_label_67_head(in_CR: int, in_c: int, in_f: int, in_$isspace.arg.1$21$: int, in_$isspace.arg.1$24$: int, in_lastel: int, in_line_num: int, in_p: int, in_result.getc$22: int, in_result.getc$31: int, in_result.isspace$20: int, in_result.isspace$23: int, in_result.malloc$25: int, in_result.malloc$28: int) returns (out_c: int, out_$isspace.arg.1$21$: int, out_$isspace.arg.1$24$: int, out_line_num: int, out_p: int, out_result.getc$22: int, out_result.getc$31: int, out_result.isspace$20: int, out_result.isspace$23: int, out_result.malloc$25: int, out_result.malloc$28: int)
{

  entry:
    out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := in_c, in_$isspace.arg.1$21$, in_$isspace.arg.1$24$, in_line_num, in_p, in_result.getc$22, in_result.getc$31, in_result.isspace$20, in_result.isspace$23, in_result.malloc$25, in_result.malloc$28;
    goto label_67_head;

  label_67_head:
    goto label_67_true, label_67_false;

  label_67_false:
    assume !INT_NEQ(out_c, -1);
    assume value_is(__ctobpl_const_6370, out_c);
    out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := in_c, in_$isspace.arg.1$21$, in_$isspace.arg.1$24$, in_line_num, in_p, in_result.getc$22, in_result.getc$31, in_result.isspace$20, in_result.isspace$23, in_result.malloc$25, in_result.malloc$28;
    errline_printed, Mem_T.Pcharac, Mem_T.NEXT_charac, Mem_T.PREV_charac, Mem_T.LINE_NUM_charac, Mem_T.info_charac, alloc := old(errline_printed), old(Mem_T.Pcharac), old(Mem_T.NEXT_charac), old(Mem_T.PREV_charac), old(Mem_T.LINE_NUM_charac), old(Mem_T.info_charac), old(alloc);
    return;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6746} true;
    out_c := out_result.getc$31;
    assume value_is(__ctobpl_const_6403, out_c);
    assume value_is(__ctobpl_const_6404, out_result.getc$31);
    goto label_120_dummy;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6746} true;
    call out_result.getc$31 := getc(in_f);
    assume value_is(__ctobpl_const_6401, in_f);
    assume value_is(__ctobpl_const_6402, in_f);
    goto label_120;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6744} true;
    assert in_lastel != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[in_lastel := out_p];
    assume value_is(__ctobpl_const_6398, in_lastel);
    assume value_is(__ctobpl_const_6399, Mem_T.Pcharac[in_lastel]);
    assume value_is(__ctobpl_const_6400, out_p);
    goto label_117;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6743} true;
    assert in_lastel != 0;
    assert Mem_T.Pcharac[in_lastel] != 0;
    Mem_T.NEXT_charac := Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[in_lastel]) := out_p];
    assume value_is(__ctobpl_const_6394, in_lastel);
    assume value_is(__ctobpl_const_6395, Mem_T.Pcharac[in_lastel]);
    assume value_is(__ctobpl_const_6396, Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[in_lastel])]);
    assume value_is(__ctobpl_const_6397, out_p);
    goto label_116;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6742} true;
    assert out_p != 0;
    Mem_T.NEXT_charac := Mem_T.NEXT_charac[NEXT_charac(out_p) := 0];
    assume value_is(__ctobpl_const_6392, out_p);
    assume value_is(__ctobpl_const_6393, Mem_T.NEXT_charac[NEXT_charac(out_p)]);
    goto label_115;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6741} true;
    assert out_p != 0;
    assert in_lastel != 0;
    Mem_T.PREV_charac := Mem_T.PREV_charac[PREV_charac(out_p) := Mem_T.Pcharac[in_lastel]];
    assume value_is(__ctobpl_const_6388, out_p);
    assume value_is(__ctobpl_const_6389, Mem_T.PREV_charac[PREV_charac(out_p)]);
    assume value_is(__ctobpl_const_6390, in_lastel);
    assume value_is(__ctobpl_const_6391, Mem_T.Pcharac[in_lastel]);
    goto label_114;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6739} true;
    assert out_p != 0;
    Mem_T.LINE_NUM_charac := Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p) := out_line_num];
    assume value_is(__ctobpl_const_6385, out_p);
    assume value_is(__ctobpl_const_6386, Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)]);
    assume value_is(__ctobpl_const_6387, out_line_num);
    goto label_113;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6738} true;
    assert out_p != 0;
    Mem_T.info_charac := Mem_T.info_charac[info_charac(out_p) := out_c];
    assume value_is(__ctobpl_const_6382, out_p);
    assume value_is(__ctobpl_const_6383, Mem_T.info_charac[info_charac(out_p)]);
    assume value_is(__ctobpl_const_6384, out_c);
    goto label_112;

  label_109_true:
    assume out_p != 0;
    assume value_is(__ctobpl_const_6381, out_p);
    goto label_111;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6733} true;
    goto label_109_true, label_109_false;

  label_109_false:
    assume out_p == 0;
    assume value_is(__ctobpl_const_6381, out_p);
    out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := in_c, in_$isspace.arg.1$21$, in_$isspace.arg.1$24$, in_line_num, in_p, in_result.getc$22, in_result.getc$31, in_result.isspace$20, in_result.isspace$23, in_result.malloc$25, in_result.malloc$28;
    errline_printed, Mem_T.Pcharac, Mem_T.NEXT_charac, Mem_T.PREV_charac, Mem_T.LINE_NUM_charac, Mem_T.info_charac, alloc := old(errline_printed), old(Mem_T.Pcharac), old(Mem_T.NEXT_charac), old(Mem_T.PREV_charac), old(Mem_T.LINE_NUM_charac), old(Mem_T.info_charac), old(alloc);
    return;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6732} true;
    out_p := out_result.malloc$28;
    assume value_is(__ctobpl_const_6379, out_p);
    assume value_is(__ctobpl_const_6380, out_result.malloc$28);
    goto label_109;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6732} true;
    call out_result.malloc$28 := __HAVOC_det_malloc(16);
    goto label_108;

  label_76_false:
    assume !INT_EQ(out_c, 44);
    assume value_is(__ctobpl_const_6378, out_c);
    goto label_105;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6712} true;
    goto label_76_true, label_76_false;

  label_76_true:
    assume INT_EQ(out_c, 44);
    assume value_is(__ctobpl_const_6378, out_c);
    out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := in_c, in_$isspace.arg.1$21$, in_$isspace.arg.1$24$, in_line_num, in_p, in_result.getc$22, in_result.getc$31, in_result.isspace$20, in_result.isspace$23, in_result.malloc$25, in_result.malloc$28;
    errline_printed, Mem_T.Pcharac, Mem_T.NEXT_charac, Mem_T.PREV_charac, Mem_T.LINE_NUM_charac, Mem_T.info_charac, alloc := old(errline_printed), old(Mem_T.Pcharac), old(Mem_T.NEXT_charac), old(Mem_T.PREV_charac), old(Mem_T.LINE_NUM_charac), old(Mem_T.info_charac), old(alloc);
    goto label_77;

  label_75_false:
    assume out_result.isspace$20 == 0;
    assume value_is(__ctobpl_const_6377, out_result.isspace$20);
    goto label_76;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6712} true;
    goto label_75_true, label_75_false;

  label_75_true:
    assume out_result.isspace$20 != 0;
    assume value_is(__ctobpl_const_6377, out_result.isspace$20);
    out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := in_c, in_$isspace.arg.1$21$, in_$isspace.arg.1$24$, in_line_num, in_p, in_result.getc$22, in_result.getc$31, in_result.isspace$20, in_result.isspace$23, in_result.malloc$25, in_result.malloc$28;
    errline_printed, Mem_T.Pcharac, Mem_T.NEXT_charac, Mem_T.PREV_charac, Mem_T.LINE_NUM_charac, Mem_T.info_charac, alloc := old(errline_printed), old(Mem_T.Pcharac), old(Mem_T.NEXT_charac), old(Mem_T.PREV_charac), old(Mem_T.LINE_NUM_charac), old(Mem_T.info_charac), old(alloc);
    goto label_77;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6712} true;
    call out_result.isspace$20 := isspace(out_$isspace.arg.1$21$);
    assume value_is(__ctobpl_const_6375, out_$isspace.arg.1$21$);
    assume value_is(__ctobpl_const_6376, out_$isspace.arg.1$21$);
    goto label_75;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6712} true;
    out_$isspace.arg.1$21$ := out_c;
    assume value_is(__ctobpl_const_6373, out_$isspace.arg.1$21$);
    assume value_is(__ctobpl_const_6374, out_c);
    goto label_72;

  label_67_true:
    assume INT_NEQ(out_c, -1);
    assume value_is(__ctobpl_const_6370, out_c);
    goto label_71;

  label_120_dummy:
    call {:si_unique_call 1} out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := readfil3_loop_label_67_head(in_CR, out_c, in_f, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, in_lastel, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28);
    return;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6729} true;
    assert in_lastel != 0;
    Mem_T.Pcharac := Mem_T.Pcharac[in_lastel := out_p];
    assume value_is(__ctobpl_const_6436, in_lastel);
    assume value_is(__ctobpl_const_6437, Mem_T.Pcharac[in_lastel]);
    assume value_is(__ctobpl_const_6438, out_p);
    goto label_100_dummy;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6728} true;
    assert in_lastel != 0;
    assert Mem_T.Pcharac[in_lastel] != 0;
    Mem_T.NEXT_charac := Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[in_lastel]) := out_p];
    assume value_is(__ctobpl_const_6432, in_lastel);
    assume value_is(__ctobpl_const_6433, Mem_T.Pcharac[in_lastel]);
    assume value_is(__ctobpl_const_6434, Mem_T.NEXT_charac[NEXT_charac(Mem_T.Pcharac[in_lastel])]);
    assume value_is(__ctobpl_const_6435, out_p);
    goto label_100;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6727} true;
    assert out_p != 0;
    Mem_T.NEXT_charac := Mem_T.NEXT_charac[NEXT_charac(out_p) := 0];
    assume value_is(__ctobpl_const_6430, out_p);
    assume value_is(__ctobpl_const_6431, Mem_T.NEXT_charac[NEXT_charac(out_p)]);
    goto label_99;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6726} true;
    assert out_p != 0;
    assert in_lastel != 0;
    Mem_T.PREV_charac := Mem_T.PREV_charac[PREV_charac(out_p) := Mem_T.Pcharac[in_lastel]];
    assume value_is(__ctobpl_const_6426, out_p);
    assume value_is(__ctobpl_const_6427, Mem_T.PREV_charac[PREV_charac(out_p)]);
    assume value_is(__ctobpl_const_6428, in_lastel);
    assume value_is(__ctobpl_const_6429, Mem_T.Pcharac[in_lastel]);
    goto label_98;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6725} true;
    assert out_p != 0;
    Mem_T.LINE_NUM_charac := Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p) := out_line_num];
    assume value_is(__ctobpl_const_6423, out_p);
    assume value_is(__ctobpl_const_6424, Mem_T.LINE_NUM_charac[LINE_NUM_charac(out_p)]);
    assume value_is(__ctobpl_const_6425, out_line_num);
    goto label_97;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6724} true;
    assert out_p != 0;
    Mem_T.info_charac := Mem_T.info_charac[info_charac(out_p) := 32];
    assume value_is(__ctobpl_const_6421, out_p);
    assume value_is(__ctobpl_const_6422, Mem_T.info_charac[info_charac(out_p)]);
    goto label_96;

  label_93_true:
    assume out_p != 0;
    assume value_is(__ctobpl_const_6420, out_p);
    goto label_95;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6720} true;
    goto label_93_true, label_93_false;

  label_93_false:
    assume out_p == 0;
    assume value_is(__ctobpl_const_6420, out_p);
    out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := in_c, in_$isspace.arg.1$21$, in_$isspace.arg.1$24$, in_line_num, in_p, in_result.getc$22, in_result.getc$31, in_result.isspace$20, in_result.isspace$23, in_result.malloc$25, in_result.malloc$28;
    errline_printed, Mem_T.Pcharac, Mem_T.NEXT_charac, Mem_T.PREV_charac, Mem_T.LINE_NUM_charac, Mem_T.info_charac, alloc := old(errline_printed), old(Mem_T.Pcharac), old(Mem_T.NEXT_charac), old(Mem_T.PREV_charac), old(Mem_T.LINE_NUM_charac), old(Mem_T.info_charac), old(alloc);
    return;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6719} true;
    out_p := out_result.malloc$25;
    assume value_is(__ctobpl_const_6418, out_p);
    assume value_is(__ctobpl_const_6419, out_result.malloc$25);
    goto label_93;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6719} true;
    call out_result.malloc$25 := __HAVOC_det_malloc(16);
    goto label_92;

  label_88_false:
    assume !INT_EQ(out_c, 44);
    assume value_is(__ctobpl_const_6417, out_c);
    goto label_89;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    goto label_88_true, label_88_false;

  label_87_false:
    assume out_result.isspace$23 == 0;
    assume value_is(__ctobpl_const_6416, out_result.isspace$23);
    goto label_88;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    goto label_87_true, label_87_false;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    call out_result.isspace$23 := isspace(out_$isspace.arg.1$24$);
    assume value_is(__ctobpl_const_6414, out_$isspace.arg.1$24$);
    assume value_is(__ctobpl_const_6415, out_$isspace.arg.1$24$);
    goto label_87;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6717} true;
    out_$isspace.arg.1$24$ := out_c;
    assume value_is(__ctobpl_const_6412, out_$isspace.arg.1$24$);
    assume value_is(__ctobpl_const_6413, out_c);
    goto label_84;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6716} true;
    out_c := out_result.getc$22;
    assume value_is(__ctobpl_const_6410, out_c);
    assume value_is(__ctobpl_const_6411, out_result.getc$22);
    goto label_83;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6716} true;
    call out_result.getc$22 := getc(in_f);
    assume value_is(__ctobpl_const_6408, in_f);
    assume value_is(__ctobpl_const_6409, in_f);
    goto label_82;

  label_77_false:
    assume !INT_EQ(out_c, in_CR);
    assume value_is(__ctobpl_const_6405, out_c);
    assume value_is(__ctobpl_const_6406, in_CR);
    goto label_78;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6715} true;
    assume value_is(__ctobpl_const_6407, out_line_num);
    out_line_num := PLUS(out_line_num, 1, 1);
    goto label_78;

  label_77_true:
    assume INT_EQ(out_c, in_CR);
    assume value_is(__ctobpl_const_6405, out_c);
    assume value_is(__ctobpl_const_6406, in_CR);
    goto label_81;

  label_77_head:
    call out_c, out_$isspace.arg.1$24$, out_line_num, out_result.getc$22, out_result.isspace$23 := readfil3_loop_label_77_head(in_CR, out_c, in_f, out_$isspace.arg.1$24$, out_line_num, out_result.getc$22, out_result.isspace$23);
    goto label_77_head_last;

  label_77_head_last:
    out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := in_c, in_$isspace.arg.1$21$, in_$isspace.arg.1$24$, in_line_num, in_p, in_result.getc$22, in_result.getc$31, in_result.isspace$20, in_result.isspace$23, in_result.malloc$25, in_result.malloc$28;
    errline_printed, Mem_T.Pcharac, Mem_T.NEXT_charac, Mem_T.PREV_charac, Mem_T.LINE_NUM_charac, Mem_T.info_charac, alloc := old(errline_printed), old(Mem_T.Pcharac), old(Mem_T.NEXT_charac), old(Mem_T.PREV_charac), old(Mem_T.LINE_NUM_charac), old(Mem_T.info_charac), old(alloc);
    goto label_77_true, label_77_false;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6714} true;
    goto label_77_head;

  label_88_true:
    assume INT_EQ(out_c, 44);
    assume value_is(__ctobpl_const_6417, out_c);
    goto label_88_true_dummy;

  label_88_true_dummy:
    assume false;
    out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := in_c, in_$isspace.arg.1$21$, in_$isspace.arg.1$24$, in_line_num, in_p, in_result.getc$22, in_result.getc$31, in_result.isspace$20, in_result.isspace$23, in_result.malloc$25, in_result.malloc$28;
    errline_printed, Mem_T.Pcharac, Mem_T.NEXT_charac, Mem_T.PREV_charac, Mem_T.LINE_NUM_charac, Mem_T.info_charac, alloc := old(errline_printed), old(Mem_T.Pcharac), old(Mem_T.NEXT_charac), old(Mem_T.PREV_charac), old(Mem_T.LINE_NUM_charac), old(Mem_T.info_charac), old(alloc);
    return;

  label_87_true:
    assume out_result.isspace$23 != 0;
    assume value_is(__ctobpl_const_6416, out_result.isspace$23);
    goto label_87_true_dummy;

  label_87_true_dummy:
    assume false;
    out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := in_c, in_$isspace.arg.1$21$, in_$isspace.arg.1$24$, in_line_num, in_p, in_result.getc$22, in_result.getc$31, in_result.isspace$20, in_result.isspace$23, in_result.malloc$25, in_result.malloc$28;
    errline_printed, Mem_T.Pcharac, Mem_T.NEXT_charac, Mem_T.PREV_charac, Mem_T.LINE_NUM_charac, Mem_T.info_charac, alloc := old(errline_printed), old(Mem_T.Pcharac), old(Mem_T.NEXT_charac), old(Mem_T.PREV_charac), old(Mem_T.LINE_NUM_charac), old(Mem_T.info_charac), old(alloc);
    return;

  label_100_dummy:
    call {:si_unique_call 2} out_c, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28 := readfil3_loop_label_67_head(in_CR, out_c, in_f, out_$isspace.arg.1$21$, out_$isspace.arg.1$24$, in_lastel, out_line_num, out_p, out_result.getc$22, out_result.getc$31, out_result.isspace$20, out_result.isspace$23, out_result.malloc$25, out_result.malloc$28);
    return;

  exit:
    return;
}



procedure readfil3_loop_label_67_head(in_CR: int, in_c: int, in_f: int, in_$isspace.arg.1$21$: int, in_$isspace.arg.1$24$: int, in_lastel: int, in_line_num: int, in_p: int, in_result.getc$22: int, in_result.getc$31: int, in_result.isspace$20: int, in_result.isspace$23: int, in_result.malloc$25: int, in_result.malloc$28: int) returns (out_c: int, out_$isspace.arg.1$21$: int, out_$isspace.arg.1$24$: int, out_line_num: int, out_p: int, out_result.getc$22: int, out_result.getc$31: int, out_result.isspace$20: int, out_result.isspace$23: int, out_result.malloc$25: int, out_result.malloc$28: int);
  modifies errline_printed, Mem_T.Pcharac, Mem_T.NEXT_charac, Mem_T.PREV_charac, Mem_T.LINE_NUM_charac, Mem_T.info_charac, alloc;



implementation readfil3_loop_label_30_head(in_CR: int, in_c: int, in_f: int, in_$isspace.arg.1$13$: int, in_line_num: int, in_result.getc$14: int, in_result.isspace$12: int) returns (out_c: int, out_$isspace.arg.1$13$: int, out_line_num: int, out_result.getc$14: int, out_result.isspace$12: int)
{

  entry:
    out_c, out_$isspace.arg.1$13$, out_line_num, out_result.getc$14, out_result.isspace$12 := in_c, in_$isspace.arg.1$13$, in_line_num, in_result.getc$14, in_result.isspace$12;
    goto label_30_head;

  label_30_head:
    out_$isspace.arg.1$13$ := out_c;
    assume value_is(__ctobpl_const_6341, out_$isspace.arg.1$13$);
    assume value_is(__ctobpl_const_6342, out_c);
    goto label_37;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6690} true;
    out_c := out_result.getc$14;
    assume value_is(__ctobpl_const_6444, out_c);
    assume value_is(__ctobpl_const_6445, out_result.getc$14);
    goto label_47_dummy;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6690} true;
    call out_result.getc$14 := getc(in_f);
    assume value_is(__ctobpl_const_6442, in_f);
    assume value_is(__ctobpl_const_6443, in_f);
    goto label_47;

  label_42_false:
    assume !INT_EQ(out_c, in_CR);
    assume value_is(__ctobpl_const_6439, out_c);
    assume value_is(__ctobpl_const_6440, in_CR);
    goto label_43;

  label_46:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6689} true;
    assume value_is(__ctobpl_const_6441, out_line_num);
    out_line_num := PLUS(out_line_num, 1, 1);
    goto label_43;

  label_42_true:
    assume INT_EQ(out_c, in_CR);
    assume value_is(__ctobpl_const_6439, out_c);
    assume value_is(__ctobpl_const_6440, in_CR);
    goto label_46;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6688} true;
    goto label_42_true, label_42_false;

  label_41_true:
    assume INT_EQ(out_c, 44);
    assume value_is(__ctobpl_const_6346, out_c);
    goto label_42;

  label_40_true:
    assume out_result.isspace$12 != 0;
    assume value_is(__ctobpl_const_6345, out_result.isspace$12);
    goto label_42;

  label_40:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6687} true;
    goto label_40_true, label_40_false;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6687} true;
    call out_result.isspace$12 := isspace(out_$isspace.arg.1$13$);
    assume value_is(__ctobpl_const_6343, out_$isspace.arg.1$13$);
    assume value_is(__ctobpl_const_6344, out_$isspace.arg.1$13$);
    goto label_40;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 6687} true;
    goto label_41_true, label_41_false;

  label_41_false:
    assume !INT_EQ(out_c, 44);
    assume value_is(__ctobpl_const_6346, out_c);
    out_c, out_$isspace.arg.1$13$, out_line_num, out_result.getc$14, out_result.isspace$12 := in_c, in_$isspace.arg.1$13$, in_line_num, in_result.getc$14, in_result.isspace$12;
    errline_printed := old(errline_printed);
    return;

  label_40_false:
    assume out_result.isspace$12 == 0;
    assume value_is(__ctobpl_const_6345, out_result.isspace$12);
    goto label_41;

  label_47_dummy:
    call {:si_unique_call 1} out_c, out_$isspace.arg.1$13$, out_line_num, out_result.getc$14, out_result.isspace$12 := readfil3_loop_label_30_head(in_CR, out_c, in_f, out_$isspace.arg.1$13$, out_line_num, out_result.getc$14, out_result.isspace$12);
    return;

  exit:
    return;
}



procedure readfil3_loop_label_30_head(in_CR: int, in_c: int, in_f: int, in_$isspace.arg.1$13$: int, in_line_num: int, in_result.getc$14: int, in_result.isspace$12: int) returns (out_c: int, out_$isspace.arg.1$13$: int, out_line_num: int, out_result.getc$14: int, out_result.isspace$12: int);
  modifies errline_printed;



implementation seqrothg_loop_label_9_head(in_angle_step: int, in_can: int, in_cph: int, in_g_app_ptr: int, in_phase_step: int, in_tempBoogie0: int) returns (out_can: int, out_cph: int, out_g_app_ptr: int, out_tempBoogie0: int)
{

  entry:
    out_can, out_cph, out_g_app_ptr, out_tempBoogie0 := in_can, in_cph, in_g_app_ptr, in_tempBoogie0;
    goto label_9_head;

  label_9_head:
    goto label_9_true, label_9_false;

  label_9_false:
    assume out_g_app_ptr == 0;
    assume value_is(__ctobpl_const_7047, out_g_app_ptr);
    out_can, out_cph, out_g_app_ptr, out_tempBoogie0 := in_can, in_cph, in_g_app_ptr, in_tempBoogie0;
    Mem_T.PHEA_Geomnode, Mem_T.PPA_Geomport := old(Mem_T.PHEA_Geomnode), old(Mem_T.PPA_Geomport);
    return;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7316} true;
    assert out_g_app_ptr != 0;
    out_g_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_g_app_ptr)];
    assume value_is(__ctobpl_const_7061, out_g_app_ptr);
    assume value_is(__ctobpl_const_7062, out_g_app_ptr);
    assume value_is(__ctobpl_const_7063, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_g_app_ptr)]);
    goto label_15_dummy;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7313} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7059, out_can);
    assume value_is(__ctobpl_const_7060, in_angle_step);
    goto label_15;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7308} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7057, out_cph);
    assume value_is(__ctobpl_const_7058, in_phase_step);
    goto label_14;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7303} true;
    assert out_g_app_ptr != 0;
    assert out_g_app_ptr != 0;
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_g_app_ptr) := PLUS(Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_g_app_ptr)], 1, out_can)];
    assume value_is(__ctobpl_const_7052, out_g_app_ptr);
    assume value_is(__ctobpl_const_7053, Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_g_app_ptr)]);
    assume value_is(__ctobpl_const_7054, out_g_app_ptr);
    assume value_is(__ctobpl_const_7055, Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_g_app_ptr)]);
    assume value_is(__ctobpl_const_7056, out_can);
    goto label_13;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7301} true;
    assert out_g_app_ptr != 0;
    assert Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_g_app_ptr)] != 0;
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_g_app_ptr)]) := out_cph];
    assume value_is(__ctobpl_const_7048, out_g_app_ptr);
    assume value_is(__ctobpl_const_7049, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_g_app_ptr)]);
    assume value_is(__ctobpl_const_7050, Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_g_app_ptr)])]);
    assume value_is(__ctobpl_const_7051, out_cph);
    goto label_12;

  label_9_true:
    assume out_g_app_ptr != 0;
    assume value_is(__ctobpl_const_7047, out_g_app_ptr);
    goto label_11;

  label_15_dummy:
    call {:si_unique_call 1} out_can, out_cph, out_g_app_ptr, out_tempBoogie0 := seqrothg_loop_label_9_head(in_angle_step, out_can, out_cph, out_g_app_ptr, in_phase_step, out_tempBoogie0);
    return;

  exit:
    return;
}



procedure seqrothg_loop_label_9_head(in_angle_step: int, in_can: int, in_cph: int, in_g_app_ptr: int, in_phase_step: int, in_tempBoogie0: int) returns (out_can: int, out_cph: int, out_g_app_ptr: int, out_tempBoogie0: int);
  modifies Mem_T.PHEA_Geomnode, Mem_T.PPA_Geomport;



implementation seqrotrg_loop_label_113_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p: int, in_phase_step: int, in_q2: int, in_qcorr: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_qcorr: int, out_tempBoogie0: int)
{

  entry:
    out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_qcorr, in_tempBoogie0;
    goto label_113_head;

  label_113_head:
    goto label_113_true, label_113_false;

  label_113_false:
    assume !INT_LEQ(out_qcorr, in_q2);
    assume value_is(__ctobpl_const_7212, out_qcorr);
    assume value_is(__ctobpl_const_7213, in_q2);
    out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_qcorr, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7442} true;
    assume value_is(__ctobpl_const_7233, out_qcorr);
    out_qcorr := PLUS(out_qcorr, 1, 1);
    goto label_122_dummy;

  label_121_false:
    assume !INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7230, out_cont);
    assume value_is(__ctobpl_const_7231, in_nodes_num);
    goto label_122;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7441} true;
    out_endvisit := 1;
    assume value_is(__ctobpl_const_7232, out_endvisit);
    goto label_122;

  label_121_true:
    assume INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7230, out_cont);
    assume value_is(__ctobpl_const_7231, in_nodes_num);
    goto label_123;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7440} true;
    goto label_121_true, label_121_false;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7439} true;
    assume value_is(__ctobpl_const_7229, out_cont);
    out_cont := PLUS(out_cont, 1, 1);
    goto label_121;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7438} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7227, out_can);
    assume value_is(__ctobpl_const_7228, in_angle_step);
    goto label_120;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7437} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7225, out_cph);
    assume value_is(__ctobpl_const_7226, in_phase_step);
    goto label_119;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7436} true;
    call gnodevis(in_p, out_qcorr, out_cph, out_can, in_g);
    assume value_is(__ctobpl_const_7215, in_p);
    assume value_is(__ctobpl_const_7216, out_qcorr);
    assume value_is(__ctobpl_const_7217, out_cph);
    assume value_is(__ctobpl_const_7218, out_can);
    assume value_is(__ctobpl_const_7219, in_g);
    assume value_is(__ctobpl_const_7220, in_p);
    assume value_is(__ctobpl_const_7221, out_qcorr);
    assume value_is(__ctobpl_const_7222, out_cph);
    assume value_is(__ctobpl_const_7223, out_can);
    assume value_is(__ctobpl_const_7224, in_g);
    goto label_118;

  label_114_false:
    assume out_endvisit == 0;
    assume value_is(__ctobpl_const_7214, out_endvisit);
    goto label_115;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7435} true;
    goto label_114_true, label_114_false;

  label_114_true:
    assume out_endvisit != 0;
    assume value_is(__ctobpl_const_7214, out_endvisit);
    out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_qcorr, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_113_true:
    assume INT_LEQ(out_qcorr, in_q2);
    assume value_is(__ctobpl_const_7212, out_qcorr);
    assume value_is(__ctobpl_const_7213, in_q2);
    goto label_114;

  label_122_dummy:
    call {:si_unique_call 1} out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := seqrotrg_loop_label_113_head(in_angle_step, out_can, out_cont, out_cph, out_endvisit, in_g, in_nodes_num, in_p, in_phase_step, in_q2, out_qcorr, out_tempBoogie0);
    return;

  exit:
    return;
}



procedure seqrotrg_loop_label_113_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p: int, in_phase_step: int, in_q2: int, in_qcorr: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_qcorr: int, out_tempBoogie0: int);
  modifies errline_printed;



implementation seqrotrg_loop_label_98_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p2: int, in_pcorr: int, in_phase_step: int, in_q: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_pcorr: int, out_tempBoogie0: int)
{

  entry:
    out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_pcorr, in_tempBoogie0;
    goto label_98_head;

  label_98_head:
    goto label_98_true, label_98_false;

  label_98_false:
    assume !INT_LEQ(in_p2, out_pcorr);
    assume value_is(__ctobpl_const_7180, in_p2);
    assume value_is(__ctobpl_const_7181, out_pcorr);
    out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_pcorr, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7425} true;
    assume value_is(__ctobpl_const_7201, out_pcorr);
    out_pcorr := MINUS_BOTH_PTR_OR_BOTH_INT(out_pcorr, 1, 1);
    goto label_107_dummy;

  label_106_false:
    assume !INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7198, out_cont);
    assume value_is(__ctobpl_const_7199, in_nodes_num);
    goto label_107;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7424} true;
    out_endvisit := 1;
    assume value_is(__ctobpl_const_7200, out_endvisit);
    goto label_107;

  label_106_true:
    assume INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7198, out_cont);
    assume value_is(__ctobpl_const_7199, in_nodes_num);
    goto label_108;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7423} true;
    goto label_106_true, label_106_false;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7422} true;
    assume value_is(__ctobpl_const_7197, out_cont);
    out_cont := PLUS(out_cont, 1, 1);
    goto label_106;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7421} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7195, out_can);
    assume value_is(__ctobpl_const_7196, in_angle_step);
    goto label_105;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7420} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7193, out_cph);
    assume value_is(__ctobpl_const_7194, in_phase_step);
    goto label_104;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7419} true;
    call gnodevis(out_pcorr, in_q, out_cph, out_can, in_g);
    assume value_is(__ctobpl_const_7183, out_pcorr);
    assume value_is(__ctobpl_const_7184, in_q);
    assume value_is(__ctobpl_const_7185, out_cph);
    assume value_is(__ctobpl_const_7186, out_can);
    assume value_is(__ctobpl_const_7187, in_g);
    assume value_is(__ctobpl_const_7188, out_pcorr);
    assume value_is(__ctobpl_const_7189, in_q);
    assume value_is(__ctobpl_const_7190, out_cph);
    assume value_is(__ctobpl_const_7191, out_can);
    assume value_is(__ctobpl_const_7192, in_g);
    goto label_103;

  label_99_false:
    assume out_endvisit == 0;
    assume value_is(__ctobpl_const_7182, out_endvisit);
    goto label_100;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7418} true;
    goto label_99_true, label_99_false;

  label_99_true:
    assume out_endvisit != 0;
    assume value_is(__ctobpl_const_7182, out_endvisit);
    out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_pcorr, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_98_true:
    assume INT_LEQ(in_p2, out_pcorr);
    assume value_is(__ctobpl_const_7180, in_p2);
    assume value_is(__ctobpl_const_7181, out_pcorr);
    goto label_99;

  label_107_dummy:
    call {:si_unique_call 1} out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := seqrotrg_loop_label_98_head(in_angle_step, out_can, out_cont, out_cph, out_endvisit, in_g, in_nodes_num, in_p2, out_pcorr, in_phase_step, in_q, out_tempBoogie0);
    return;

  exit:
    return;
}



procedure seqrotrg_loop_label_98_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p2: int, in_pcorr: int, in_phase_step: int, in_q: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_pcorr: int, out_tempBoogie0: int);
  modifies errline_printed;



implementation seqrotrg_loop_label_82_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p: int, in_phase_step: int, in_q2: int, in_qcorr: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_qcorr: int, out_tempBoogie0: int)
{

  entry:
    out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_qcorr, in_tempBoogie0;
    goto label_82_head;

  label_82_head:
    goto label_82_true, label_82_false;

  label_82_false:
    assume !INT_LEQ(in_q2, out_qcorr);
    assume value_is(__ctobpl_const_7148, in_q2);
    assume value_is(__ctobpl_const_7149, out_qcorr);
    out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_qcorr, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7408} true;
    assume value_is(__ctobpl_const_7169, out_qcorr);
    out_qcorr := MINUS_BOTH_PTR_OR_BOTH_INT(out_qcorr, 1, 1);
    goto label_91_dummy;

  label_90_false:
    assume !INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7166, out_cont);
    assume value_is(__ctobpl_const_7167, in_nodes_num);
    goto label_91;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7407} true;
    out_endvisit := 1;
    assume value_is(__ctobpl_const_7168, out_endvisit);
    goto label_91;

  label_90_true:
    assume INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7166, out_cont);
    assume value_is(__ctobpl_const_7167, in_nodes_num);
    goto label_92;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7406} true;
    goto label_90_true, label_90_false;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7405} true;
    assume value_is(__ctobpl_const_7165, out_cont);
    out_cont := PLUS(out_cont, 1, 1);
    goto label_90;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7404} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7163, out_can);
    assume value_is(__ctobpl_const_7164, in_angle_step);
    goto label_89;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7403} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7161, out_cph);
    assume value_is(__ctobpl_const_7162, in_phase_step);
    goto label_88;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7402} true;
    call gnodevis(in_p, out_qcorr, out_cph, out_can, in_g);
    assume value_is(__ctobpl_const_7151, in_p);
    assume value_is(__ctobpl_const_7152, out_qcorr);
    assume value_is(__ctobpl_const_7153, out_cph);
    assume value_is(__ctobpl_const_7154, out_can);
    assume value_is(__ctobpl_const_7155, in_g);
    assume value_is(__ctobpl_const_7156, in_p);
    assume value_is(__ctobpl_const_7157, out_qcorr);
    assume value_is(__ctobpl_const_7158, out_cph);
    assume value_is(__ctobpl_const_7159, out_can);
    assume value_is(__ctobpl_const_7160, in_g);
    goto label_87;

  label_83_false:
    assume out_endvisit == 0;
    assume value_is(__ctobpl_const_7150, out_endvisit);
    goto label_84;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7401} true;
    goto label_83_true, label_83_false;

  label_83_true:
    assume out_endvisit != 0;
    assume value_is(__ctobpl_const_7150, out_endvisit);
    out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_qcorr, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_82_true:
    assume INT_LEQ(in_q2, out_qcorr);
    assume value_is(__ctobpl_const_7148, in_q2);
    assume value_is(__ctobpl_const_7149, out_qcorr);
    goto label_83;

  label_91_dummy:
    call {:si_unique_call 1} out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := seqrotrg_loop_label_82_head(in_angle_step, out_can, out_cont, out_cph, out_endvisit, in_g, in_nodes_num, in_p, in_phase_step, in_q2, out_qcorr, out_tempBoogie0);
    return;

  exit:
    return;
}



procedure seqrotrg_loop_label_82_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p: int, in_phase_step: int, in_q2: int, in_qcorr: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_qcorr: int, out_tempBoogie0: int);
  modifies errline_printed;



implementation seqrotrg_loop_label_66_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p2: int, in_pcorr: int, in_phase_step: int, in_q: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_pcorr: int, out_tempBoogie0: int)
{

  entry:
    out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_pcorr, in_tempBoogie0;
    goto label_66_head;

  label_66_head:
    goto label_66_true, label_66_false;

  label_66_false:
    assume !INT_LEQ(out_pcorr, in_p2);
    assume value_is(__ctobpl_const_7116, out_pcorr);
    assume value_is(__ctobpl_const_7117, in_p2);
    out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_pcorr, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7391} true;
    assume value_is(__ctobpl_const_7137, out_pcorr);
    out_pcorr := PLUS(out_pcorr, 1, 1);
    goto label_75_dummy;

  label_74_false:
    assume !INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7134, out_cont);
    assume value_is(__ctobpl_const_7135, in_nodes_num);
    goto label_75;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7390} true;
    out_endvisit := 1;
    assume value_is(__ctobpl_const_7136, out_endvisit);
    goto label_75;

  label_74_true:
    assume INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7134, out_cont);
    assume value_is(__ctobpl_const_7135, in_nodes_num);
    goto label_76;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7389} true;
    goto label_74_true, label_74_false;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7388} true;
    assume value_is(__ctobpl_const_7133, out_cont);
    out_cont := PLUS(out_cont, 1, 1);
    goto label_74;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7387} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7131, out_can);
    assume value_is(__ctobpl_const_7132, in_angle_step);
    goto label_73;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7386} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7129, out_cph);
    assume value_is(__ctobpl_const_7130, in_phase_step);
    goto label_72;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7385} true;
    call gnodevis(out_pcorr, in_q, out_cph, out_can, in_g);
    assume value_is(__ctobpl_const_7119, out_pcorr);
    assume value_is(__ctobpl_const_7120, in_q);
    assume value_is(__ctobpl_const_7121, out_cph);
    assume value_is(__ctobpl_const_7122, out_can);
    assume value_is(__ctobpl_const_7123, in_g);
    assume value_is(__ctobpl_const_7124, out_pcorr);
    assume value_is(__ctobpl_const_7125, in_q);
    assume value_is(__ctobpl_const_7126, out_cph);
    assume value_is(__ctobpl_const_7127, out_can);
    assume value_is(__ctobpl_const_7128, in_g);
    goto label_71;

  label_67_false:
    assume out_endvisit == 0;
    assume value_is(__ctobpl_const_7118, out_endvisit);
    goto label_68;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7384} true;
    goto label_67_true, label_67_false;

  label_67_true:
    assume out_endvisit != 0;
    assume value_is(__ctobpl_const_7118, out_endvisit);
    out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_pcorr, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_66_true:
    assume INT_LEQ(out_pcorr, in_p2);
    assume value_is(__ctobpl_const_7116, out_pcorr);
    assume value_is(__ctobpl_const_7117, in_p2);
    goto label_67;

  label_75_dummy:
    call {:si_unique_call 1} out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := seqrotrg_loop_label_66_head(in_angle_step, out_can, out_cont, out_cph, out_endvisit, in_g, in_nodes_num, in_p2, out_pcorr, in_phase_step, in_q, out_tempBoogie0);
    return;

  exit:
    return;
}



procedure seqrotrg_loop_label_66_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p2: int, in_pcorr: int, in_phase_step: int, in_q: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_pcorr: int, out_tempBoogie0: int);
  modifies errline_printed;



implementation seqrotrg_loop_label_44_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p: int, in_p1: int, in_p2: int, in_pcorr: int, in_phase_step: int, in_pmax: int, in_pmin: int, in_q: int, in_q1: int, in_q2: int, in_qcorr: int, in_qmax: int, in_qmin: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_p: int, out_p1: int, out_p2: int, out_pcorr: int, out_pmax: int, out_pmin: int, out_q: int, out_q1: int, out_q2: int, out_qcorr: int, out_qmax: int, out_qmin: int, out_tempBoogie0: int)
{

  entry:
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    goto label_44_head;

  label_44_head:
    goto label_44_true, label_44_false;

  label_44_true:
    assume out_endvisit != 0;
    assume value_is(__ctobpl_const_7101, out_endvisit);
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_60:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7453} true;
    assume value_is(__ctobpl_const_7255, out_qmax);
    out_qmax := MINUS_BOTH_PTR_OR_BOTH_INT(out_qmax, 1, 1);
    goto label_60_dummy;

  label_59:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7452} true;
    assume value_is(__ctobpl_const_7254, out_qmin);
    out_qmin := PLUS(out_qmin, 1, 1);
    goto label_60;

  label_58:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7451} true;
    assume value_is(__ctobpl_const_7253, out_pmax);
    out_pmax := MINUS_BOTH_PTR_OR_BOTH_INT(out_pmax, 1, 1);
    goto label_59;

  label_56:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7450} true;
    assume value_is(__ctobpl_const_7252, out_pmin);
    out_pmin := PLUS(out_pmin, 1, 1);
    goto label_58;

  label_111_false:
    assume !INT_LEQ(out_q1, out_q2);
    assume value_is(__ctobpl_const_7208, out_q1);
    assume value_is(__ctobpl_const_7209, out_q2);
    goto label_56;

  label_113_false:
    assume !INT_LEQ(out_qcorr, out_q2);
    assume value_is(__ctobpl_const_7212, out_qcorr);
    assume value_is(__ctobpl_const_7213, out_q2);
    goto label_56;

  label_114_true:
    assume out_endvisit != 0;
    assume value_is(__ctobpl_const_7214, out_endvisit);
    goto label_56;

  label_55_false:
    assume !INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7249, out_cont);
    assume value_is(__ctobpl_const_7250, in_nodes_num);
    goto label_56;

  label_57:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7375} true;
    out_endvisit := 1;
    assume value_is(__ctobpl_const_7251, out_endvisit);
    goto label_56;

  label_55_true:
    assume INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7249, out_cont);
    assume value_is(__ctobpl_const_7250, in_nodes_num);
    goto label_57;

  label_55:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7374} true;
    goto label_55_true, label_55_false;

  label_54:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7373} true;
    assume value_is(__ctobpl_const_7248, out_cont);
    out_cont := PLUS(out_cont, 1, 1);
    goto label_55;

  label_53:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7372} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7246, out_can);
    assume value_is(__ctobpl_const_7247, in_angle_step);
    goto label_54;

  label_52:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7371} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7244, out_cph);
    assume value_is(__ctobpl_const_7245, in_phase_step);
    goto label_53;

  label_49:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7370} true;
    call gnodevis(out_pmin, out_qmin, out_cph, out_can, in_g);
    assume value_is(__ctobpl_const_7234, out_pmin);
    assume value_is(__ctobpl_const_7235, out_qmin);
    assume value_is(__ctobpl_const_7236, out_cph);
    assume value_is(__ctobpl_const_7237, out_can);
    assume value_is(__ctobpl_const_7238, in_g);
    assume value_is(__ctobpl_const_7239, out_pmin);
    assume value_is(__ctobpl_const_7240, out_qmin);
    assume value_is(__ctobpl_const_7241, out_cph);
    assume value_is(__ctobpl_const_7242, out_can);
    assume value_is(__ctobpl_const_7243, in_g);
    goto label_52;

  label_48_true:
    assume INT_EQ(out_qmin, out_qmax);
    assume value_is(__ctobpl_const_7104, out_qmin);
    assume value_is(__ctobpl_const_7105, out_qmax);
    goto label_49;

  label_48:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7369} true;
    goto label_48_true, label_48_false;

  label_45_true:
    assume INT_EQ(out_pmin, out_pmax);
    assume value_is(__ctobpl_const_7102, out_pmin);
    assume value_is(__ctobpl_const_7103, out_pmax);
    goto label_48;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7369} true;
    goto label_45_true, label_45_false;

  label_44_false:
    assume out_endvisit == 0;
    assume value_is(__ctobpl_const_7101, out_endvisit);
    goto label_45;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7435} true;
    goto label_114_true, label_114_false;

  label_113_true:
    assume INT_LEQ(out_qcorr, out_q2);
    assume value_is(__ctobpl_const_7212, out_qcorr);
    assume value_is(__ctobpl_const_7213, out_q2);
    goto label_114;

  label_113_head:
    call out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := seqrotrg_loop_label_113_head(in_angle_step, out_can, out_cont, out_cph, out_endvisit, in_g, in_nodes_num, out_p, in_phase_step, out_q2, out_qcorr, out_tempBoogie0);
    goto label_113_head_last;

  label_113_head_last:
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    errline_printed := old(errline_printed);
    goto label_113_true, label_113_false;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7435} true;
    goto label_113_head;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7442} true;
    assume value_is(__ctobpl_const_7233, out_qcorr);
    out_qcorr := PLUS(out_qcorr, 1, 1);
    goto label_122_dummy;

  label_122_dummy:
    assume false;
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_121_false:
    assume !INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7230, out_cont);
    assume value_is(__ctobpl_const_7231, in_nodes_num);
    goto label_122;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7441} true;
    out_endvisit := 1;
    assume value_is(__ctobpl_const_7232, out_endvisit);
    goto label_122;

  label_121_true:
    assume INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7230, out_cont);
    assume value_is(__ctobpl_const_7231, in_nodes_num);
    goto label_123;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7440} true;
    goto label_121_true, label_121_false;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7439} true;
    assume value_is(__ctobpl_const_7229, out_cont);
    out_cont := PLUS(out_cont, 1, 1);
    goto label_121;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7438} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7227, out_can);
    assume value_is(__ctobpl_const_7228, in_angle_step);
    goto label_120;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7437} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7225, out_cph);
    assume value_is(__ctobpl_const_7226, in_phase_step);
    goto label_119;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7436} true;
    call gnodevis(out_p, out_qcorr, out_cph, out_can, in_g);
    assume value_is(__ctobpl_const_7215, out_p);
    assume value_is(__ctobpl_const_7216, out_qcorr);
    assume value_is(__ctobpl_const_7217, out_cph);
    assume value_is(__ctobpl_const_7218, out_can);
    assume value_is(__ctobpl_const_7219, in_g);
    assume value_is(__ctobpl_const_7220, out_p);
    assume value_is(__ctobpl_const_7221, out_qcorr);
    assume value_is(__ctobpl_const_7222, out_cph);
    assume value_is(__ctobpl_const_7223, out_can);
    assume value_is(__ctobpl_const_7224, in_g);
    goto label_118;

  label_114_false:
    assume out_endvisit == 0;
    assume value_is(__ctobpl_const_7214, out_endvisit);
    goto label_115;

  label_112:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7434} true;
    out_qcorr := out_q1;
    assume value_is(__ctobpl_const_7210, out_qcorr);
    assume value_is(__ctobpl_const_7211, out_q1);
    goto label_113;

  label_111_true:
    assume INT_LEQ(out_q1, out_q2);
    assume value_is(__ctobpl_const_7208, out_q1);
    assume value_is(__ctobpl_const_7209, out_q2);
    goto label_112;

  label_111:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7433} true;
    goto label_111_true, label_111_false;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7432} true;
    out_p := out_pmin;
    assume value_is(__ctobpl_const_7206, out_p);
    assume value_is(__ctobpl_const_7207, out_pmin);
    goto label_111;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7431} true;
    out_q2 := MINUS_BOTH_PTR_OR_BOTH_INT(out_qmax, 1, 1);
    assume value_is(__ctobpl_const_7204, out_q2);
    assume value_is(__ctobpl_const_7205, out_qmax);
    goto label_110;

  label_96:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7430} true;
    out_q1 := out_qmin;
    assume value_is(__ctobpl_const_7202, out_q1);
    assume value_is(__ctobpl_const_7203, out_qmin);
    goto label_109;

  label_95_false:
    assume !INT_LEQ(out_p2, out_p1);
    assume value_is(__ctobpl_const_7176, out_p2);
    assume value_is(__ctobpl_const_7177, out_p1);
    goto label_96;

  label_98_false:
    assume !INT_LEQ(out_p2, out_pcorr);
    assume value_is(__ctobpl_const_7180, out_p2);
    assume value_is(__ctobpl_const_7181, out_pcorr);
    goto label_96;

  label_99_true:
    assume out_endvisit != 0;
    assume value_is(__ctobpl_const_7182, out_endvisit);
    goto label_96;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7418} true;
    goto label_99_true, label_99_false;

  label_98_true:
    assume INT_LEQ(out_p2, out_pcorr);
    assume value_is(__ctobpl_const_7180, out_p2);
    assume value_is(__ctobpl_const_7181, out_pcorr);
    goto label_99;

  label_98_head:
    call out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := seqrotrg_loop_label_98_head(in_angle_step, out_can, out_cont, out_cph, out_endvisit, in_g, in_nodes_num, out_p2, out_pcorr, in_phase_step, out_q, out_tempBoogie0);
    goto label_98_head_last;

  label_98_head_last:
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    errline_printed := old(errline_printed);
    goto label_98_true, label_98_false;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7418} true;
    goto label_98_head;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7425} true;
    assume value_is(__ctobpl_const_7201, out_pcorr);
    out_pcorr := MINUS_BOTH_PTR_OR_BOTH_INT(out_pcorr, 1, 1);
    goto label_107_dummy;

  label_107_dummy:
    assume false;
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_106_false:
    assume !INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7198, out_cont);
    assume value_is(__ctobpl_const_7199, in_nodes_num);
    goto label_107;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7424} true;
    out_endvisit := 1;
    assume value_is(__ctobpl_const_7200, out_endvisit);
    goto label_107;

  label_106_true:
    assume INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7198, out_cont);
    assume value_is(__ctobpl_const_7199, in_nodes_num);
    goto label_108;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7423} true;
    goto label_106_true, label_106_false;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7422} true;
    assume value_is(__ctobpl_const_7197, out_cont);
    out_cont := PLUS(out_cont, 1, 1);
    goto label_106;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7421} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7195, out_can);
    assume value_is(__ctobpl_const_7196, in_angle_step);
    goto label_105;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7420} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7193, out_cph);
    assume value_is(__ctobpl_const_7194, in_phase_step);
    goto label_104;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7419} true;
    call gnodevis(out_pcorr, out_q, out_cph, out_can, in_g);
    assume value_is(__ctobpl_const_7183, out_pcorr);
    assume value_is(__ctobpl_const_7184, out_q);
    assume value_is(__ctobpl_const_7185, out_cph);
    assume value_is(__ctobpl_const_7186, out_can);
    assume value_is(__ctobpl_const_7187, in_g);
    assume value_is(__ctobpl_const_7188, out_pcorr);
    assume value_is(__ctobpl_const_7189, out_q);
    assume value_is(__ctobpl_const_7190, out_cph);
    assume value_is(__ctobpl_const_7191, out_can);
    assume value_is(__ctobpl_const_7192, in_g);
    goto label_103;

  label_99_false:
    assume out_endvisit == 0;
    assume value_is(__ctobpl_const_7182, out_endvisit);
    goto label_100;

  label_97:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7417} true;
    out_pcorr := out_p1;
    assume value_is(__ctobpl_const_7178, out_pcorr);
    assume value_is(__ctobpl_const_7179, out_p1);
    goto label_98;

  label_95_true:
    assume INT_LEQ(out_p2, out_p1);
    assume value_is(__ctobpl_const_7176, out_p2);
    assume value_is(__ctobpl_const_7177, out_p1);
    goto label_97;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7416} true;
    goto label_95_true, label_95_false;

  label_94:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7415} true;
    out_q := out_qmin;
    assume value_is(__ctobpl_const_7174, out_q);
    assume value_is(__ctobpl_const_7175, out_qmin);
    goto label_95;

  label_93:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7414} true;
    out_p2 := PLUS(out_pmin, 1, 1);
    assume value_is(__ctobpl_const_7172, out_p2);
    assume value_is(__ctobpl_const_7173, out_pmin);
    goto label_94;

  label_80:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7413} true;
    out_p1 := out_pmax;
    assume value_is(__ctobpl_const_7170, out_p1);
    assume value_is(__ctobpl_const_7171, out_pmax);
    goto label_93;

  label_79_false:
    assume !INT_LEQ(out_q2, out_q1);
    assume value_is(__ctobpl_const_7144, out_q2);
    assume value_is(__ctobpl_const_7145, out_q1);
    goto label_80;

  label_82_false:
    assume !INT_LEQ(out_q2, out_qcorr);
    assume value_is(__ctobpl_const_7148, out_q2);
    assume value_is(__ctobpl_const_7149, out_qcorr);
    goto label_80;

  label_83_true:
    assume out_endvisit != 0;
    assume value_is(__ctobpl_const_7150, out_endvisit);
    goto label_80;

  label_83:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7401} true;
    goto label_83_true, label_83_false;

  label_82_true:
    assume INT_LEQ(out_q2, out_qcorr);
    assume value_is(__ctobpl_const_7148, out_q2);
    assume value_is(__ctobpl_const_7149, out_qcorr);
    goto label_83;

  label_82_head:
    call out_can, out_cont, out_cph, out_endvisit, out_qcorr, out_tempBoogie0 := seqrotrg_loop_label_82_head(in_angle_step, out_can, out_cont, out_cph, out_endvisit, in_g, in_nodes_num, out_p, in_phase_step, out_q2, out_qcorr, out_tempBoogie0);
    goto label_82_head_last;

  label_82_head_last:
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    errline_printed := old(errline_printed);
    goto label_82_true, label_82_false;

  label_82:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7401} true;
    goto label_82_head;

  label_91:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7408} true;
    assume value_is(__ctobpl_const_7169, out_qcorr);
    out_qcorr := MINUS_BOTH_PTR_OR_BOTH_INT(out_qcorr, 1, 1);
    goto label_91_dummy;

  label_91_dummy:
    assume false;
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_90_false:
    assume !INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7166, out_cont);
    assume value_is(__ctobpl_const_7167, in_nodes_num);
    goto label_91;

  label_92:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7407} true;
    out_endvisit := 1;
    assume value_is(__ctobpl_const_7168, out_endvisit);
    goto label_91;

  label_90_true:
    assume INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7166, out_cont);
    assume value_is(__ctobpl_const_7167, in_nodes_num);
    goto label_92;

  label_90:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7406} true;
    goto label_90_true, label_90_false;

  label_89:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7405} true;
    assume value_is(__ctobpl_const_7165, out_cont);
    out_cont := PLUS(out_cont, 1, 1);
    goto label_90;

  label_88:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7404} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7163, out_can);
    assume value_is(__ctobpl_const_7164, in_angle_step);
    goto label_89;

  label_87:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7403} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7161, out_cph);
    assume value_is(__ctobpl_const_7162, in_phase_step);
    goto label_88;

  label_84:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7402} true;
    call gnodevis(out_p, out_qcorr, out_cph, out_can, in_g);
    assume value_is(__ctobpl_const_7151, out_p);
    assume value_is(__ctobpl_const_7152, out_qcorr);
    assume value_is(__ctobpl_const_7153, out_cph);
    assume value_is(__ctobpl_const_7154, out_can);
    assume value_is(__ctobpl_const_7155, in_g);
    assume value_is(__ctobpl_const_7156, out_p);
    assume value_is(__ctobpl_const_7157, out_qcorr);
    assume value_is(__ctobpl_const_7158, out_cph);
    assume value_is(__ctobpl_const_7159, out_can);
    assume value_is(__ctobpl_const_7160, in_g);
    goto label_87;

  label_83_false:
    assume out_endvisit == 0;
    assume value_is(__ctobpl_const_7150, out_endvisit);
    goto label_84;

  label_81:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7400} true;
    out_qcorr := out_q1;
    assume value_is(__ctobpl_const_7146, out_qcorr);
    assume value_is(__ctobpl_const_7147, out_q1);
    goto label_82;

  label_79_true:
    assume INT_LEQ(out_q2, out_q1);
    assume value_is(__ctobpl_const_7144, out_q2);
    assume value_is(__ctobpl_const_7145, out_q1);
    goto label_81;

  label_79:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7399} true;
    goto label_79_true, label_79_false;

  label_78:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7398} true;
    out_p := out_pmax;
    assume value_is(__ctobpl_const_7142, out_p);
    assume value_is(__ctobpl_const_7143, out_pmax);
    goto label_79;

  label_77:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7397} true;
    out_q2 := PLUS(out_qmin, 1, 1);
    assume value_is(__ctobpl_const_7140, out_q2);
    assume value_is(__ctobpl_const_7141, out_qmin);
    goto label_78;

  label_64:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7396} true;
    out_q1 := out_qmax;
    assume value_is(__ctobpl_const_7138, out_q1);
    assume value_is(__ctobpl_const_7139, out_qmax);
    goto label_77;

  label_63_false:
    assume !INT_LEQ(out_p1, out_p2);
    assume value_is(__ctobpl_const_7112, out_p1);
    assume value_is(__ctobpl_const_7113, out_p2);
    goto label_64;

  label_66_false:
    assume !INT_LEQ(out_pcorr, out_p2);
    assume value_is(__ctobpl_const_7116, out_pcorr);
    assume value_is(__ctobpl_const_7117, out_p2);
    goto label_64;

  label_67_true:
    assume out_endvisit != 0;
    assume value_is(__ctobpl_const_7118, out_endvisit);
    goto label_64;

  label_67:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7384} true;
    goto label_67_true, label_67_false;

  label_66_true:
    assume INT_LEQ(out_pcorr, out_p2);
    assume value_is(__ctobpl_const_7116, out_pcorr);
    assume value_is(__ctobpl_const_7117, out_p2);
    goto label_67;

  label_66_head:
    call out_can, out_cont, out_cph, out_endvisit, out_pcorr, out_tempBoogie0 := seqrotrg_loop_label_66_head(in_angle_step, out_can, out_cont, out_cph, out_endvisit, in_g, in_nodes_num, out_p2, out_pcorr, in_phase_step, out_q, out_tempBoogie0);
    goto label_66_head_last;

  label_66_head_last:
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    errline_printed := old(errline_printed);
    goto label_66_true, label_66_false;

  label_66:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7384} true;
    goto label_66_head;

  label_75:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7391} true;
    assume value_is(__ctobpl_const_7137, out_pcorr);
    out_pcorr := PLUS(out_pcorr, 1, 1);
    goto label_75_dummy;

  label_75_dummy:
    assume false;
    out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := in_can, in_cont, in_cph, in_endvisit, in_p, in_p1, in_p2, in_pcorr, in_pmax, in_pmin, in_q, in_q1, in_q2, in_qcorr, in_qmax, in_qmin, in_tempBoogie0;
    errline_printed := old(errline_printed);
    return;

  label_74_false:
    assume !INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7134, out_cont);
    assume value_is(__ctobpl_const_7135, in_nodes_num);
    goto label_75;

  label_76:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7390} true;
    out_endvisit := 1;
    assume value_is(__ctobpl_const_7136, out_endvisit);
    goto label_75;

  label_74_true:
    assume INT_EQ(out_cont, in_nodes_num);
    assume value_is(__ctobpl_const_7134, out_cont);
    assume value_is(__ctobpl_const_7135, in_nodes_num);
    goto label_76;

  label_74:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7389} true;
    goto label_74_true, label_74_false;

  label_73:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7388} true;
    assume value_is(__ctobpl_const_7133, out_cont);
    out_cont := PLUS(out_cont, 1, 1);
    goto label_74;

  label_72:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7387} true;
    out_tempBoogie0 := PLUS(out_can, 1, in_angle_step);
    out_can := out_tempBoogie0;
    assume value_is(__ctobpl_const_7131, out_can);
    assume value_is(__ctobpl_const_7132, in_angle_step);
    goto label_73;

  label_71:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7386} true;
    out_tempBoogie0 := PLUS(out_cph, 1, in_phase_step);
    out_cph := out_tempBoogie0;
    assume value_is(__ctobpl_const_7129, out_cph);
    assume value_is(__ctobpl_const_7130, in_phase_step);
    goto label_72;

  label_68:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7385} true;
    call gnodevis(out_pcorr, out_q, out_cph, out_can, in_g);
    assume value_is(__ctobpl_const_7119, out_pcorr);
    assume value_is(__ctobpl_const_7120, out_q);
    assume value_is(__ctobpl_const_7121, out_cph);
    assume value_is(__ctobpl_const_7122, out_can);
    assume value_is(__ctobpl_const_7123, in_g);
    assume value_is(__ctobpl_const_7124, out_pcorr);
    assume value_is(__ctobpl_const_7125, out_q);
    assume value_is(__ctobpl_const_7126, out_cph);
    assume value_is(__ctobpl_const_7127, out_can);
    assume value_is(__ctobpl_const_7128, in_g);
    goto label_71;

  label_67_false:
    assume out_endvisit == 0;
    assume value_is(__ctobpl_const_7118, out_endvisit);
    goto label_68;

  label_65:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7383} true;
    out_pcorr := out_p1;
    assume value_is(__ctobpl_const_7114, out_pcorr);
    assume value_is(__ctobpl_const_7115, out_p1);
    goto label_66;

  label_63_true:
    assume INT_LEQ(out_p1, out_p2);
    assume value_is(__ctobpl_const_7112, out_p1);
    assume value_is(__ctobpl_const_7113, out_p2);
    goto label_65;

  label_63:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7382} true;
    goto label_63_true, label_63_false;

  label_62:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7381} true;
    out_q := out_qmax;
    assume value_is(__ctobpl_const_7110, out_q);
    assume value_is(__ctobpl_const_7111, out_qmax);
    goto label_63;

  label_61:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7380} true;
    out_p2 := MINUS_BOTH_PTR_OR_BOTH_INT(out_pmax, 1, 1);
    assume value_is(__ctobpl_const_7108, out_p2);
    assume value_is(__ctobpl_const_7109, out_pmax);
    goto label_62;

  label_47:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7379} true;
    out_p1 := out_pmin;
    assume value_is(__ctobpl_const_7106, out_p1);
    assume value_is(__ctobpl_const_7107, out_pmin);
    goto label_61;

  label_45_false:
    assume !INT_EQ(out_pmin, out_pmax);
    assume value_is(__ctobpl_const_7102, out_pmin);
    assume value_is(__ctobpl_const_7103, out_pmax);
    goto label_47;

  label_48_false:
    assume !INT_EQ(out_qmin, out_qmax);
    assume value_is(__ctobpl_const_7104, out_qmin);
    assume value_is(__ctobpl_const_7105, out_qmax);
    goto label_47;

  label_60_dummy:
    call {:si_unique_call 1} out_can, out_cont, out_cph, out_endvisit, out_p, out_p1, out_p2, out_pcorr, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0 := seqrotrg_loop_label_44_head(in_angle_step, out_can, out_cont, out_cph, out_endvisit, in_g, in_nodes_num, out_p, out_p1, out_p2, out_pcorr, in_phase_step, out_pmax, out_pmin, out_q, out_q1, out_q2, out_qcorr, out_qmax, out_qmin, out_tempBoogie0);
    return;

  exit:
    return;
}



procedure seqrotrg_loop_label_44_head(in_angle_step: int, in_can: int, in_cont: int, in_cph: int, in_endvisit: int, in_g: int, in_nodes_num: int, in_p: int, in_p1: int, in_p2: int, in_pcorr: int, in_phase_step: int, in_pmax: int, in_pmin: int, in_q: int, in_q1: int, in_q2: int, in_qcorr: int, in_qmax: int, in_qmin: int, in_tempBoogie0: int) returns (out_can: int, out_cont: int, out_cph: int, out_endvisit: int, out_p: int, out_p1: int, out_p2: int, out_pcorr: int, out_pmax: int, out_pmin: int, out_q: int, out_q1: int, out_q2: int, out_qcorr: int, out_qmax: int, out_qmin: int, out_tempBoogie0: int);
  modifies errline_printed;



implementation sgramp2n_loop_label_108_head(in_havoc_stringTemp: int, in_amp_val: int, in_app_ptr: int, in_port_app_ptr: int, in_primo_ptr: int, in_result.malloc$7: int, in_result.printf$8: int, in_ultimo_ptr: int) returns (out_app_ptr: int, out_port_app_ptr: int, out_primo_ptr: int, out_result.malloc$7: int, out_result.printf$8: int, out_ultimo_ptr: int)
{

  entry:
    out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_ultimo_ptr := in_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$7, in_result.printf$8, in_ultimo_ptr;
    goto label_108_head;

  label_108_head:
    goto label_108_true, label_108_false;

  label_108_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_7633, out_port_app_ptr);
    out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_ultimo_ptr := in_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$7, in_result.printf$8, in_ultimo_ptr;
    Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt := old(Mem_T.NEXT_Geomport), old(Mem_T.AMP_Geomport), old(errline_printed), old(alloc), old(detChoiceCnt);
    return;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7795} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_7658, out_port_app_ptr);
    assume value_is(__ctobpl_const_7659, out_port_app_ptr);
    assume value_is(__ctobpl_const_7660, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_122_dummy;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7792} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_7656, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7657, Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr)]);
    goto label_122;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7790} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7654, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7655, out_app_ptr);
    goto label_121;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7785} true;
    out_primo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7649, out_primo_ptr);
    assume value_is(__ctobpl_const_7650, out_app_ptr);
    goto label_120;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7787} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr) := out_app_ptr];
    assume value_is(__ctobpl_const_7651, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7652, Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_7653, out_app_ptr);
    goto label_120;

  label_117_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_7648, out_primo_ptr);
    goto label_119;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7784} true;
    goto label_117_true, label_117_false;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7780} true;
    assert out_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.AMP_Geomport := Mem_T.AMP_Geomport[AMP_Geomport(out_app_ptr) := MULT(in_amp_val, Mem_T.AMP_Port[AMP_Port(out_port_app_ptr)])];
    assume value_is(__ctobpl_const_7643, out_app_ptr);
    assume value_is(__ctobpl_const_7644, Mem_T.AMP_Geomport[AMP_Geomport(out_app_ptr)]);
    assume value_is(__ctobpl_const_7645, in_amp_val);
    assume value_is(__ctobpl_const_7646, out_port_app_ptr);
    assume value_is(__ctobpl_const_7647, Mem_T.AMP_Port[AMP_Port(out_port_app_ptr)]);
    goto label_117;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7776} true;
    call interror(in_havoc_stringTemp);
    goto label_116;

  label_114_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_7642, out_app_ptr);
    goto label_116;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7774} true;
    goto label_114_true, label_114_false;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7772} true;
    out_app_ptr := out_result.malloc$7;
    assume value_is(__ctobpl_const_7640, out_app_ptr);
    assume value_is(__ctobpl_const_7641, out_result.malloc$7);
    goto label_114;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7772} true;
    call out_result.malloc$7 := __HAVOC_det_malloc(48);
    goto label_113;

  label_108_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_7633, out_port_app_ptr);
    goto label_110;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7775} true;
    call out_result.printf$8 := det_choice();
    goto label_126;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7775} true;
    goto label_123;

  label_114_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_7642, out_app_ptr);
    goto label_115;

  label_117_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_7648, out_primo_ptr);
    goto label_118;

  label_122_dummy:
    call {:si_unique_call 1} out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_ultimo_ptr := sgramp2n_loop_label_108_head(in_havoc_stringTemp, in_amp_val, out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_ultimo_ptr);
    return;

  exit:
    return;
}



procedure sgramp2n_loop_label_108_head(in_havoc_stringTemp: int, in_amp_val: int, in_app_ptr: int, in_port_app_ptr: int, in_primo_ptr: int, in_result.malloc$7: int, in_result.printf$8: int, in_ultimo_ptr: int) returns (out_app_ptr: int, out_port_app_ptr: int, out_primo_ptr: int, out_result.malloc$7: int, out_result.printf$8: int, out_ultimo_ptr: int);
  modifies Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt;



implementation sgramp2n_loop_label_98_head(in_havoc_stringTemp: int, in_A: int, in_B: int, in_C: int, in_D: int, in_E: int, in_amp_val: int, in_app_ptr: int, in_geomnode_app_ptr: int, in_port_app_ptr: int, in_port_ptr: int, in_primo_ptr: int, in_result.malloc$7: int, in_result.printf$8: int, in_result.secorder$6: int, in_ultimo_ptr: int) returns (out_amp_val: int, out_app_ptr: int, out_geomnode_app_ptr: int, out_port_app_ptr: int, out_primo_ptr: int, out_result.malloc$7: int, out_result.printf$8: int, out_result.secorder$6: int, out_ultimo_ptr: int)
{

  entry:
    out_amp_val, out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_result.secorder$6, out_ultimo_ptr := in_amp_val, in_app_ptr, in_geomnode_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$7, in_result.printf$8, in_result.secorder$6, in_ultimo_ptr;
    goto label_98_head;

  label_98_head:
    goto label_98_true, label_98_false;

  label_98_false:
    assume out_geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7605, out_geomnode_app_ptr);
    out_amp_val, out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_result.secorder$6, out_ultimo_ptr := in_amp_val, in_app_ptr, in_geomnode_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$7, in_result.printf$8, in_result.secorder$6, in_ultimo_ptr;
    Mem_T.GEOMPORT_PTR_Geomnode, Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt := old(Mem_T.GEOMPORT_PTR_Geomnode), old(Mem_T.NEXT_Geomport), old(Mem_T.AMP_Geomport), old(errline_printed), old(alloc), old(detChoiceCnt);
    return;

  label_129:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7805} true;
    assert out_geomnode_app_ptr != 0;
    out_geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7637, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7638, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7639, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)]);
    goto label_129_dummy;

  label_109:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7802} true;
    assert out_geomnode_app_ptr != 0;
    Mem_T.GEOMPORT_PTR_Geomnode := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr) := out_primo_ptr];
    assume value_is(__ctobpl_const_7634, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7635, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7636, out_primo_ptr);
    goto label_129;

  label_108_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_7633, out_port_app_ptr);
    goto label_109;

  label_108_head:
    call out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_ultimo_ptr := sgramp2n_loop_label_108_head(in_havoc_stringTemp, out_amp_val, out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_ultimo_ptr);
    goto label_108_head_last;

  label_108_head_last:
    out_amp_val, out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_result.secorder$6, out_ultimo_ptr := in_amp_val, in_app_ptr, in_geomnode_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$7, in_result.printf$8, in_result.secorder$6, in_ultimo_ptr;
    Mem_T.GEOMPORT_PTR_Geomnode, Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt := old(Mem_T.GEOMPORT_PTR_Geomnode), old(Mem_T.NEXT_Geomport), old(Mem_T.AMP_Geomport), old(errline_printed), old(alloc), old(detChoiceCnt);
    goto label_108_true, label_108_false;

  label_108:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7769} true;
    goto label_108_head;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7795} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_7658, out_port_app_ptr);
    assume value_is(__ctobpl_const_7659, out_port_app_ptr);
    assume value_is(__ctobpl_const_7660, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_122_dummy;

  label_122_dummy:
    assume false;
    out_amp_val, out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_result.secorder$6, out_ultimo_ptr := in_amp_val, in_app_ptr, in_geomnode_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$7, in_result.printf$8, in_result.secorder$6, in_ultimo_ptr;
    Mem_T.GEOMPORT_PTR_Geomnode, Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt := old(Mem_T.GEOMPORT_PTR_Geomnode), old(Mem_T.NEXT_Geomport), old(Mem_T.AMP_Geomport), old(errline_printed), old(alloc), old(detChoiceCnt);
    return;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7792} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_7656, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7657, Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr)]);
    goto label_122;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7790} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7654, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7655, out_app_ptr);
    goto label_121;

  label_118:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7785} true;
    out_primo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7649, out_primo_ptr);
    assume value_is(__ctobpl_const_7650, out_app_ptr);
    goto label_120;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7787} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr) := out_app_ptr];
    assume value_is(__ctobpl_const_7651, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7652, Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_7653, out_app_ptr);
    goto label_120;

  label_117_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_7648, out_primo_ptr);
    goto label_119;

  label_117:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7784} true;
    goto label_117_true, label_117_false;

  label_116:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7780} true;
    assert out_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.AMP_Geomport := Mem_T.AMP_Geomport[AMP_Geomport(out_app_ptr) := MULT(out_amp_val, Mem_T.AMP_Port[AMP_Port(out_port_app_ptr)])];
    assume value_is(__ctobpl_const_7643, out_app_ptr);
    assume value_is(__ctobpl_const_7644, Mem_T.AMP_Geomport[AMP_Geomport(out_app_ptr)]);
    assume value_is(__ctobpl_const_7645, out_amp_val);
    assume value_is(__ctobpl_const_7646, out_port_app_ptr);
    assume value_is(__ctobpl_const_7647, Mem_T.AMP_Port[AMP_Port(out_port_app_ptr)]);
    goto label_117;

  label_126:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7776} true;
    call interror(in_havoc_stringTemp);
    goto label_116;

  label_114_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_7642, out_app_ptr);
    goto label_116;

  label_114:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7774} true;
    goto label_114_true, label_114_false;

  label_113:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7772} true;
    out_app_ptr := out_result.malloc$7;
    assume value_is(__ctobpl_const_7640, out_app_ptr);
    assume value_is(__ctobpl_const_7641, out_result.malloc$7);
    goto label_114;

  label_110:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7772} true;
    call out_result.malloc$7 := __HAVOC_det_malloc(48);
    goto label_113;

  label_108_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_7633, out_port_app_ptr);
    goto label_110;

  label_123:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7775} true;
    call out_result.printf$8 := det_choice();
    goto label_126;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7775} true;
    goto label_123;

  label_114_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_7642, out_app_ptr);
    goto label_115;

  label_117_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_7648, out_primo_ptr);
    goto label_118;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7766} true;
    out_port_app_ptr := in_port_ptr;
    assume value_is(__ctobpl_const_7631, out_port_app_ptr);
    assume value_is(__ctobpl_const_7632, in_port_ptr);
    goto label_108;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7763} true;
    out_primo_ptr := out_ultimo_ptr;
    assume value_is(__ctobpl_const_7629, out_primo_ptr);
    assume value_is(__ctobpl_const_7630, out_ultimo_ptr);
    goto label_107;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7763} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7627, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7628, out_app_ptr);
    goto label_106;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7763} true;
    out_app_ptr := 0;
    assume value_is(__ctobpl_const_7626, out_app_ptr);
    goto label_105;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7760} true;
    out_amp_val := out_result.secorder$6;
    assume value_is(__ctobpl_const_7624, out_amp_val);
    assume value_is(__ctobpl_const_7625, out_result.secorder$6);
    goto label_104;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7760} true;
    assert out_geomnode_app_ptr != 0;
    assert out_geomnode_app_ptr != 0;
    assert out_geomnode_app_ptr != 0;
    assert out_geomnode_app_ptr != 0;
    call out_result.secorder$6 := secorder(in_A, in_B, in_C, in_D, in_E, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)], Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7606, in_A);
    assume value_is(__ctobpl_const_7607, in_B);
    assume value_is(__ctobpl_const_7608, in_C);
    assume value_is(__ctobpl_const_7609, in_D);
    assume value_is(__ctobpl_const_7610, in_E);
    assume value_is(__ctobpl_const_7611, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7612, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7613, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7614, Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7615, in_A);
    assume value_is(__ctobpl_const_7616, in_B);
    assume value_is(__ctobpl_const_7617, in_C);
    assume value_is(__ctobpl_const_7618, in_D);
    assume value_is(__ctobpl_const_7619, in_E);
    assume value_is(__ctobpl_const_7620, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7621, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7622, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7623, Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]);
    goto label_103;

  label_98_true:
    assume out_geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7605, out_geomnode_app_ptr);
    goto label_100;

  label_129_dummy:
    call {:si_unique_call 1} out_amp_val, out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_result.secorder$6, out_ultimo_ptr := sgramp2n_loop_label_98_head(in_havoc_stringTemp, in_A, in_B, in_C, in_D, in_E, out_amp_val, out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, in_port_ptr, out_primo_ptr, out_result.malloc$7, out_result.printf$8, out_result.secorder$6, out_ultimo_ptr);
    return;

  exit:
    return;
}



procedure sgramp2n_loop_label_98_head(in_havoc_stringTemp: int, in_A: int, in_B: int, in_C: int, in_D: int, in_E: int, in_amp_val: int, in_app_ptr: int, in_geomnode_app_ptr: int, in_port_app_ptr: int, in_port_ptr: int, in_primo_ptr: int, in_result.malloc$7: int, in_result.printf$8: int, in_result.secorder$6: int, in_ultimo_ptr: int) returns (out_amp_val: int, out_app_ptr: int, out_geomnode_app_ptr: int, out_port_app_ptr: int, out_primo_ptr: int, out_result.malloc$7: int, out_result.printf$8: int, out_result.secorder$6: int, out_ultimo_ptr: int);
  modifies Mem_T.GEOMPORT_PTR_Geomnode, Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt;



implementation sgramp2n_loop_label_135_head(in_Hx: int, in_Hy: int, in_geomnode_app_ptr: int, in_i: int) returns (out_geomnode_app_ptr: int, out_i: int)
{

  entry:
    out_geomnode_app_ptr, out_i := in_geomnode_app_ptr, in_i;
    goto label_135_head;

  label_135_head:
    goto label_135_true, label_135_false;

  label_135_false:
    assume !INT_LEQ(out_i, 7);
    assume value_is(__ctobpl_const_7459, out_i);
    out_geomnode_app_ptr, out_i := in_geomnode_app_ptr, in_i;
    Mem_T.FLOAT := old(Mem_T.FLOAT);
    return;

  label_144:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7699} true;
    assume value_is(__ctobpl_const_7494, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_144_dummy;

  label_143:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7704} true;
    assert out_geomnode_app_ptr != 0;
    out_geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7491, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7492, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7493, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)]);
    goto label_144;

  label_142:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7703} true;
    assert in_Hy != 0;
    assert out_geomnode_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[PLUS(in_Hy, 8, out_i) := Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]];
    assume value_is(__ctobpl_const_7487, out_i);
    assume value_is(__ctobpl_const_7488, Mem_T.FLOAT[PLUS(in_Hy, 8, out_i)]);
    assume value_is(__ctobpl_const_7489, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7490, Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]);
    goto label_143;

  label_141:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7702} true;
    assert in_Hx != 0;
    assert out_geomnode_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[PLUS(in_Hx, 8, out_i) := Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)]];
    assume value_is(__ctobpl_const_7483, out_i);
    assume value_is(__ctobpl_const_7484, Mem_T.FLOAT[PLUS(in_Hx, 8, out_i)]);
    assume value_is(__ctobpl_const_7485, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7486, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)]);
    goto label_142;

  label_137_true:
    assume out_geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7482, out_geomnode_app_ptr);
    goto label_141;

  label_137:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7701} true;
    goto label_137_true, label_137_false;

  label_137_false:
    assume out_geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7482, out_geomnode_app_ptr);
    out_geomnode_app_ptr, out_i := in_geomnode_app_ptr, in_i;
    Mem_T.FLOAT := old(Mem_T.FLOAT);
    return;

  label_135_true:
    assume INT_LEQ(out_i, 7);
    assume value_is(__ctobpl_const_7459, out_i);
    goto label_137;

  label_144_dummy:
    call {:si_unique_call 1} out_geomnode_app_ptr, out_i := sgramp2n_loop_label_135_head(in_Hx, in_Hy, out_geomnode_app_ptr, out_i);
    return;

  exit:
    return;
}



procedure sgramp2n_loop_label_135_head(in_Hx: int, in_Hy: int, in_geomnode_app_ptr: int, in_i: int) returns (out_geomnode_app_ptr: int, out_i: int);
  modifies Mem_T.FLOAT;



implementation sgrampun_loop_label_23_head(in_havoc_stringTemp: int, in_app_ptr: int, in_port_app_ptr: int, in_primo_ptr: int, in_result.malloc$2: int, in_result.printf$3: int, in_ultimo_ptr: int, in_unif_val: int) returns (out_app_ptr: int, out_port_app_ptr: int, out_primo_ptr: int, out_result.malloc$2: int, out_result.printf$3: int, out_ultimo_ptr: int)
{

  entry:
    out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr := in_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$2, in_result.printf$3, in_ultimo_ptr;
    goto label_23_head;

  label_23_head:
    goto label_23_true, label_23_false;

  label_23_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_7681, out_port_app_ptr);
    out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr := in_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$2, in_result.printf$3, in_ultimo_ptr;
    Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt := old(Mem_T.NEXT_Geomport), old(Mem_T.AMP_Geomport), old(errline_printed), old(alloc), old(detChoiceCnt);
    return;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7878} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_7706, out_port_app_ptr);
    assume value_is(__ctobpl_const_7707, out_port_app_ptr);
    assume value_is(__ctobpl_const_7708, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_37_dummy;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7875} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_7704, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7705, Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr)]);
    goto label_37;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7873} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7702, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7703, out_app_ptr);
    goto label_36;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7868} true;
    out_primo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7697, out_primo_ptr);
    assume value_is(__ctobpl_const_7698, out_app_ptr);
    goto label_35;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7870} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr) := out_app_ptr];
    assume value_is(__ctobpl_const_7699, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7700, Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_7701, out_app_ptr);
    goto label_35;

  label_32_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_7696, out_primo_ptr);
    goto label_34;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7867} true;
    goto label_32_true, label_32_false;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7863} true;
    assert out_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.AMP_Geomport := Mem_T.AMP_Geomport[AMP_Geomport(out_app_ptr) := MULT(in_unif_val, Mem_T.AMP_Port[AMP_Port(out_port_app_ptr)])];
    assume value_is(__ctobpl_const_7691, out_app_ptr);
    assume value_is(__ctobpl_const_7692, Mem_T.AMP_Geomport[AMP_Geomport(out_app_ptr)]);
    assume value_is(__ctobpl_const_7693, in_unif_val);
    assume value_is(__ctobpl_const_7694, out_port_app_ptr);
    assume value_is(__ctobpl_const_7695, Mem_T.AMP_Port[AMP_Port(out_port_app_ptr)]);
    goto label_32;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7859} true;
    call interror(in_havoc_stringTemp);
    goto label_31;

  label_29_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_7690, out_app_ptr);
    goto label_31;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7857} true;
    goto label_29_true, label_29_false;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7855} true;
    out_app_ptr := out_result.malloc$2;
    assume value_is(__ctobpl_const_7688, out_app_ptr);
    assume value_is(__ctobpl_const_7689, out_result.malloc$2);
    goto label_29;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7855} true;
    call out_result.malloc$2 := __HAVOC_det_malloc(48);
    goto label_28;

  label_23_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_7681, out_port_app_ptr);
    goto label_25;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7858} true;
    call out_result.printf$3 := det_choice();
    goto label_41;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7858} true;
    goto label_38;

  label_29_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_7690, out_app_ptr);
    goto label_30;

  label_32_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_7696, out_primo_ptr);
    goto label_33;

  label_37_dummy:
    call {:si_unique_call 1} out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr := sgrampun_loop_label_23_head(in_havoc_stringTemp, out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr, in_unif_val);
    return;

  exit:
    return;
}



procedure sgrampun_loop_label_23_head(in_havoc_stringTemp: int, in_app_ptr: int, in_port_app_ptr: int, in_primo_ptr: int, in_result.malloc$2: int, in_result.printf$3: int, in_ultimo_ptr: int, in_unif_val: int) returns (out_app_ptr: int, out_port_app_ptr: int, out_primo_ptr: int, out_result.malloc$2: int, out_result.printf$3: int, out_ultimo_ptr: int);
  modifies Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt;



implementation sgrampun_loop_label_17_head(in_havoc_stringTemp: int, in_app_ptr: int, in_geomnode_app_ptr: int, in_port_app_ptr: int, in_port_ptr: int, in_primo_ptr: int, in_result.malloc$2: int, in_result.printf$3: int, in_ultimo_ptr: int, in_unif_val: int) returns (out_app_ptr: int, out_geomnode_app_ptr: int, out_port_app_ptr: int, out_primo_ptr: int, out_result.malloc$2: int, out_result.printf$3: int, out_ultimo_ptr: int)
{

  entry:
    out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr := in_app_ptr, in_geomnode_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$2, in_result.printf$3, in_ultimo_ptr;
    goto label_17_head;

  label_17_head:
    goto label_17_true, label_17_false;

  label_17_false:
    assume out_geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7673, out_geomnode_app_ptr);
    out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr := in_app_ptr, in_geomnode_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$2, in_result.printf$3, in_ultimo_ptr;
    Mem_T.GEOMPORT_PTR_Geomnode, Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt := old(Mem_T.GEOMPORT_PTR_Geomnode), old(Mem_T.NEXT_Geomport), old(Mem_T.AMP_Geomport), old(errline_printed), old(alloc), old(detChoiceCnt);
    return;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7888} true;
    assert out_geomnode_app_ptr != 0;
    out_geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7685, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7686, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7687, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)]);
    goto label_44_dummy;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7885} true;
    assert out_geomnode_app_ptr != 0;
    Mem_T.GEOMPORT_PTR_Geomnode := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr) := out_primo_ptr];
    assume value_is(__ctobpl_const_7682, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7683, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7684, out_primo_ptr);
    goto label_44;

  label_23_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_7681, out_port_app_ptr);
    goto label_24;

  label_23_head:
    call out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr := sgrampun_loop_label_23_head(in_havoc_stringTemp, out_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr, in_unif_val);
    goto label_23_head_last;

  label_23_head_last:
    out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr := in_app_ptr, in_geomnode_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$2, in_result.printf$3, in_ultimo_ptr;
    Mem_T.GEOMPORT_PTR_Geomnode, Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt := old(Mem_T.GEOMPORT_PTR_Geomnode), old(Mem_T.NEXT_Geomport), old(Mem_T.AMP_Geomport), old(errline_printed), old(alloc), old(detChoiceCnt);
    goto label_23_true, label_23_false;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7852} true;
    goto label_23_head;

  label_37:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7878} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_7706, out_port_app_ptr);
    assume value_is(__ctobpl_const_7707, out_port_app_ptr);
    assume value_is(__ctobpl_const_7708, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_37_dummy;

  label_37_dummy:
    assume false;
    out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr := in_app_ptr, in_geomnode_app_ptr, in_port_app_ptr, in_primo_ptr, in_result.malloc$2, in_result.printf$3, in_ultimo_ptr;
    Mem_T.GEOMPORT_PTR_Geomnode, Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt := old(Mem_T.GEOMPORT_PTR_Geomnode), old(Mem_T.NEXT_Geomport), old(Mem_T.AMP_Geomport), old(errline_printed), old(alloc), old(detChoiceCnt);
    return;

  label_36:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7875} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr) := 0];
    assume value_is(__ctobpl_const_7704, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7705, Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr)]);
    goto label_37;

  label_35:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7873} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7702, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7703, out_app_ptr);
    goto label_36;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7868} true;
    out_primo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7697, out_primo_ptr);
    assume value_is(__ctobpl_const_7698, out_app_ptr);
    goto label_35;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7870} true;
    assert out_ultimo_ptr != 0;
    Mem_T.NEXT_Geomport := Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr) := out_app_ptr];
    assume value_is(__ctobpl_const_7699, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7700, Mem_T.NEXT_Geomport[NEXT_Geomport(out_ultimo_ptr)]);
    assume value_is(__ctobpl_const_7701, out_app_ptr);
    goto label_35;

  label_32_true:
    assume out_primo_ptr != 0;
    assume value_is(__ctobpl_const_7696, out_primo_ptr);
    goto label_34;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7867} true;
    goto label_32_true, label_32_false;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7863} true;
    assert out_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.AMP_Geomport := Mem_T.AMP_Geomport[AMP_Geomport(out_app_ptr) := MULT(in_unif_val, Mem_T.AMP_Port[AMP_Port(out_port_app_ptr)])];
    assume value_is(__ctobpl_const_7691, out_app_ptr);
    assume value_is(__ctobpl_const_7692, Mem_T.AMP_Geomport[AMP_Geomport(out_app_ptr)]);
    assume value_is(__ctobpl_const_7693, in_unif_val);
    assume value_is(__ctobpl_const_7694, out_port_app_ptr);
    assume value_is(__ctobpl_const_7695, Mem_T.AMP_Port[AMP_Port(out_port_app_ptr)]);
    goto label_32;

  label_41:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7859} true;
    call interror(in_havoc_stringTemp);
    goto label_31;

  label_29_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_7690, out_app_ptr);
    goto label_31;

  label_29:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7857} true;
    goto label_29_true, label_29_false;

  label_28:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7855} true;
    out_app_ptr := out_result.malloc$2;
    assume value_is(__ctobpl_const_7688, out_app_ptr);
    assume value_is(__ctobpl_const_7689, out_result.malloc$2);
    goto label_29;

  label_25:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7855} true;
    call out_result.malloc$2 := __HAVOC_det_malloc(48);
    goto label_28;

  label_23_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_7681, out_port_app_ptr);
    goto label_25;

  label_38:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7858} true;
    call out_result.printf$3 := det_choice();
    goto label_41;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7858} true;
    goto label_38;

  label_29_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_7690, out_app_ptr);
    goto label_30;

  label_32_false:
    assume out_primo_ptr == 0;
    assume value_is(__ctobpl_const_7696, out_primo_ptr);
    goto label_33;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7849} true;
    out_port_app_ptr := in_port_ptr;
    assume value_is(__ctobpl_const_7679, out_port_app_ptr);
    assume value_is(__ctobpl_const_7680, in_port_ptr);
    goto label_23;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7846} true;
    out_primo_ptr := out_ultimo_ptr;
    assume value_is(__ctobpl_const_7677, out_primo_ptr);
    assume value_is(__ctobpl_const_7678, out_ultimo_ptr);
    goto label_22;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7846} true;
    out_ultimo_ptr := out_app_ptr;
    assume value_is(__ctobpl_const_7675, out_ultimo_ptr);
    assume value_is(__ctobpl_const_7676, out_app_ptr);
    goto label_21;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7846} true;
    out_app_ptr := 0;
    assume value_is(__ctobpl_const_7674, out_app_ptr);
    goto label_20;

  label_17_true:
    assume out_geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7673, out_geomnode_app_ptr);
    goto label_19;

  label_44_dummy:
    call {:si_unique_call 1} out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr := sgrampun_loop_label_17_head(in_havoc_stringTemp, out_app_ptr, out_geomnode_app_ptr, out_port_app_ptr, in_port_ptr, out_primo_ptr, out_result.malloc$2, out_result.printf$3, out_ultimo_ptr, in_unif_val);
    return;

  exit:
    return;
}



procedure sgrampun_loop_label_17_head(in_havoc_stringTemp: int, in_app_ptr: int, in_geomnode_app_ptr: int, in_port_app_ptr: int, in_port_ptr: int, in_primo_ptr: int, in_result.malloc$2: int, in_result.printf$3: int, in_ultimo_ptr: int, in_unif_val: int) returns (out_app_ptr: int, out_geomnode_app_ptr: int, out_port_app_ptr: int, out_primo_ptr: int, out_result.malloc$2: int, out_result.printf$3: int, out_ultimo_ptr: int);
  modifies Mem_T.GEOMPORT_PTR_Geomnode, Mem_T.NEXT_Geomport, Mem_T.AMP_Geomport, errline_printed, alloc, detChoiceCnt;



implementation sgrpha2n_loop_label_101_head(in_geomport_app_ptr: int, in_phase_val: int, in_port_app_ptr: int) returns (out_geomport_app_ptr: int, out_port_app_ptr: int)
{

  entry:
    out_geomport_app_ptr, out_port_app_ptr := in_geomport_app_ptr, in_port_app_ptr;
    goto label_101_head;

  label_101_head:
    goto label_101_true, label_101_false;

  label_101_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_7914, out_port_app_ptr);
    out_geomport_app_ptr, out_port_app_ptr := in_geomport_app_ptr, in_port_app_ptr;
    Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport := old(Mem_T.PPA_Geomport), old(Mem_T.PSC_Geomport), old(Mem_T.PSH_Geomport);
    return;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8039} true;
    assert out_geomport_app_ptr != 0;
    out_geomport_app_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)];
    assume value_is(__ctobpl_const_7934, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7935, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7936, Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)]);
    goto label_107_dummy;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8038} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_7931, out_port_app_ptr);
    assume value_is(__ctobpl_const_7932, out_port_app_ptr);
    assume value_is(__ctobpl_const_7933, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_107;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8035} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_app_ptr) := Mem_T.PPA_Port[PPA_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_7927, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7928, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_7929, out_port_app_ptr);
    assume value_is(__ctobpl_const_7930, Mem_T.PPA_Port[PPA_Port(out_port_app_ptr)]);
    goto label_106;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8034} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PSC_Geomport := Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_app_ptr) := Mem_T.PSC_Port[PSC_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_7923, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7924, Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_7925, out_port_app_ptr);
    assume value_is(__ctobpl_const_7926, Mem_T.PSC_Port[PSC_Port(out_port_app_ptr)]);
    goto label_105;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8032} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PSH_Geomport := Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_app_ptr) := PLUS(in_phase_val, 1, Mem_T.PSH_Port[PSH_Port(out_port_app_ptr)])];
    assume value_is(__ctobpl_const_7918, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7919, Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_7920, in_phase_val);
    assume value_is(__ctobpl_const_7921, out_port_app_ptr);
    assume value_is(__ctobpl_const_7922, Mem_T.PSH_Port[PSH_Port(out_port_app_ptr)]);
    goto label_104;

  label_101_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_7914, out_port_app_ptr);
    goto label_103;

  label_107_dummy:
    call {:si_unique_call 1} out_geomport_app_ptr, out_port_app_ptr := sgrpha2n_loop_label_101_head(out_geomport_app_ptr, in_phase_val, out_port_app_ptr);
    return;

  exit:
    return;
}



procedure sgrpha2n_loop_label_101_head(in_geomport_app_ptr: int, in_phase_val: int, in_port_app_ptr: int) returns (out_geomport_app_ptr: int, out_port_app_ptr: int);
  modifies Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport;



implementation sgrpha2n_loop_label_93_head(in_A: int, in_B: int, in_C: int, in_D: int, in_E: int, in_geomnode_app_ptr: int, in_geomport_app_ptr: int, in_phase_val: int, in_port_app_ptr: int, in_port_ptr: int, in_result.secorder$6: int) returns (out_geomnode_app_ptr: int, out_geomport_app_ptr: int, out_phase_val: int, out_port_app_ptr: int, out_result.secorder$6: int)
{

  entry:
    out_geomnode_app_ptr, out_geomport_app_ptr, out_phase_val, out_port_app_ptr, out_result.secorder$6 := in_geomnode_app_ptr, in_geomport_app_ptr, in_phase_val, in_port_app_ptr, in_result.secorder$6;
    goto label_93_head;

  label_93_head:
    goto label_93_true, label_93_false;

  label_93_false:
    assume out_geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7888, out_geomnode_app_ptr);
    out_geomnode_app_ptr, out_geomport_app_ptr, out_phase_val, out_port_app_ptr, out_result.secorder$6 := in_geomnode_app_ptr, in_geomport_app_ptr, in_phase_val, in_port_app_ptr, in_result.secorder$6;
    Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport, errline_printed := old(Mem_T.PPA_Geomport), old(Mem_T.PSC_Geomport), old(Mem_T.PSH_Geomport), old(errline_printed);
    return;

  label_102:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8043} true;
    assert out_geomnode_app_ptr != 0;
    out_geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7915, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7916, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7917, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)]);
    goto label_102_dummy;

  label_101_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_7914, out_port_app_ptr);
    goto label_102;

  label_101_head:
    call out_geomport_app_ptr, out_port_app_ptr := sgrpha2n_loop_label_101_head(out_geomport_app_ptr, out_phase_val, out_port_app_ptr);
    goto label_101_head_last;

  label_101_head_last:
    out_geomnode_app_ptr, out_geomport_app_ptr, out_phase_val, out_port_app_ptr, out_result.secorder$6 := in_geomnode_app_ptr, in_geomport_app_ptr, in_phase_val, in_port_app_ptr, in_result.secorder$6;
    Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport, errline_printed := old(Mem_T.PPA_Geomport), old(Mem_T.PSC_Geomport), old(Mem_T.PSH_Geomport), old(errline_printed);
    goto label_101_true, label_101_false;

  label_101:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8027} true;
    goto label_101_head;

  label_107:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8039} true;
    assert out_geomport_app_ptr != 0;
    out_geomport_app_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)];
    assume value_is(__ctobpl_const_7934, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7935, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7936, Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)]);
    goto label_107_dummy;

  label_107_dummy:
    assume false;
    out_geomnode_app_ptr, out_geomport_app_ptr, out_phase_val, out_port_app_ptr, out_result.secorder$6 := in_geomnode_app_ptr, in_geomport_app_ptr, in_phase_val, in_port_app_ptr, in_result.secorder$6;
    Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport, errline_printed := old(Mem_T.PPA_Geomport), old(Mem_T.PSC_Geomport), old(Mem_T.PSH_Geomport), old(errline_printed);
    return;

  label_106:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8038} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_7931, out_port_app_ptr);
    assume value_is(__ctobpl_const_7932, out_port_app_ptr);
    assume value_is(__ctobpl_const_7933, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_107;

  label_105:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8035} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_app_ptr) := Mem_T.PPA_Port[PPA_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_7927, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7928, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_7929, out_port_app_ptr);
    assume value_is(__ctobpl_const_7930, Mem_T.PPA_Port[PPA_Port(out_port_app_ptr)]);
    goto label_106;

  label_104:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8034} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PSC_Geomport := Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_app_ptr) := Mem_T.PSC_Port[PSC_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_7923, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7924, Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_7925, out_port_app_ptr);
    assume value_is(__ctobpl_const_7926, Mem_T.PSC_Port[PSC_Port(out_port_app_ptr)]);
    goto label_105;

  label_103:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8032} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PSH_Geomport := Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_app_ptr) := PLUS(out_phase_val, 1, Mem_T.PSH_Port[PSH_Port(out_port_app_ptr)])];
    assume value_is(__ctobpl_const_7918, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7919, Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_7920, out_phase_val);
    assume value_is(__ctobpl_const_7921, out_port_app_ptr);
    assume value_is(__ctobpl_const_7922, Mem_T.PSH_Port[PSH_Port(out_port_app_ptr)]);
    goto label_104;

  label_101_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_7914, out_port_app_ptr);
    goto label_103;

  label_100:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8024} true;
    out_port_app_ptr := in_port_ptr;
    assume value_is(__ctobpl_const_7912, out_port_app_ptr);
    assume value_is(__ctobpl_const_7913, in_port_ptr);
    goto label_101;

  label_99:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8022} true;
    assert out_geomnode_app_ptr != 0;
    out_geomport_app_ptr := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7909, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_7910, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7911, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]);
    goto label_100;

  label_98:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8019} true;
    out_phase_val := out_result.secorder$6;
    assume value_is(__ctobpl_const_7907, out_phase_val);
    assume value_is(__ctobpl_const_7908, out_result.secorder$6);
    goto label_99;

  label_95:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8019} true;
    assert out_geomnode_app_ptr != 0;
    assert out_geomnode_app_ptr != 0;
    assert out_geomnode_app_ptr != 0;
    assert out_geomnode_app_ptr != 0;
    call out_result.secorder$6 := secorder(in_A, in_B, in_C, in_D, in_E, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)], Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7889, in_A);
    assume value_is(__ctobpl_const_7890, in_B);
    assume value_is(__ctobpl_const_7891, in_C);
    assume value_is(__ctobpl_const_7892, in_D);
    assume value_is(__ctobpl_const_7893, in_E);
    assume value_is(__ctobpl_const_7894, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7895, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7896, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7897, Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7898, in_A);
    assume value_is(__ctobpl_const_7899, in_B);
    assume value_is(__ctobpl_const_7900, in_C);
    assume value_is(__ctobpl_const_7901, in_D);
    assume value_is(__ctobpl_const_7902, in_E);
    assume value_is(__ctobpl_const_7903, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7904, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_7905, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7906, Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]);
    goto label_98;

  label_93_true:
    assume out_geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7888, out_geomnode_app_ptr);
    goto label_95;

  label_102_dummy:
    call {:si_unique_call 1} out_geomnode_app_ptr, out_geomport_app_ptr, out_phase_val, out_port_app_ptr, out_result.secorder$6 := sgrpha2n_loop_label_93_head(in_A, in_B, in_C, in_D, in_E, out_geomnode_app_ptr, out_geomport_app_ptr, out_phase_val, out_port_app_ptr, in_port_ptr, out_result.secorder$6);
    return;

  exit:
    return;
}



procedure sgrpha2n_loop_label_93_head(in_A: int, in_B: int, in_C: int, in_D: int, in_E: int, in_geomnode_app_ptr: int, in_geomport_app_ptr: int, in_phase_val: int, in_port_app_ptr: int, in_port_ptr: int, in_result.secorder$6: int) returns (out_geomnode_app_ptr: int, out_geomport_app_ptr: int, out_phase_val: int, out_port_app_ptr: int, out_result.secorder$6: int);
  modifies Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport, errline_printed;



implementation sgrpha2n_loop_label_113_head(in_Hx: int, in_Hy: int, in_geomnode_app_ptr: int, in_i: int) returns (out_geomnode_app_ptr: int, out_i: int)
{

  entry:
    out_geomnode_app_ptr, out_i := in_geomnode_app_ptr, in_i;
    goto label_113_head;

  label_113_head:
    goto label_113_true, label_113_false;

  label_113_false:
    assume !INT_LEQ(out_i, 7);
    assume value_is(__ctobpl_const_7744, out_i);
    out_geomnode_app_ptr, out_i := in_geomnode_app_ptr, in_i;
    Mem_T.FLOAT := old(Mem_T.FLOAT);
    return;

  label_122:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7957} true;
    assume value_is(__ctobpl_const_7779, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_122_dummy;

  label_121:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7962} true;
    assert out_geomnode_app_ptr != 0;
    out_geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_7776, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7777, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7778, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)]);
    goto label_122;

  label_120:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7961} true;
    assert in_Hy != 0;
    assert out_geomnode_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[PLUS(in_Hy, 8, out_i) := Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]];
    assume value_is(__ctobpl_const_7772, out_i);
    assume value_is(__ctobpl_const_7773, Mem_T.FLOAT[PLUS(in_Hy, 8, out_i)]);
    assume value_is(__ctobpl_const_7774, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7775, Mem_T.YA_Geomnode[YA_Geomnode(out_geomnode_app_ptr)]);
    goto label_121;

  label_119:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7960} true;
    assert in_Hx != 0;
    assert out_geomnode_app_ptr != 0;
    Mem_T.FLOAT := Mem_T.FLOAT[PLUS(in_Hx, 8, out_i) := Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)]];
    assume value_is(__ctobpl_const_7768, out_i);
    assume value_is(__ctobpl_const_7769, Mem_T.FLOAT[PLUS(in_Hx, 8, out_i)]);
    assume value_is(__ctobpl_const_7770, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_7771, Mem_T.XA_Geomnode[XA_Geomnode(out_geomnode_app_ptr)]);
    goto label_120;

  label_115_true:
    assume out_geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_7767, out_geomnode_app_ptr);
    goto label_119;

  label_115:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 7959} true;
    goto label_115_true, label_115_false;

  label_115_false:
    assume out_geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_7767, out_geomnode_app_ptr);
    out_geomnode_app_ptr, out_i := in_geomnode_app_ptr, in_i;
    Mem_T.FLOAT := old(Mem_T.FLOAT);
    return;

  label_113_true:
    assume INT_LEQ(out_i, 7);
    assume value_is(__ctobpl_const_7744, out_i);
    goto label_115;

  label_122_dummy:
    call {:si_unique_call 1} out_geomnode_app_ptr, out_i := sgrpha2n_loop_label_113_head(in_Hx, in_Hy, out_geomnode_app_ptr, out_i);
    return;

  exit:
    return;
}



procedure sgrpha2n_loop_label_113_head(in_Hx: int, in_Hy: int, in_geomnode_app_ptr: int, in_i: int) returns (out_geomnode_app_ptr: int, out_i: int);
  modifies Mem_T.FLOAT;



implementation sgrphasr_loop_label_40_head(in_geomnode_app_ptr: int, in_group_ptr: int, in_tempBoogie0: int) returns (out_geomnode_app_ptr: int, out_tempBoogie0: int)
{

  entry:
    out_geomnode_app_ptr, out_tempBoogie0 := in_geomnode_app_ptr, in_tempBoogie0;
    goto label_40_head;

  label_40_head:
    goto label_40_true, label_40_false;

  label_40_false:
    assume out_geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_8034, out_geomnode_app_ptr);
    out_geomnode_app_ptr, out_tempBoogie0 := in_geomnode_app_ptr, in_tempBoogie0;
    Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport := old(Mem_T.PPA_Geomport), old(Mem_T.PSC_Geomport), old(Mem_T.PSH_Geomport);
    return;

  label_45:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8133} true;
    assert out_geomnode_app_ptr != 0;
    out_geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8056, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8057, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8058, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)]);
    goto label_45_dummy;

  label_44:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8129} true;
    assert out_geomnode_app_ptr != 0;
    assert Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)] != 0;
    assert in_group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)] != 0;
    assert Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])] != 0;
    out_tempBoogie0 := PLUS(Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)])], 1, Mem_T.PPA_Port[PPA_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])])]);
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]) := out_tempBoogie0];
    assume value_is(__ctobpl_const_8049, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8050, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_8051, Mem_T.PPA_Geomport[PPA_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)])]);
    assume value_is(__ctobpl_const_8052, in_group_ptr);
    assume value_is(__ctobpl_const_8053, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)]);
    assume value_is(__ctobpl_const_8054, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])]);
    assume value_is(__ctobpl_const_8055, Mem_T.PPA_Port[PPA_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])])]);
    goto label_45;

  label_43:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8128} true;
    assert out_geomnode_app_ptr != 0;
    assert Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)] != 0;
    assert in_group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)] != 0;
    assert Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])] != 0;
    Mem_T.PSC_Geomport := Mem_T.PSC_Geomport[PSC_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]) := Mem_T.PSC_Port[PSC_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])])]];
    assume value_is(__ctobpl_const_8042, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8043, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_8044, Mem_T.PSC_Geomport[PSC_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)])]);
    assume value_is(__ctobpl_const_8045, in_group_ptr);
    assume value_is(__ctobpl_const_8046, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)]);
    assume value_is(__ctobpl_const_8047, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])]);
    assume value_is(__ctobpl_const_8048, Mem_T.PSC_Port[PSC_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])])]);
    goto label_44;

  label_42:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8127} true;
    assert out_geomnode_app_ptr != 0;
    assert Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)] != 0;
    assert in_group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)] != 0;
    assert Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])] != 0;
    Mem_T.PSH_Geomport := Mem_T.PSH_Geomport[PSH_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]) := Mem_T.PSH_Port[PSH_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])])]];
    assume value_is(__ctobpl_const_8035, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8036, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]);
    assume value_is(__ctobpl_const_8037, Mem_T.PSH_Geomport[PSH_Geomport(Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)])]);
    assume value_is(__ctobpl_const_8038, in_group_ptr);
    assume value_is(__ctobpl_const_8039, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)]);
    assume value_is(__ctobpl_const_8040, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])]);
    assume value_is(__ctobpl_const_8041, Mem_T.PSH_Port[PSH_Port(Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])])]);
    goto label_43;

  label_40_true:
    assume out_geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_8034, out_geomnode_app_ptr);
    goto label_42;

  label_45_dummy:
    call {:si_unique_call 1} out_geomnode_app_ptr, out_tempBoogie0 := sgrphasr_loop_label_40_head(out_geomnode_app_ptr, in_group_ptr, out_tempBoogie0);
    return;

  exit:
    return;
}



procedure sgrphasr_loop_label_40_head(in_geomnode_app_ptr: int, in_group_ptr: int, in_tempBoogie0: int) returns (out_geomnode_app_ptr: int, out_tempBoogie0: int);
  modifies Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport;



implementation sgrphaun_loop_label_16_head(in_geomport_app_ptr: int, in_port_app_ptr: int, in_unif_val: int) returns (out_geomport_app_ptr: int, out_port_app_ptr: int)
{

  entry:
    out_geomport_app_ptr, out_port_app_ptr := in_geomport_app_ptr, in_port_app_ptr;
    goto label_16_head;

  label_16_head:
    goto label_16_true, label_16_false;

  label_16_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_8073, out_port_app_ptr);
    out_geomport_app_ptr, out_port_app_ptr := in_geomport_app_ptr, in_port_app_ptr;
    Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport := old(Mem_T.PPA_Geomport), old(Mem_T.PSC_Geomport), old(Mem_T.PSH_Geomport);
    return;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8186} true;
    assert out_geomport_app_ptr != 0;
    out_geomport_app_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)];
    assume value_is(__ctobpl_const_8093, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8094, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8095, Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)]);
    goto label_22_dummy;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8185} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_8090, out_port_app_ptr);
    assume value_is(__ctobpl_const_8091, out_port_app_ptr);
    assume value_is(__ctobpl_const_8092, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_22;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8182} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_app_ptr) := Mem_T.PPA_Port[PPA_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_8086, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8087, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8088, out_port_app_ptr);
    assume value_is(__ctobpl_const_8089, Mem_T.PPA_Port[PPA_Port(out_port_app_ptr)]);
    goto label_21;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8181} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PSC_Geomport := Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_app_ptr) := Mem_T.PSC_Port[PSC_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_8082, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8083, Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8084, out_port_app_ptr);
    assume value_is(__ctobpl_const_8085, Mem_T.PSC_Port[PSC_Port(out_port_app_ptr)]);
    goto label_20;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8179} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PSH_Geomport := Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_app_ptr) := PLUS(in_unif_val, 1, Mem_T.PSH_Port[PSH_Port(out_port_app_ptr)])];
    assume value_is(__ctobpl_const_8077, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8078, Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8079, in_unif_val);
    assume value_is(__ctobpl_const_8080, out_port_app_ptr);
    assume value_is(__ctobpl_const_8081, Mem_T.PSH_Port[PSH_Port(out_port_app_ptr)]);
    goto label_19;

  label_16_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_8073, out_port_app_ptr);
    goto label_18;

  label_22_dummy:
    call {:si_unique_call 1} out_geomport_app_ptr, out_port_app_ptr := sgrphaun_loop_label_16_head(out_geomport_app_ptr, out_port_app_ptr, in_unif_val);
    return;

  exit:
    return;
}



procedure sgrphaun_loop_label_16_head(in_geomport_app_ptr: int, in_port_app_ptr: int, in_unif_val: int) returns (out_geomport_app_ptr: int, out_port_app_ptr: int);
  modifies Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport;



implementation sgrphaun_loop_label_12_head(in_geomnode_app_ptr: int, in_geomport_app_ptr: int, in_port_app_ptr: int, in_port_ptr: int, in_unif_val: int) returns (out_geomnode_app_ptr: int, out_geomport_app_ptr: int, out_port_app_ptr: int)
{

  entry:
    out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := in_geomnode_app_ptr, in_geomport_app_ptr, in_port_app_ptr;
    goto label_12_head;

  label_12_head:
    goto label_12_true, label_12_false;

  label_12_false:
    assume out_geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_8067, out_geomnode_app_ptr);
    out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := in_geomnode_app_ptr, in_geomport_app_ptr, in_port_app_ptr;
    Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport := old(Mem_T.PPA_Geomport), old(Mem_T.PSC_Geomport), old(Mem_T.PSH_Geomport);
    return;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8190} true;
    assert out_geomnode_app_ptr != 0;
    out_geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8074, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8075, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8076, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)]);
    goto label_17_dummy;

  label_16_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_8073, out_port_app_ptr);
    goto label_17;

  label_16_head:
    call out_geomport_app_ptr, out_port_app_ptr := sgrphaun_loop_label_16_head(out_geomport_app_ptr, out_port_app_ptr, in_unif_val);
    goto label_16_head_last;

  label_16_head_last:
    out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := in_geomnode_app_ptr, in_geomport_app_ptr, in_port_app_ptr;
    Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport := old(Mem_T.PPA_Geomport), old(Mem_T.PSC_Geomport), old(Mem_T.PSH_Geomport);
    goto label_16_true, label_16_false;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8174} true;
    goto label_16_head;

  label_22:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8186} true;
    assert out_geomport_app_ptr != 0;
    out_geomport_app_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)];
    assume value_is(__ctobpl_const_8093, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8094, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8095, Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)]);
    goto label_22_dummy;

  label_22_dummy:
    assume false;
    out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := in_geomnode_app_ptr, in_geomport_app_ptr, in_port_app_ptr;
    Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport := old(Mem_T.PPA_Geomport), old(Mem_T.PSC_Geomport), old(Mem_T.PSH_Geomport);
    return;

  label_21:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8185} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_8090, out_port_app_ptr);
    assume value_is(__ctobpl_const_8091, out_port_app_ptr);
    assume value_is(__ctobpl_const_8092, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_22;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8182} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PPA_Geomport := Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_app_ptr) := Mem_T.PPA_Port[PPA_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_8086, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8087, Mem_T.PPA_Geomport[PPA_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8088, out_port_app_ptr);
    assume value_is(__ctobpl_const_8089, Mem_T.PPA_Port[PPA_Port(out_port_app_ptr)]);
    goto label_21;

  label_19:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8181} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PSC_Geomport := Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_app_ptr) := Mem_T.PSC_Port[PSC_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_8082, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8083, Mem_T.PSC_Geomport[PSC_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8084, out_port_app_ptr);
    assume value_is(__ctobpl_const_8085, Mem_T.PSC_Port[PSC_Port(out_port_app_ptr)]);
    goto label_20;

  label_18:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8179} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PSH_Geomport := Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_app_ptr) := PLUS(in_unif_val, 1, Mem_T.PSH_Port[PSH_Port(out_port_app_ptr)])];
    assume value_is(__ctobpl_const_8077, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8078, Mem_T.PSH_Geomport[PSH_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8079, in_unif_val);
    assume value_is(__ctobpl_const_8080, out_port_app_ptr);
    assume value_is(__ctobpl_const_8081, Mem_T.PSH_Port[PSH_Port(out_port_app_ptr)]);
    goto label_19;

  label_16_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_8073, out_port_app_ptr);
    goto label_18;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8171} true;
    out_port_app_ptr := in_port_ptr;
    assume value_is(__ctobpl_const_8071, out_port_app_ptr);
    assume value_is(__ctobpl_const_8072, in_port_ptr);
    goto label_16;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8169} true;
    assert out_geomnode_app_ptr != 0;
    out_geomport_app_ptr := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8068, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8069, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8070, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]);
    goto label_15;

  label_12_true:
    assume out_geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_8067, out_geomnode_app_ptr);
    goto label_14;

  label_17_dummy:
    call {:si_unique_call 1} out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := sgrphaun_loop_label_12_head(out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr, in_port_ptr, in_unif_val);
    return;

  exit:
    return;
}



procedure sgrphaun_loop_label_12_head(in_geomnode_app_ptr: int, in_geomport_app_ptr: int, in_port_app_ptr: int, in_port_ptr: int, in_unif_val: int) returns (out_geomnode_app_ptr: int, out_geomport_app_ptr: int, out_port_app_ptr: int);
  modifies Mem_T.PPA_Geomport, Mem_T.PSC_Geomport, Mem_T.PSH_Geomport;



implementation sgrrot_loop_label_13_head(in_XC: int, in_XD: int, in_XE: int, in_YC: int, in_YD: int, in_YE: int, in_app_ptr: int, in_phi: int, in_result.dcos$2: int, in_result.dcos$5: int, in_result.dsin$3: int, in_result.dsin$4: int, in_tempBoogie0: int) returns (out_XD: int, out_XE: int, out_YD: int, out_YE: int, out_app_ptr: int, out_result.dcos$2: int, out_result.dcos$5: int, out_result.dsin$3: int, out_result.dsin$4: int, out_tempBoogie0: int)
{

  entry:
    out_XD, out_XE, out_YD, out_YE, out_app_ptr, out_result.dcos$2, out_result.dcos$5, out_result.dsin$3, out_result.dsin$4, out_tempBoogie0 := in_XD, in_XE, in_YD, in_YE, in_app_ptr, in_result.dcos$2, in_result.dcos$5, in_result.dsin$3, in_result.dsin$4, in_tempBoogie0;
    goto label_13_head;

  label_13_head:
    goto label_13_true, label_13_false;

  label_13_false:
    assume out_app_ptr == 0;
    assume value_is(__ctobpl_const_8099, out_app_ptr);
    out_XD, out_XE, out_YD, out_YE, out_app_ptr, out_result.dcos$2, out_result.dcos$5, out_result.dsin$3, out_result.dsin$4, out_tempBoogie0 := in_XD, in_XE, in_YD, in_YE, in_app_ptr, in_result.dcos$2, in_result.dcos$5, in_result.dsin$3, in_result.dsin$4, in_tempBoogie0;
    Mem_T.PHEA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, errline_printed := old(Mem_T.PHEA_Geomnode), old(Mem_T.YA_Geomnode), old(Mem_T.XA_Geomnode), old(errline_printed);
    return;

  label_34:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8243} true;
    assert out_app_ptr != 0;
    out_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_8139, out_app_ptr);
    assume value_is(__ctobpl_const_8140, out_app_ptr);
    assume value_is(__ctobpl_const_8141, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_app_ptr)]);
    goto label_34_dummy;

  label_33:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8240} true;
    assert out_app_ptr != 0;
    out_tempBoogie0 := PLUS(Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_app_ptr)], 1, in_phi);
    Mem_T.PHEA_Geomnode := Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_app_ptr) := out_tempBoogie0];
    assume value_is(__ctobpl_const_8136, out_app_ptr);
    assume value_is(__ctobpl_const_8137, Mem_T.PHEA_Geomnode[PHEA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_8138, in_phi);
    goto label_34;

  label_32:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8236} true;
    assert out_app_ptr != 0;
    Mem_T.YA_Geomnode := Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr) := out_YE];
    assume value_is(__ctobpl_const_8133, out_app_ptr);
    assume value_is(__ctobpl_const_8134, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_8135, out_YE);
    goto label_33;

  label_31:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8235} true;
    assert out_app_ptr != 0;
    Mem_T.XA_Geomnode := Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr) := out_XE];
    assume value_is(__ctobpl_const_8130, out_app_ptr);
    assume value_is(__ctobpl_const_8131, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    assume value_is(__ctobpl_const_8132, out_XE);
    goto label_32;

  label_30:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8232} true;
    out_YE := PLUS(PLUS(MULT(MINUS_BOTH_PTR_OR_BOTH_INT(out_XD, in_XC, 1), out_result.dsin$4), 1, MULT(MINUS_BOTH_PTR_OR_BOTH_INT(out_YD, in_YC, 1), out_result.dcos$5)), 1, in_YC);
    assume value_is(__ctobpl_const_8122, out_YE);
    assume value_is(__ctobpl_const_8123, out_XD);
    assume value_is(__ctobpl_const_8124, in_XC);
    assume value_is(__ctobpl_const_8125, out_result.dsin$4);
    assume value_is(__ctobpl_const_8126, out_YD);
    assume value_is(__ctobpl_const_8127, in_YC);
    assume value_is(__ctobpl_const_8128, out_result.dcos$5);
    assume value_is(__ctobpl_const_8129, in_YC);
    goto label_31;

  label_27:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8232} true;
    call out_result.dcos$5 := dcos(in_phi);
    assume value_is(__ctobpl_const_8120, in_phi);
    assume value_is(__ctobpl_const_8121, in_phi);
    goto label_30;

  label_24:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8232} true;
    call out_result.dsin$4 := dsin(in_phi);
    assume value_is(__ctobpl_const_8118, in_phi);
    assume value_is(__ctobpl_const_8119, in_phi);
    goto label_27;

  label_23:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8231} true;
    out_XE := PLUS(MINUS_BOTH_PTR_OR_BOTH_INT(MULT(MINUS_BOTH_PTR_OR_BOTH_INT(out_XD, in_XC, 1), out_result.dcos$2), MULT(MINUS_BOTH_PTR_OR_BOTH_INT(out_YD, in_YC, 1), out_result.dsin$3), 1), 1, in_XC);
    assume value_is(__ctobpl_const_8110, out_XE);
    assume value_is(__ctobpl_const_8111, out_XD);
    assume value_is(__ctobpl_const_8112, in_XC);
    assume value_is(__ctobpl_const_8113, out_result.dcos$2);
    assume value_is(__ctobpl_const_8114, out_YD);
    assume value_is(__ctobpl_const_8115, in_YC);
    assume value_is(__ctobpl_const_8116, out_result.dsin$3);
    assume value_is(__ctobpl_const_8117, in_XC);
    goto label_24;

  label_20:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8231} true;
    call out_result.dsin$3 := dsin(in_phi);
    assume value_is(__ctobpl_const_8108, in_phi);
    assume value_is(__ctobpl_const_8109, in_phi);
    goto label_23;

  label_17:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8231} true;
    call out_result.dcos$2 := dcos(in_phi);
    assume value_is(__ctobpl_const_8106, in_phi);
    assume value_is(__ctobpl_const_8107, in_phi);
    goto label_20;

  label_16:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8225} true;
    assert out_app_ptr != 0;
    out_YD := Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_8103, out_YD);
    assume value_is(__ctobpl_const_8104, out_app_ptr);
    assume value_is(__ctobpl_const_8105, Mem_T.YA_Geomnode[YA_Geomnode(out_app_ptr)]);
    goto label_17;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8224} true;
    assert out_app_ptr != 0;
    out_XD := Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)];
    assume value_is(__ctobpl_const_8100, out_XD);
    assume value_is(__ctobpl_const_8101, out_app_ptr);
    assume value_is(__ctobpl_const_8102, Mem_T.XA_Geomnode[XA_Geomnode(out_app_ptr)]);
    goto label_16;

  label_13_true:
    assume out_app_ptr != 0;
    assume value_is(__ctobpl_const_8099, out_app_ptr);
    goto label_15;

  label_34_dummy:
    call {:si_unique_call 1} out_XD, out_XE, out_YD, out_YE, out_app_ptr, out_result.dcos$2, out_result.dcos$5, out_result.dsin$3, out_result.dsin$4, out_tempBoogie0 := sgrrot_loop_label_13_head(in_XC, out_XD, out_XE, in_YC, out_YD, out_YE, out_app_ptr, in_phi, out_result.dcos$2, out_result.dcos$5, out_result.dsin$3, out_result.dsin$4, out_tempBoogie0);
    return;

  exit:
    return;
}



procedure sgrrot_loop_label_13_head(in_XC: int, in_XD: int, in_XE: int, in_YC: int, in_YD: int, in_YE: int, in_app_ptr: int, in_phi: int, in_result.dcos$2: int, in_result.dcos$5: int, in_result.dsin$3: int, in_result.dsin$4: int, in_tempBoogie0: int) returns (out_XD: int, out_XE: int, out_YD: int, out_YE: int, out_app_ptr: int, out_result.dcos$2: int, out_result.dcos$5: int, out_result.dsin$3: int, out_result.dsin$4: int, out_tempBoogie0: int);
  modifies Mem_T.PHEA_Geomnode, Mem_T.YA_Geomnode, Mem_T.XA_Geomnode, errline_printed;



implementation simpol_loop_label_11_head(in_geomport_app_ptr: int, in_port_app_ptr: int) returns (out_geomport_app_ptr: int, out_port_app_ptr: int)
{

  entry:
    out_geomport_app_ptr, out_port_app_ptr := in_geomport_app_ptr, in_port_app_ptr;
    goto label_11_head;

  label_11_head:
    goto label_11_true, label_11_false;

  label_11_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_8258, out_port_app_ptr);
    out_geomport_app_ptr, out_port_app_ptr := in_geomport_app_ptr, in_port_app_ptr;
    Mem_T.PHEPOL_Geomport := old(Mem_T.PHEPOL_Geomport);
    return;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8402} true;
    assert out_geomport_app_ptr != 0;
    out_geomport_app_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)];
    assume value_is(__ctobpl_const_8269, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8270, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8271, Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)]);
    goto label_15_dummy;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8401} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_8266, out_port_app_ptr);
    assume value_is(__ctobpl_const_8267, out_port_app_ptr);
    assume value_is(__ctobpl_const_8268, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_15;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8398} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PHEPOL_Geomport := Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_app_ptr) := Mem_T.PHEPOL_Port[PHEPOL_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_8262, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8263, Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8264, out_port_app_ptr);
    assume value_is(__ctobpl_const_8265, Mem_T.PHEPOL_Port[PHEPOL_Port(out_port_app_ptr)]);
    goto label_14;

  label_11_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_8258, out_port_app_ptr);
    goto label_13;

  label_15_dummy:
    call {:si_unique_call 1} out_geomport_app_ptr, out_port_app_ptr := simpol_loop_label_11_head(out_geomport_app_ptr, out_port_app_ptr);
    return;

  exit:
    return;
}



procedure simpol_loop_label_11_head(in_geomport_app_ptr: int, in_port_app_ptr: int) returns (out_geomport_app_ptr: int, out_port_app_ptr: int);
  modifies Mem_T.PHEPOL_Geomport;



implementation simpol_loop_label_7_head(in_geomnode_app_ptr: int, in_geomport_app_ptr: int, in_group_ptr: int, in_port_app_ptr: int) returns (out_geomnode_app_ptr: int, out_geomport_app_ptr: int, out_port_app_ptr: int)
{

  entry:
    out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := in_geomnode_app_ptr, in_geomport_app_ptr, in_port_app_ptr;
    goto label_7_head;

  label_7_head:
    goto label_7_true, label_7_false;

  label_7_false:
    assume out_geomnode_app_ptr == 0;
    assume value_is(__ctobpl_const_8250, out_geomnode_app_ptr);
    out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := in_geomnode_app_ptr, in_geomport_app_ptr, in_port_app_ptr;
    Mem_T.PHEPOL_Geomport := old(Mem_T.PHEPOL_Geomport);
    return;

  label_12:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8406} true;
    assert out_geomnode_app_ptr != 0;
    out_geomnode_app_ptr := Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8259, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8260, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8261, Mem_T.NEXT_Geomnode[NEXT_Geomnode(out_geomnode_app_ptr)]);
    goto label_12_dummy;

  label_11_false:
    assume out_port_app_ptr == 0;
    assume value_is(__ctobpl_const_8258, out_port_app_ptr);
    goto label_12;

  label_11_head:
    call out_geomport_app_ptr, out_port_app_ptr := simpol_loop_label_11_head(out_geomport_app_ptr, out_port_app_ptr);
    goto label_11_head_last;

  label_11_head_last:
    out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := in_geomnode_app_ptr, in_geomport_app_ptr, in_port_app_ptr;
    Mem_T.PHEPOL_Geomport := old(Mem_T.PHEPOL_Geomport);
    goto label_11_true, label_11_false;

  label_11:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8395} true;
    goto label_11_head;

  label_15:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8402} true;
    assert out_geomport_app_ptr != 0;
    out_geomport_app_ptr := Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)];
    assume value_is(__ctobpl_const_8269, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8270, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8271, Mem_T.NEXT_Geomport[NEXT_Geomport(out_geomport_app_ptr)]);
    goto label_15_dummy;

  label_15_dummy:
    assume false;
    out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := in_geomnode_app_ptr, in_geomport_app_ptr, in_port_app_ptr;
    Mem_T.PHEPOL_Geomport := old(Mem_T.PHEPOL_Geomport);
    return;

  label_14:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8401} true;
    assert out_port_app_ptr != 0;
    out_port_app_ptr := Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)];
    assume value_is(__ctobpl_const_8266, out_port_app_ptr);
    assume value_is(__ctobpl_const_8267, out_port_app_ptr);
    assume value_is(__ctobpl_const_8268, Mem_T.NEXT_Port[NEXT_Port(out_port_app_ptr)]);
    goto label_15;

  label_13:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8398} true;
    assert out_geomport_app_ptr != 0;
    assert out_port_app_ptr != 0;
    Mem_T.PHEPOL_Geomport := Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_app_ptr) := Mem_T.PHEPOL_Port[PHEPOL_Port(out_port_app_ptr)]];
    assume value_is(__ctobpl_const_8262, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8263, Mem_T.PHEPOL_Geomport[PHEPOL_Geomport(out_geomport_app_ptr)]);
    assume value_is(__ctobpl_const_8264, out_port_app_ptr);
    assume value_is(__ctobpl_const_8265, Mem_T.PHEPOL_Port[PHEPOL_Port(out_port_app_ptr)]);
    goto label_14;

  label_11_true:
    assume out_port_app_ptr != 0;
    assume value_is(__ctobpl_const_8258, out_port_app_ptr);
    goto label_13;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8392} true;
    assert in_group_ptr != 0;
    assert Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)] != 0;
    out_port_app_ptr := Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])];
    assume value_is(__ctobpl_const_8254, out_port_app_ptr);
    assume value_is(__ctobpl_const_8255, in_group_ptr);
    assume value_is(__ctobpl_const_8256, Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)]);
    assume value_is(__ctobpl_const_8257, Mem_T.PORT_PTR_Elem[PORT_PTR_Elem(Mem_T.ELEM_PTR_Group[ELEM_PTR_Group(in_group_ptr)])]);
    goto label_11;

  label_9:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8390} true;
    assert out_geomnode_app_ptr != 0;
    out_geomport_app_ptr := Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)];
    assume value_is(__ctobpl_const_8251, out_geomport_app_ptr);
    assume value_is(__ctobpl_const_8252, out_geomnode_app_ptr);
    assume value_is(__ctobpl_const_8253, Mem_T.GEOMPORT_PTR_Geomnode[GEOMPORT_PTR_Geomnode(out_geomnode_app_ptr)]);
    goto label_10;

  label_7_true:
    assume out_geomnode_app_ptr != 0;
    assume value_is(__ctobpl_const_8250, out_geomnode_app_ptr);
    goto label_9;

  label_12_dummy:
    call {:si_unique_call 1} out_geomnode_app_ptr, out_geomport_app_ptr, out_port_app_ptr := simpol_loop_label_7_head(out_geomnode_app_ptr, out_geomport_app_ptr, in_group_ptr, out_port_app_ptr);
    return;

  exit:
    return;
}



procedure simpol_loop_label_7_head(in_geomnode_app_ptr: int, in_geomport_app_ptr: int, in_group_ptr: int, in_port_app_ptr: int) returns (out_geomnode_app_ptr: int, out_geomport_app_ptr: int, out_port_app_ptr: int);
  modifies Mem_T.PHEPOL_Geomport;



implementation unaminit_loop_label_5_head(in_havoc_stringTemp: int, in_i: int, in_result.strcpy$1: int, in_$strcpy.arg.1$2$: int) returns (out_i: int, out_result.strcpy$1: int, out_$strcpy.arg.1$2$: int)
{

  entry:
    out_i, out_result.strcpy$1, out_$strcpy.arg.1$2$ := in_i, in_result.strcpy$1, in_$strcpy.arg.1$2$;
    goto label_5_head;

  label_5_head:
    goto label_5_true, label_5_false;

  label_5_false:
    assume !INT_LEQ(out_i, 20);
    assume value_is(__ctobpl_const_8727, out_i);
    out_i, out_result.strcpy$1, out_$strcpy.arg.1$2$ := in_i, in_result.strcpy$1, in_$strcpy.arg.1$2$;
    errline_printed := old(errline_printed);
    return;

  label_10:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8778} true;
    assume value_is(__ctobpl_const_8732, out_i);
    out_i := PLUS(out_i, 1, 1);
    goto label_10_dummy;

  label_7:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8779} true;
    call out_result.strcpy$1 := strcpy(out_$strcpy.arg.1$2$, in_havoc_stringTemp);
    assume value_is(__ctobpl_const_8730, out_$strcpy.arg.1$2$);
    assume value_is(__ctobpl_const_8731, out_$strcpy.arg.1$2$);
    goto label_10;

  label_6:
    assert {:sourcefile ".\v24\space.c"} {:sourceline 8779} true;
    out_$strcpy.arg.1$2$ := PLUS(UserNames, 31, out_i);
    assume value_is(__ctobpl_const_8728, out_$strcpy.arg.1$2$);
    assume value_is(__ctobpl_const_8729, out_i);
    goto label_7;

  label_5_true:
    assume INT_LEQ(out_i, 20);
    assume value_is(__ctobpl_const_8727, out_i);
    goto label_6;

  label_10_dummy:
    call {:si_unique_call 1} out_i, out_result.strcpy$1, out_$strcpy.arg.1$2$ := unaminit_loop_label_5_head(in_havoc_stringTemp, out_i, out_result.strcpy$1, out_$strcpy.arg.1$2$);
    return;

  exit:
    return;
}



procedure unaminit_loop_label_5_head(in_havoc_stringTemp: int, in_i: int, in_result.strcpy$1: int, in_$strcpy.arg.1$2$: int) returns (out_i: int, out_result.strcpy$1: int, out_$strcpy.arg.1$2$: int);
  modifies errline_printed;


