/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 29 05:03:33 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ImageMatcherWorker_ESTest extends ImageMatcherWorker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[134];
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)119;
      // Undeclared exception!
      try { 
        ImageMatcherWorker.test(byteArray0, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ImageMatcherWorker", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[116];
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)101;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)101;
      boolean boolean0 = ImageMatcherWorker.test(byteArray0, byteArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[133];
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)101;
      byte[] byteArray1 = new byte[3];
      boolean boolean0 = ImageMatcherWorker.test(byteArray0, byteArray1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[133];
      boolean boolean0 = ImageMatcherWorker.test(byteArray0, byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)101;
      boolean boolean0 = ImageMatcherWorker.test(byteArray0, byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ImageMatcherWorker imageMatcherWorker0 = new ImageMatcherWorker();
  }
}
