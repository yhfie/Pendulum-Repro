/*
 * This file was automatically generated by EvoSuite
 * Wed May 04 04:13:20 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class GPT14_ESTest extends GPT14_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = GPT14.sqr_basecase(bigInteger0);
      assertEquals((short)0, bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.pow(10);
      BigInteger bigInteger2 = GPT14.sqr_basecase(bigInteger1);
      assertEquals((short)0, bigInteger2.shortValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = GPT14.sqr_basecase(bigInteger0);
      BigInteger bigInteger2 = GPT14.sqr_basecase(bigInteger1);
      BigInteger bigInteger3 = GPT14.sqr_basecase(bigInteger2);
      assertEquals((short) (-7936), bigInteger3.shortValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte) (-114);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = GPT14.sqr_basecase(bigInteger0);
      assertEquals((short)20164, bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = GPT14.modular_exponentiation_inline_unsafe((BigInteger) null, bigInteger0, bigInteger0);
      assertNull(bigInteger1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[6] = (byte) (-42);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = GPT14.modular_exponentiation_inline_unsafe(bigInteger0, bigInteger0, bigInteger0);
      assertSame(bigInteger0, bigInteger1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = GPT14.modular_exponentiation_inline_unsafe(bigInteger0, bigInteger0, bigInteger0);
      assertEquals((short)0, bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-121);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = GPT14.modular_exponentiation_inline_unsafe(bigInteger0, bigInteger0, bigInteger0);
      assertSame(bigInteger0, bigInteger1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = bigInteger0.setBit(5438);
      BigInteger bigInteger2 = GPT14.sqr_basecase(bigInteger1);
      // Undeclared exception!
      GPT14.sqr_basecase(bigInteger2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        GPT14.sqr_basecase((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.flipBit(1150);
      // Undeclared exception!
      GPT14.modular_exponentiation_inline_unsafe(bigInteger0, bigInteger1, bigInteger1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      // Undeclared exception!
      try { 
        GPT14.modular_exponentiation_inline_unsafe((BigInteger) null, bigInteger0, bigInteger0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = BigInteger.ZERO;
      // Undeclared exception!
      try { 
        GPT14.modular_exponentiation_inline_unsafe(bigInteger1, bigInteger0, bigInteger1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // BigInteger: modulus not positive
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = GPT14.modular_exponentiation_inline_unsafe(bigInteger0, bigInteger0, bigInteger0);
      assertSame(bigInteger1, bigInteger0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GPT14 gPT14_0 = new GPT14();
  }
}
